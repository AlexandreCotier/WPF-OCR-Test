<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>IronOcr</name>
    </assembly>
    <members>
        <member name="T:IronOcr.Installation">
            <summary>
            A static class providing everything needed to configure the installation and licensing of IronOCR
            </summary>
        </member>
        <member name="P:IronOcr.Installation.InstallationPath">
            <summary>
            IronOcr installation path
            </summary>
        </member>
        <member name="P:IronOcr.Installation.LanguagePackDirectory">
            <summary>
            Custom language pack directory which contains .ocrdata language pack files
            </summary>
        </member>
        <member name="P:IronOcr.Installation.MachineLearningModelsDirectory">
            <summary>
            Directory containing machine learning files for computer vision features
            </summary>
        </member>
        <member name="P:IronOcr.Installation.LinuxAndDockerDependenciesAutoConfig">
            <summary>
            If <c>true</c> The necessary package dependencies for IronOCR rendering will we automatically installed to
            Docker and Debian / Ubuntu Linux deployments. <para>Applies only to IronOCR for .Net Core.</para><para>This
            will take a few minutes the next time you run IronOCR. Watch the Visual Studio "Output" window for
            progress.</para><para>Set this to false if manual Docker / Linux setup is more convenient:
            https://ironsoftware.com/csharp/ocr/docs/questions/csharp-tesseract-ocr-docker-linux-setup-tutorial/</para></summary>
            <seealso cref="P:IronSoftware.Deployment.DeploymentEngine.SkipInstallCommands" />
        </member>
        <member name="M:IronOcr.Installation.IsValidLicense(System.String)">
            <summary>
            Checks if a given license key is valid for use with IronOCR.
            </summary>
            <param name="LicenseKey">Full License Key provided as a string.</param>
            <returns>True when a valid key is given.</returns>
        </member>
        <member name="P:IronOcr.Installation.LicenseKey">
            <summary>
            Removes watermarks. Get Licensed at https://ironsoftware.com/
            </summary>
        </member>
        <member name="P:IronOcr.Installation.IsLicensed">
            <summary>
            Determines whether this instance of IronOcr is Licensed.
            Will return false unless a LicenseKey is set to a valid trial or full license key in
            IronOcr.Installation.LicenseKey, Web.Config , App.Config or appsettings.json in .Net Core.
            </summary>
        </member>
        <member name="T:IronOcr.Installation.LoggingModes">
            <summary>
            Logging modes. You may use any combination of these flags to enable logging.
            </summary>
            <seealso cref="P:IronOcr.Installation.LoggingMode" />
        </member>
        <member name="F:IronOcr.Installation.LoggingModes.None">
            <summary>
            Disable logging
            </summary>
        </member>
        <member name="F:IronOcr.Installation.LoggingModes.DebugOutputWindow">
            <summary>
            Enable logging to the debug output window
            </summary>
        </member>
        <member name="F:IronOcr.Installation.LoggingModes.Console">
            <summary>
            Enable logging to the console
            </summary>
        </member>
        <member name="F:IronOcr.Installation.LoggingModes.Custom">
            <summary>
            Enable custom logging
            </summary>
            <seealso cref="P:IronOcr.Installation.CustomLogger" />
        </member>
        <member name="F:IronOcr.Installation.LoggingModes.File">
            <summary>
            Enable logging to the debug output window
            </summary>
            <seealso cref="P:IronOcr.Installation.LogFilePath" />
        </member>
        <member name="F:IronOcr.Installation.LoggingModes.All">
            <summary>
            Enable logging to the debug output window
            </summary>
        </member>
        <member name="P:IronOcr.Installation.LogFilePath">
            <summary>
            Setting a log path produces ‘log files’ which may be vey useful for debugging in production or providing to Iron Software support when reporting an issue.
            <para>LogFilePath may be set to a directory name or a full file name.</para><para>Setting <c>LogFilePath = null</c> will turn off log files.</para></summary>
            <seealso cref="M:IronOcr.Installation.ClearLogFiles" />
        </member>
        <member name="M:IronOcr.Installation.ClearLogFiles">
            <summary>
            Removes any Iron Software log files at the <see cref="P:IronOcr.Installation.LogFilePath" />.
            </summary>
            <seealso cref="P:IronOcr.Installation.LogFilePath" />
        </member>
        <member name="P:IronOcr.Installation.LoggingMode">
            <summary>
            Activate or disable detailed developer messages sent to your choice of location in the IDE or application console. 
            </summary>
        </member>
        <member name="P:IronOcr.Installation.CustomLogger">
            <summary>
            Custom logger implementation
            </summary>
        </member>
        <member name="T:IronOcr.TesseractPageSegmentationMode">
            <summary>
            Page segmentation mode defines how your text will be searched for by Tesseract.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.OsdOnly">
            <summary>
            Orientation and script detection (OSD) only.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.AutoOsd">
            <summary>
            Automatic page segmentation with orientation and script detection (OSD).
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.AutoOnly">
            <summary>
            Automatic page segmentation, but no OSD, or OCR.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.Auto">
            <summary>
            Fully automatic page segmentation, but no OSD.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SingleColumn">
            <summary>
            Assume a single column of text of variable sizes.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SingleBlockVertText">
            <summary>
            Assume a single uniform block of vertically aligned text.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SingleBlock">
            <summary>
            Assume a single uniform block of text.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SingleLine">
            <summary>
            Treat the image as a single text line.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SingleWord">
            <summary>
            Treat the image as a single word.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.CircleWord">
            <summary>
            Treat the image as a single word in a circle.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SingleChar">
            <summary>
            Treat the image as a single character.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SparseText">
            <summary>
            Find as much text as possible in no particular order.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.SparseTextOsd">
            <summary>
            Sparse text with orientation and script detection.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractPageSegmentationMode.RawLine">
            <summary>
            Treat the image as a single text line, bypassing hacks that are
            specific to Tesseract.
            </summary>
        </member>
        <member name="T:IronOcr.ResultHighlightType">
            <summary>
            ResultHighlightType defines what highlighting mode to use for <see cref="M:IronOcr.OcrInput.HighlightTextAndSaveAsImages(IronOcr.IronTesseract,System.String,IronOcr.ResultHighlightType)" />.
            You may choose to highlight every character, word, line, or paragraph.
            </summary>
        </member>
        <member name="F:IronOcr.ResultHighlightType.Character">
            <summary>
            Highlight every single detected <see cref="T:IronOcr.OcrResult.Character" />.
            </summary>
        </member>
        <member name="F:IronOcr.ResultHighlightType.Word">
            <summary>
            Highlight every single detected <see cref="T:IronOcr.OcrResult.Word" />.
            </summary>
        </member>
        <member name="F:IronOcr.ResultHighlightType.Line">
            <summary>
            Highlight every single detected <see cref="T:IronOcr.OcrResult.Line" />.
            </summary>
        </member>
        <member name="F:IronOcr.ResultHighlightType.Paragraph">
            <summary>
            Highlight every single detected <see cref="T:IronOcr.OcrResult.Paragraph" />.
            </summary>
        </member>
        <member name="T:IronOcr.TesseractEngineMode">
            <summary>
            Allows the developer to choose the algorithm Tesseract will use for OCR.  TesseractAndLstm is the recommended behavior for IronOCR.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractEngineMode.TesseractOnly">
            <summary>
            Only the legacy tesseract OCR engine is used.  (Tesseract 3 OEM Mode)
            </summary>
        </member>
        <member name="F:IronOcr.TesseractEngineMode.LstmOnly">
            <summary>
            Only the new LSTM-based OCR engine is used.  Uses a pre programmed neural net. (Tesseract 4 + 5  Mode)
            </summary>
        </member>
        <member name="F:IronOcr.TesseractEngineMode.TesseractAndLstm">
            <summary>
            Both the legacy and new LSTM based OCR engine is used.  (Recommended for a  good balance of speed and performance)
            </summary>
        </member>
        <member name="F:IronOcr.TesseractEngineMode.Default">
            <summary>
            The default OCR engine is used (currently LSTM-based OCR engine).
            </summary>
        </member>
        <member name="T:IronOcr.TesseractVersion">
            <summary>
            Selects between different binary versions of Tesseract.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractVersion.Tesseract5">
            <summary>
            Tesseract 5.1
            </summary>
        </member>
        <member name="T:IronOcr.Events.OcrProgressEventsArgs">
            <summary>
            An event allowing developers to track and display progress of longer OCR jobs.
            <para>Use the <see cref="E:IronOcr.IronTesseract.OcrProgress" /> event to receive detailed notifications of
            ocr job progress.</para></summary>
            <seealso cref="E:IronOcr.IronTesseract.OcrProgress" />
        </member>
        <member name="P:IronOcr.Events.OcrProgressEventsArgs.ProgressPercent">
            <summary>
            OCR job progress as a percentage of pages completed. Values range from  0 to 100.
            </summary>
        </member>
        <member name="P:IronOcr.Events.OcrProgressEventsArgs.TotalPages">
            <summary>
            The total number of pages being OCR 'read' by <see cref="M:IronOcr.IronTesseract.Read(IronOcr.OcrInput)" /> method class.
            </summary>
        </member>
        <member name="P:IronOcr.Events.OcrProgressEventsArgs.PagesComplete">
            <summary>
            The number of pages where OCR 'reading' has been fully completed.  They are normally processed in parallel across multiple CPU cores.
            </summary>
        </member>
        <member name="P:IronOcr.Events.OcrProgressEventsArgs.Duration">
            <summary>
            The time taken for the entire OCR job.  The counter stops when OCR is complete on every page.
            </summary>
        </member>
        <member name="P:IronOcr.Events.OcrProgressEventsArgs.StartTimeUTC">
            <summary>
            The DateTime at which the <see cref="M:IronOcr.IronTesseract.Read(IronOcr.OcrInput)" /> OCR job started in UTC format.
            </summary>
        </member>
        <member name="P:IronOcr.Events.OcrProgressEventsArgs.EndTimeUTC">
            <summary>
            The DateTime at which the <see cref="M:IronOcr.IronTesseract.Read(IronOcr.OcrInput)" /> OCR job was 100% completed in UTC format.
            <para>null while OCR is still in progress</para></summary>
        </member>
        <member name="T:IronOcr.Exceptions.LanguagePackException">
            <summary>
            Indicates an issue regarding language packs, such as a missing language pack
            </summary>
        </member>
        <member name="T:IronOcr.Exceptions.NamespaceDoc">
            <summary>
            Exceptions thrown from IronOCR.  For documentation and support please visit:  https://ironsoftware.com/csharp/ocr/ 
            </summary>
        </member>
        <member name="T:IronOcr.Exceptions.IronOcrNativeException">
            <summary>
            Represents errors that occur in IronOCR native code
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrNativeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrNativeException" /> class.
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrNativeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrNativeException" /> class with a
            specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrNativeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrNativeException" /> class with a
            specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.
            </param>
        </member>
        <member name="T:IronOcr.Exceptions.IronOcrLicensingException">
            <summary>
             Represents errors that occur during IronOCR execution due to the library not being appropriately licensed.
            <para>https://ironsoftware.com/csharp/ocr/licensing/</para></summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrLicensingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrLicensingException" /> class.
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrLicensingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrLicensingException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrLicensingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrLicensingException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:IronOcr.Exceptions.IronOcrProductException">
            <summary>
            Represents errors that occur during IronOCR execution.
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrProductException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrProductException" /> class.
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrProductException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrProductException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrProductException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrProductException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:IronOcr.Exceptions.IronOcrDictionaryException">
            <summary>
            Represents errors that occur relating to IronOCR language files.
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrDictionaryException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrDictionaryException" /> class.
            </summary>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrDictionaryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrDictionaryException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:IronOcr.Exceptions.IronOcrDictionaryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:IronOcr.Exceptions.IronOcrDictionaryException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:IronOcr.Exceptions.IronOcrAssemblyVersionMismatchException">
            <summary>
            Represents errors that occur while loading assemblies during IronOcr deployment.
            </summary>
        </member>
        <member name="P:IronOcr.Exceptions.IronOcrAssemblyVersionMismatchException.Message">
            <summary>
            The message that describes the error.
            </summary>
        </member>
        <member name="T:IronOcr.IronTesseract">
            <summary>
             IronTesseract is a comprehensive managed class for performing Tesseract OCR in .Net applications.
             <para>IronTesseract natively supports Tesseract 3, 4 and 5 engines, and will automatically install all required binaries and language packs (tessdata) files.</para></summary>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadAsync(IronOcr.OcrInput,System.Int32)">
            <summary>
            Reads text from an <see cref="T:IronOcr.OcrInput" /> object and returns an <see cref="T:IronOcr.OcrResult" /> object.
            <para><see cref="T:IronOcr.OcrInput" /> is the preferred input type because it allows for OCR of multi-paged documents, and allows images to be enhanced before OCR to obtain faster, more accurate results.</para><para>There are also other overloads of this method that allow for Images and PDFs to be read directly as  File paths and Bitmaps. </para></summary>
            <param name="Input">An <see cref="T:IronOcr.OcrInput" /> document which can contain one or more images and PDFs</param>
            <param name="TimeoutMs">Optional timeout in milliseconds, after which the Ocr read will be cancelled. Not supported in .NET 4.0</param>
            <returns>A task that represents the asynchronous read operation. The value of the <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains
            an <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadAsync(System.String,IronSoftware.Drawing.CropRectangle,System.Int32)">
            <summary>
            Reads text from an Image file and returns an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="ImagePath">Path to an image file.</param>
            <param name="ContentArea">Specifies a region within the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
            <param name="TimeoutMs">Optional timeout in milliseconds, after which the Ocr read will be cancelled. Not supported in .NET 4.0</param>
            <returns>A task that represents the asynchronous read operation. The value of the <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains
            an <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadAsync(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle,System.Int32)">
            <summary>
            Reads text from an <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object and returns an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="Image">An <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object</param>
            <param name="ContentArea">Specifies a region within the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
            <param name="TimeoutMs">Optional timeout in milliseconds, after which the Ocr read will be cancelled. Not supported in .NET 4.0</param>
            <returns>A task that represents the asynchronous read operation. The value of the <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains
            an <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="P:IronOcr.IronTesseract.MultiThreaded">
            <summary>
            Read multiple PDF pages and images simultaneously on different threads
            </summary>
        </member>
        <member name="M:IronOcr.IronTesseract.#ctor">
            <summary>
            Public constructor.  Creates a default instance of IronTesseract
            </summary>
        </member>
        <member name="M:IronOcr.IronTesseract.#ctor(IronOcr.TesseractConfiguration)">
            <summary>
            Public constructor.  Creates an instance of IronTesseract with a customized <see cref="T:IronOcr.TesseractConfiguration" />.
            <para>This allows advanced developers to fine tune Tesseract behavior.</para></summary>
        </member>
        <member name="M:IronOcr.IronTesseract.Read(IronOcr.OcrInput)">
            <summary>
             Reads text from an <see cref="T:IronOcr.OcrInput" /> object and returns an <see cref="T:IronOcr.OcrResult" /> object.
            <para><see cref="T:IronOcr.OcrInput" /> is the preferred input type because it allows for OCR of multi-paged documents, and allows images to be enhanced before OCR to obtain faster, more accurate results.</para><para>There are also other overloads of this method that allow for Images and PDFs to be read directly as  File paths and Bitmaps. </para></summary>
            <param name="Input">An <see cref="T:IronOcr.OcrInput" /> document which can contain one or more images and PDFs</param>
            <returns>A <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.Read(System.String)">
            <summary>
            Reads text from an Image file and returns an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="ImagePath">Path to an image file.</param>
            <returns>A <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.Read(System.String,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Reads text from a region of an Image file and returns an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="ImagePath">Path to an image file.</param>
            <param name="ContentArea">Specifies a region within the  image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
            <returns>A <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.Read(IronSoftware.Drawing.AnyBitmap)">
            <summary>
            Reads text from a IronSoftware.Drawing.AnyBitmap Image file and returns an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="Image">An <see cref="T:IronSoftware.Drawing.AnyBitmap" />, SixLabor.ImageSharp.Image, SkiaSharp.SKBitmap, SkiaSharp.SKImage, Microsoft.Maui.Graphics.Platform.PlatformImage, System.Drawing.Bitmap, or System.Drawing.Image</param>
            <returns>A <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.Read(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Reads text from a region of a IronSoftware.Drawing.AnyBitmap Image file and returns an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="Image">An <see cref="T:IronSoftware.Drawing.AnyBitmap" />, SixLabor.ImageSharp.Image, SkiaSharp.SKBitmap, SkiaSharp.SKImage, Microsoft.Maui.Graphics.Platform.PlatformImage, System.Drawing.Bitmap, or System.Drawing.Image</param>
            <param name="ContentArea">Specifies a region within the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
            <returns>A <see cref="T:IronOcr.OcrResult" /> object containing text,  and detailed, structured information about the extracted text content.</returns>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadPdfAndOverlayText(System.String,System.String,System.String)">
            <summary>
            This will take a PDF document and overlay text read by tesseract on top of the pages. This will preserve bookmarks from the original document.
            </summary>
            <param name="pdfFilePath">Path to the PDF that needs selectable text overlay-ed on it.</param>
            <param name="password">Password of the input PDF if there is one.</param>
            <param name="ownerPassword">Owner password of the input PDF if there is one.</param>
            <returns>Returns the new PDF as a byte[]. To save in one step use <see cref="M:IronOcr.IronTesseract.ReadPdfAndOverlayText(System.String,System.String,System.String)" />.</returns>
            <seealso cref="M:IronOcr.IronTesseract.ReadPdfAndOverlayText(System.String,System.String,System.String)" />
        </member>
        <member name="M:IronOcr.IronTesseract.ReadPdfAndOverlayText(System.Byte[],System.String,System.String)">
            <summary>
            This will take a PDF document and overlay text read by tesseract on top of the pages. This will preserve bookmarks from the original document.
            </summary>
            <param name="pdf">PDF to read and overlay text on as bytes.</param>
            <param name="password">Password of the input PDF if there is one.</param>
            <param name="ownerPassword">Owner password of the input PDF if there is one.</param>
            <returns>Returns the new PDF as a byte[]. To save in one step use <see cref="M:IronOcr.IronTesseract.ReadPdfAndOverlayText(System.Byte[],System.String,System.String)" />.</returns>
            <seealso cref="M:IronOcr.IronTesseract.ReadPdfAndOverlayText(System.Byte[],System.String,System.String)" />
        </member>
        <member name="M:IronOcr.IronTesseract.ReadPdfAndOverlayTextSaveAs(System.String,System.String,System.String,System.String)">
            <summary>
            This will take a PDF document and overlay text read by tesseract on top of the pages. This will preserve bookmarks from the original document.
            </summary>
            <param name="pdfFilePath">Path to the PDF that needs selectable text overlay-ed on it.</param>
            <param name="pdfSavePath">Path to save the new PDF.</param>
            <param name="password">Password of the input PDF if there is one.</param>
            <param name="ownerPassword">Owner password of the input PDF if there is one.</param>
        </member>
        <member name="M:IronOcr.IronTesseract.ReadPdfAndOverlayTextSaveAs(System.Byte[],System.String,System.String,System.String)">
            <summary>
            This will take a PDF document and overlay text read by tesseract on top of the pages. This will preserve bookmarks from the original document.
            </summary>
            <param name="pdf">PDF to read and overlay text on as bytes.</param>
            <param name="pdfSavePath">Path to save the new PDF.</param>
            <param name="password">Password of the input PDF if there is one.</param>
            <param name="ownerPassword">Owner password of the input PDF if there is one.</param>
        </member>
        <member name="F:IronOcr.IronTesseract.Configuration">
            <summary>
            An instance of <see cref="T:IronOcr.TesseractConfiguration" /> which allows fine-grained control of the underlying Tesseract OCR Engine.
            <para>Options include: Language file detail level.  Page Segmentation Mode and access to the entire API of tesseract settings variables.</para></summary>
        </member>
        <member name="P:IronOcr.IronTesseract.Language">
            <summary>
             The Natural Language of the documents Which <see cref="T:IronOcr.IronTesseract" /> will read.
             <para> Default is English. Additional languages can be installed easily using Nuget https://www.nuget.org/packages?q=IronOcr.Languages or downloaded from  https://ironsoftware.com/csharp/ocr/languages/</para><para>We may use multiple languages packs simultaneously with the UseMultipleLanguages method.</para><para>We can use custom Tesseract .tessdata language packs with the <see cref="M:IronOcr.IronTesseract.UseCustomTesseractLanguageFile(System.String)" /> method.</para></summary>
            <seealso cref="T:IronOcr.OcrLanguage" />
        </member>
        <member name="M:IronOcr.IronTesseract.UseCustomTesseractLanguageFile(System.String)">
            <summary>
            IronTesseract will use  a tesseract .traineddata language file as its only OCR language.
            <para>https://github.com/tesseract-ocr/tessdata</para></summary>
            <param name="TrainedDataPath">File path to a .traineddata file. These can be downloaded from https://github.com/tesseract-ocr/tessdata or generated using Tesseract command line.</param>
        </member>
        <member name="M:IronOcr.IronTesseract.AddSecondaryLanguage(IronOcr.OcrLanguage)">
            <summary>
             IronTesseract will use  multiple tesseract language files simultaneously.  MultilingualOCR.
              <para>Any number of secondary languages may be added.  Speed and performance may be affected.</para></summary>
            <param name="SecondaryLanguage">An additional <see cref="T:IronOcr.OcrLanguage" /></param>
        </member>
        <member name="M:IronOcr.IronTesseract.AddSecondaryLanguage(System.String)">
            <summary>
             IronTesseract will use  multiple tesseract language files simultaneously.  MultilingualOCR using a custom .traineddata tesseract 3,4 or 5 language file.
             <para>Any number of secondary languages may be added.  Speed and performance may be affected.</para></summary>
            <param name="CustomLanguagePath">File path to a .traineddata tesseract language pack.</param>
        </member>
        <member name="M:IronOcr.IronTesseract.ClearSecondaryLanguages">
            <summary>
            Removes all languages add by <see cref="M:IronOcr.IronTesseract.AddSecondaryLanguage(IronOcr.OcrLanguage)" /> or <see cref="M:IronOcr.IronTesseract.AddSecondaryLanguage(System.String)" /></summary>
        </member>
        <member name="M:IronOcr.IronTesseract.PdfiumApi.OverlayTextOnOriginalPdf(System.Byte[],System.Byte[],System.String,System.String)">
            <summary>
            Overlays a text-only PDF generated by Tesseract on top of the original, thus making a Searchable PDF.
            </summary>
        </member>
        <member name="E:IronOcr.IronTesseract.OcrProgress">
            <summary>
            An Event which can be used to track OCR progress and inform users of OCR performance and progress.
            <para>Progress is reported via the <see cref="T:IronOcr.Events.OcrProgressEventsArgs" /> class </para></summary>
            <seealso cref="T:IronOcr.Events.OcrProgressEventsArgs" />
            <example>
                <code>myIronTesseract.OcrProgress += (object o, IronOcr.Events.OcrProgressEventsArgs e) =&gt;
                   {
                      Console.WriteLine(e.ProgressPercent + "%   " + e.Duration.TotalSeconds+"s"  );
                   }</code>
            </example>
        </member>
        <member name="M:IronOcr.IronTesseract.TesseractPageFactory(DynamicTesseract.TesseractEngine,IronOcr.OcrInput.PixPlus)">
            <summary>
            Allows IronTesseract to read documents using multiple threads on multiple CPU cores. A significant performance improvement over traditional Tesseract.
            </summary>
        </member>
        <member name="T:IronOcr.NamespaceDoc">
            <summary>
                <para>IronOcr is an advanced Optical Character Recognition library for the .Net Framework.</para>
                <para> IronOcr provides advanced OCR by processing Images and PDF documents to test using an embedded Tesseract engine supporting Tesseract 3,4 and 5.</para>
                <para>To read an image to text - first add the image to an <see cref="T:IronOcr.OcrInput" /> document, and then convert it to plain text it with the <see cref="T:IronOcr.IronTesseract" /> class.</para>
                <para>Support for .Net 4.0 and above, .Net Standard 2.x and.Net Core 2, 3  &amp; 5 omn on Windows, Mac and Linux.  https://ironsoftware.com/csharp/ocr/</para>
            </summary>
        </member>
        <member name="T:IronOcr.TesseractConfiguration">
            <summary>
            A configuration object that fine-tunes Tesseract behavior at an Instance level.    Gives access to every option available to tesseract command line or C++ API users.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractConfiguration.RenderSearchablePdfsAndHocr">
            <summary>
            Prerenders searchable PDF documents and HOCR files during Tesseract read operations.  
            Required True to use <see cref="M:IronOcr.OcrResult.SaveAsHocrFile(System.String)" /> and  <see cref="M:IronOcr.OcrResult.SaveAsSearchablePdf(System.String)" /> methods.
            </summary>
        </member>
        <member name="M:IronOcr.TesseractConfiguration.Clone">
            <summary>
            Clone this See <see cref="T:IronOcr.TesseractConfiguration" /></summary>
            <returns>A copy of this <see cref="T:IronOcr.TesseractConfiguration" /> as an object.</returns>
        </member>
        <member name="F:IronOcr.TesseractConfiguration.TesseractVersion">
            <summary>
            IronOcr supports Tesseract 5.1
            </summary>
        </member>
        <member name="P:IronOcr.TesseractConfiguration.WhiteListCharacters">
            <summary>
            If set, only characters in this string will be read by IronTesseract.  Remember to include punctuation marks and space characters.
            <para>If know, WhiteListCharacters can dramatically increase performance and accuracy.</para><para>Also very useful if we expect only numbers or only letters.</para></summary>
        </member>
        <member name="P:IronOcr.TesseractConfiguration.BlackListCharacters">
            <summary>
            If set, any characters in this string will not be recognized by IronTesseract OCR.  An example use-case is to remove characters with accents.
             <para>BlackListCharacters and WhiteListCharacters can positively impact speed and accuracy if set thoughtfully.</para></summary>
            <seealso cref="P:IronOcr.TesseractConfiguration.WhiteListCharacters" />
        </member>
        <member name="F:IronOcr.TesseractConfiguration.PageSegmentationMode">
            <summary>
            Determines how a page is scanned to find potential blocks of text.  Best documented in Tesseract developer websites.
            <para><see cref="F:IronOcr.TesseractPageSegmentationMode.AutoOsd" /> is a safe default.</para></summary>
        </member>
        <member name="F:IronOcr.TesseractConfiguration.EngineMode">
            <summary>
            Allows the developer to choose the algorithm Tesseract will use for OCR.  TesseractAndLstm is the recommended behavior for IronOCR.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractConfiguration.ReadBarCodes">
            <summary>
            Optionally turns on Barcode reading alongside OCR.
            </summary>
        </member>
        <member name="F:IronOcr.TesseractConfiguration.TesseractVariables">
            <summary>
            Add Tesseract configuration variables of type bool, int, double or string.  Gives access to all Tesseract command-line and config file options.
            <para>
            To learn how to use this, Tesseract documentation is very sparse.  Please use <see cref="M:IronOcr.TesseractConfiguration.TrySaveAllTesseractVariablesToFile(System.String)" /> to output all available tesseract variables for your installation of Tesseract.
            </para><para>
            To learn more about how to use TesseractVariables see our guide at: https://ironsoftware.com/csharp/ocr/docs/questions/csharp-tesseract-config-configuration-variables/
            </para></summary>
        </member>
        <member name="M:IronOcr.TesseractConfiguration.TrySaveAllTesseractVariablesToFile(System.String)">
            <summary>
            Saves all Tesseract internal settings for this Configuration to a plain text file.
            </summary>
            <param name="Path">A valid file path.  Recommended file extension is .txt</param>
            <returns>True if file successfully saved</returns>
        </member>
        <member name="T:IronOcr.OcrLanguage">
            <summary>
             The natural language in which OCR documents will be read.
             <para>Any number of languages may be used simultaneously using the IronTessseract.AddSecondaryLanguage() Method.  </para><para>To use a custom Tesseract language file (.traineddata) please see the IronTessseract.UseCustomLanguageFile() Method</para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Afrikaans">
            <summary>
            Afrikaans  OCR language. Performs OCR, reading documents of the Afrikaans language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Afrikaans uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Afrikaans' from https://www.nuget.org/packages/IronOcr.Languages.Afrikaans/ to your Visual Studio project.<br />
            Alternatively download the "Afrikaans.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AfrikaansBest">
            <summary>
            Afrikaans  OCR language. Performs OCR, reading documents of the Afrikaans language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Afrikaans uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Afrikaans' from https://www.nuget.org/packages/IronOcr.Languages.Afrikaans/ to your Visual Studio project.<br />
            Alternatively download the "Afrikaans.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AfrikaansFast">
            <summary>
            Afrikaans  OCR language. Performs OCR, reading documents of the Afrikaans language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Afrikaans uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Afrikaans' from https://www.nuget.org/packages/IronOcr.Languages.Afrikaans/ to your Visual Studio project.<br />
            Alternatively download the "Afrikaans.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Amharic">
            <summary>
            Amharic  OCR language. Performs OCR, reading documents of the Amharic (አማርኛ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Amharic uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Amharic' from https://www.nuget.org/packages/IronOcr.Languages.Amharic/ to your Visual Studio project.<br />
            Alternatively download the "Amharic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AmharicBest">
            <summary>
            Amharic  OCR language. Performs OCR, reading documents of the Amharic (አማርኛ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Amharic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Amharic' from https://www.nuget.org/packages/IronOcr.Languages.Amharic/ to your Visual Studio project.<br />
            Alternatively download the "Amharic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AmharicFast">
            <summary>
            Amharic  OCR language. Performs OCR, reading documents of the Amharic (አማርኛ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Amharic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Amharic' from https://www.nuget.org/packages/IronOcr.Languages.Amharic/ to your Visual Studio project.<br />
            Alternatively download the "Amharic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Arabic">
            <summary>
            Arabic  OCR language. Performs OCR, reading documents of the Arabic (العربية) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Arabic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project.<br />
            Alternatively download the "Arabic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArabicBest">
            <summary>
            Arabic  OCR language. Performs OCR, reading documents of the Arabic (العربية) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Arabic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project.<br />
            Alternatively download the "Arabic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArabicFast">
            <summary>
            Arabic  OCR language. Performs OCR, reading documents of the Arabic (العربية) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Arabic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project.<br />
            Alternatively download the "Arabic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArabicAlphabet">
            <summary>
            Arabic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Arabic Alphabet (العربية) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Arabic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project.<br />
            Alternatively download the "Arabic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArabicAlphabetBest">
            <summary>
            Arabic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Arabic Alphabet (العربية) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Arabic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project.<br />
            Alternatively download the "Arabic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArabicAlphabetFast">
            <summary>
            Arabic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Arabic Alphabet (العربية) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Arabic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Arabic' from https://www.nuget.org/packages/IronOcr.Languages.Arabic/ to your Visual Studio project.<br />
            Alternatively download the "Arabic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArmenianAlphabet">
            <summary>
            Armenian Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Armenian Alphabet (Հայերեն) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Armenian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project.<br />
            Alternatively download the "Armenian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArmenianAlphabetBest">
            <summary>
            Armenian Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Armenian Alphabet (Հայերեն) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Armenian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project.<br />
            Alternatively download the "Armenian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArmenianAlphabetFast">
            <summary>
            Armenian Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Armenian Alphabet (Հայերեն) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Armenian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project.<br />
            Alternatively download the "Armenian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Assamese">
            <summary>
            Assamese  OCR language. Performs OCR, reading documents of the Assamese (অসমীয়া) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Assamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Assamese' from https://www.nuget.org/packages/IronOcr.Languages.Assamese/ to your Visual Studio project.<br />
            Alternatively download the "Assamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AssameseBest">
            <summary>
            Assamese  OCR language. Performs OCR, reading documents of the Assamese (অসমীয়া) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Assamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Assamese' from https://www.nuget.org/packages/IronOcr.Languages.Assamese/ to your Visual Studio project.<br />
            Alternatively download the "Assamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AssameseFast">
            <summary>
            Assamese  OCR language. Performs OCR, reading documents of the Assamese (অসমীয়া) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Assamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Assamese' from https://www.nuget.org/packages/IronOcr.Languages.Assamese/ to your Visual Studio project.<br />
            Alternatively download the "Assamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Azerbaijani">
            <summary>
            Azerbaijani  OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Azerbaijani uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project.<br />
            Alternatively download the "Azerbaijani.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AzerbaijaniBest">
            <summary>
            Azerbaijani  OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Azerbaijani uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project.<br />
            Alternatively download the "Azerbaijani.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AzerbaijaniFast">
            <summary>
            Azerbaijani  OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Azerbaijani uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project.<br />
            Alternatively download the "Azerbaijani.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AzerbaijaniCyrillic">
            <summary>
            Azerbaijani Cyrillic  OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. 
            <para>This Default variant of Azerbaijani Cyrillic uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project.<br />
            Alternatively download the "Azerbaijani.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AzerbaijaniCyrillicBest">
            <summary>
            Azerbaijani Cyrillic  OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Azerbaijani Cyrillic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project.<br />
            Alternatively download the "Azerbaijani.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AzerbaijaniCyrillicFast">
            <summary>
            Azerbaijani Cyrillic  OCR language. Performs OCR, reading documents of the Azerbaijani (azərbaycan dili) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Azerbaijani Cyrillic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Azerbaijani' from https://www.nuget.org/packages/IronOcr.Languages.Azerbaijani/ to your Visual Studio project.<br />
            Alternatively download the "Azerbaijani.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Belarusian">
            <summary>
            Belarusian  OCR language. Performs OCR, reading documents of the Belarusian (беларуская мова) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Belarusian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Belarusian' from https://www.nuget.org/packages/IronOcr.Languages.Belarusian/ to your Visual Studio project.<br />
            Alternatively download the "Belarusian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BelarusianBest">
            <summary>
            Belarusian  OCR language. Performs OCR, reading documents of the Belarusian (беларуская мова) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Belarusian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Belarusian' from https://www.nuget.org/packages/IronOcr.Languages.Belarusian/ to your Visual Studio project.<br />
            Alternatively download the "Belarusian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BelarusianFast">
            <summary>
            Belarusian  OCR language. Performs OCR, reading documents of the Belarusian (беларуская мова) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Belarusian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Belarusian' from https://www.nuget.org/packages/IronOcr.Languages.Belarusian/ to your Visual Studio project.<br />
            Alternatively download the "Belarusian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Bengali">
            <summary>
            Bengali  OCR language. Performs OCR, reading documents of the Bengali (Bangla,বাংলা) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Bengali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project.<br />
            Alternatively download the "Bengali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BengaliBest">
            <summary>
            Bengali  OCR language. Performs OCR, reading documents of the Bengali (Bangla,বাংলা) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Bengali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project.<br />
            Alternatively download the "Bengali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BengaliFast">
            <summary>
            Bengali  OCR language. Performs OCR, reading documents of the Bengali (Bangla,বাংলা) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Bengali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project.<br />
            Alternatively download the "Bengali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BengaliAlphabet">
            <summary>
            Bengali Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Bengali Alphabet (Bangla,বাংলা) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Bengali Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project.<br />
            Alternatively download the "Bengali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BengaliAlphabetBest">
            <summary>
            Bengali Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Bengali Alphabet (Bangla,বাংলা) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Bengali Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project.<br />
            Alternatively download the "Bengali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BengaliAlphabetFast">
            <summary>
            Bengali Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Bengali Alphabet (Bangla,বাংলা) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Bengali Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bengali' from https://www.nuget.org/packages/IronOcr.Languages.Bengali/ to your Visual Studio project.<br />
            Alternatively download the "Bengali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tibetan">
            <summary>
            Tibetan  OCR language. Performs OCR, reading documents of the Tibetan (Tibetan Standard, Tibetan, Central ཡིག་) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Tibetan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project.<br />
            Alternatively download the "Tibetan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TibetanBest">
            <summary>
            Tibetan  OCR language. Performs OCR, reading documents of the Tibetan (Tibetan Standard, Tibetan, Central ཡིག་) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Tibetan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project.<br />
            Alternatively download the "Tibetan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TibetanFast">
            <summary>
            Tibetan  OCR language. Performs OCR, reading documents of the Tibetan (Tibetan Standard, Tibetan, Central ཡིག་) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Tibetan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project.<br />
            Alternatively download the "Tibetan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Bosnian">
            <summary>
            Bosnian  OCR language. Performs OCR, reading documents of the Bosnian (bosanski jezik) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Bosnian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bosnian' from https://www.nuget.org/packages/IronOcr.Languages.Bosnian/ to your Visual Studio project.<br />
            Alternatively download the "Bosnian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BosnianBest">
            <summary>
            Bosnian  OCR language. Performs OCR, reading documents of the Bosnian (bosanski jezik) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Bosnian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bosnian' from https://www.nuget.org/packages/IronOcr.Languages.Bosnian/ to your Visual Studio project.<br />
            Alternatively download the "Bosnian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BosnianFast">
            <summary>
            Bosnian  OCR language. Performs OCR, reading documents of the Bosnian (bosanski jezik) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Bosnian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bosnian' from https://www.nuget.org/packages/IronOcr.Languages.Bosnian/ to your Visual Studio project.<br />
            Alternatively download the "Bosnian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Breton">
            <summary>
            Breton  OCR language. Performs OCR, reading documents of the Breton (brezhoneg) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Breton uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Breton' from https://www.nuget.org/packages/IronOcr.Languages.Breton/ to your Visual Studio project.<br />
            Alternatively download the "Breton.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BretonBest">
            <summary>
            Breton  OCR language. Performs OCR, reading documents of the Breton (brezhoneg) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Breton uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Breton' from https://www.nuget.org/packages/IronOcr.Languages.Breton/ to your Visual Studio project.<br />
            Alternatively download the "Breton.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BretonFast">
            <summary>
            Breton  OCR language. Performs OCR, reading documents of the Breton (brezhoneg) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Breton uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Breton' from https://www.nuget.org/packages/IronOcr.Languages.Breton/ to your Visual Studio project.<br />
            Alternatively download the "Breton.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Bulgarian">
            <summary>
            Bulgarian  OCR language. Performs OCR, reading documents of the Bulgarian (български език) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Bulgarian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bulgarian' from https://www.nuget.org/packages/IronOcr.Languages.Bulgarian/ to your Visual Studio project.<br />
            Alternatively download the "Bulgarian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BulgarianBest">
            <summary>
            Bulgarian  OCR language. Performs OCR, reading documents of the Bulgarian (български език) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Bulgarian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bulgarian' from https://www.nuget.org/packages/IronOcr.Languages.Bulgarian/ to your Visual Studio project.<br />
            Alternatively download the "Bulgarian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BulgarianFast">
            <summary>
            Bulgarian  OCR language. Performs OCR, reading documents of the Bulgarian (български език) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Bulgarian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Bulgarian' from https://www.nuget.org/packages/IronOcr.Languages.Bulgarian/ to your Visual Studio project.<br />
            Alternatively download the "Bulgarian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CanadianAboriginalAlphabet">
            <summary>
            Canadian Aboriginal Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Canadian Aboriginal Alphabet (Canadian First Nations, Indigenous Canadians, Native Canadian, Inuit) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Canadian Aboriginal Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.CanadianAboriginal' from https://www.nuget.org/packages/IronOcr.Languages.CanadianAboriginal/ to your Visual Studio project.<br />
            Alternatively download the "CanadianAboriginal.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CanadianAboriginalAlphabetBest">
            <summary>
            Canadian Aboriginal Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Canadian Aboriginal Alphabet (Canadian First Nations, Indigenous Canadians, Native Canadian, Inuit) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Canadian Aboriginal Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.CanadianAboriginal' from https://www.nuget.org/packages/IronOcr.Languages.CanadianAboriginal/ to your Visual Studio project.<br />
            Alternatively download the "CanadianAboriginal.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CanadianAboriginalAlphabetFast">
            <summary>
            Canadian Aboriginal Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Canadian Aboriginal Alphabet (Canadian First Nations, Indigenous Canadians, Native Canadian, Inuit) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Canadian Aboriginal Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.CanadianAboriginal' from https://www.nuget.org/packages/IronOcr.Languages.CanadianAboriginal/ to your Visual Studio project.<br />
            Alternatively download the "CanadianAboriginal.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Catalan">
            <summary>
            Catalan  OCR language. Performs OCR, reading documents of the Catalan (català, valencià) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Catalan uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Catalan' from https://www.nuget.org/packages/IronOcr.Languages.Catalan/ to your Visual Studio project.<br />
            Alternatively download the "Catalan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CatalanBest">
            <summary>
            Catalan  OCR language. Performs OCR, reading documents of the Catalan (català, valencià) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Catalan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Catalan' from https://www.nuget.org/packages/IronOcr.Languages.Catalan/ to your Visual Studio project.<br />
            Alternatively download the "Catalan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CatalanFast">
            <summary>
            Catalan  OCR language. Performs OCR, reading documents of the Catalan (català, valencià) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Catalan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Catalan' from https://www.nuget.org/packages/IronOcr.Languages.Catalan/ to your Visual Studio project.<br />
            Alternatively download the "Catalan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Cebuano">
            <summary>
            Cebuano  OCR language. Performs OCR, reading documents of the Cebuano (Bisaya, Binisaya) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Cebuano uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cebuano' from https://www.nuget.org/packages/IronOcr.Languages.Cebuano/ to your Visual Studio project.<br />
            Alternatively download the "Cebuano.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CebuanoBest">
            <summary>
            Cebuano  OCR language. Performs OCR, reading documents of the Cebuano (Bisaya, Binisaya) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Cebuano uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cebuano' from https://www.nuget.org/packages/IronOcr.Languages.Cebuano/ to your Visual Studio project.<br />
            Alternatively download the "Cebuano.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CebuanoFast">
            <summary>
            Cebuano  OCR language. Performs OCR, reading documents of the Cebuano (Bisaya, Binisaya) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Cebuano uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cebuano' from https://www.nuget.org/packages/IronOcr.Languages.Cebuano/ to your Visual Studio project.<br />
            Alternatively download the "Cebuano.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Czech">
            <summary>
            Czech  OCR language. Performs OCR, reading documents of the Czech (čeština, český jazyk) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Czech uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Czech' from https://www.nuget.org/packages/IronOcr.Languages.Czech/ to your Visual Studio project.<br />
            Alternatively download the "Czech.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CzechBest">
            <summary>
            Czech  OCR language. Performs OCR, reading documents of the Czech (čeština, český jazyk) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Czech uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Czech' from https://www.nuget.org/packages/IronOcr.Languages.Czech/ to your Visual Studio project.<br />
            Alternatively download the "Czech.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CzechFast">
            <summary>
            Czech  OCR language. Performs OCR, reading documents of the Czech (čeština, český jazyk) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Czech uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Czech' from https://www.nuget.org/packages/IronOcr.Languages.Czech/ to your Visual Studio project.<br />
            Alternatively download the "Czech.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CherokeeAlphabet">
            <summary>
            Cherokee Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Cherokee Alphabet (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Cherokee Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project.<br />
            Alternatively download the "Cherokee.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CherokeeAlphabetBest">
            <summary>
            Cherokee Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Cherokee Alphabet (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Cherokee Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project.<br />
            Alternatively download the "Cherokee.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CherokeeAlphabetFast">
            <summary>
            Cherokee Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Cherokee Alphabet (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Cherokee Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project.<br />
            Alternatively download the "Cherokee.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseSimplified">
            <summary>
            Chinese Simplified  OCR language. Performs OCR, reading documents of the Chinese Simplified [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Chinese Simplified uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseSimplifiedBest">
            <summary>
            Chinese Simplified  OCR language. Performs OCR, reading documents of the Chinese Simplified [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Chinese Simplified uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseSimplifiedFast">
            <summary>
            Chinese Simplified  OCR language. Performs OCR, reading documents of the Chinese Simplified [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Chinese Simplified uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseSimplifiedVertical">
            <summary>
            Chinese Simplified Vertical  OCR language. Performs OCR, reading documents of the Chinese Simplified Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Chinese Simplified Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseSimplifiedVerticalBest">
            <summary>
            Chinese Simplified Vertical  OCR language. Performs OCR, reading documents of the Chinese Simplified Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Chinese Simplified Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseSimplifiedVerticalFast">
            <summary>
            Chinese Simplified Vertical  OCR language. Performs OCR, reading documents of the Chinese Simplified Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Chinese Simplified Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseTraditional">
            <summary>
            Chinese Traditional  OCR language. Performs OCR, reading documents of the Chinese Traditional [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Chinese Traditional uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseTraditionalBest">
            <summary>
            Chinese Traditional  OCR language. Performs OCR, reading documents of the Chinese Traditional [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Chinese Traditional uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseTraditionalFast">
            <summary>
            Chinese Traditional  OCR language. Performs OCR, reading documents of the Chinese Traditional [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Chinese Traditional uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseTraditionalVertical">
            <summary>
            Chinese Traditional Vertical  OCR language. Performs OCR, reading documents of the Chinese Traditional Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Chinese Traditional Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseTraditionalVerticalBest">
            <summary>
            Chinese Traditional Vertical  OCR language. Performs OCR, reading documents of the Chinese Traditional Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Chinese Traditional Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ChineseTraditionalVerticalFast">
            <summary>
            Chinese Traditional Vertical  OCR language. Performs OCR, reading documents of the Chinese Traditional Vertical [中文 (Zhōngwén), 汉语, 漢語] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Chinese Traditional Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Chinese' from https://www.nuget.org/packages/IronOcr.Languages.Chinese/ to your Visual Studio project.<br />
            Alternatively download the "Chinese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Cherokee">
            <summary>
            Cherokee  OCR language. Performs OCR, reading documents of the Cherokee (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Cherokee uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project.<br />
            Alternatively download the "Cherokee.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CherokeeBest">
            <summary>
            Cherokee  OCR language. Performs OCR, reading documents of the Cherokee (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Cherokee uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project.<br />
            Alternatively download the "Cherokee.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CherokeeFast">
            <summary>
            Cherokee  OCR language. Performs OCR, reading documents of the Cherokee (ᏣᎳᎩ ᎦᏬᏂᎯᏍᏗ, Tsalagi Gawonihisdi) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Cherokee uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cherokee' from https://www.nuget.org/packages/IronOcr.Languages.Cherokee/ to your Visual Studio project.<br />
            Alternatively download the "Cherokee.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Corsican">
            <summary>
            Corsican  OCR language. Performs OCR, reading documents of the Corsican (corsu, lingua corsa) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Corsican uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Corsican' from https://www.nuget.org/packages/IronOcr.Languages.Corsican/ to your Visual Studio project.<br />
            Alternatively download the "Corsican.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CorsicanBest">
            <summary>
            Corsican  OCR language. Performs OCR, reading documents of the Corsican (corsu, lingua corsa) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Corsican uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Corsican' from https://www.nuget.org/packages/IronOcr.Languages.Corsican/ to your Visual Studio project.<br />
            Alternatively download the "Corsican.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CorsicanFast">
            <summary>
            Corsican  OCR language. Performs OCR, reading documents of the Corsican (corsu, lingua corsa) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Corsican uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Corsican' from https://www.nuget.org/packages/IronOcr.Languages.Corsican/ to your Visual Studio project.<br />
            Alternatively download the "Corsican.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Welsh">
            <summary>
            Welsh  OCR language. Performs OCR, reading documents of the Welsh (Cymraeg) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Welsh uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Welsh' from https://www.nuget.org/packages/IronOcr.Languages.Welsh/ to your Visual Studio project.<br />
            Alternatively download the "Welsh.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.WelshBest">
            <summary>
            Welsh  OCR language. Performs OCR, reading documents of the Welsh (Cymraeg) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Welsh uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Welsh' from https://www.nuget.org/packages/IronOcr.Languages.Welsh/ to your Visual Studio project.<br />
            Alternatively download the "Welsh.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.WelshFast">
            <summary>
            Welsh  OCR language. Performs OCR, reading documents of the Welsh (Cymraeg) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Welsh uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Welsh' from https://www.nuget.org/packages/IronOcr.Languages.Welsh/ to your Visual Studio project.<br />
            Alternatively download the "Welsh.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CyrillicAlphabet">
            <summary>
            Cyrillic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Cyrillic Alphabet (Cyrillic scripts) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Cyrillic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cyrillic' from https://www.nuget.org/packages/IronOcr.Languages.Cyrillic/ to your Visual Studio project.<br />
            Alternatively download the "Cyrillic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CyrillicAlphabetBest">
            <summary>
            Cyrillic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Cyrillic Alphabet (Cyrillic scripts) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Cyrillic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cyrillic' from https://www.nuget.org/packages/IronOcr.Languages.Cyrillic/ to your Visual Studio project.<br />
            Alternatively download the "Cyrillic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CyrillicAlphabetFast">
            <summary>
            Cyrillic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Cyrillic Alphabet (Cyrillic scripts) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Cyrillic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Cyrillic' from https://www.nuget.org/packages/IronOcr.Languages.Cyrillic/ to your Visual Studio project.<br />
            Alternatively download the "Cyrillic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Danish">
            <summary>
            Danish  OCR language. Performs OCR, reading documents of the Danish (dansk) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Danish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Danish' from https://www.nuget.org/packages/IronOcr.Languages.Danish/ to your Visual Studio project.<br />
            Alternatively download the "Danish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DanishBest">
            <summary>
            Danish  OCR language. Performs OCR, reading documents of the Danish (dansk) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Danish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Danish' from https://www.nuget.org/packages/IronOcr.Languages.Danish/ to your Visual Studio project.<br />
            Alternatively download the "Danish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DanishFast">
            <summary>
            Danish  OCR language. Performs OCR, reading documents of the Danish (dansk) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Danish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Danish' from https://www.nuget.org/packages/IronOcr.Languages.Danish/ to your Visual Studio project.<br />
            Alternatively download the "Danish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DanishFraktur">
            <summary>
            Danish Fraktur  OCR language. Performs OCR, reading documents of the Danish Fraktur (dansk) language with an understanding of spelling and linguistic context. 
            <para>This Danish Fraktur OCR language pack  uses only an OEM (shape recognition evolved from Tesseract 3) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Danish' from https://www.nuget.org/packages/IronOcr.Languages.Danish/ to your Visual Studio project.<br />
            Alternatively download the "Danish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.German">
            <summary>
            German  OCR language. Performs OCR, reading documents of the German (Deutsch) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of German uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.German' from https://www.nuget.org/packages/IronOcr.Languages.German/ to your Visual Studio project.<br />
            Alternatively download the "German.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GermanBest">
            <summary>
            German  OCR language. Performs OCR, reading documents of the German (Deutsch) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of German uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.German' from https://www.nuget.org/packages/IronOcr.Languages.German/ to your Visual Studio project.<br />
            Alternatively download the "German.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GermanFast">
            <summary>
            German  OCR language. Performs OCR, reading documents of the German (Deutsch) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of German uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.German' from https://www.nuget.org/packages/IronOcr.Languages.German/ to your Visual Studio project.<br />
            Alternatively download the "German.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GermanFraktur">
            <summary>
            German Fraktur  OCR language. Performs OCR, reading documents of the German Fraktur (Deutsch) language with an understanding of spelling and linguistic context. 
            <para>This German Fraktur OCR language pack  uses only an OEM (shape recognition evolved from Tesseract 3) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.German' from https://www.nuget.org/packages/IronOcr.Languages.German/ to your Visual Studio project.<br />
            Alternatively download the "German.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DevanagariAlphabet">
            <summary>
            Devanagari Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Devanagari Alphabet (Nagair,देवनागरी) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Devanagari Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Devanagari' from https://www.nuget.org/packages/IronOcr.Languages.Devanagari/ to your Visual Studio project.<br />
            Alternatively download the "Devanagari.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DevanagariAlphabetBest">
            <summary>
            Devanagari Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Devanagari Alphabet (Nagair,देवनागरी) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Devanagari Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Devanagari' from https://www.nuget.org/packages/IronOcr.Languages.Devanagari/ to your Visual Studio project.<br />
            Alternatively download the "Devanagari.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DevanagariAlphabetFast">
            <summary>
            Devanagari Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Devanagari Alphabet (Nagair,देवनागरी) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Devanagari Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Devanagari' from https://www.nuget.org/packages/IronOcr.Languages.Devanagari/ to your Visual Studio project.<br />
            Alternatively download the "Devanagari.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Divehi">
            <summary>
            Divehi  OCR language. Performs OCR, reading documents of the Divehi (ދިވެހި) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Divehi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Divehi' from https://www.nuget.org/packages/IronOcr.Languages.Divehi/ to your Visual Studio project.<br />
            Alternatively download the "Divehi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DivehiBest">
            <summary>
            Divehi  OCR language. Performs OCR, reading documents of the Divehi (ދިވެހި) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Divehi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Divehi' from https://www.nuget.org/packages/IronOcr.Languages.Divehi/ to your Visual Studio project.<br />
            Alternatively download the "Divehi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DivehiFast">
            <summary>
            Divehi  OCR language. Performs OCR, reading documents of the Divehi (ދިވެހި) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Divehi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Divehi' from https://www.nuget.org/packages/IronOcr.Languages.Divehi/ to your Visual Studio project.<br />
            Alternatively download the "Divehi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Dzongkha">
            <summary>
            Dzongkha  OCR language. Performs OCR, reading documents of the Dzongkha (རྫོང་ཁ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Dzongkha uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Dzongkha' from https://www.nuget.org/packages/IronOcr.Languages.Dzongkha/ to your Visual Studio project.<br />
            Alternatively download the "Dzongkha.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DzongkhaBest">
            <summary>
            Dzongkha  OCR language. Performs OCR, reading documents of the Dzongkha (རྫོང་ཁ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Dzongkha uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Dzongkha' from https://www.nuget.org/packages/IronOcr.Languages.Dzongkha/ to your Visual Studio project.<br />
            Alternatively download the "Dzongkha.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DzongkhaFast">
            <summary>
            Dzongkha  OCR language. Performs OCR, reading documents of the Dzongkha (རྫོང་ཁ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Dzongkha uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Dzongkha' from https://www.nuget.org/packages/IronOcr.Languages.Dzongkha/ to your Visual Studio project.<br />
            Alternatively download the "Dzongkha.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Greek">
            <summary>
            Greek  OCR language. Performs OCR, reading documents of the Greek (ελληνικά) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Greek uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project.<br />
            Alternatively download the "Greek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GreekBest">
            <summary>
            Greek  OCR language. Performs OCR, reading documents of the Greek (ελληνικά) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Greek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project.<br />
            Alternatively download the "Greek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GreekFast">
            <summary>
            Greek  OCR language. Performs OCR, reading documents of the Greek (ελληνικά) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Greek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project.<br />
            Alternatively download the "Greek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.English">
            <summary>
            English  OCR language. Performs OCR, reading documents of the English language with an understanding of spelling and linguistic context. 
            <para>Installed Automatically with IronOCR as the default Language</para><para>This Default variant of English uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.English' from https://www.nuget.org/packages/IronOcr.Languages.English/ to your Visual Studio project.<br />
            Alternatively download the "English.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EnglishBest">
            <summary>
            English  OCR language. Performs OCR, reading documents of the English language with an understanding of spelling and linguistic context. 
            <para>Installed Automatically with IronOCR as the default Language</para><para>This 'Best' (detailed) variant of English uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.English' from https://www.nuget.org/packages/IronOcr.Languages.English/ to your Visual Studio project.<br />
            Alternatively download the "English.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EnglishFast">
            <summary>
            English  OCR language. Performs OCR, reading documents of the English language with an understanding of spelling and linguistic context. 
            <para>Installed Automatically with IronOCR as the default Language</para><para>This 'Fast' variant of English uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.English' from https://www.nuget.org/packages/IronOcr.Languages.English/ to your Visual Studio project.<br />
            Alternatively download the "English.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MiddleEnglish">
            <summary>
            Middle English  OCR language. Performs OCR, reading documents of the Middle English [English (1100-1500 AD)] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Middle English uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MiddleEnglish' from https://www.nuget.org/packages/IronOcr.Languages.MiddleEnglish/ to your Visual Studio project.<br />
            Alternatively download the "MiddleEnglish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MiddleEnglishBest">
            <summary>
            Middle English  OCR language. Performs OCR, reading documents of the Middle English [English (1100-1500 AD)] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Middle English uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MiddleEnglish' from https://www.nuget.org/packages/IronOcr.Languages.MiddleEnglish/ to your Visual Studio project.<br />
            Alternatively download the "MiddleEnglish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MiddleEnglishFast">
            <summary>
            Middle English  OCR language. Performs OCR, reading documents of the Middle English [English (1100-1500 AD)] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Middle English uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MiddleEnglish' from https://www.nuget.org/packages/IronOcr.Languages.MiddleEnglish/ to your Visual Studio project.<br />
            Alternatively download the "MiddleEnglish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Esperanto">
            <summary>
            Esperanto  OCR language. Performs OCR, reading documents of the Esperanto language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Esperanto uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Esperanto' from https://www.nuget.org/packages/IronOcr.Languages.Esperanto/ to your Visual Studio project.<br />
            Alternatively download the "Esperanto.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EsperantoBest">
            <summary>
            Esperanto  OCR language. Performs OCR, reading documents of the Esperanto language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Esperanto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Esperanto' from https://www.nuget.org/packages/IronOcr.Languages.Esperanto/ to your Visual Studio project.<br />
            Alternatively download the "Esperanto.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EsperantoFast">
            <summary>
            Esperanto  OCR language. Performs OCR, reading documents of the Esperanto language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Esperanto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Esperanto' from https://www.nuget.org/packages/IronOcr.Languages.Esperanto/ to your Visual Studio project.<br />
            Alternatively download the "Esperanto.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Estonian">
            <summary>
            Estonian  OCR language. Performs OCR, reading documents of the Estonian (eesti, eesti keel) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Estonian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Estonian' from https://www.nuget.org/packages/IronOcr.Languages.Estonian/ to your Visual Studio project.<br />
            Alternatively download the "Estonian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EstonianBest">
            <summary>
            Estonian  OCR language. Performs OCR, reading documents of the Estonian (eesti, eesti keel) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Estonian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Estonian' from https://www.nuget.org/packages/IronOcr.Languages.Estonian/ to your Visual Studio project.<br />
            Alternatively download the "Estonian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EstonianFast">
            <summary>
            Estonian  OCR language. Performs OCR, reading documents of the Estonian (eesti, eesti keel) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Estonian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Estonian' from https://www.nuget.org/packages/IronOcr.Languages.Estonian/ to your Visual Studio project.<br />
            Alternatively download the "Estonian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EthiopicAlphabet">
            <summary>
            Ethiopic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Ethiopic Alphabet (Ge'ez,ግዕዝ, Gəʿəz) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Ethiopic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Ethiopic' from https://www.nuget.org/packages/IronOcr.Languages.Ethiopic/ to your Visual Studio project.<br />
            Alternatively download the "Ethiopic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EthiopicAlphabetBest">
            <summary>
            Ethiopic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Ethiopic Alphabet (Ge'ez,ግዕዝ, Gəʿəz) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Ethiopic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Ethiopic' from https://www.nuget.org/packages/IronOcr.Languages.Ethiopic/ to your Visual Studio project.<br />
            Alternatively download the "Ethiopic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.EthiopicAlphabetFast">
            <summary>
            Ethiopic Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Ethiopic Alphabet (Ge'ez,ግዕዝ, Gəʿəz) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Ethiopic Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Ethiopic' from https://www.nuget.org/packages/IronOcr.Languages.Ethiopic/ to your Visual Studio project.<br />
            Alternatively download the "Ethiopic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Basque">
            <summary>
            Basque  OCR language. Performs OCR, reading documents of the Basque (euskara, euskera) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Basque uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Basque' from https://www.nuget.org/packages/IronOcr.Languages.Basque/ to your Visual Studio project.<br />
            Alternatively download the "Basque.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BasqueBest">
            <summary>
            Basque  OCR language. Performs OCR, reading documents of the Basque (euskara, euskera) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Basque uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Basque' from https://www.nuget.org/packages/IronOcr.Languages.Basque/ to your Visual Studio project.<br />
            Alternatively download the "Basque.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.BasqueFast">
            <summary>
            Basque  OCR language. Performs OCR, reading documents of the Basque (euskara, euskera) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Basque uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Basque' from https://www.nuget.org/packages/IronOcr.Languages.Basque/ to your Visual Studio project.<br />
            Alternatively download the "Basque.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Faroese">
            <summary>
            Faroese  OCR language. Performs OCR, reading documents of the Faroese (føroyskt) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Faroese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Faroese' from https://www.nuget.org/packages/IronOcr.Languages.Faroese/ to your Visual Studio project.<br />
            Alternatively download the "Faroese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FaroeseBest">
            <summary>
            Faroese  OCR language. Performs OCR, reading documents of the Faroese (føroyskt) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Faroese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Faroese' from https://www.nuget.org/packages/IronOcr.Languages.Faroese/ to your Visual Studio project.<br />
            Alternatively download the "Faroese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FaroeseFast">
            <summary>
            Faroese  OCR language. Performs OCR, reading documents of the Faroese (føroyskt) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Faroese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Faroese' from https://www.nuget.org/packages/IronOcr.Languages.Faroese/ to your Visual Studio project.<br />
            Alternatively download the "Faroese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Persian">
            <summary>
            Persian  OCR language. Performs OCR, reading documents of the Persian (فارسی) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Persian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Persian' from https://www.nuget.org/packages/IronOcr.Languages.Persian/ to your Visual Studio project.<br />
            Alternatively download the "Persian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PersianBest">
            <summary>
            Persian  OCR language. Performs OCR, reading documents of the Persian (فارسی) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Persian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Persian' from https://www.nuget.org/packages/IronOcr.Languages.Persian/ to your Visual Studio project.<br />
            Alternatively download the "Persian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PersianFast">
            <summary>
            Persian  OCR language. Performs OCR, reading documents of the Persian (فارسی) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Persian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Persian' from https://www.nuget.org/packages/IronOcr.Languages.Persian/ to your Visual Studio project.<br />
            Alternatively download the "Persian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Filipino">
            <summary>
            Filipino  OCR language. Performs OCR, reading documents of the Filipino (National Language of the Philippines, Standardized Tagalog) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Filipino uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Filipino' from https://www.nuget.org/packages/IronOcr.Languages.Filipino/ to your Visual Studio project.<br />
            Alternatively download the "Filipino.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FilipinoBest">
            <summary>
            Filipino  OCR language. Performs OCR, reading documents of the Filipino (National Language of the Philippines, Standardized Tagalog) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Filipino uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Filipino' from https://www.nuget.org/packages/IronOcr.Languages.Filipino/ to your Visual Studio project.<br />
            Alternatively download the "Filipino.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FilipinoFast">
            <summary>
            Filipino  OCR language. Performs OCR, reading documents of the Filipino (National Language of the Philippines, Standardized Tagalog) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Filipino uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Filipino' from https://www.nuget.org/packages/IronOcr.Languages.Filipino/ to your Visual Studio project.<br />
            Alternatively download the "Filipino.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Finnish">
            <summary>
            Finnish  OCR language. Performs OCR, reading documents of the Finnish (suomi, suomen kieli) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Finnish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Finnish' from https://www.nuget.org/packages/IronOcr.Languages.Finnish/ to your Visual Studio project.<br />
            Alternatively download the "Finnish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FinnishBest">
            <summary>
            Finnish  OCR language. Performs OCR, reading documents of the Finnish (suomi, suomen kieli) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Finnish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Finnish' from https://www.nuget.org/packages/IronOcr.Languages.Finnish/ to your Visual Studio project.<br />
            Alternatively download the "Finnish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FinnishFast">
            <summary>
            Finnish  OCR language. Performs OCR, reading documents of the Finnish (suomi, suomen kieli) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Finnish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Finnish' from https://www.nuget.org/packages/IronOcr.Languages.Finnish/ to your Visual Studio project.<br />
            Alternatively download the "Finnish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Financial">
            <summary>
            Financial  OCR language. Performs OCR, reading documents of the Financial (Financial, Numerical and Technical Documents) language with an understanding of spelling and linguistic context. 
            <para>This Financial OCR language pack  uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Financial' from https://www.nuget.org/packages/IronOcr.Languages.Financial/ to your Visual Studio project.<br />
            Alternatively download the "Financial.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.French">
            <summary>
            French  OCR language. Performs OCR, reading documents of the French (français, langue française) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of French uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.French' from https://www.nuget.org/packages/IronOcr.Languages.French/ to your Visual Studio project.<br />
            Alternatively download the "French.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrenchBest">
            <summary>
            French  OCR language. Performs OCR, reading documents of the French (français, langue française) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of French uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.French' from https://www.nuget.org/packages/IronOcr.Languages.French/ to your Visual Studio project.<br />
            Alternatively download the "French.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrenchFast">
            <summary>
            French  OCR language. Performs OCR, reading documents of the French (français, langue française) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of French uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.French' from https://www.nuget.org/packages/IronOcr.Languages.French/ to your Visual Studio project.<br />
            Alternatively download the "French.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrakturAlphabet">
            <summary>
            Fraktur Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Fraktur Alphabet (Generic Fraktur, Calligraphic hand of the Latin alphabet) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Fraktur Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Fraktur' from https://www.nuget.org/packages/IronOcr.Languages.Fraktur/ to your Visual Studio project.<br />
            Alternatively download the "Fraktur.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrakturAlphabetBest">
            <summary>
            Fraktur Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Fraktur Alphabet (Generic Fraktur, Calligraphic hand of the Latin alphabet) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Fraktur Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Fraktur' from https://www.nuget.org/packages/IronOcr.Languages.Fraktur/ to your Visual Studio project.<br />
            Alternatively download the "Fraktur.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrakturAlphabetFast">
            <summary>
            Fraktur Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Fraktur Alphabet (Generic Fraktur, Calligraphic hand of the Latin alphabet) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Fraktur Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Fraktur' from https://www.nuget.org/packages/IronOcr.Languages.Fraktur/ to your Visual Studio project.<br />
            Alternatively download the "Fraktur.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Frankish">
            <summary>
            Frankish  OCR language. Performs OCR, reading documents of the Frankish (Frenkisk, Old Franconian) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Frankish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Frankish' from https://www.nuget.org/packages/IronOcr.Languages.Frankish/ to your Visual Studio project.<br />
            Alternatively download the "Frankish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrankishBest">
            <summary>
            Frankish  OCR language. Performs OCR, reading documents of the Frankish (Frenkisk, Old Franconian) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Frankish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Frankish' from https://www.nuget.org/packages/IronOcr.Languages.Frankish/ to your Visual Studio project.<br />
            Alternatively download the "Frankish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.FrankishFast">
            <summary>
            Frankish  OCR language. Performs OCR, reading documents of the Frankish (Frenkisk, Old Franconian) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Frankish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Frankish' from https://www.nuget.org/packages/IronOcr.Languages.Frankish/ to your Visual Studio project.<br />
            Alternatively download the "Frankish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MiddleFrench">
            <summary>
            Middle French  OCR language. Performs OCR, reading documents of the Middle French [Moyen Français,Middle French (ca. 1400-1600 AD)] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Middle French uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MiddleFrench' from https://www.nuget.org/packages/IronOcr.Languages.MiddleFrench/ to your Visual Studio project.<br />
            Alternatively download the "MiddleFrench.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MiddleFrenchBest">
            <summary>
            Middle French  OCR language. Performs OCR, reading documents of the Middle French [Moyen Français,Middle French (ca. 1400-1600 AD)] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Middle French uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MiddleFrench' from https://www.nuget.org/packages/IronOcr.Languages.MiddleFrench/ to your Visual Studio project.<br />
            Alternatively download the "MiddleFrench.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MiddleFrenchFast">
            <summary>
            Middle French  OCR language. Performs OCR, reading documents of the Middle French [Moyen Français,Middle French (ca. 1400-1600 AD)] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Middle French uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MiddleFrench' from https://www.nuget.org/packages/IronOcr.Languages.MiddleFrench/ to your Visual Studio project.<br />
            Alternatively download the "MiddleFrench.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.WesternFrisian">
            <summary>
            Western Frisian  OCR language. Performs OCR, reading documents of the Western Frisian (Frysk) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Western Frisian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.WesternFrisian' from https://www.nuget.org/packages/IronOcr.Languages.WesternFrisian/ to your Visual Studio project.<br />
            Alternatively download the "WesternFrisian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.WesternFrisianBest">
            <summary>
            Western Frisian  OCR language. Performs OCR, reading documents of the Western Frisian (Frysk) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Western Frisian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.WesternFrisian' from https://www.nuget.org/packages/IronOcr.Languages.WesternFrisian/ to your Visual Studio project.<br />
            Alternatively download the "WesternFrisian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.WesternFrisianFast">
            <summary>
            Western Frisian  OCR language. Performs OCR, reading documents of the Western Frisian (Frysk) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Western Frisian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.WesternFrisian' from https://www.nuget.org/packages/IronOcr.Languages.WesternFrisian/ to your Visual Studio project.<br />
            Alternatively download the "WesternFrisian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianAlphabet">
            <summary>
            Georgian Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Georgian Alphabet (ქართული) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Georgian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianAlphabetBest">
            <summary>
            Georgian Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Georgian Alphabet (ქართული) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Georgian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianAlphabetFast">
            <summary>
            Georgian Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Georgian Alphabet (ქართული) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Georgian Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ScottishGaelic">
            <summary>
            Scottish Gaelic  OCR language. Performs OCR, reading documents of the Scottish Gaelic (Gàidhlig) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Scottish Gaelic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.ScottishGaelic' from https://www.nuget.org/packages/IronOcr.Languages.ScottishGaelic/ to your Visual Studio project.<br />
            Alternatively download the "ScottishGaelic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ScottishGaelicBest">
            <summary>
            Scottish Gaelic  OCR language. Performs OCR, reading documents of the Scottish Gaelic (Gàidhlig) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Scottish Gaelic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.ScottishGaelic' from https://www.nuget.org/packages/IronOcr.Languages.ScottishGaelic/ to your Visual Studio project.<br />
            Alternatively download the "ScottishGaelic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ScottishGaelicFast">
            <summary>
            Scottish Gaelic  OCR language. Performs OCR, reading documents of the Scottish Gaelic (Gàidhlig) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Scottish Gaelic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.ScottishGaelic' from https://www.nuget.org/packages/IronOcr.Languages.ScottishGaelic/ to your Visual Studio project.<br />
            Alternatively download the "ScottishGaelic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Irish">
            <summary>
            Irish  OCR language. Performs OCR, reading documents of the Irish (Gaeilge) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Irish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Irish' from https://www.nuget.org/packages/IronOcr.Languages.Irish/ to your Visual Studio project.<br />
            Alternatively download the "Irish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.IrishBest">
            <summary>
            Irish  OCR language. Performs OCR, reading documents of the Irish (Gaeilge) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Irish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Irish' from https://www.nuget.org/packages/IronOcr.Languages.Irish/ to your Visual Studio project.<br />
            Alternatively download the "Irish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.IrishFast">
            <summary>
            Irish  OCR language. Performs OCR, reading documents of the Irish (Gaeilge) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Irish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Irish' from https://www.nuget.org/packages/IronOcr.Languages.Irish/ to your Visual Studio project.<br />
            Alternatively download the "Irish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Galician">
            <summary>
            Galician  OCR language. Performs OCR, reading documents of the Galician (galego) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Galician uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Galician' from https://www.nuget.org/packages/IronOcr.Languages.Galician/ to your Visual Studio project.<br />
            Alternatively download the "Galician.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GalicianBest">
            <summary>
            Galician  OCR language. Performs OCR, reading documents of the Galician (galego) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Galician uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Galician' from https://www.nuget.org/packages/IronOcr.Languages.Galician/ to your Visual Studio project.<br />
            Alternatively download the "Galician.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GalicianFast">
            <summary>
            Galician  OCR language. Performs OCR, reading documents of the Galician (galego) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Galician uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Galician' from https://www.nuget.org/packages/IronOcr.Languages.Galician/ to your Visual Studio project.<br />
            Alternatively download the "Galician.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AncientGreek">
            <summary>
            Ancient Greek  OCR language. Performs OCR, reading documents of the Ancient Greek (Ἑλληνική) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Ancient Greek uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.AncientGreek' from https://www.nuget.org/packages/IronOcr.Languages.AncientGreek/ to your Visual Studio project.<br />
            Alternatively download the "AncientGreek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AncientGreekBest">
            <summary>
            Ancient Greek  OCR language. Performs OCR, reading documents of the Ancient Greek (Ἑλληνική) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Ancient Greek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.AncientGreek' from https://www.nuget.org/packages/IronOcr.Languages.AncientGreek/ to your Visual Studio project.<br />
            Alternatively download the "AncientGreek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AncientGreekFast">
            <summary>
            Ancient Greek  OCR language. Performs OCR, reading documents of the Ancient Greek (Ἑλληνική) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Ancient Greek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.AncientGreek' from https://www.nuget.org/packages/IronOcr.Languages.AncientGreek/ to your Visual Studio project.<br />
            Alternatively download the "AncientGreek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GreekAlphabet">
            <summary>
            Greek Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Greek Alphabet (ελληνικά) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Greek Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project.<br />
            Alternatively download the "Greek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GreekAlphabetBest">
            <summary>
            Greek Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Greek Alphabet (ελληνικά) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Greek Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project.<br />
            Alternatively download the "Greek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GreekAlphabetFast">
            <summary>
            Greek Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Greek Alphabet (ελληνικά) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Greek Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Greek' from https://www.nuget.org/packages/IronOcr.Languages.Greek/ to your Visual Studio project.<br />
            Alternatively download the "Greek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Gujarati">
            <summary>
            Gujarati  OCR language. Performs OCR, reading documents of the Gujarati (ગુજરાતી) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Gujarati uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project.<br />
            Alternatively download the "Gujarati.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GujaratiBest">
            <summary>
            Gujarati  OCR language. Performs OCR, reading documents of the Gujarati (ગુજરાતી) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Gujarati uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project.<br />
            Alternatively download the "Gujarati.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GujaratiFast">
            <summary>
            Gujarati  OCR language. Performs OCR, reading documents of the Gujarati (ગુજરાતી) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Gujarati uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project.<br />
            Alternatively download the "Gujarati.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GujaratiAlphabet">
            <summary>
            Gujarati Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Gujarati Alphabet (ગુજરાતી) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Gujarati Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project.<br />
            Alternatively download the "Gujarati.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GujaratiAlphabetBest">
            <summary>
            Gujarati Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Gujarati Alphabet (ગુજરાતી) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Gujarati Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project.<br />
            Alternatively download the "Gujarati.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GujaratiAlphabetFast">
            <summary>
            Gujarati Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Gujarati Alphabet (ગુજરાતી) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Gujarati Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gujarati' from https://www.nuget.org/packages/IronOcr.Languages.Gujarati/ to your Visual Studio project.<br />
            Alternatively download the "Gujarati.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GurmukhiAlphabet">
            <summary>
            Gurmukhi Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Gurmukhi Alphabet (Gurmukhī, ਗੁਰਮੁਖੀ, Shahmukhi, گُرمُکھی‎, Sihk Script) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Gurmukhi Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gurmukhi' from https://www.nuget.org/packages/IronOcr.Languages.Gurmukhi/ to your Visual Studio project.<br />
            Alternatively download the "Gurmukhi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GurmukhiAlphabetBest">
            <summary>
            Gurmukhi Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Gurmukhi Alphabet (Gurmukhī, ਗੁਰਮੁਖੀ, Shahmukhi, گُرمُکھی‎, Sihk Script) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Gurmukhi Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gurmukhi' from https://www.nuget.org/packages/IronOcr.Languages.Gurmukhi/ to your Visual Studio project.<br />
            Alternatively download the "Gurmukhi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GurmukhiAlphabetFast">
            <summary>
            Gurmukhi Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Gurmukhi Alphabet (Gurmukhī, ਗੁਰਮੁਖੀ, Shahmukhi, گُرمُکھی‎, Sihk Script) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Gurmukhi Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Gurmukhi' from https://www.nuget.org/packages/IronOcr.Languages.Gurmukhi/ to your Visual Studio project.<br />
            Alternatively download the "Gurmukhi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HangulAlphabet">
            <summary>
            Hangul Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hangul Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Hangul Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project.<br />
            Alternatively download the "Hangul.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HangulAlphabetBest">
            <summary>
            Hangul Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hangul Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Hangul Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project.<br />
            Alternatively download the "Hangul.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HangulAlphabetFast">
            <summary>
            Hangul Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hangul Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Hangul Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project.<br />
            Alternatively download the "Hangul.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HangulVerticalAlphabet">
            <summary>
            Hangul Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hangul Vertical Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Hangul Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project.<br />
            Alternatively download the "Hangul.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HangulVerticalAlphabetBest">
            <summary>
            Hangul Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hangul Vertical Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Hangul Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project.<br />
            Alternatively download the "Hangul.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HangulVerticalAlphabetFast">
            <summary>
            Hangul Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hangul Vertical Alphabet (Korean Alphabet,한글,Hangeul,조선글,hosŏn'gŭl) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Hangul Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hangul' from https://www.nuget.org/packages/IronOcr.Languages.Hangul/ to your Visual Studio project.<br />
            Alternatively download the "Hangul.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanSimplifiedAlphabet">
            <summary>
            Han Simplified Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Simplified Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Han Simplified Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanSimplifiedAlphabetBest">
            <summary>
            Han Simplified Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Simplified Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Han Simplified Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanSimplifiedAlphabetFast">
            <summary>
            Han Simplified Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Simplified Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Han Simplified Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanSimplifiedVerticalAlphabet">
            <summary>
            Han Simplified Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Simplified Vertical Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Han Simplified Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanSimplifiedVerticalAlphabetBest">
            <summary>
            Han Simplified Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Simplified Vertical Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Han Simplified Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanSimplifiedVerticalAlphabetFast">
            <summary>
            Han Simplified Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Simplified Vertical Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Han Simplified Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanTraditionalAlphabet">
            <summary>
            Han Traditional Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Traditional Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Han Traditional Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanTraditionalAlphabetBest">
            <summary>
            Han Traditional Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Traditional Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Han Traditional Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanTraditionalAlphabetFast">
            <summary>
            Han Traditional Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Traditional Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Han Traditional Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanTraditionalVerticalAlphabet">
            <summary>
            Han Traditional Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Traditional Vertical Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Han Traditional Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanTraditionalVerticalAlphabetBest">
            <summary>
            Han Traditional Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Traditional Vertical Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Han Traditional Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HanTraditionalVerticalAlphabetFast">
            <summary>
            Han Traditional Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Han Traditional Vertical Alphabet (Samhan ,한어, 韓語) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Han Traditional Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Han' from https://www.nuget.org/packages/IronOcr.Languages.Han/ to your Visual Studio project.<br />
            Alternatively download the "Han.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Haitian">
            <summary>
            Haitian  OCR language. Performs OCR, reading documents of the Haitian (Kreyòl ayisyen) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Haitian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Haitian' from https://www.nuget.org/packages/IronOcr.Languages.Haitian/ to your Visual Studio project.<br />
            Alternatively download the "Haitian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HaitianBest">
            <summary>
            Haitian  OCR language. Performs OCR, reading documents of the Haitian (Kreyòl ayisyen) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Haitian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Haitian' from https://www.nuget.org/packages/IronOcr.Languages.Haitian/ to your Visual Studio project.<br />
            Alternatively download the "Haitian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HaitianFast">
            <summary>
            Haitian  OCR language. Performs OCR, reading documents of the Haitian (Kreyòl ayisyen) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Haitian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Haitian' from https://www.nuget.org/packages/IronOcr.Languages.Haitian/ to your Visual Studio project.<br />
            Alternatively download the "Haitian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Hebrew">
            <summary>
            Hebrew  OCR language. Performs OCR, reading documents of the Hebrew (עברית) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Hebrew uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project.<br />
            Alternatively download the "Hebrew.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HebrewBest">
            <summary>
            Hebrew  OCR language. Performs OCR, reading documents of the Hebrew (עברית) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Hebrew uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project.<br />
            Alternatively download the "Hebrew.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HebrewFast">
            <summary>
            Hebrew  OCR language. Performs OCR, reading documents of the Hebrew (עברית) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Hebrew uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project.<br />
            Alternatively download the "Hebrew.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HebrewAlphabet">
            <summary>
            Hebrew Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hebrew Alphabet (עברית) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Hebrew Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project.<br />
            Alternatively download the "Hebrew.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HebrewAlphabetBest">
            <summary>
            Hebrew Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hebrew Alphabet (עברית) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Hebrew Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project.<br />
            Alternatively download the "Hebrew.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HebrewAlphabetFast">
            <summary>
            Hebrew Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Hebrew Alphabet (עברית) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Hebrew Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hebrew' from https://www.nuget.org/packages/IronOcr.Languages.Hebrew/ to your Visual Studio project.<br />
            Alternatively download the "Hebrew.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Hindi">
            <summary>
            Hindi  OCR language. Performs OCR, reading documents of the Hindi (हिन्दी, हिंदी) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Hindi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hindi' from https://www.nuget.org/packages/IronOcr.Languages.Hindi/ to your Visual Studio project.<br />
            Alternatively download the "Hindi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HindiBest">
            <summary>
            Hindi  OCR language. Performs OCR, reading documents of the Hindi (हिन्दी, हिंदी) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Hindi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hindi' from https://www.nuget.org/packages/IronOcr.Languages.Hindi/ to your Visual Studio project.<br />
            Alternatively download the "Hindi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HindiFast">
            <summary>
            Hindi  OCR language. Performs OCR, reading documents of the Hindi (हिन्दी, हिंदी) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Hindi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hindi' from https://www.nuget.org/packages/IronOcr.Languages.Hindi/ to your Visual Studio project.<br />
            Alternatively download the "Hindi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Croatian">
            <summary>
            Croatian  OCR language. Performs OCR, reading documents of the Croatian (hrvatski jezik) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Croatian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Croatian' from https://www.nuget.org/packages/IronOcr.Languages.Croatian/ to your Visual Studio project.<br />
            Alternatively download the "Croatian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CroatianBest">
            <summary>
            Croatian  OCR language. Performs OCR, reading documents of the Croatian (hrvatski jezik) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Croatian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Croatian' from https://www.nuget.org/packages/IronOcr.Languages.Croatian/ to your Visual Studio project.<br />
            Alternatively download the "Croatian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.CroatianFast">
            <summary>
            Croatian  OCR language. Performs OCR, reading documents of the Croatian (hrvatski jezik) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Croatian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Croatian' from https://www.nuget.org/packages/IronOcr.Languages.Croatian/ to your Visual Studio project.<br />
            Alternatively download the "Croatian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Hungarian">
            <summary>
            Hungarian  OCR language. Performs OCR, reading documents of the Hungarian (magyar) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Hungarian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hungarian' from https://www.nuget.org/packages/IronOcr.Languages.Hungarian/ to your Visual Studio project.<br />
            Alternatively download the "Hungarian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HungarianBest">
            <summary>
            Hungarian  OCR language. Performs OCR, reading documents of the Hungarian (magyar) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Hungarian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hungarian' from https://www.nuget.org/packages/IronOcr.Languages.Hungarian/ to your Visual Studio project.<br />
            Alternatively download the "Hungarian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.HungarianFast">
            <summary>
            Hungarian  OCR language. Performs OCR, reading documents of the Hungarian (magyar) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Hungarian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Hungarian' from https://www.nuget.org/packages/IronOcr.Languages.Hungarian/ to your Visual Studio project.<br />
            Alternatively download the "Hungarian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Armenian">
            <summary>
            Armenian  OCR language. Performs OCR, reading documents of the Armenian (Հայերեն) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Armenian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project.<br />
            Alternatively download the "Armenian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArmenianBest">
            <summary>
            Armenian  OCR language. Performs OCR, reading documents of the Armenian (Հայերեն) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Armenian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project.<br />
            Alternatively download the "Armenian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ArmenianFast">
            <summary>
            Armenian  OCR language. Performs OCR, reading documents of the Armenian (Հայերեն) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Armenian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Armenian' from https://www.nuget.org/packages/IronOcr.Languages.Armenian/ to your Visual Studio project.<br />
            Alternatively download the "Armenian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Inuktitut">
            <summary>
            Inuktitut  OCR language. Performs OCR, reading documents of the Inuktitut (ᐃᓄᒃᑎᑐᑦ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Inuktitut uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Inuktitut' from https://www.nuget.org/packages/IronOcr.Languages.Inuktitut/ to your Visual Studio project.<br />
            Alternatively download the "Inuktitut.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.InuktitutBest">
            <summary>
            Inuktitut  OCR language. Performs OCR, reading documents of the Inuktitut (ᐃᓄᒃᑎᑐᑦ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Inuktitut uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Inuktitut' from https://www.nuget.org/packages/IronOcr.Languages.Inuktitut/ to your Visual Studio project.<br />
            Alternatively download the "Inuktitut.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.InuktitutFast">
            <summary>
            Inuktitut  OCR language. Performs OCR, reading documents of the Inuktitut (ᐃᓄᒃᑎᑐᑦ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Inuktitut uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Inuktitut' from https://www.nuget.org/packages/IronOcr.Languages.Inuktitut/ to your Visual Studio project.<br />
            Alternatively download the "Inuktitut.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Indonesian">
            <summary>
            Indonesian  OCR language. Performs OCR, reading documents of the Indonesian (Bahasa Indonesia) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Indonesian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Indonesian' from https://www.nuget.org/packages/IronOcr.Languages.Indonesian/ to your Visual Studio project.<br />
            Alternatively download the "Indonesian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.IndonesianBest">
            <summary>
            Indonesian  OCR language. Performs OCR, reading documents of the Indonesian (Bahasa Indonesia) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Indonesian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Indonesian' from https://www.nuget.org/packages/IronOcr.Languages.Indonesian/ to your Visual Studio project.<br />
            Alternatively download the "Indonesian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.IndonesianFast">
            <summary>
            Indonesian  OCR language. Performs OCR, reading documents of the Indonesian (Bahasa Indonesia) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Indonesian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Indonesian' from https://www.nuget.org/packages/IronOcr.Languages.Indonesian/ to your Visual Studio project.<br />
            Alternatively download the "Indonesian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Icelandic">
            <summary>
            Icelandic  OCR language. Performs OCR, reading documents of the Icelandic (Íslenska) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Icelandic uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Icelandic' from https://www.nuget.org/packages/IronOcr.Languages.Icelandic/ to your Visual Studio project.<br />
            Alternatively download the "Icelandic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.IcelandicBest">
            <summary>
            Icelandic  OCR language. Performs OCR, reading documents of the Icelandic (Íslenska) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Icelandic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Icelandic' from https://www.nuget.org/packages/IronOcr.Languages.Icelandic/ to your Visual Studio project.<br />
            Alternatively download the "Icelandic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.IcelandicFast">
            <summary>
            Icelandic  OCR language. Performs OCR, reading documents of the Icelandic (Íslenska) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Icelandic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Icelandic' from https://www.nuget.org/packages/IronOcr.Languages.Icelandic/ to your Visual Studio project.<br />
            Alternatively download the "Icelandic.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Italian">
            <summary>
            Italian  OCR language. Performs OCR, reading documents of the Italian (italiano) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Italian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project.<br />
            Alternatively download the "Italian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ItalianBest">
            <summary>
            Italian  OCR language. Performs OCR, reading documents of the Italian (italiano) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Italian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project.<br />
            Alternatively download the "Italian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ItalianFast">
            <summary>
            Italian  OCR language. Performs OCR, reading documents of the Italian (italiano) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Italian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project.<br />
            Alternatively download the "Italian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ItalianOld">
            <summary>
            Italian Old  OCR language. Performs OCR, reading documents of the Italian Old (italiano) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Italian Old uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project.<br />
            Alternatively download the "Italian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ItalianOldBest">
            <summary>
            Italian Old  OCR language. Performs OCR, reading documents of the Italian Old (italiano) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Italian Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project.<br />
            Alternatively download the "Italian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ItalianOldFast">
            <summary>
            Italian Old  OCR language. Performs OCR, reading documents of the Italian Old (italiano) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Italian Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Italian' from https://www.nuget.org/packages/IronOcr.Languages.Italian/ to your Visual Studio project.<br />
            Alternatively download the "Italian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseAlphabet">
            <summary>
            Japanese Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Japanese Alphabet [日本語 (にほんご)] languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Japanese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseAlphabetBest">
            <summary>
            Japanese Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Japanese Alphabet [日本語 (にほんご)] languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Japanese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseAlphabetFast">
            <summary>
            Japanese Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Japanese Alphabet [日本語 (にほんご)] languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Japanese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseVerticalAlphabet">
            <summary>
            Japanese Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Japanese Vertical Alphabet [日本語 (にほんご)] languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Japanese Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseVerticalAlphabetBest">
            <summary>
            Japanese Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Japanese Vertical Alphabet [日本語 (にほんご)] languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Japanese Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseVerticalAlphabetFast">
            <summary>
            Japanese Vertical Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Japanese Vertical Alphabet [日本語 (にほんご)] languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Japanese Vertical Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Javanese">
            <summary>
            Javanese  OCR language. Performs OCR, reading documents of the Javanese (basa Jawa) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Javanese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Javanese' from https://www.nuget.org/packages/IronOcr.Languages.Javanese/ to your Visual Studio project.<br />
            Alternatively download the "Javanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JavaneseBest">
            <summary>
            Javanese  OCR language. Performs OCR, reading documents of the Javanese (basa Jawa) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Javanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Javanese' from https://www.nuget.org/packages/IronOcr.Languages.Javanese/ to your Visual Studio project.<br />
            Alternatively download the "Javanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JavaneseFast">
            <summary>
            Javanese  OCR language. Performs OCR, reading documents of the Javanese (basa Jawa) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Javanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Javanese' from https://www.nuget.org/packages/IronOcr.Languages.Javanese/ to your Visual Studio project.<br />
            Alternatively download the "Javanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Japanese">
            <summary>
            Japanese  OCR language. Performs OCR, reading documents of the Japanese [日本語 (にほんご)] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Japanese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseBest">
            <summary>
            Japanese  OCR language. Performs OCR, reading documents of the Japanese [日本語 (にほんご)] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Japanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseFast">
            <summary>
            Japanese  OCR language. Performs OCR, reading documents of the Japanese [日本語 (にほんご)] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Japanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseVertical">
            <summary>
            Japanese Vertical  OCR language. Performs OCR, reading documents of the Japanese Vertical [日本語 (にほんご)] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Japanese Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseVerticalBest">
            <summary>
            Japanese Vertical  OCR language. Performs OCR, reading documents of the Japanese Vertical [日本語 (にほんご)] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Japanese Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.JapaneseVerticalFast">
            <summary>
            Japanese Vertical  OCR language. Performs OCR, reading documents of the Japanese Vertical [日本語 (にほんご)] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Japanese Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Japanese' from https://www.nuget.org/packages/IronOcr.Languages.Japanese/ to your Visual Studio project.<br />
            Alternatively download the "Japanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Kannada">
            <summary>
            Kannada  OCR language. Performs OCR, reading documents of the Kannada (ಕನ್ನಡ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Kannada uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project.<br />
            Alternatively download the "Kannada.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KannadaBest">
            <summary>
            Kannada  OCR language. Performs OCR, reading documents of the Kannada (ಕನ್ನಡ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Kannada uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project.<br />
            Alternatively download the "Kannada.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KannadaFast">
            <summary>
            Kannada  OCR language. Performs OCR, reading documents of the Kannada (ಕನ್ನಡ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Kannada uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project.<br />
            Alternatively download the "Kannada.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KannadaAlphabet">
            <summary>
            Kannada Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Kannada Alphabet (ಕನ್ನಡ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Kannada Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project.<br />
            Alternatively download the "Kannada.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KannadaAlphabetBest">
            <summary>
            Kannada Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Kannada Alphabet (ಕನ್ನಡ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Kannada Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project.<br />
            Alternatively download the "Kannada.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KannadaAlphabetFast">
            <summary>
            Kannada Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Kannada Alphabet (ಕನ್ನಡ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Kannada Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kannada' from https://www.nuget.org/packages/IronOcr.Languages.Kannada/ to your Visual Studio project.<br />
            Alternatively download the "Kannada.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Georgian">
            <summary>
            Georgian  OCR language. Performs OCR, reading documents of the Georgian (ქართული) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Georgian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianBest">
            <summary>
            Georgian  OCR language. Performs OCR, reading documents of the Georgian (ქართული) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Georgian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianFast">
            <summary>
            Georgian  OCR language. Performs OCR, reading documents of the Georgian (ქართული) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Georgian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianOld">
            <summary>
            Georgian Old  OCR language. Performs OCR, reading documents of the Georgian Old (ქართული) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Georgian Old uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianOldBest">
            <summary>
            Georgian Old  OCR language. Performs OCR, reading documents of the Georgian Old (ქართული) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Georgian Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.GeorgianOldFast">
            <summary>
            Georgian Old  OCR language. Performs OCR, reading documents of the Georgian Old (ქართული) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Georgian Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Georgian' from https://www.nuget.org/packages/IronOcr.Languages.Georgian/ to your Visual Studio project.<br />
            Alternatively download the "Georgian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Kazakh">
            <summary>
            Kazakh  OCR language. Performs OCR, reading documents of the Kazakh (қазақ тілі) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Kazakh uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kazakh' from https://www.nuget.org/packages/IronOcr.Languages.Kazakh/ to your Visual Studio project.<br />
            Alternatively download the "Kazakh.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KazakhBest">
            <summary>
            Kazakh  OCR language. Performs OCR, reading documents of the Kazakh (қазақ тілі) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Kazakh uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kazakh' from https://www.nuget.org/packages/IronOcr.Languages.Kazakh/ to your Visual Studio project.<br />
            Alternatively download the "Kazakh.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KazakhFast">
            <summary>
            Kazakh  OCR language. Performs OCR, reading documents of the Kazakh (қазақ тілі) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Kazakh uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kazakh' from https://www.nuget.org/packages/IronOcr.Languages.Kazakh/ to your Visual Studio project.<br />
            Alternatively download the "Kazakh.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Khmer">
            <summary>
            Khmer  OCR language. Performs OCR, reading documents of the Khmer (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Khmer uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project.<br />
            Alternatively download the "Khmer.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KhmerBest">
            <summary>
            Khmer  OCR language. Performs OCR, reading documents of the Khmer (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Khmer uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project.<br />
            Alternatively download the "Khmer.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KhmerFast">
            <summary>
            Khmer  OCR language. Performs OCR, reading documents of the Khmer (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Khmer uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project.<br />
            Alternatively download the "Khmer.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KhmerAlphabet">
            <summary>
            Khmer Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Khmer Alphabet (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Khmer Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project.<br />
            Alternatively download the "Khmer.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KhmerAlphabetBest">
            <summary>
            Khmer Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Khmer Alphabet (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Khmer Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project.<br />
            Alternatively download the "Khmer.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KhmerAlphabetFast">
            <summary>
            Khmer Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Khmer Alphabet (ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Khmer Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Khmer' from https://www.nuget.org/packages/IronOcr.Languages.Khmer/ to your Visual Studio project.<br />
            Alternatively download the "Khmer.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Kyrgyz">
            <summary>
            Kyrgyz  OCR language. Performs OCR, reading documents of the Kyrgyz (Кыргызча, Кыргыз тили) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Kyrgyz uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kyrgyz' from https://www.nuget.org/packages/IronOcr.Languages.Kyrgyz/ to your Visual Studio project.<br />
            Alternatively download the "Kyrgyz.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KyrgyzBest">
            <summary>
            Kyrgyz  OCR language. Performs OCR, reading documents of the Kyrgyz (Кыргызча, Кыргыз тили) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Kyrgyz uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kyrgyz' from https://www.nuget.org/packages/IronOcr.Languages.Kyrgyz/ to your Visual Studio project.<br />
            Alternatively download the "Kyrgyz.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KyrgyzFast">
            <summary>
            Kyrgyz  OCR language. Performs OCR, reading documents of the Kyrgyz (Кыргызча, Кыргыз тили) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Kyrgyz uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Kyrgyz' from https://www.nuget.org/packages/IronOcr.Languages.Kyrgyz/ to your Visual Studio project.<br />
            Alternatively download the "Kyrgyz.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NorthernKurdish">
            <summary>
            Northern Kurdish  OCR language. Performs OCR, reading documents of the Northern Kurdish (Kurmanji, کورمانجی ,Kurmancî‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Northern Kurdish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.NorthernKurdish' from https://www.nuget.org/packages/IronOcr.Languages.NorthernKurdish/ to your Visual Studio project.<br />
            Alternatively download the "NorthernKurdish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NorthernKurdishBest">
            <summary>
            Northern Kurdish  OCR language. Performs OCR, reading documents of the Northern Kurdish (Kurmanji, کورمانجی ,Kurmancî‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Northern Kurdish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.NorthernKurdish' from https://www.nuget.org/packages/IronOcr.Languages.NorthernKurdish/ to your Visual Studio project.<br />
            Alternatively download the "NorthernKurdish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NorthernKurdishFast">
            <summary>
            Northern Kurdish  OCR language. Performs OCR, reading documents of the Northern Kurdish (Kurmanji, کورمانجی ,Kurmancî‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Northern Kurdish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.NorthernKurdish' from https://www.nuget.org/packages/IronOcr.Languages.NorthernKurdish/ to your Visual Studio project.<br />
            Alternatively download the "NorthernKurdish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Korean">
            <summary>
            Korean  OCR language. Performs OCR, reading documents of the Korean [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Korean uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project.<br />
            Alternatively download the "Korean.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KoreanBest">
            <summary>
            Korean  OCR language. Performs OCR, reading documents of the Korean [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Korean uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project.<br />
            Alternatively download the "Korean.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KoreanFast">
            <summary>
            Korean  OCR language. Performs OCR, reading documents of the Korean [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Korean uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project.<br />
            Alternatively download the "Korean.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KoreanVertical">
            <summary>
            Korean Vertical  OCR language. Performs OCR, reading documents of the Korean Vertical [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Korean Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project.<br />
            Alternatively download the "Korean.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KoreanVerticalBest">
            <summary>
            Korean Vertical  OCR language. Performs OCR, reading documents of the Korean Vertical [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Korean Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project.<br />
            Alternatively download the "Korean.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.KoreanVerticalFast">
            <summary>
            Korean Vertical  OCR language. Performs OCR, reading documents of the Korean Vertical [한국어 (韓國語), 조선어 (朝鮮語)] language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Korean Vertical uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Korean' from https://www.nuget.org/packages/IronOcr.Languages.Korean/ to your Visual Studio project.<br />
            Alternatively download the "Korean.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Lao">
            <summary>
            Lao  OCR language. Performs OCR, reading documents of the Lao (ພາສາລາວ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Lao uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project.<br />
            Alternatively download the "Lao.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LaoBest">
            <summary>
            Lao  OCR language. Performs OCR, reading documents of the Lao (ພາສາລາວ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Lao uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project.<br />
            Alternatively download the "Lao.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LaoFast">
            <summary>
            Lao  OCR language. Performs OCR, reading documents of the Lao (ພາສາລາວ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Lao uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project.<br />
            Alternatively download the "Lao.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LaoAlphabet">
            <summary>
            Lao Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Lao Alphabet (ພາສາລາວ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Lao Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project.<br />
            Alternatively download the "Lao.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LaoAlphabetBest">
            <summary>
            Lao Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Lao Alphabet (ພາສາລາວ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Lao Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project.<br />
            Alternatively download the "Lao.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LaoAlphabetFast">
            <summary>
            Lao Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Lao Alphabet (ພາສາລາວ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Lao Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lao' from https://www.nuget.org/packages/IronOcr.Languages.Lao/ to your Visual Studio project.<br />
            Alternatively download the "Lao.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Latin">
            <summary>
            Latin  OCR language. Performs OCR, reading documents of the Latin (latine, lingua latina) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Latin uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Latin' from https://www.nuget.org/packages/IronOcr.Languages.Latin/ to your Visual Studio project.<br />
            Alternatively download the "Latin.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatinBest">
            <summary>
            Latin  OCR language. Performs OCR, reading documents of the Latin (latine, lingua latina) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Latin uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Latin' from https://www.nuget.org/packages/IronOcr.Languages.Latin/ to your Visual Studio project.<br />
            Alternatively download the "Latin.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatinFast">
            <summary>
            Latin  OCR language. Performs OCR, reading documents of the Latin (latine, lingua latina) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Latin uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Latin' from https://www.nuget.org/packages/IronOcr.Languages.Latin/ to your Visual Studio project.<br />
            Alternatively download the "Latin.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatinAlphabet">
            <summary>
            Latin Alphabetic Script  OCR dictionary. Reads the letters of the Latin / Romain / 'English' alphabet as is commonly used in English and other European languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Latin Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.LatinAlphabet' from https://www.nuget.org/packages/IronOcr.Languages.LatinAlphabet/ to your Visual Studio project.<br />
            Alternatively download the "LatinAlphabet.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatinAlphabetBest">
            <summary>
            Latin Alphabetic Script  OCR dictionary. Reads the letters of the Latin / Romain / 'English' alphabet as is commonly used in English and other European languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Latin Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.LatinAlphabet' from https://www.nuget.org/packages/IronOcr.Languages.LatinAlphabet/ to your Visual Studio project.<br />
            Alternatively download the "LatinAlphabet.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatinAlphabetFast">
            <summary>
            Latin Alphabetic Script  OCR dictionary. Reads the letters of the Latin / Romain / 'English' alphabet as is commonly used in English and other European languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Latin Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.LatinAlphabet' from https://www.nuget.org/packages/IronOcr.Languages.LatinAlphabet/ to your Visual Studio project.<br />
            Alternatively download the "LatinAlphabet.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Latvian">
            <summary>
            Latvian  OCR language. Performs OCR, reading documents of the Latvian (latviešu valoda) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Latvian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Latvian' from https://www.nuget.org/packages/IronOcr.Languages.Latvian/ to your Visual Studio project.<br />
            Alternatively download the "Latvian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatvianBest">
            <summary>
            Latvian  OCR language. Performs OCR, reading documents of the Latvian (latviešu valoda) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Latvian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Latvian' from https://www.nuget.org/packages/IronOcr.Languages.Latvian/ to your Visual Studio project.<br />
            Alternatively download the "Latvian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LatvianFast">
            <summary>
            Latvian  OCR language. Performs OCR, reading documents of the Latvian (latviešu valoda) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Latvian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Latvian' from https://www.nuget.org/packages/IronOcr.Languages.Latvian/ to your Visual Studio project.<br />
            Alternatively download the "Latvian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Lithuanian">
            <summary>
            Lithuanian  OCR language. Performs OCR, reading documents of the Lithuanian (lietuvių kalba) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Lithuanian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lithuanian' from https://www.nuget.org/packages/IronOcr.Languages.Lithuanian/ to your Visual Studio project.<br />
            Alternatively download the "Lithuanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LithuanianBest">
            <summary>
            Lithuanian  OCR language. Performs OCR, reading documents of the Lithuanian (lietuvių kalba) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Lithuanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lithuanian' from https://www.nuget.org/packages/IronOcr.Languages.Lithuanian/ to your Visual Studio project.<br />
            Alternatively download the "Lithuanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LithuanianFast">
            <summary>
            Lithuanian  OCR language. Performs OCR, reading documents of the Lithuanian (lietuvių kalba) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Lithuanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Lithuanian' from https://www.nuget.org/packages/IronOcr.Languages.Lithuanian/ to your Visual Studio project.<br />
            Alternatively download the "Lithuanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Luxembourgish">
            <summary>
            Luxembourgish  OCR language. Performs OCR, reading documents of the Luxembourgish (Lëtzebuergesch) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Luxembourgish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Luxembourgish' from https://www.nuget.org/packages/IronOcr.Languages.Luxembourgish/ to your Visual Studio project.<br />
            Alternatively download the "Luxembourgish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LuxembourgishBest">
            <summary>
            Luxembourgish  OCR language. Performs OCR, reading documents of the Luxembourgish (Lëtzebuergesch) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Luxembourgish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Luxembourgish' from https://www.nuget.org/packages/IronOcr.Languages.Luxembourgish/ to your Visual Studio project.<br />
            Alternatively download the "Luxembourgish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.LuxembourgishFast">
            <summary>
            Luxembourgish  OCR language. Performs OCR, reading documents of the Luxembourgish (Lëtzebuergesch) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Luxembourgish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Luxembourgish' from https://www.nuget.org/packages/IronOcr.Languages.Luxembourgish/ to your Visual Studio project.<br />
            Alternatively download the "Luxembourgish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Malayalam">
            <summary>
            Malayalam  OCR language. Performs OCR, reading documents of the Malayalam (മലയാളം) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Malayalam uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project.<br />
            Alternatively download the "Malayalam.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayalamBest">
            <summary>
            Malayalam  OCR language. Performs OCR, reading documents of the Malayalam (മലയാളം) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Malayalam uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project.<br />
            Alternatively download the "Malayalam.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayalamFast">
            <summary>
            Malayalam  OCR language. Performs OCR, reading documents of the Malayalam (മലയാളം) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Malayalam uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project.<br />
            Alternatively download the "Malayalam.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayalamAlphabet">
            <summary>
            Malayalam Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Malayalam Alphabet (മലയാളം) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Malayalam Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project.<br />
            Alternatively download the "Malayalam.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayalamAlphabetBest">
            <summary>
            Malayalam Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Malayalam Alphabet (മലയാളം) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Malayalam Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project.<br />
            Alternatively download the "Malayalam.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayalamAlphabetFast">
            <summary>
            Malayalam Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Malayalam Alphabet (മലയാളം) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Malayalam Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malayalam' from https://www.nuget.org/packages/IronOcr.Languages.Malayalam/ to your Visual Studio project.<br />
            Alternatively download the "Malayalam.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Marathi">
            <summary>
            Marathi  OCR language. Performs OCR, reading documents of the Marathi (मराठी) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Marathi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Marathi' from https://www.nuget.org/packages/IronOcr.Languages.Marathi/ to your Visual Studio project.<br />
            Alternatively download the "Marathi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MarathiBest">
            <summary>
            Marathi  OCR language. Performs OCR, reading documents of the Marathi (मराठी) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Marathi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Marathi' from https://www.nuget.org/packages/IronOcr.Languages.Marathi/ to your Visual Studio project.<br />
            Alternatively download the "Marathi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MarathiFast">
            <summary>
            Marathi  OCR language. Performs OCR, reading documents of the Marathi (मराठी) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Marathi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Marathi' from https://www.nuget.org/packages/IronOcr.Languages.Marathi/ to your Visual Studio project.<br />
            Alternatively download the "Marathi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MICR">
            <summary>
            MICR  OCR language. Performs OCR, reading documents of the MICR (Magnetic Ink Character Recognition, MICR Cheque Encoding) language with an understanding of spelling and linguistic context. 
            <para>This MICR OCR language pack  uses only an OEM (shape recognition evolved from Tesseract 3) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.MICR' from https://www.nuget.org/packages/IronOcr.Languages.MICR/ to your Visual Studio project.<br />
            Alternatively download the "MICR.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Macedonian">
            <summary>
            Macedonian  OCR language. Performs OCR, reading documents of the Macedonian (македонски јазик) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Macedonian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Macedonian' from https://www.nuget.org/packages/IronOcr.Languages.Macedonian/ to your Visual Studio project.<br />
            Alternatively download the "Macedonian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MacedonianBest">
            <summary>
            Macedonian  OCR language. Performs OCR, reading documents of the Macedonian (македонски јазик) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Macedonian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Macedonian' from https://www.nuget.org/packages/IronOcr.Languages.Macedonian/ to your Visual Studio project.<br />
            Alternatively download the "Macedonian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MacedonianFast">
            <summary>
            Macedonian  OCR language. Performs OCR, reading documents of the Macedonian (македонски јазик) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Macedonian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Macedonian' from https://www.nuget.org/packages/IronOcr.Languages.Macedonian/ to your Visual Studio project.<br />
            Alternatively download the "Macedonian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Maltese">
            <summary>
            Maltese  OCR language. Performs OCR, reading documents of the Maltese (Malti) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Maltese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Maltese' from https://www.nuget.org/packages/IronOcr.Languages.Maltese/ to your Visual Studio project.<br />
            Alternatively download the "Maltese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalteseBest">
            <summary>
            Maltese  OCR language. Performs OCR, reading documents of the Maltese (Malti) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Maltese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Maltese' from https://www.nuget.org/packages/IronOcr.Languages.Maltese/ to your Visual Studio project.<br />
            Alternatively download the "Maltese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalteseFast">
            <summary>
            Maltese  OCR language. Performs OCR, reading documents of the Maltese (Malti) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Maltese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Maltese' from https://www.nuget.org/packages/IronOcr.Languages.Maltese/ to your Visual Studio project.<br />
            Alternatively download the "Maltese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Mongolian">
            <summary>
            Mongolian  OCR language. Performs OCR, reading documents of the Mongolian (монгол) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Mongolian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Mongolian' from https://www.nuget.org/packages/IronOcr.Languages.Mongolian/ to your Visual Studio project.<br />
            Alternatively download the "Mongolian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MongolianBest">
            <summary>
            Mongolian  OCR language. Performs OCR, reading documents of the Mongolian (монгол) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Mongolian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Mongolian' from https://www.nuget.org/packages/IronOcr.Languages.Mongolian/ to your Visual Studio project.<br />
            Alternatively download the "Mongolian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MongolianFast">
            <summary>
            Mongolian  OCR language. Performs OCR, reading documents of the Mongolian (монгол) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Mongolian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Mongolian' from https://www.nuget.org/packages/IronOcr.Languages.Mongolian/ to your Visual Studio project.<br />
            Alternatively download the "Mongolian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Maori">
            <summary>
            Maori  OCR language. Performs OCR, reading documents of the Maori (te reo Māori) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Maori uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Maori' from https://www.nuget.org/packages/IronOcr.Languages.Maori/ to your Visual Studio project.<br />
            Alternatively download the "Maori.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MaoriBest">
            <summary>
            Maori  OCR language. Performs OCR, reading documents of the Maori (te reo Māori) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Maori uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Maori' from https://www.nuget.org/packages/IronOcr.Languages.Maori/ to your Visual Studio project.<br />
            Alternatively download the "Maori.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MaoriFast">
            <summary>
            Maori  OCR language. Performs OCR, reading documents of the Maori (te reo Māori) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Maori uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Maori' from https://www.nuget.org/packages/IronOcr.Languages.Maori/ to your Visual Studio project.<br />
            Alternatively download the "Maori.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Malay">
            <summary>
            Malay  OCR language. Performs OCR, reading documents of the Malay (bahasa Melayu, بهاس ملايو‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Malay uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malay' from https://www.nuget.org/packages/IronOcr.Languages.Malay/ to your Visual Studio project.<br />
            Alternatively download the "Malay.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayBest">
            <summary>
            Malay  OCR language. Performs OCR, reading documents of the Malay (bahasa Melayu, بهاس ملايو‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Malay uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malay' from https://www.nuget.org/packages/IronOcr.Languages.Malay/ to your Visual Studio project.<br />
            Alternatively download the "Malay.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MalayFast">
            <summary>
            Malay  OCR language. Performs OCR, reading documents of the Malay (bahasa Melayu, بهاس ملايو‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Malay uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Malay' from https://www.nuget.org/packages/IronOcr.Languages.Malay/ to your Visual Studio project.<br />
            Alternatively download the "Malay.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Myanmar">
            <summary>
            Myanmar  OCR language. Performs OCR, reading documents of the Myanmar (Burmese ,ဗမာစာ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Myanmar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project.<br />
            Alternatively download the "Myanmar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MyanmarBest">
            <summary>
            Myanmar  OCR language. Performs OCR, reading documents of the Myanmar (Burmese ,ဗမာစာ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Myanmar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project.<br />
            Alternatively download the "Myanmar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MyanmarFast">
            <summary>
            Myanmar  OCR language. Performs OCR, reading documents of the Myanmar (Burmese ,ဗမာစာ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Myanmar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project.<br />
            Alternatively download the "Myanmar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MyanmarAlphabet">
            <summary>
            Myanmar Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Myanmar Alphabet (Burmese ,ဗမာစာ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Myanmar Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project.<br />
            Alternatively download the "Myanmar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MyanmarAlphabetBest">
            <summary>
            Myanmar Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Myanmar Alphabet (Burmese ,ဗမာစာ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Myanmar Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project.<br />
            Alternatively download the "Myanmar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.MyanmarAlphabetFast">
            <summary>
            Myanmar Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Myanmar Alphabet (Burmese ,ဗမာစာ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Myanmar Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Myanmar' from https://www.nuget.org/packages/IronOcr.Languages.Myanmar/ to your Visual Studio project.<br />
            Alternatively download the "Myanmar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Nepali">
            <summary>
            Nepali  OCR language. Performs OCR, reading documents of the Nepali (नेपाली) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Nepali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Nepali' from https://www.nuget.org/packages/IronOcr.Languages.Nepali/ to your Visual Studio project.<br />
            Alternatively download the "Nepali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NepaliBest">
            <summary>
            Nepali  OCR language. Performs OCR, reading documents of the Nepali (नेपाली) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Nepali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Nepali' from https://www.nuget.org/packages/IronOcr.Languages.Nepali/ to your Visual Studio project.<br />
            Alternatively download the "Nepali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NepaliFast">
            <summary>
            Nepali  OCR language. Performs OCR, reading documents of the Nepali (नेपाली) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Nepali uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Nepali' from https://www.nuget.org/packages/IronOcr.Languages.Nepali/ to your Visual Studio project.<br />
            Alternatively download the "Nepali.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Dutch">
            <summary>
            Dutch  OCR language. Performs OCR, reading documents of the Dutch (Nederlands, Vlaams) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Dutch uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Dutch' from https://www.nuget.org/packages/IronOcr.Languages.Dutch/ to your Visual Studio project.<br />
            Alternatively download the "Dutch.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DutchBest">
            <summary>
            Dutch  OCR language. Performs OCR, reading documents of the Dutch (Nederlands, Vlaams) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Dutch uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Dutch' from https://www.nuget.org/packages/IronOcr.Languages.Dutch/ to your Visual Studio project.<br />
            Alternatively download the "Dutch.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.DutchFast">
            <summary>
            Dutch  OCR language. Performs OCR, reading documents of the Dutch (Nederlands, Vlaams) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Dutch uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Dutch' from https://www.nuget.org/packages/IronOcr.Languages.Dutch/ to your Visual Studio project.<br />
            Alternatively download the "Dutch.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Norwegian">
            <summary>
            Norwegian  OCR language. Performs OCR, reading documents of the Norwegian (Norsk) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Norwegian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Norwegian' from https://www.nuget.org/packages/IronOcr.Languages.Norwegian/ to your Visual Studio project.<br />
            Alternatively download the "Norwegian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NorwegianBest">
            <summary>
            Norwegian  OCR language. Performs OCR, reading documents of the Norwegian (Norsk) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Norwegian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Norwegian' from https://www.nuget.org/packages/IronOcr.Languages.Norwegian/ to your Visual Studio project.<br />
            Alternatively download the "Norwegian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.NorwegianFast">
            <summary>
            Norwegian  OCR language. Performs OCR, reading documents of the Norwegian (Norsk) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Norwegian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Norwegian' from https://www.nuget.org/packages/IronOcr.Languages.Norwegian/ to your Visual Studio project.<br />
            Alternatively download the "Norwegian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Occitan">
            <summary>
            Occitan  OCR language. Performs OCR, reading documents of the Occitan (occitan, lenga d'òc) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Occitan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Occitan' from https://www.nuget.org/packages/IronOcr.Languages.Occitan/ to your Visual Studio project.<br />
            Alternatively download the "Occitan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OccitanBest">
            <summary>
            Occitan  OCR language. Performs OCR, reading documents of the Occitan (occitan, lenga d'òc) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Occitan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Occitan' from https://www.nuget.org/packages/IronOcr.Languages.Occitan/ to your Visual Studio project.<br />
            Alternatively download the "Occitan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OccitanFast">
            <summary>
            Occitan  OCR language. Performs OCR, reading documents of the Occitan (occitan, lenga d'òc) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Occitan uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Occitan' from https://www.nuget.org/packages/IronOcr.Languages.Occitan/ to your Visual Studio project.<br />
            Alternatively download the "Occitan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Oriya">
            <summary>
            Oriya  OCR language. Performs OCR, reading documents of the Oriya (ଓଡ଼ିଆ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Oriya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project.<br />
            Alternatively download the "Oriya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OriyaBest">
            <summary>
            Oriya  OCR language. Performs OCR, reading documents of the Oriya (ଓଡ଼ିଆ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Oriya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project.<br />
            Alternatively download the "Oriya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OriyaFast">
            <summary>
            Oriya  OCR language. Performs OCR, reading documents of the Oriya (ଓଡ଼ିଆ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Oriya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project.<br />
            Alternatively download the "Oriya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OriyaAlphabet">
            <summary>
            Oriya Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Oriya Alphabet (ଓଡ଼ିଆ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Oriya Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project.<br />
            Alternatively download the "Oriya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OriyaAlphabetBest">
            <summary>
            Oriya Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Oriya Alphabet (ଓଡ଼ିଆ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Oriya Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project.<br />
            Alternatively download the "Oriya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.OriyaAlphabetFast">
            <summary>
            Oriya Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Oriya Alphabet (ଓଡ଼ିଆ) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Oriya Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Oriya' from https://www.nuget.org/packages/IronOcr.Languages.Oriya/ to your Visual Studio project.<br />
            Alternatively download the "Oriya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Panjabi">
            <summary>
            Panjabi  OCR language. Performs OCR, reading documents of the Panjabi (ਪੰਜਾਬੀ, پنجابی‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Panjabi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Panjabi' from https://www.nuget.org/packages/IronOcr.Languages.Panjabi/ to your Visual Studio project.<br />
            Alternatively download the "Panjabi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PanjabiBest">
            <summary>
            Panjabi  OCR language. Performs OCR, reading documents of the Panjabi (ਪੰਜਾਬੀ, پنجابی‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Panjabi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Panjabi' from https://www.nuget.org/packages/IronOcr.Languages.Panjabi/ to your Visual Studio project.<br />
            Alternatively download the "Panjabi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PanjabiFast">
            <summary>
            Panjabi  OCR language. Performs OCR, reading documents of the Panjabi (ਪੰਜਾਬੀ, پنجابی‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Panjabi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Panjabi' from https://www.nuget.org/packages/IronOcr.Languages.Panjabi/ to your Visual Studio project.<br />
            Alternatively download the "Panjabi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Polish">
            <summary>
            Polish  OCR language. Performs OCR, reading documents of the Polish (język polski, polszczyzna) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Polish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Polish' from https://www.nuget.org/packages/IronOcr.Languages.Polish/ to your Visual Studio project.<br />
            Alternatively download the "Polish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PolishBest">
            <summary>
            Polish  OCR language. Performs OCR, reading documents of the Polish (język polski, polszczyzna) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Polish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Polish' from https://www.nuget.org/packages/IronOcr.Languages.Polish/ to your Visual Studio project.<br />
            Alternatively download the "Polish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PolishFast">
            <summary>
            Polish  OCR language. Performs OCR, reading documents of the Polish (język polski, polszczyzna) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Polish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Polish' from https://www.nuget.org/packages/IronOcr.Languages.Polish/ to your Visual Studio project.<br />
            Alternatively download the "Polish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Portuguese">
            <summary>
            Portuguese  OCR language. Performs OCR, reading documents of the Portuguese (português) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Portuguese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Portuguese' from https://www.nuget.org/packages/IronOcr.Languages.Portuguese/ to your Visual Studio project.<br />
            Alternatively download the "Portuguese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PortugueseBest">
            <summary>
            Portuguese  OCR language. Performs OCR, reading documents of the Portuguese (português) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Portuguese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Portuguese' from https://www.nuget.org/packages/IronOcr.Languages.Portuguese/ to your Visual Studio project.<br />
            Alternatively download the "Portuguese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PortugueseFast">
            <summary>
            Portuguese  OCR language. Performs OCR, reading documents of the Portuguese (português) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Portuguese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Portuguese' from https://www.nuget.org/packages/IronOcr.Languages.Portuguese/ to your Visual Studio project.<br />
            Alternatively download the "Portuguese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Pashto">
            <summary>
            Pashto  OCR language. Performs OCR, reading documents of the Pashto (پښتو) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Pashto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Pashto' from https://www.nuget.org/packages/IronOcr.Languages.Pashto/ to your Visual Studio project.<br />
            Alternatively download the "Pashto.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PashtoBest">
            <summary>
            Pashto  OCR language. Performs OCR, reading documents of the Pashto (پښتو) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Pashto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Pashto' from https://www.nuget.org/packages/IronOcr.Languages.Pashto/ to your Visual Studio project.<br />
            Alternatively download the "Pashto.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.PashtoFast">
            <summary>
            Pashto  OCR language. Performs OCR, reading documents of the Pashto (پښتو) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Pashto uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Pashto' from https://www.nuget.org/packages/IronOcr.Languages.Pashto/ to your Visual Studio project.<br />
            Alternatively download the "Pashto.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Quechua">
            <summary>
            Quechua  OCR language. Performs OCR, reading documents of the Quechua (Runa Simi, Kichwa) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Quechua uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Quechua' from https://www.nuget.org/packages/IronOcr.Languages.Quechua/ to your Visual Studio project.<br />
            Alternatively download the "Quechua.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.QuechuaBest">
            <summary>
            Quechua  OCR language. Performs OCR, reading documents of the Quechua (Runa Simi, Kichwa) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Quechua uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Quechua' from https://www.nuget.org/packages/IronOcr.Languages.Quechua/ to your Visual Studio project.<br />
            Alternatively download the "Quechua.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.QuechuaFast">
            <summary>
            Quechua  OCR language. Performs OCR, reading documents of the Quechua (Runa Simi, Kichwa) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Quechua uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Quechua' from https://www.nuget.org/packages/IronOcr.Languages.Quechua/ to your Visual Studio project.<br />
            Alternatively download the "Quechua.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Romanian">
            <summary>
            Romanian  OCR language. Performs OCR, reading documents of the Romanian (limba română) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Romanian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Romanian' from https://www.nuget.org/packages/IronOcr.Languages.Romanian/ to your Visual Studio project.<br />
            Alternatively download the "Romanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.RomanianBest">
            <summary>
            Romanian  OCR language. Performs OCR, reading documents of the Romanian (limba română) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Romanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Romanian' from https://www.nuget.org/packages/IronOcr.Languages.Romanian/ to your Visual Studio project.<br />
            Alternatively download the "Romanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.RomanianFast">
            <summary>
            Romanian  OCR language. Performs OCR, reading documents of the Romanian (limba română) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Romanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Romanian' from https://www.nuget.org/packages/IronOcr.Languages.Romanian/ to your Visual Studio project.<br />
            Alternatively download the "Romanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Russian">
            <summary>
            Russian  OCR language. Performs OCR, reading documents of the Russian (русский язык) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Russian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Russian' from https://www.nuget.org/packages/IronOcr.Languages.Russian/ to your Visual Studio project.<br />
            Alternatively download the "Russian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.RussianBest">
            <summary>
            Russian  OCR language. Performs OCR, reading documents of the Russian (русский язык) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Russian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Russian' from https://www.nuget.org/packages/IronOcr.Languages.Russian/ to your Visual Studio project.<br />
            Alternatively download the "Russian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.RussianFast">
            <summary>
            Russian  OCR language. Performs OCR, reading documents of the Russian (русский язык) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Russian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Russian' from https://www.nuget.org/packages/IronOcr.Languages.Russian/ to your Visual Studio project.<br />
            Alternatively download the "Russian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Sanskrit">
            <summary>
            Sanskrit  OCR language. Performs OCR, reading documents of the Sanskrit (संस्कृतम्) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Sanskrit uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sanskrit' from https://www.nuget.org/packages/IronOcr.Languages.Sanskrit/ to your Visual Studio project.<br />
            Alternatively download the "Sanskrit.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SanskritBest">
            <summary>
            Sanskrit  OCR language. Performs OCR, reading documents of the Sanskrit (संस्कृतम्) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Sanskrit uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sanskrit' from https://www.nuget.org/packages/IronOcr.Languages.Sanskrit/ to your Visual Studio project.<br />
            Alternatively download the "Sanskrit.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SanskritFast">
            <summary>
            Sanskrit  OCR language. Performs OCR, reading documents of the Sanskrit (संस्कृतम्) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Sanskrit uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sanskrit' from https://www.nuget.org/packages/IronOcr.Languages.Sanskrit/ to your Visual Studio project.<br />
            Alternatively download the "Sanskrit.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Sinhala">
            <summary>
            Sinhala  OCR language. Performs OCR, reading documents of the Sinhala (සිංහල) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Sinhala uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project.<br />
            Alternatively download the "Sinhala.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SinhalaBest">
            <summary>
            Sinhala  OCR language. Performs OCR, reading documents of the Sinhala (සිංහල) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Sinhala uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project.<br />
            Alternatively download the "Sinhala.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SinhalaFast">
            <summary>
            Sinhala  OCR language. Performs OCR, reading documents of the Sinhala (සිංහල) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Sinhala uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project.<br />
            Alternatively download the "Sinhala.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SinhalaAlphabet">
            <summary>
            Sinhala Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Sinhala Alphabet (සිංහල) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Sinhala Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project.<br />
            Alternatively download the "Sinhala.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SinhalaAlphabetBest">
            <summary>
            Sinhala Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Sinhala Alphabet (සිංහල) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Sinhala Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project.<br />
            Alternatively download the "Sinhala.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SinhalaAlphabetFast">
            <summary>
            Sinhala Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Sinhala Alphabet (සිංහල) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Sinhala Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sinhala' from https://www.nuget.org/packages/IronOcr.Languages.Sinhala/ to your Visual Studio project.<br />
            Alternatively download the "Sinhala.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Slovak">
            <summary>
            Slovak  OCR language. Performs OCR, reading documents of the Slovak (slovenčina, slovenský jazyk) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Slovak uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovak' from https://www.nuget.org/packages/IronOcr.Languages.Slovak/ to your Visual Studio project.<br />
            Alternatively download the "Slovak.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SlovakBest">
            <summary>
            Slovak  OCR language. Performs OCR, reading documents of the Slovak (slovenčina, slovenský jazyk) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Slovak uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovak' from https://www.nuget.org/packages/IronOcr.Languages.Slovak/ to your Visual Studio project.<br />
            Alternatively download the "Slovak.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SlovakFast">
            <summary>
            Slovak  OCR language. Performs OCR, reading documents of the Slovak (slovenčina, slovenský jazyk) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Slovak uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovak' from https://www.nuget.org/packages/IronOcr.Languages.Slovak/ to your Visual Studio project.<br />
            Alternatively download the "Slovak.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SlovakFraktur">
            <summary>
            Slovak Fraktur  OCR language. Performs OCR, reading documents of the Slovak Fraktur (slovenčina, slovenský jazyk) language with an understanding of spelling and linguistic context. 
            <para>This Slovak Fraktur OCR language pack  uses only an OEM (shape recognition evolved from Tesseract 3) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovak' from https://www.nuget.org/packages/IronOcr.Languages.Slovak/ to your Visual Studio project.<br />
            Alternatively download the "Slovak.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Slovene">
            <summary>
            Slovene  OCR language. Performs OCR, reading documents of the Slovene (slovenski jezik, slovenščina) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Slovene uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovene' from https://www.nuget.org/packages/IronOcr.Languages.Slovene/ to your Visual Studio project.<br />
            Alternatively download the "Slovene.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SloveneBest">
            <summary>
            Slovene  OCR language. Performs OCR, reading documents of the Slovene (slovenski jezik, slovenščina) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Slovene uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovene' from https://www.nuget.org/packages/IronOcr.Languages.Slovene/ to your Visual Studio project.<br />
            Alternatively download the "Slovene.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SloveneFast">
            <summary>
            Slovene  OCR language. Performs OCR, reading documents of the Slovene (slovenski jezik, slovenščina) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Slovene uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Slovene' from https://www.nuget.org/packages/IronOcr.Languages.Slovene/ to your Visual Studio project.<br />
            Alternatively download the "Slovene.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Sindhi">
            <summary>
            Sindhi  OCR language. Performs OCR, reading documents of the Sindhi (सिन्धी, سنڌي، سندھی‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Sindhi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sindhi' from https://www.nuget.org/packages/IronOcr.Languages.Sindhi/ to your Visual Studio project.<br />
            Alternatively download the "Sindhi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SindhiBest">
            <summary>
            Sindhi  OCR language. Performs OCR, reading documents of the Sindhi (सिन्धी, سنڌي، سندھی‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Sindhi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sindhi' from https://www.nuget.org/packages/IronOcr.Languages.Sindhi/ to your Visual Studio project.<br />
            Alternatively download the "Sindhi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SindhiFast">
            <summary>
            Sindhi  OCR language. Performs OCR, reading documents of the Sindhi (सिन्धी, سنڌي، سندھی‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Sindhi uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sindhi' from https://www.nuget.org/packages/IronOcr.Languages.Sindhi/ to your Visual Studio project.<br />
            Alternatively download the "Sindhi.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Spanish">
            <summary>
            Spanish  OCR language. Performs OCR, reading documents of the Spanish (español, castellano) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Spanish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project.<br />
            Alternatively download the "Spanish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SpanishBest">
            <summary>
            Spanish  OCR language. Performs OCR, reading documents of the Spanish (español, castellano) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Spanish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project.<br />
            Alternatively download the "Spanish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SpanishFast">
            <summary>
            Spanish  OCR language. Performs OCR, reading documents of the Spanish (español, castellano) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Spanish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project.<br />
            Alternatively download the "Spanish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SpanishOld">
            <summary>
            Spanish Old  OCR language. Performs OCR, reading documents of the Spanish Old (español, castellano) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Spanish Old uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project.<br />
            Alternatively download the "Spanish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SpanishOldBest">
            <summary>
            Spanish Old  OCR language. Performs OCR, reading documents of the Spanish Old (español, castellano) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Spanish Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project.<br />
            Alternatively download the "Spanish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SpanishOldFast">
            <summary>
            Spanish Old  OCR language. Performs OCR, reading documents of the Spanish Old (español, castellano) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Spanish Old uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Spanish' from https://www.nuget.org/packages/IronOcr.Languages.Spanish/ to your Visual Studio project.<br />
            Alternatively download the "Spanish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Albanian">
            <summary>
            Albanian  OCR language. Performs OCR, reading documents of the Albanian (gjuha shqipe) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Albanian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Albanian' from https://www.nuget.org/packages/IronOcr.Languages.Albanian/ to your Visual Studio project.<br />
            Alternatively download the "Albanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AlbanianBest">
            <summary>
            Albanian  OCR language. Performs OCR, reading documents of the Albanian (gjuha shqipe) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Albanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Albanian' from https://www.nuget.org/packages/IronOcr.Languages.Albanian/ to your Visual Studio project.<br />
            Alternatively download the "Albanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.AlbanianFast">
            <summary>
            Albanian  OCR language. Performs OCR, reading documents of the Albanian (gjuha shqipe) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Albanian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Albanian' from https://www.nuget.org/packages/IronOcr.Languages.Albanian/ to your Visual Studio project.<br />
            Alternatively download the "Albanian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Serbian">
            <summary>
            Serbian  OCR language. Performs OCR, reading documents of the Serbian (српски језик) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Serbian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project.<br />
            Alternatively download the "Serbian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SerbianBest">
            <summary>
            Serbian  OCR language. Performs OCR, reading documents of the Serbian (српски језик) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Serbian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project.<br />
            Alternatively download the "Serbian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SerbianFast">
            <summary>
            Serbian  OCR language. Performs OCR, reading documents of the Serbian (српски језик) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Serbian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project.<br />
            Alternatively download the "Serbian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SerbianLatin">
            <summary>
            Serbian Latin  OCR language. Performs OCR, reading documents of the Serbian (српски језик) language , using the Latin alphabet (abc...), with an understanding of spelling and linguistic context. 
            <para>This Default variant of Serbian Latin uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project.<br />
            Alternatively download the "Serbian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SerbianLatinBest">
            <summary>
            Serbian Latin  OCR language. Performs OCR, reading documents of the Serbian (српски језик) language , using the Latin alphabet (abc...), with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Serbian Latin uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project.<br />
            Alternatively download the "Serbian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SerbianLatinFast">
            <summary>
            Serbian Latin  OCR language. Performs OCR, reading documents of the Serbian (српски језик) language , using the Latin alphabet (abc...), with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Serbian Latin uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Serbian' from https://www.nuget.org/packages/IronOcr.Languages.Serbian/ to your Visual Studio project.<br />
            Alternatively download the "Serbian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Sundanese">
            <summary>
            Sundanese  OCR language. Performs OCR, reading documents of the Sundanese (Basa Sunda) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Sundanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sundanese' from https://www.nuget.org/packages/IronOcr.Languages.Sundanese/ to your Visual Studio project.<br />
            Alternatively download the "Sundanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SundaneseBest">
            <summary>
            Sundanese  OCR language. Performs OCR, reading documents of the Sundanese (Basa Sunda) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Sundanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sundanese' from https://www.nuget.org/packages/IronOcr.Languages.Sundanese/ to your Visual Studio project.<br />
            Alternatively download the "Sundanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SundaneseFast">
            <summary>
            Sundanese  OCR language. Performs OCR, reading documents of the Sundanese (Basa Sunda) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Sundanese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Sundanese' from https://www.nuget.org/packages/IronOcr.Languages.Sundanese/ to your Visual Studio project.<br />
            Alternatively download the "Sundanese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Swahili">
            <summary>
            Swahili  OCR language. Performs OCR, reading documents of the Swahili (Kiswahili) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Swahili uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Swahili' from https://www.nuget.org/packages/IronOcr.Languages.Swahili/ to your Visual Studio project.<br />
            Alternatively download the "Swahili.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SwahiliBest">
            <summary>
            Swahili  OCR language. Performs OCR, reading documents of the Swahili (Kiswahili) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Swahili uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Swahili' from https://www.nuget.org/packages/IronOcr.Languages.Swahili/ to your Visual Studio project.<br />
            Alternatively download the "Swahili.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SwahiliFast">
            <summary>
            Swahili  OCR language. Performs OCR, reading documents of the Swahili (Kiswahili) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Swahili uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Swahili' from https://www.nuget.org/packages/IronOcr.Languages.Swahili/ to your Visual Studio project.<br />
            Alternatively download the "Swahili.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Swedish">
            <summary>
            Swedish  OCR language. Performs OCR, reading documents of the Swedish (Svenska) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Swedish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Swedish' from https://www.nuget.org/packages/IronOcr.Languages.Swedish/ to your Visual Studio project.<br />
            Alternatively download the "Swedish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SwedishBest">
            <summary>
            Swedish  OCR language. Performs OCR, reading documents of the Swedish (Svenska) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Swedish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Swedish' from https://www.nuget.org/packages/IronOcr.Languages.Swedish/ to your Visual Studio project.<br />
            Alternatively download the "Swedish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SwedishFast">
            <summary>
            Swedish  OCR language. Performs OCR, reading documents of the Swedish (Svenska) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Swedish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Swedish' from https://www.nuget.org/packages/IronOcr.Languages.Swedish/ to your Visual Studio project.<br />
            Alternatively download the "Swedish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Syriac">
            <summary>
            Syriac  OCR language. Performs OCR, reading documents of the Syriac (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Syriac uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project.<br />
            Alternatively download the "Syriac.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SyriacBest">
            <summary>
            Syriac  OCR language. Performs OCR, reading documents of the Syriac (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Syriac uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project.<br />
            Alternatively download the "Syriac.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SyriacFast">
            <summary>
            Syriac  OCR language. Performs OCR, reading documents of the Syriac (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Syriac uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project.<br />
            Alternatively download the "Syriac.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SyriacAlphabet">
            <summary>
            Syriac Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Syriac Alphabet (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Syriac Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project.<br />
            Alternatively download the "Syriac.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SyriacAlphabetBest">
            <summary>
            Syriac Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Syriac Alphabet (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Syriac Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project.<br />
            Alternatively download the "Syriac.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.SyriacAlphabetFast">
            <summary>
            Syriac Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Syriac Alphabet (Syrian, Syriac Aramaic,ܠܫܢܐ ܣܘܪܝܝܐ‎, Leššānā Suryāyā) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Syriac Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Syriac' from https://www.nuget.org/packages/IronOcr.Languages.Syriac/ to your Visual Studio project.<br />
            Alternatively download the "Syriac.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tamil">
            <summary>
            Tamil  OCR language. Performs OCR, reading documents of the Tamil (தமிழ்) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Tamil uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project.<br />
            Alternatively download the "Tamil.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TamilBest">
            <summary>
            Tamil  OCR language. Performs OCR, reading documents of the Tamil (தமிழ்) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Tamil uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project.<br />
            Alternatively download the "Tamil.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TamilFast">
            <summary>
            Tamil  OCR language. Performs OCR, reading documents of the Tamil (தமிழ்) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Tamil uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project.<br />
            Alternatively download the "Tamil.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TamilAlphabet">
            <summary>
            Tamil Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Tamil Alphabet (தமிழ்) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Tamil Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project.<br />
            Alternatively download the "Tamil.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TamilAlphabetBest">
            <summary>
            Tamil Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Tamil Alphabet (தமிழ்) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Tamil Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project.<br />
            Alternatively download the "Tamil.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TamilAlphabetFast">
            <summary>
            Tamil Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Tamil Alphabet (தமிழ்) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Tamil Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tamil' from https://www.nuget.org/packages/IronOcr.Languages.Tamil/ to your Visual Studio project.<br />
            Alternatively download the "Tamil.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tatar">
            <summary>
            Tatar  OCR language. Performs OCR, reading documents of the Tatar (татар теле, tatar tele) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Tatar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tatar' from https://www.nuget.org/packages/IronOcr.Languages.Tatar/ to your Visual Studio project.<br />
            Alternatively download the "Tatar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TatarBest">
            <summary>
            Tatar  OCR language. Performs OCR, reading documents of the Tatar (татар теле, tatar tele) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Tatar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tatar' from https://www.nuget.org/packages/IronOcr.Languages.Tatar/ to your Visual Studio project.<br />
            Alternatively download the "Tatar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TatarFast">
            <summary>
            Tatar  OCR language. Performs OCR, reading documents of the Tatar (татар теле, tatar tele) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Tatar uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tatar' from https://www.nuget.org/packages/IronOcr.Languages.Tatar/ to your Visual Studio project.<br />
            Alternatively download the "Tatar.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Telugu">
            <summary>
            Telugu  OCR language. Performs OCR, reading documents of the Telugu (తెలుగు) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Telugu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project.<br />
            Alternatively download the "Telugu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TeluguBest">
            <summary>
            Telugu  OCR language. Performs OCR, reading documents of the Telugu (తెలుగు) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Telugu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project.<br />
            Alternatively download the "Telugu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TeluguFast">
            <summary>
            Telugu  OCR language. Performs OCR, reading documents of the Telugu (తెలుగు) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Telugu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project.<br />
            Alternatively download the "Telugu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TeluguAlphabet">
            <summary>
            Telugu Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Telugu Alphabet (తెలుగు) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Telugu Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project.<br />
            Alternatively download the "Telugu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TeluguAlphabetBest">
            <summary>
            Telugu Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Telugu Alphabet (తెలుగు) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Telugu Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project.<br />
            Alternatively download the "Telugu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TeluguAlphabetFast">
            <summary>
            Telugu Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Telugu Alphabet (తెలుగు) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Telugu Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Telugu' from https://www.nuget.org/packages/IronOcr.Languages.Telugu/ to your Visual Studio project.<br />
            Alternatively download the "Telugu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tajik">
            <summary>
            Tajik  OCR language. Performs OCR, reading documents of the Tajik (тоҷикӣ, toğikī, تاجیکی‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Tajik uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tajik' from https://www.nuget.org/packages/IronOcr.Languages.Tajik/ to your Visual Studio project.<br />
            Alternatively download the "Tajik.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TajikBest">
            <summary>
            Tajik  OCR language. Performs OCR, reading documents of the Tajik (тоҷикӣ, toğikī, تاجیکی‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Tajik uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tajik' from https://www.nuget.org/packages/IronOcr.Languages.Tajik/ to your Visual Studio project.<br />
            Alternatively download the "Tajik.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TajikFast">
            <summary>
            Tajik  OCR language. Performs OCR, reading documents of the Tajik (тоҷикӣ, toğikī, تاجیکی‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Tajik uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tajik' from https://www.nuget.org/packages/IronOcr.Languages.Tajik/ to your Visual Studio project.<br />
            Alternatively download the "Tajik.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tagalog">
            <summary>
            Tagalog  OCR language. Performs OCR, reading documents of the Tagalog (Wikang Tagalog, ᜏᜒᜃᜅ᜔ ᜆᜄᜎᜓᜄ᜔) language with an understanding of spelling and linguistic context. 
            <para>This Tagalog OCR language pack  uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tagalog' from https://www.nuget.org/packages/IronOcr.Languages.Tagalog/ to your Visual Studio project.<br />
            Alternatively download the "Tagalog.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Thai">
            <summary>
            Thai  OCR language. Performs OCR, reading documents of the Thai (ไทย) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Thai uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project.<br />
            Alternatively download the "Thai.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaiBest">
            <summary>
            Thai  OCR language. Performs OCR, reading documents of the Thai (ไทย) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Thai uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project.<br />
            Alternatively download the "Thai.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaiFast">
            <summary>
            Thai  OCR language. Performs OCR, reading documents of the Thai (ไทย) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Thai uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project.<br />
            Alternatively download the "Thai.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaanaAlphabet">
            <summary>
            Thaana Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Thaana Alphabet (Taana , Tāna , ތާނަ‎) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Thaana Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thaana' from https://www.nuget.org/packages/IronOcr.Languages.Thaana/ to your Visual Studio project.<br />
            Alternatively download the "Thaana.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaanaAlphabetBest">
            <summary>
            Thaana Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Thaana Alphabet (Taana , Tāna , ތާނަ‎) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Thaana Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thaana' from https://www.nuget.org/packages/IronOcr.Languages.Thaana/ to your Visual Studio project.<br />
            Alternatively download the "Thaana.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaanaAlphabetFast">
            <summary>
            Thaana Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Thaana Alphabet (Taana , Tāna , ތާނަ‎) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Thaana Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thaana' from https://www.nuget.org/packages/IronOcr.Languages.Thaana/ to your Visual Studio project.<br />
            Alternatively download the "Thaana.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaiAlphabet">
            <summary>
            Thai Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Thai Alphabet (ไทย) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Thai Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project.<br />
            Alternatively download the "Thai.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaiAlphabetBest">
            <summary>
            Thai Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Thai Alphabet (ไทย) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Thai Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project.<br />
            Alternatively download the "Thai.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.ThaiAlphabetFast">
            <summary>
            Thai Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Thai Alphabet (ไทย) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Thai Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Thai' from https://www.nuget.org/packages/IronOcr.Languages.Thai/ to your Visual Studio project.<br />
            Alternatively download the "Thai.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TibetanAlphabet">
            <summary>
            Tibetan Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Tibetan Alphabet (Tibetan Standard, Tibetan, Central ཡིག་) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Tibetan Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project.<br />
            Alternatively download the "Tibetan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TibetanAlphabetBest">
            <summary>
            Tibetan Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Tibetan Alphabet (Tibetan Standard, Tibetan, Central ཡིག་) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Tibetan Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project.<br />
            Alternatively download the "Tibetan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TibetanAlphabetFast">
            <summary>
            Tibetan Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Tibetan Alphabet (Tibetan Standard, Tibetan, Central ཡིག་) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Tibetan Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tibetan' from https://www.nuget.org/packages/IronOcr.Languages.Tibetan/ to your Visual Studio project.<br />
            Alternatively download the "Tibetan.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tigrinya">
            <summary>
            Tigrinya  OCR language. Performs OCR, reading documents of the Tigrinya (ትግርኛ) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Tigrinya uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tigrinya' from https://www.nuget.org/packages/IronOcr.Languages.Tigrinya/ to your Visual Studio project.<br />
            Alternatively download the "Tigrinya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TigrinyaBest">
            <summary>
            Tigrinya  OCR language. Performs OCR, reading documents of the Tigrinya (ትግርኛ) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Tigrinya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tigrinya' from https://www.nuget.org/packages/IronOcr.Languages.Tigrinya/ to your Visual Studio project.<br />
            Alternatively download the "Tigrinya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TigrinyaFast">
            <summary>
            Tigrinya  OCR language. Performs OCR, reading documents of the Tigrinya (ትግርኛ) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Tigrinya uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tigrinya' from https://www.nuget.org/packages/IronOcr.Languages.Tigrinya/ to your Visual Studio project.<br />
            Alternatively download the "Tigrinya.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Tonga">
            <summary>
            Tonga  OCR language. Performs OCR, reading documents of the Tonga (faka Tonga) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Tonga uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tonga' from https://www.nuget.org/packages/IronOcr.Languages.Tonga/ to your Visual Studio project.<br />
            Alternatively download the "Tonga.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TongaBest">
            <summary>
            Tonga  OCR language. Performs OCR, reading documents of the Tonga (faka Tonga) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Tonga uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tonga' from https://www.nuget.org/packages/IronOcr.Languages.Tonga/ to your Visual Studio project.<br />
            Alternatively download the "Tonga.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TongaFast">
            <summary>
            Tonga  OCR language. Performs OCR, reading documents of the Tonga (faka Tonga) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Tonga uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Tonga' from https://www.nuget.org/packages/IronOcr.Languages.Tonga/ to your Visual Studio project.<br />
            Alternatively download the "Tonga.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Turkish">
            <summary>
            Turkish  OCR language. Performs OCR, reading documents of the Turkish (Türkçe) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Turkish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Turkish' from https://www.nuget.org/packages/IronOcr.Languages.Turkish/ to your Visual Studio project.<br />
            Alternatively download the "Turkish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TurkishBest">
            <summary>
            Turkish  OCR language. Performs OCR, reading documents of the Turkish (Türkçe) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Turkish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Turkish' from https://www.nuget.org/packages/IronOcr.Languages.Turkish/ to your Visual Studio project.<br />
            Alternatively download the "Turkish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.TurkishFast">
            <summary>
            Turkish  OCR language. Performs OCR, reading documents of the Turkish (Türkçe) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Turkish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Turkish' from https://www.nuget.org/packages/IronOcr.Languages.Turkish/ to your Visual Studio project.<br />
            Alternatively download the "Turkish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Uyghur">
            <summary>
            Uyghur  OCR language. Performs OCR, reading documents of the Uyghur (Uyƣurqə, ئۇيغۇرچە‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Uyghur uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uyghur' from https://www.nuget.org/packages/IronOcr.Languages.Uyghur/ to your Visual Studio project.<br />
            Alternatively download the "Uyghur.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UyghurBest">
            <summary>
            Uyghur  OCR language. Performs OCR, reading documents of the Uyghur (Uyƣurqə, ئۇيغۇرچە‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Uyghur uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uyghur' from https://www.nuget.org/packages/IronOcr.Languages.Uyghur/ to your Visual Studio project.<br />
            Alternatively download the "Uyghur.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UyghurFast">
            <summary>
            Uyghur  OCR language. Performs OCR, reading documents of the Uyghur (Uyƣurqə, ئۇيغۇرچە‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Uyghur uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uyghur' from https://www.nuget.org/packages/IronOcr.Languages.Uyghur/ to your Visual Studio project.<br />
            Alternatively download the "Uyghur.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Ukrainian">
            <summary>
            Ukrainian  OCR language. Performs OCR, reading documents of the Ukrainian (українська мова) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Ukrainian uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Ukrainian' from https://www.nuget.org/packages/IronOcr.Languages.Ukrainian/ to your Visual Studio project.<br />
            Alternatively download the "Ukrainian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UkrainianBest">
            <summary>
            Ukrainian  OCR language. Performs OCR, reading documents of the Ukrainian (українська мова) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Ukrainian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Ukrainian' from https://www.nuget.org/packages/IronOcr.Languages.Ukrainian/ to your Visual Studio project.<br />
            Alternatively download the "Ukrainian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UkrainianFast">
            <summary>
            Ukrainian  OCR language. Performs OCR, reading documents of the Ukrainian (українська мова) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Ukrainian uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Ukrainian' from https://www.nuget.org/packages/IronOcr.Languages.Ukrainian/ to your Visual Studio project.<br />
            Alternatively download the "Ukrainian.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Urdu">
            <summary>
            Urdu  OCR language. Performs OCR, reading documents of the Urdu (اردو) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Urdu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Urdu' from https://www.nuget.org/packages/IronOcr.Languages.Urdu/ to your Visual Studio project.<br />
            Alternatively download the "Urdu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UrduBest">
            <summary>
            Urdu  OCR language. Performs OCR, reading documents of the Urdu (اردو) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Urdu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Urdu' from https://www.nuget.org/packages/IronOcr.Languages.Urdu/ to your Visual Studio project.<br />
            Alternatively download the "Urdu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UrduFast">
            <summary>
            Urdu  OCR language. Performs OCR, reading documents of the Urdu (اردو) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Urdu uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Urdu' from https://www.nuget.org/packages/IronOcr.Languages.Urdu/ to your Visual Studio project.<br />
            Alternatively download the "Urdu.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Uzbek">
            <summary>
            Uzbek  OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Uzbek uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project.<br />
            Alternatively download the "Uzbek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UzbekBest">
            <summary>
            Uzbek  OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Uzbek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project.<br />
            Alternatively download the "Uzbek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UzbekFast">
            <summary>
            Uzbek  OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Uzbek uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project.<br />
            Alternatively download the "Uzbek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UzbekCyrillic">
            <summary>
            Uzbek Cyrillic  OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. 
            <para>This Default variant of Uzbek Cyrillic uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project.<br />
            Alternatively download the "Uzbek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UzbekCyrillicBest">
            <summary>
            Uzbek Cyrillic  OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Uzbek Cyrillic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project.<br />
            Alternatively download the "Uzbek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.UzbekCyrillicFast">
            <summary>
            Uzbek Cyrillic  OCR language. Performs OCR, reading documents of the Uzbek (O‘zbek, Ўзбек, أۇزبېك‎) language ,using the Cyrillic alphabet, with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Uzbek Cyrillic uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Uzbek' from https://www.nuget.org/packages/IronOcr.Languages.Uzbek/ to your Visual Studio project.<br />
            Alternatively download the "Uzbek.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Vietnamese">
            <summary>
            Vietnamese  OCR language. Performs OCR, reading documents of the Vietnamese (Tiếng Việt) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Vietnamese uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project.<br />
            Alternatively download the "Vietnamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.VietnameseBest">
            <summary>
            Vietnamese  OCR language. Performs OCR, reading documents of the Vietnamese (Tiếng Việt) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Vietnamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project.<br />
            Alternatively download the "Vietnamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.VietnameseFast">
            <summary>
            Vietnamese  OCR language. Performs OCR, reading documents of the Vietnamese (Tiếng Việt) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Vietnamese uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project.<br />
            Alternatively download the "Vietnamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.VietnameseAlphabet">
            <summary>
            Vietnamese Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Vietnamese Alphabet (Tiếng Việt) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This Default variant of Vietnamese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project.<br />
            Alternatively download the "Vietnamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.VietnameseAlphabetBest">
            <summary>
            Vietnamese Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Vietnamese Alphabet (Tiếng Việt) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Best' (detailed) variant of Vietnamese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project.<br />
            Alternatively download the "Vietnamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.VietnameseAlphabetFast">
            <summary>
            Vietnamese Alphabetic Script  OCR dictionary. Performs OCR, identifying characters of Vietnamese Alphabet (Tiếng Việt) languages.
            <para>Alphabetic script OCR dictionaries such as this contain detailed information about the shapes letters of an alphabet, but do not utilize any other information about a language such as word-frequency and do not understand linguistic context.  This has both advantages and disadvantages.</para><para>This 'Fast' variant of Vietnamese Alphabet uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Vietnamese' from https://www.nuget.org/packages/IronOcr.Languages.Vietnamese/ to your Visual Studio project.<br />
            Alternatively download the "Vietnamese.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Yiddish">
            <summary>
            Yiddish  OCR language. Performs OCR, reading documents of the Yiddish (ייִדיש) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Yiddish uses both an LTSM (Long Term Short Term neural network) and an OEM (shape recognition evolved from Tesseract 3) OCR strategies which can mesh them together to produce results which are both fast and accurate.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Yiddish' from https://www.nuget.org/packages/IronOcr.Languages.Yiddish/ to your Visual Studio project.<br />
            Alternatively download the "Yiddish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.YiddishBest">
            <summary>
            Yiddish  OCR language. Performs OCR, reading documents of the Yiddish (ייִדיש) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Yiddish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Yiddish' from https://www.nuget.org/packages/IronOcr.Languages.Yiddish/ to your Visual Studio project.<br />
            Alternatively download the "Yiddish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.YiddishFast">
            <summary>
            Yiddish  OCR language. Performs OCR, reading documents of the Yiddish (ייִדיש) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Yiddish uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Yiddish' from https://www.nuget.org/packages/IronOcr.Languages.Yiddish/ to your Visual Studio project.<br />
            Alternatively download the "Yiddish.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Yoruba">
            <summary>
            Yoruba  OCR language. Performs OCR, reading documents of the Yoruba (Yorùbá) language with an understanding of spelling and linguistic context. 
            <para>This Default variant of Yoruba uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Yoruba' from https://www.nuget.org/packages/IronOcr.Languages.Yoruba/ to your Visual Studio project.<br />
            Alternatively download the "Yoruba.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.YorubaBest">
            <summary>
            Yoruba  OCR language. Performs OCR, reading documents of the Yoruba (Yorùbá) language with an understanding of spelling and linguistic context. 
            <para>This 'Best' (detailed) variant of Yoruba uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for detail over speed.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Yoruba' from https://www.nuget.org/packages/IronOcr.Languages.Yoruba/ to your Visual Studio project.<br />
            Alternatively download the "Yoruba.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.YorubaFast">
            <summary>
            Yoruba  OCR language. Performs OCR, reading documents of the Yoruba (Yorùbá) language with an understanding of spelling and linguistic context. 
            <para>This 'Fast' variant of Yoruba uses only an LTSM (Long Term Short Term neural network) Tesseract OCR engine which has been optimised for speed with a small cost to accuracy.</para><para>To use this language please install the Nuget Package 'IronOcr.Languages.Yoruba' from https://www.nuget.org/packages/IronOcr.Languages.Yoruba/ to your Visual Studio project.<br />
            Alternatively download the "Yoruba.ocrdata" language file from https://ironsoftware.com/csharp/ocr/languages/ and add it to your project with the property <c>CopyToOutputDirectory = CopyIfNewer</c></para></summary>
        </member>
        <member name="F:IronOcr.OcrLanguage.Custom">
            <summary>
             A custom .traineddata language file is in use.  Use the <see cref="M:IronOcr.IronTesseract.UseCustomTesseractLanguageFile(System.String)" /> method to achieve this state.
            </summary>
        </member>
        <member name="T:IronOcr.License">
            <summary>
            Allows IronOCR license keys to be applied globally across an application.
            </summary>
        </member>
        <member name="P:IronOcr.License.IsLicensed">
            <summary>
            Removes watermarks. Determines whether this instance of IronOCR is
            licensed.
            <para>Will return <c>false</c> unless a <see cref="P:IronOcr.License.LicenseKey" />
            is set to a valid trial or full license key in 
            <see cref="P:IronOcr.License.LicenseKey" /> property, <c>Web.Config</c>,
            <c>App.Config</c> or <c>appsettings.json</c> in .Net Core.
            </para><para>
            See https://ironsoftware.com/csharp/ocr/licensing/ and 
            https://ironsoftware.com/csharp/ocr/docs/license/license-keys/
            </para></summary>
            <returns>
                <c>true</c> if the license key given is valid.</returns>
        </member>
        <member name="P:IronOcr.License.LicenseKey">
            <summary>
            Get Licensed at https://ironsoftware.com/csharp/ocr/licensing/
            <para>
            For .Net framework applications, a license key can alternatively be
            added to <c>Web.Config</c> or <c>App.Config</c> XML file using
            <c>&lt;add key="IronOcr.LicenseKey" value="IRONOCR-LICENSE-KEY"/&gt;</c>
            within the appSettings node.
            See https://ironsoftware.com/csharp/ocr/docs/license/license-keys/
            </para><para>
            For .Net Core applications, a license key  may be added to 
            <c>appsettings.json</c> where the key name is <c>"IronOcr.LicenseKey"</c>
            and the value is a valid IronOcr trial or full license key.
            </para><para>
            See https://ironsoftware.com/csharp/ocr/licensing/ for licensing 
            options.
            </para></summary>
        </member>
        <member name="M:IronOcr.License.IsValidLicense(System.String)">
            <summary>
            Determines whether a string license key is valid.
            <para>
            See https://ironsoftware.com/csharp/ocr/licensing/ for trial,
            development and commercial deployment licensing options.
            </para></summary>
            <param name="licenseKey">IronOcr license key as a string</param>
            <returns>
                <c>true</c> if the license key given is valid.</returns>
        </member>
        <member name="T:IronOcr.OcrInput">
            <summary>
                <see cref="T:IronOcr.OcrInput" /> provides a robust class for preparing one or more Image Files, PDFs, IronSoftware.Drawing.AnyBitmap, SixLabors.ImageSharp.Image, System.Drawing.Bitmap, other famous image library Objects, Streams and Binary Image data for OCR.
            Instances of <see cref="T:IronOcr.OcrInput" />  can be read by the <see cref="T:IronOcr.IronTesseract" /> class.
            <para>We recognise that much of the quality of  OCR results depends on preparing images to be read.  This class allows developers to enhance their scanned documents provide faster, more accurate OCR results using filters such as: <see cref="M:IronOcr.OcrInput.EnhanceResolution(System.Int32)" />, <see cref="M:IronOcr.OcrInput.DeNoise(System.Boolean)" />, <see cref="M:IronOcr.OcrInput.ToGrayScale" />, <see cref="M:IronOcr.OcrInput.Deskew(IronOcr.OcrLanguage,System.Int32,IronOcr.OrientationConfidence)" />,  <see cref="M:IronOcr.OcrInput.Rotate(System.Double)" /> and  <see cref="M:IronOcr.OcrInput.Sharpen" />.</para><para>Supports for multi-paged OCR input. </para></summary>
        </member>
        <member name="P:IronOcr.OcrInput.SkipDisposal">
            <summary>
            Skips disposal to ensure pix memory still being used by other OcrInput objects is still valid
            </summary>
            <remarks>Set to True when making an internal copy of another OcrInput object which shares PixPlus with this object</remarks>
        </member>
        <member name="F:IronOcr.OcrInput.TargetDPI">
            <summary>
            The resolution that low resolution images will be enhanced to. To disable upscaling, set this to 0 (will affect read quality).
            <para>TargetDPI also determines the resolution at which PDF documents will be sampled.</para></summary>
        </member>
        <member name="T:IronOcr.OcrInput.ImageType">
            <summary>
            Type of Image to save as.
            Common examples are <see cref="F:IronOcr.OcrInput.ImageType.PNG" />, <see cref="F:IronOcr.OcrInput.ImageType.JPG" />, and <see cref="F:IronOcr.OcrInput.ImageType.GIF" />.
            </summary>
        </member>
        <member name="F:IronOcr.OcrInput.ImageType.PNG">
            <summary>
            PNG is short for Portable Network Graphic, a type of raster image file.
            </summary>
        </member>
        <member name="F:IronOcr.OcrInput.ImageType.JPG">
            <summary>
            JPG is a digital image format which contains compressed image data.
            </summary>
        </member>
        <member name="F:IronOcr.OcrInput.ImageType.GIF">
            <summary>
            GIF stands for Graphics Interchange Format. GIF is a raster file format designed for relatively basic images that appear mainly on the internet. Each file can support up to 8 bits per pixel and can contain 256 indexed colors.
            </summary>
        </member>
        <member name="F:IronOcr.OcrInput.ImageType.TIFF">
            <summary>
            TIFF stands for Tag Image File Format, TIFF is a file used to store raster graphics and image information.
            </summary>
        </member>
        <member name="F:IronOcr.OcrInput.ImageType.BMP">
            <summary>
            A BMP file contains uncompressed data, making it ideal for storing and displaying high-quality digital images.
            </summary>
        </member>
        <member name="P:IronOcr.OcrInput.Title">
            <summary>
            A title for the OcrInput document. This is relevant as it becomes metadata when exporting searchable PDFs and HOCR files from <see cref="T:IronOcr.IronTesseract" /> results.
            <para>See <see cref="M:IronOcr.OcrResult.SaveAsSearchablePdf(System.String)" /> and <see cref="M:IronOcr.OcrResult.SaveAsHocrFile(System.String)" /></para></summary>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Object[])">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object to which images and PDF pages may be added.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Inputs">Any number of images as File Paths, Streams, Byte Arrays, <see cref="T:IronSoftware.Drawing.AnyBitmap" /> and <see cref="T:SixLabors.ImageSharp.Image" />.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with an Image file or PDF document.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="FilePath">Path to an Image or PDF file.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with an Image file.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="FilePath">Path to an Image or PDF file.</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Optional target DPI for the input content</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with multiple Image files.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="FilePaths">An IEnumerable of paths to  Image or PDF files.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{System.String},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with multiple Image files with a common ContentArea.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="FilePaths">An IEnumerable of paths to  Image or PDF files.</param>
            <param name="ContentArea">Specifies a region of each image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Byte[])">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with an Image file as binary data.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bytes">Bytes of an Image or PDF file.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Byte[],IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with an Image file as binary data.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bytes">Bytes of an Image or PDF file.</param>
            <param name="ContentArea">Specifies a region of each image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with the binary data of multiple Images with a common ContentArea.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bytes">An IEnumerable of  byte arrays containing Image or PDF files.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{System.Byte[]},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with the binary data of multiple Images with a common ContentArea.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bytes">An IEnumerable of  byte arrays containing Image or PDF files.</param>
            <param name="ContentArea">Specifies a region of each image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.IO.Stream)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with  image data as a Stream.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Stream">Steam containing an Image or PDF file.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.IO.Stream,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with  image data as a Stream.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Stream">Steam containing an Image or PDF file.</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{System.IO.Stream})">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with multiple images as Streams.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Streams">Steam containing an Image or PDF file.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{System.IO.Stream},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with multiple images as Streams sharing a common ContentArea.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Streams">Steam containing an Image or PDF file.</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(IronSoftware.Drawing.AnyBitmap)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with a <see cref="T:IronSoftware.Drawing.AnyBitmap" />.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bitmap">A <see cref="T:IronSoftware.Drawing.AnyBitmap" />.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with a <see cref="T:IronSoftware.Drawing.AnyBitmap" />.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bitmap">A <see cref="T:IronSoftware.Drawing.AnyBitmap" />.</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{IronSoftware.Drawing.AnyBitmap})">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with multiple <see cref="T:IronSoftware.Drawing.AnyBitmap" />.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bitmaps">An IEnumerable of <see cref="T:IronSoftware.Drawing.AnyBitmap" />.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{IronSoftware.Drawing.AnyBitmap},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with multiple <see cref="T:IronSoftware.Drawing.AnyBitmap" /> sharing a common ContentArea.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Bitmaps">An IEnumerable of <see cref="T:IronSoftware.Drawing.AnyBitmap" />.</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(SixLabors.ImageSharp.Image)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with a <see cref="T:SixLabors.ImageSharp.Image" />.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Image">
                <see cref="T:SixLabors.ImageSharp.Image" />
            </param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(SixLabors.ImageSharp.Image,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with a specified region of a <see cref="T:SixLabors.ImageSharp.Image" />.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Image">
                <see cref="T:SixLabors.ImageSharp.Image" />
            </param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{SixLabors.ImageSharp.Image})">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with any number of <see cref="T:SixLabors.ImageSharp.Image" />.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Images">Any Number of <see cref="T:SixLabors.ImageSharp.Image" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(System.Collections.Generic.IEnumerable{SixLabors.ImageSharp.Image},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Create a new <see cref="T:IronOcr.OcrInput" /> object populated with any number of <see cref="T:SixLabors.ImageSharp.Image" /> Image sharing a common ContentArea.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para></summary>
            <param name="Images">Any Number of <see cref="T:SixLabors.ImageSharp.Image" /></param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.#ctor(IronSoftware.Drawing.CropRectangle,System.Object[])">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with one or more images sharing a common crop area.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts any number of images as File Paths, Streams, Byte Arrays, <see cref="T:IronSoftware.Drawing.AnyBitmap" />, <see cref="T:SixLabors.ImageSharp.Image" />, System.Drawing.Bitmap, or System.Drawing.Image. Each will become a <see cref="T:IronOcr.OcrInput.Page" />. </para></summary>
            <param name="Inputs">Any number of images as File Paths, Streams, Byte Arrays, <see cref="T:SixLabors.ImageSharp.Image" />, System.Drawing.Bitmap, or System.Drawing.Image.</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdf(System.String,System.Int32,System.String)">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a PDF.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfPath">File path to the PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdf(System.String,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a PDF.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfPath">File path to the PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdfPages(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with multiple pages from a PDF.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfPath">File path to the PDF</param>
            <param name="Pages">List which pages of the PDF will be read.  Zero based (first page is number 0)</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdfPage(System.String,System.Int32,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a single page of a PDF.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfPath">File path to the PDF</param>
            <param name="Page">Which page of the PDF to read.  Zero based (first page is number 0)</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdf(System.Byte[],System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a PDF as binary data.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfBytes">The PDF document as binary data in memory.</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdfPages(System.Byte[],System.Collections.Generic.IEnumerable{System.Int32},System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with multiple pages from a PDF as binary data.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfBytes">The PDF document as binary data in memory.</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Pages">List which pages of the PDF which will be read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdfPage(System.Byte[],System.Int32,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a single page from a PDF as binary data.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfBytes">The PDF document as binary data in memory.</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Page">The page number within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdf(System.IO.Stream,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a PDF as a Stream.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfStream">The PDF document as a <see cref="T:System.IO.Stream" />.</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdfPages(System.IO.Stream,System.Collections.Generic.IEnumerable{System.Int32},System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with multiple selected pages from a PDF as a Stream.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfStream">The PDF document as a <see cref="T:System.IO.Stream" />.</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Pages">The pages of the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.FromPdfPage(System.IO.Stream,System.Int32,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Create a new  <see cref="T:IronOcr.OcrInput" /> object populated with a single page from a PDF as a Stream.
            <para>This class is IDisposable and is best initiated with a 'using' statement.</para><para>This constructor accepts pdf as File Paths, Streams, or Byte Arrays. Each will become a <see cref="T:IronOcr.OcrInput.Page" />.</para></summary>
            <param name="PdfStream">The PDF document as a <see cref="T:System.IO.Stream" />.</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Page">The page number within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdf(System.String,System.Int32,System.String)">
            <summary>
            Adds all pages of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfPath">String file path to the PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdf(System.String,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds all pages of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfPath">String file path to the PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdfPage(System.String,System.Int32,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds one page of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfPath">String file path to the PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Page">The page number within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdfPages(System.String,System.Collections.Generic.IEnumerable{System.Int32},System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds selected pages from a PDF document into this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfPath">String file path to the PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Pages,,">The page numbers  within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdf(System.IO.Stream,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds all pages of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfStream">
                <see cref="T:System.IO.Stream" />  containing a PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdfPage(System.IO.Stream,System.Int32,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds one page of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfStream">
                <see cref="T:System.IO.Stream" />  containing a PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Page">The page number within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdfPages(System.IO.Stream,System.Collections.Generic.IEnumerable{System.Int32},System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds selected pages of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfStream">
                <see cref="T:System.IO.Stream" />  containing a PDF</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Pages">The page numbers within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdf(System.Byte[],System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds all pages of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfBytes">Binary data of a PDF file</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdfPage(System.Byte[],System.Int32,System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds one page of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfBytes">Binary data of a PDF file</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Page">The page number within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddPdfPages(System.Byte[],System.Collections.Generic.IEnumerable{System.Int32},System.String,IronSoftware.Drawing.CropRectangle,System.Nullable{System.Int32})">
            <summary>
            Adds selected pages of a PDF document to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="PdfBytes">Binary data of a PDF file</param>
            <param name="Password">Optional Password to unlock an encrypted or protected PDF</param>
            <param name="ContentArea">Specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels. Setting a ContentArea can improve OCR speed.</param>
            <param name="DPI">Resolution at which to sample the PDF. If null or zero will use <see cref="F:IronOcr.OcrInput.TargetDPI" /></param>
            <param name="Pages">The page numbers within the PDF to read. Zero based (first page is number 0)</param>
        </member>
        <member name="M:IronOcr.OcrInput.SaveAsImages(System.String,IronOcr.OcrInput.ImageType)">
            <summary>
            Exports an <see cref="T:IronOcr.OcrInput" /> object as Images
            </summary>
            <param name="Prefix">Will save images at {Prefix}_(page_number).{Extension}. May include a fully qualified file path.</param>
            <param name="Extension">Output file extension in lower-case.</param>
            <returns>Array of saved image file names. Can be multiple if <see cref="T:IronOcr.OcrInput" /> used has multiple pages.</returns>
            <exception cref="T:System.Exception">Throws an exception if there are no pages. See <see cref="T:IronOcr.OcrInput.Page" /></exception>
        </member>
        <member name="M:IronOcr.OcrInput.HighlightTextAndSaveAsImages(IronOcr.IronTesseract,System.String,IronOcr.ResultHighlightType)">
            <summary>
                <para>Based on the <see cref="T:IronOcr.ResultHighlightType" />, will draw red boxes around characters/words/lines/paragraphs detected, and save to a PNG image.</para>
                <para>For best results, perform all filters before calling.</para>
            </summary>
            <param name="tesseract">IronTesseract instance used to scan the OcrInput.</param>
            <param name="filename">File will be saved as : 'filename_page_0.png'. You may use an absolute or relative path.</param>
            <param name="type">Choose whether each box represents a character, word, line, paragraph.</param>
        </member>
        <member name="M:IronOcr.OcrInput.StampCropRectangleAndSaveAs(IronSoftware.Drawing.CropRectangle,IronSoftware.Drawing.Color,System.String,IronOcr.OcrInput.ImageType)">
            <summary>
            Saves a copy of the image with a rectangle applied and to visualize and debug where CropRectangle will be applied when using <see cref="T:IronSoftware.Drawing.CropRectangle" /> on your image.
            </summary>
            <param name="cropRectangle">Use a <see cref="T:IronSoftware.Drawing.CropRectangle" /> to debug the area that will be scanned on an image.</param>
            <param name="rectangleColor">Color of rectangle drawn. Red is recommended for easy contrast.</param>
            <param name="Prefix">Will save images at {Prefix}_(page_number).{Extension}. May include a fully qualified file path.</param>
            <param name="extension">Output file extension in lower-case.</param>
            <returns>Array of saved image file names. Can be multiple if <see cref="T:IronOcr.OcrInput" /> used has multiple pages.</returns>
            <exception cref="T:System.Exception">Throws an exception if there are no pages. See <see cref="T:IronOcr.OcrInput.Page" /></exception>
        </member>
        <member name="M:IronOcr.OcrInput.Dispose(System.Boolean)">
            <summary>
            OcrInput is IDisposable.  For best practice and to avoid memory leaks, remember to dispose, or initialize instances with a "using" statement.
            </summary>
        </member>
        <member name="M:IronOcr.OcrInput.Dispose">
            <summary>
            OcrInput is IDisposable.  For best practice and to avoid memory leaks, remember to dispose, or initialize instances with a "using" statement.
            </summary>
        </member>
        <member name="M:IronOcr.OcrInput.Finalize">
            <summary>
            OcrInput has a safe finaliser that cleans up undisposed native images in memory.
            </summary>
        </member>
        <member name="M:IronOcr.OcrInput.ApplyMultipleFilters(IronOcr.OcrFilters,System.Double,System.Int32,System.Int32,System.Int32,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Apply multiple imaging filters using the specified paramaeters
            </summary>
            <param name="filters">Filters to apply</param>
            <param name="Rotation">Rotation amount. Required when using the Rotation filter. <see cref="F:IronOcr.OcrFilters.Rotate" /></param>
            <param name="MaxDeskewAngle">Optional MaxDeskewAngle amount when using the Deskew filter. Defaults to 45 degrees.<see cref="F:IronOcr.OcrFilters.Deskew" /></param>
            <param name="MaxWidth">Maximum width. Required when using the Scale filter. <see cref="F:IronOcr.OcrFilters.Scale" /></param>
            <param name="MaxHeight">Maximum height. Required when using the Scale filter. <see cref="F:IronOcr.OcrFilters.Scale" /></param>
            <param name="Use3x3">Optional morphology when using the Despeckle (DeNoise), Dilate, or Erode filter. <see cref="F:IronOcr.OcrFilters.DeNoise" />, <see cref="F:IronOcr.OcrFilters.Dilate" />, or <see cref="F:IronOcr.OcrFilters.Erode" /></param>
            <param name="thresholdLimit">Optional Threshold limit (0.0-1.0) to consider for binarization when using the Bradley Adaptive Threshold.</param>
            <exception cref="T:System.ArgumentOutOfRangeException" />
            <remarks>This method serves as an alternative way to apply multiple filters. Filters are applied in what is typically the optimal order.</remarks>
        </member>
        <member name="M:IronOcr.OcrInput.Rotate(System.Double)">
            <summary>
            Rotates images by a number of degrees clockwise. For anti-clockwise, use negative numbers. Also see <see cref="M:IronOcr.OcrInput.Deskew(System.Int32)" /></summary>
            <param name="Degrees">A number of clockwise degrees.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Binarize">
            <summary>
            This image filter turns every pixel black or white with no middle ground. May Improve OCR performance cases of very low contrast of text to background.
            </summary>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.ToGrayScale">
            <summary>
            This image filter turns every pixel into a shade of grayscale. Unlikely to improve OCR accuracy but may improve speed.
            </summary>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Sharpen">
            <summary>
            Sharpens blurred OCR Documents.  Applies a Gaussian sharpening filter to image.
            </summary>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.ReplaceColor(IronSoftware.Drawing.Color,IronSoftware.Drawing.Color,System.Int32)">
            <summary>
            Replace current color to new color in Image
            </summary>
            <param name="currentColor">Current <see cref="T:IronSoftware.Drawing.Color" /></param>
            <param name="newColor">New <see cref="T:IronSoftware.Drawing.Color" /></param>
            <param name="tolerance">Tolerance Value</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.SelectTextColor(IronSoftware.Drawing.Color,System.Int32)">
            <summary>
            Binarize an image to read pixels of a color (with threshold) as text and ignore other colors as background.
            <para>This is useful if you image has many colors and a normal binarize will not work. It will turn all text of the color specified into black and the rest of the image to white.</para></summary>
            <param name="selectColor">
                <see cref="T:IronSoftware.Drawing.Color" /> of text to isolate from background.</param>
            <param name="tolerance">[0,255]; Acceptable range of the difference between PixelColor and selectColor for each R, G, and B value</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.SelectTextColors(System.Collections.Generic.IEnumerable{IronSoftware.Drawing.Color},System.Int32)">
            <summary>
            Binarize an image to read pixels of only selected colors (with thresholds) as text and ignore other colors as background.
            <para>This is useful if you image has many colors and a normal binarize will not work. It will turn all text of the color specified into black and the rest of the image to white.</para></summary>
            <param name="selectColors">
                <see cref="T:IronSoftware.Drawing.Color" /> of text to isolate from background.</param>
            <param name="tolerance">[0,255]; Acceptable range of the difference between PixelColor and selectColor for each R, G, and B value</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Contrast(System.Single)">
            <summary>
            Increases contrast automatically. This filter often improves OCR speed and accuracy in low contrast scans. Flattens Alpha channels to white.
            </summary>
            <param name="amount">
            Amount which is used to adjust contrast. A value of 0 will create an image that is completely gray. A value of 1 leaves the input unchanged.
            <para>Amount values greater than 0 increase contrast making light areas lighter and dark areas darker.</para><para>Amount values less than 0 decrease contrast - decreasing variety of contrast.</para></param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.DeNoise(System.Boolean)">
            <summary>
            Removes digital noise.  This filter should only be used where noise is expected. Flattens Alpha channels to white.
            </summary>
            <param name="use3x3">2x2 is default morphology</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
            <seealso cref="M:IronOcr.OcrInput.Despeckle(System.Boolean)" />
        </member>
        <member name="M:IronOcr.OcrInput.Despeckle(System.Boolean)">
            <summary>
            DeSpeckle as an alias of DeNoise.
            <para>Alias of <see cref="M:IronOcr.OcrInput.DeNoise(System.Boolean)" /> to make this method easily to find in Intensense.</para></summary>
            <param name="use3x3">2x2 is default morphology</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Invert(System.Boolean)">
            <summary>
            Inverts every color. E.g. White becomes black : black becomes white.
            </summary>
            <param name="GrayScale">Optionally remove all color channels and return a GrayScale image.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Dilate(System.Boolean)">
            <summary>
            Advanced Morphology. Dilation is the opposite of Erosion, instead of shrinking it expands the foreground object.
            <para>Opposite of <see cref="M:IronOcr.OcrInput.Erode(System.Boolean)" />.</para></summary>
            <param name="use3x3">2x2 is default morphology</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Erode(System.Boolean)">
            <summary>
            Advanced Morphology. Erosion is the morphological operation used to diminish the size of the foreground object.
            <para>Opposite of <see cref="M:IronOcr.OcrInput.Erode(System.Boolean)" />.</para></summary>
            <param name="use3x3">2x2 is default morphology</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Open(System.Boolean)">
            <summary>
            Advanced Morphology. 
            <para>Opening is just another name of erosion followed by dilation. It is useful in removing noise.</para></summary>
            <param name="use3x3">2x2 is default morphology</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Close(System.Boolean)">
            <summary>
            Advanced Morphology.
            <para>Closing is reverse of Opening, Dilation followed by Erosion. It is useful in closing small holes inside the foreground objects.</para></summary>
            <param name="use3x3">2x2 is default morphology</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.HoughTransformStraighten(System.Int32)">
            <summary>
            Uses a Hough Transform to rotate and image to the nearest 90 degrees of straightness. This is very useful for OCR because Tesseract tolerance for skewed scans can be as low as 5 degrees.
            <para>A Synonym of <see cref="M:IronOcr.OcrInput.Deskew(System.Int32)" /></para></summary>
            <param name="MaxDeskewAngle">Maximum angle of skew to correct for. Higher values can lead to more opportunity for correction, but may be slower and more prone to error including upside down pages.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
            <seealso cref="P:IronOcr.OcrResult.Page.Rotation" />
        </member>
        <member name="M:IronOcr.OcrInput.Deskew(System.Int32)">
            <summary>
            Rotates an image so it is the right way up and orthogonal. This is very useful for OCR because Tesseract tolerance for skewed scans can be as low as 5 degrees.
            <para>This also helps when producing searchable PDF documents from IronTesseract because the pages will likely all be the right way up.</para><para>This version uses only  Hough transform to make minor correction. Example:  pages that where  put in a scanner at a slight angle.</para></summary>
            <param name="MaxDeskewAngle">Maximum angle of skew to correct for. Higher values can lead to more opportunity for correction, but may be slower and more prone to error including upside down pages.</param>
            <returns>Returns a boolean result of whether or not IronOCR was able to detect image orientation. True = Deskew was applied. False = Failed to detect image orientation and image remains unchanged.</returns>
            <seealso cref="P:IronOcr.OcrResult.Page.Rotation" />
        </member>
        <member name="M:IronOcr.OcrInput.OrientPagesWithOSD(IronOcr.OcrLanguage,IronOcr.OrientationConfidence)">
            <summary>
            Uses Tesseract "Orientation &amp; Script Detection: to turn OcrInput pages the right way up in multiples of 90 degress.
            </summary>
            <param name="CharacterDetectionLanguage">An <see cref="T:IronOcr.OcrLanguage" /> used to help detect letters and numbers to straighten pages.  If you wish to use multiple languages please use the <see cref="M:IronOcr.OcrInput.Deskew(IronOcr.IronTesseract,System.Int32,IronOcr.OrientationConfidence)" /> overload.</param>
            <param name="Confidence">Optional <see cref="T:IronOcr.OrientationConfidence" /> class used to control and measure OSD by way of confidence thresholds.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
            <seealso cref="P:IronOcr.OcrResult.Page.Rotation" />
        </member>
        <member name="M:IronOcr.OcrInput.OrientPagesWithOSD(IronOcr.IronTesseract,IronOcr.OrientationConfidence)">
            <param name="TesseractInstance">Reads <see cref="T:IronOcr.OcrLanguage" /> settings from your <see cref="T:IronOcr.IronTesseract" /> instance to help detect letters and numbers to straighten pages.  If you wish to use multiple languages please use the <see cref="M:IronOcr.OcrInput.Deskew(IronOcr.IronTesseract,System.Int32,IronOcr.OrientationConfidence)" /> overload.</param>
            <param name="Confidence">Optional <see cref="T:IronOcr.OrientationConfidence" /> class used to control and measure OSD by way of confidence thresholds.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
            <seealso cref="P:IronOcr.OcrResult.Page.Rotation" />
        </member>
        <member name="M:IronOcr.OcrInput.Scale(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Scales the OCRInput pages up in size.
            </summary>
            <param name="MaxHeight">Maximum height in pixels.</param>
            <param name="MaxWidth">Maximum width in pixels.</param>
            <param name="ScaleCropArea">Should associated crop areas also be scaled proportionally (recommended true)</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.WithTitle(System.String)">
            <summary>
            Adds a Title to the OcrInput Document.  This title will be used when calling <see cref="M:IronOcr.OcrResult.SaveAsHocrFile(System.String)" /> and <see cref="M:IronOcr.OcrResult.SaveAsSearchablePdf(System.String)" /></summary>
            <param name="Title">The document title as a string.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Scale(System.Int32,System.Boolean)">
            <summary>
            Scales OCRInput pages proportionally.
            </summary>
            <param name="Percentage">The percentage scale.  100 = no effect.</param>
            <param name="ScaleCropArea">Should associated crop areas also be scaled proportionally (recommended true)</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.EnhanceResolution(System.Int32)">
            <summary>
            Enhances the resolution of low quality images.  This filter is not often needed because <see cref="F:IronOcr.OcrInput.TargetDPI" /> will automatically catch and resolve low resolution inputs.
            <para>May not work for all images if their metadata is corrupted.</para></summary>
            <param name="TargetDPI">The target DPI to resample to.</param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.AdaptiveThreshold(System.Nullable{System.Single})">
            <summary>
            Applies Bradley Adaptive Threshold to the image.
            <para>Adaptive thresholding is the method where the threshold value is calculated for smaller regions and therefore, there will be different threshold values for different regions.</para></summary>
            <param name="thresholdLimit">
            Threshold limit (0.0-1.0) to consider for binarization.
            <para>0.0 to consider threshold is completely white</para><para>1.0 to consider threshold is completely black</para></param>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Deskew(System.Int32,System.Boolean)">
            <exclude />
        </member>
        <member name="M:IronOcr.OcrInput.Deskew(IronOcr.OcrLanguage,System.Int32,IronOcr.OrientationConfidence)">
            <exclude />
        </member>
        <member name="M:IronOcr.OcrInput.Deskew(IronOcr.IronTesseract,System.Int32,IronOcr.OrientationConfidence)">
            <exclude />
        </member>
        <member name="M:IronOcr.OcrInput.DeepCleanBackgroundNoise">
            <summary>
            Heavy background noise removal.  Only use this filter in case extreme document background noise is known, because this filter will also risk reducing OCR accuracy of clean documents, and is very CPU expensive.
            </summary>
            <returns>This <see cref="T:IronOcr.OcrInput" /> object allowing for LINQ style fluent notation.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.FindTextRegion(System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use computer vision to detect regions which contain text elements on each page
            </summary>
            <param name="Scale">(Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="DilationAmount">(Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="Binarize">(Only used during text region detection) True to convert the image to black and white, False otherwise</param>
            <param name="Invert">(Only used during text region detection) True to invert image colors when binarizing, False otherwise</param>
        </member>
        <member name="M:IronOcr.OcrInput.FindMultipleTextRegions(System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use computer vision to detect areas which contain text elements and divide the input into separate images based on text regions.
            </summary>
            <returns>List of rectangles which contain text elements</returns>
            <param name="Scale">(Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="DilationAmount">(Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="Binarize">(Only used during text region detection) True to convert the image to black and white, False otherwise</param>
            <param name="Invert">(Only used during text region detection) True to invert image colors during binarization, False otherwise</param>
            <remarks>Useful for generating several OCR results from a single image/page</remarks>
        </member>
        <member name="M:IronOcr.OcrInput.PageCount">
            <summary>
            The number of <see cref="T:IronOcr.OcrInput.Page" />s currently present in this <see cref="T:IronOcr.OcrInput" /></summary>
            <returns />
        </member>
        <member name="P:IronOcr.OcrInput.Pages">
            <summary>
            Access to every <see cref="T:IronOcr.OcrInput.Page" /> within this <see cref="T:IronOcr.OcrInput" /></summary>
        </member>
        <member name="T:IronOcr.OcrInput.Page">
            <summary>
            A full page (one image) within an <see cref="T:IronOcr.OcrInput" /> object.
            </summary>
        </member>
        <member name="P:IronOcr.OcrInput.Page.Width">
            <summary>
            Width in Pixels
            </summary>
        </member>
        <member name="P:IronOcr.OcrInput.Page.HorizontalDPI">
            <summary>
            Resolution in DPI on X axis
            </summary>
        </member>
        <member name="P:IronOcr.OcrInput.Page.VerticalDPI">
            <summary>
            Resolution in DPI on Y axis
            </summary>
        </member>
        <member name="P:IronOcr.OcrInput.Page.Height">
            <summary>
            Height in Pixels
            </summary>
        </member>
        <member name="P:IronOcr.OcrInput.Page.Index">
            <summary>
            Zero based page number
            </summary>
        </member>
        <member name="M:IronOcr.OcrInput.Page.Remove">
            <summary>
            Removes a page from this <see cref="T:IronOcr.OcrInput" /></summary>
        </member>
        <member name="P:IronOcr.OcrInput.Page.ContentArea">
            <summary>
             Crop area of this page.  If not null, text will only be read from within the ContentArea rectangle.
            </summary>
        </member>
        <member name="M:IronOcr.OcrInput.Page.ToBitmap">
            <summary>
            Outputs this page as a <see cref="T:IronSoftware.Drawing.AnyBitmap" /></summary>
            <returns>A native bitmap image.</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Page.DrawRectangleOnPage(IronSoftware.Drawing.CropRectangle,IronSoftware.Drawing.Color)">
            <summary>
            Draw a Rectangle on a <see cref="T:IronOcr.OcrInput.Page" />.
            </summary>
            <param name="CropRect">Crop Rectangle</param>
            <param name="rectangleColor">Color for pen of rectangle border</param>
            <returns>Bitmap</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Page.GetCropRectangleImage">
            <summary>
            Draw a Rectangle on a <see cref="T:IronOcr.OcrInput.Page" />.
            </summary>
            <returns>Bitmap</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Page.GetTextRegions(System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use computer vision to detect areas which contain text elements and return a list of rectangles.
            </summary>
            <returns>List of rectangles which contain text elements</returns>
            <param name="Scale">(Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="DilationAmount">(Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="Binarize">(Only used during text region detection) True to convert the image to black and white, False otherwise</param>
            <param name="Invert">(Only used during text region detection) True to invert image colors when binarizing, False otherwise</param>
            <remarks>Useful for generating several OCR results from a single image/page</remarks>
        </member>
        <member name="M:IronOcr.OcrInput.Page.FindTextRegion(System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use computer vision to detect regions which contain text elements and instruct Tesseract to only search for text within the area in which text was detected.
            </summary>
            <param name="Scale">(Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="DilationAmount">(Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="Binarize">(Only used during text region detection) True to convert the image to black and white, False otherwise</param>
            <param name="Invert">(Only used during text region detection) True to invert image colors when binarizing, False otherwise</param>
            <returns>Rectangle which contains text elements</returns>
        </member>
        <member name="M:IronOcr.OcrInput.Page.FindMultipleTextRegions(System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Use computer vision to detect areas which contain text elements and divide the page into separate images based on text regions.
            </summary>
            <returns>List of rectangles which contain text elements</returns>
            <param name="Scale">(Only used during text region detection) Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="DilationAmount">(Only used during text region detection) Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="Binarize">(Only used during text region detection) True to convert the image to black and white, False otherwise</param>
            <param name="Invert">(Only used during text region detection) True to invert image colors when binarizing, False otherwise</param>
            <returns>A list of pages - one for each text region</returns>
            <remarks>Useful for generating several OCR results from a single image/page</remarks>
        </member>
        <member name="M:IronOcr.OcrInput.Page.SaveAsImage(System.String)">
            <summary>
            Saves this page as a Bitmap file to a specified path.
            <param name="Path">A file path.</param></summary>
        </member>
        <member name="M:IronOcr.OcrInput.Page.SaveAsImage(System.String,IronSoftware.Drawing.AnyBitmap.ImageFormat)">
            <summary>
            Saves this page as an image file of specified format.
            <param name="Path">A file path.</param><param name="Format">The desired image file format.</param></summary>
        </member>
        <member name="F:IronOcr.OcrInput.OriginalPdfPageDimensions">
            <summary>
            Page dimensions of the original PDF pages used to de-upscale the pages back from Tesseract after a read.
            </summary>
        </member>
        <member name="M:IronOcr.OcrInput.AddRange(IronOcr.OcrInput)">
            <summary>
            Combines 2 instances of <see cref="T:IronOcr.OcrInput" />, appending pages to the end of this OcrInput document.
            </summary>
            <param name="Range">An Ocr Input to be appended to this instance.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddRange(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Adds an IEnumerable of Images to  this <see cref="T:IronOcr.OcrInput" />.
            <para>Supports FilePaths, SixLabors.ImageSharp.Image, IronSoftware.Drawing.AnyBitmap, Streams &amp; ByteArray.</para></summary>
            <param name="Images">Adds an IEnumerable of objects representing images. Supports FilePaths, SixLabors.ImageSharp.Image, IronSoftware.Drawing.AnyBitmap, Streams &amp; byte[].</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddRange(System.Collections.Generic.IEnumerable{System.Object},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds an IEnumerable of Images to this <see cref="T:IronOcr.OcrInput" />.
            <para>Supports FilePaths, SixLabors.ImageSharp.Image, IronSoftware.Drawing.AnyBitmap, Streams &amp; ByteArray.</para></summary>
            <param name="Images">Adds an IEnumerable of objects representing images. Supports FilePaths, SixLabors.ImageSharp.Image, IronSoftware.Drawing.AnyBitmap, Streams &amp; byte[].</param>
            <param name="ContentArea">Specifies a region of the images to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(SixLabors.ImageSharp.Image)">
            <summary>
            Adds a SixLabors.ImageSharp.Image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="Image">A managed Image object.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(SixLabors.ImageSharp.Image,IronSoftware.Drawing.CropRectangle[])">
            <summary>
            Adds a SixLabors.ImageSharp.Image to this <see cref="T:IronOcr.OcrInput" /> with many content area regions. If an empty array is supplied, will use whole image instead.
            <p>Note: Output PDF of SaveAsSearchablePdf when using multiple Crop Rectangles will generate one page per Rectangle/&gt;</p></summary>
            <param name="Image">A managed Image object.</param>
            <param name="Rectangles">Array of crop rectangles of various content regions.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle[])">
            <summary>
            Adds a <see cref="T:IronSoftware.Drawing.AnyBitmap" /> to this <see cref="T:IronOcr.OcrInput" /> with many content area regions. If an empty array is supplied, will use whole image instead.
            <p>Note: Output PDF of SaveAsSearchablePdf when using multiple Crop Rectangles will generate one page per Rectangle/&gt;</p></summary>
            <param name="Bitmap">A managed <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object.</param>
            <param name="Rectangles">Array of crop rectangles of various content regions.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(SixLabors.ImageSharp.Image,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a SixLabors.ImageSharp.Image to this <see cref="T:IronOcr.OcrInput" />.
            Adds a <see cref="T:SixLabors.ImageSharp.Image" /> to  this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="Image">A managed Image object.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(IronSoftware.Drawing.AnyBitmap)">
            <summary>
            Adds a <see cref="T:IronSoftware.Drawing.AnyBitmap" /> to  this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="Bitmap">A managed <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a <see cref="T:IronSoftware.Drawing.AnyBitmap" /> to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="Bitmap">A managed <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object.</param>
            <param name="ContentArea">Optionally specifies a region of the bitmap to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(System.String)">
            <summary>
            Adds an image file to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="ImagePath">File path to an image file.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(System.String,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds an image file to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="ImagePath">File path to an image file.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(System.IO.Stream)">
            <summary>
            Adds a <see cref="T:System.IO.Stream" /> containing the raw data of an image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="ImageStream">A Stream containing an image.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(System.IO.Stream,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a <see cref="T:System.IO.Stream" /> containing the raw data of an image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="ImageStream">A Stream containing an image.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(System.Byte[])">
            <summary>
            Adds a byte array containing the binary data of an image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="ImageBytes">A byte[] containing an image.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddImage(System.Byte[],IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a byte array containing the binary data of an image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="ImageBytes">A byte[] containing an image.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddMultiFrameTiff(System.String)">
            <summary>
            Adds a Multi-frame TIFF file to the OcrInput document.
            <para>Each Frame will become a page of this OcrInput</para></summary>
            <param name="ImagePath">A file path to a TIFF image.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddMultiFrameTiff(System.String,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a Multi-frame TIFF file to the OcrInput document.
            <para>Each Frame will become a page of this OcrInput</para></summary>
            <param name="ImagePath">A file path to a TIFF image.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddMultiFrameTiff(System.IO.Stream)">
            <summary>
            Adds a Stream containing the binary data of a TIFF image with multiple pages to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="TiffStream">A <see cref="T:System.IO.Stream" /> containing a TIFF file .</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddMultiFrameTiff(System.IO.Stream,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a Stream containing the binary data of a TIFF image with multiple pages to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="TiffStream">A <see cref="T:System.IO.Stream" /> containing a TIFF file .</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddMultiFrameTiff(System.Byte[])">
            <summary>
            Adds a byte[] containing the binary data of a TIFF image with multiple pages to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="TiffBytes">A byte[] containing a TIFF file.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddMultiFrameTiff(System.Byte[],IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a byte[] containing the binary data of a TIFF image with multiple pages to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="TiffBytes">A byte[] containing a TIFF file.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddFrameFromTiff(System.String,System.Int32,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a single frame (a page) from a Multi-frame TIFF file to the OcrInput document.  The Tiff may be input as a file, byte array or stream.
            <para>Each Frame will become a page of this OcrInput</para></summary>
            <param name="TiffPath">A file path to a TIFF image.</param>
            <param name="FrameIndex">Zero based frame number.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddFrameFromTiff(System.Byte[],System.Int32,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a single frame (a page) from a Multi-frame TIFF file to the OcrInput document.  The Tiff may be input as a file, byte array or stream.
            <para>Each Frame will become a page of this OcrInput</para></summary>
            <param name="TiffBytes">A byte[] containing a TIFF file.</param>
            <param name="FrameIndex">Zero based frame number.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.AddFrameFromTiff(System.IO.Stream,System.Int32,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a single frame (a page) from a Multi-frame TIFF file to the OcrInput document.  The Tiff may be input as a file, byte array or stream.
            <para>Each Frame will become a page of this OcrInput</para></summary>
            <param name="TiffStream">A Stream containing a TIFF file.</param>
            <param name="FrameIndex">Zero based frame number.</param>
            <param name="ContentArea">Optionally specifies a region of the image to extract text from as a <see cref="T:IronSoftware.Drawing.CropRectangle" /> with X, Y Width and Height in pixels.  Setting a ContentArea can improve OCR speed.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.String,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds an image to this this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imageFilePath">File path to an image file.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Area of the image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Collections.Generic.IEnumerable{System.String},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds images to this this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imageFilePaths">IEnumerable of image file paths.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Area of the every image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.IO.Stream,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a <see cref="T:System.IO.Stream" /> containing the raw data of an image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="sourceStream">A Stream containing an image. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Area of the image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Collections.Generic.IEnumerable{System.IO.Stream},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds an IEnumerable of <see cref="T:System.IO.Stream" /> of image raw data to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="sourceStreams">A IEnumerable of Streams containing raw data of images. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Area of the every image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Byte[],IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a byte array containing the binary data of an image to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imageAsByteArray">A byte[] containing an image.  Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Area of the image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Collections.Generic.IEnumerable{System.Byte[]},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a IEnumerable of byte array containing the binary data of images to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imagesAsByteArrays">A IEnumerable of byte[] containing image data. Supported formats include JPEG, TIFF, GIF, PNG, PDF, BMP.</param>
            <param name="ContentArea">Area of the every image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a <see cref="T:IronSoftware.Drawing.AnyBitmap" /> to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imageAsBitmap">A managed <see cref="T:IronSoftware.Drawing.AnyBitmap" /> object.</param>
            <param name="ContentArea">Area of the image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(SixLabors.ImageSharp.Image,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a <see cref="T:SixLabors.ImageSharp.Image" /> to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="image">A managed Image object.</param>
            <param name="ContentArea">Area of the image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Collections.Generic.IEnumerable{SixLabors.ImageSharp.Image},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds an IEnumerable of SixLabors.ImageSharp.Images to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="images">IEnumerable of managed Image objects.</param>
            <param name="ContentArea">Area of the every image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Collections.Generic.IEnumerable{IronSoftware.Drawing.AnyBitmap},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a IEnumerable of <see cref="T:IronSoftware.Drawing.AnyBitmap" /> to this <see cref="T:IronOcr.OcrInput" />. 
            </summary>
            <param name="imageAsBitmaps">An IEnumerable of managed <see cref="T:IronSoftware.Drawing.AnyBitmap" /> objects.</param>
            <param name="ContentArea">Area of the every image to use with IronOCR.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(IronOcr.OcrInput,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds all pages of an OcrInput to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imageAsOcrInput">OcrInput object to be added to this OcrInput.</param>
            <param name="ContentArea">Area to use of each page of the OcrInput object.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(IronOcr.OcrInput.Page,IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a OcrInput <see cref="T:IronOcr.OcrInput.Page" /> to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imageAsOcrInputPage">Page to be added.</param>
            <param name="ContentArea">Area of the page to be added.</param>
        </member>
        <member name="M:IronOcr.OcrInput.Add(System.Collections.Generic.IEnumerable{IronOcr.OcrInput.Page},IronSoftware.Drawing.CropRectangle)">
            <summary>
            Adds a IEnumerable of OcrInput <see cref="T:IronOcr.OcrInput.Page" /> to this <see cref="T:IronOcr.OcrInput" />.
            </summary>
            <param name="imagesAsOcrInputPages">Pages to be added.</param>
            <param name="ContentArea">Area of every page to be added.</param>
        </member>
        <member name="T:IronOcr.OcrFilters">
            <summary>
            A collection of OCR Image filter for processing Images.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.None">
            <summary>
            No filter for processing images.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Rotate">
            <summary>
            Rotates images by a number of degrees clockwise. For anti-clockwise, use negative numbers.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Deskew">
            <summary>
            Rotates an image so it is the right way up and orthogonal . This is very useful for OCR because Tesseract tolerance for skewed scans can be as low as 5 degrees.
            <para>This also helps when producing searchable PDF documents from IronTesseract because the pages will likely all be the right way up.</para><para>This version uses only  Hough transform to make minor correction. Example:  pages that where  put in a scanner at a slight angle.</para></summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Invert">
            <summary>
            Inverts every color. E.g. White becomes black : black becomes white.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.DeNoise">
            <summary>
            Removes digital noise. This filter should only be used where noise is expected. Flattens Alpha channels to white.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Scale">
            <summary>
            Scales images up in size by specify width and height.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Sharpen">
            <summary>
            Sharpens blurred OCR Documents.  Applies a Gaussian sharpening filter to image.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Contrast">
            <summary>
            Increases contrast automatically. This filter often improves OCR speed and accuracy in low contrast scans.
            <para>Amount which is used to adjust contrast. A value of 0 will create an image that is completely gray. A value of 1 leaves the input unchanged.</para><para>Amount values greater than 0 increase contrast making light areas lighter and dark areas darker.</para><para>Amount values less than 0 decrease contrast - decreasing variety of contrast.</para></summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Dilate">
            <summary>
            Advanced Morphology. Opposite of <see cref="F:IronOcr.OcrFilters.Erode" />.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Erode">
            <summary>
            Advanced Morphology. Opposite of <see cref="F:IronOcr.OcrFilters.Dilate" />.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Binarize">
            <summary>
            This image filter turns every pixel black or white with no middle ground. May Improve OCR performance cases of very low contrast of text to background.
            </summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Open">
            <summary>
            Advanced Morphology. Opposite of <see cref="F:IronOcr.OcrFilters.Close" /><para>Opening is just another name of erosion followed by dilation. It is useful in removing noise.</para></summary>
        </member>
        <member name="F:IronOcr.OcrFilters.Close">
            <summary>
            Advanced Morphology. Opposite of <see cref="F:IronOcr.OcrFilters.Open" /><para>Closing is reverse of Opening, Dilation followed by Erosion. It is useful in closing small holes inside the foreground objects.</para></summary>
        </member>
        <member name="F:IronOcr.OcrFilters.AdaptiveThreshold">
            <summary>
            Applies Bradley Adaptive Threshold to the image.
            </summary>
        </member>
        <member name="T:IronOcr.OrientationConfidence">
            A class that defines and measures confidence thresholds for Hough Transforms used in <see cref="M:IronOcr.OcrInput.Deskew(System.Int32)" /> method calls.
        </member>
        <member name="P:IronOcr.OrientationConfidence.MinConfidence">
            <summary>
             A confidence threshold.  If this criteria is not met, pages will not be rotated by OSD.  MinConfidence of zero means OSD id full automatic and trusted.
            </summary>
        </member>
        <member name="P:IronOcr.OrientationConfidence.ActualConfidence">
            <summary>
            An array of the actual Teseract  OSD confidences returned, one per page. If these values are lower than <see cref="P:IronOcr.OrientationConfidence.MinConfidence" />, then the page will not be rotated.
            </summary>
        </member>
        <member name="T:IronOcr.OcrInputFilterWizard">
            <summary>
                <para>OcrInputFilterWizard provides a brute-force filter assessment tool to try filter combinations within IronOCR to get the highest IronTesseract confidence.</para>
                <para>Simply call the <see cref="M:IronOcr.OcrInputFilterWizard.Run(System.String,System.String@,System.Double@,IronOcr.IronTesseract)" /> method with a image filepath, and optionally a Tesseract.</para>
                <para>Out variables include the result of the best combination's read, and the best confidence.</para>
                <para>Example use: var results = OcrInputFilterWizard.Run("img.png", out string text, out double confidence);</para>
            </summary>
        </member>
        <member name="M:IronOcr.OcrInputFilterWizard.Run(System.String,System.String@,System.Double@,IronOcr.IronTesseract)">
            <summary>
                <para>This method applies a brute-force filter assessment tool to try filter combinations within IronOCR to get the highest IronTesseract confidence.</para>
                <para>Out variables include the result of the best combination's read text, and the best confidence.</para>
                <para>Example use: OcrInputFilterWizard.Run("img.png", out string text, out double confidence);</para>
                <para>Please note that this is a debug method which is CPU-intensive. When using a large PDF it may be wise to only scan a single page rather than the whole document.</para>
            </summary>
            <param name="filePath">Relative or Absolute filepath to image to run wizard on.</param>
            <param name="bestReadResult">Out-variable of the best filter combination Tesseract string read result.</param>
            <param name="ironOcrConfidence">Out-variable of confidence of the best read result from Tesseract itself.</param>
            <param name="tesseract">Optional Tesseract to include. Can be used if multiple languages need to be read.</param>
            <returns>Code to use to reproduce the best confidence result as a multi-line string.</returns>
        </member>
        <member name="M:IronOcr.OcrInputFilterWizard.Run(System.String,System.String@,IronOcr.IronTesseract)">
            <summary>
                <para>This method applies a brute-force filter assessment tool to try filter combinations within IronOCR to get the highest IronTesseract confidence.</para>
                <para>Out variables include the result of the best combination's read text.</para>
                <para>Example use: OcrInputFilterWizard.Run("img.png", out string bestReadResult);</para>
                <para>Please note that this is a debug method which is CPU-intensive. When using a large PDF it may be wise to only scan a single page rather than the whole document.</para>
            </summary>
            <param name="filePath">Relative or Absolute filepath to image to run wizard on.</param>
            <param name="bestReadResult">Out-variable of the best filter combination Tesseract string read result.</param>
            <param name="tesseract">Optional Tesseract to include. Can be used if multiple languages need to be read.</param>
            <returns>Code to use to reproduce the best confidence result as a multi-line string.</returns>
        </member>
        <member name="M:IronOcr.OcrInputFilterWizard.Run(System.String,System.Double@,IronOcr.IronTesseract)">
            <summary>
                <para>This method applies a brute-force filter assessment tool to try filter combinations within IronOCR to get the highest IronTesseract confidence.</para>
                <para>Out variables include the result of the best confidence.</para>
                <para>Example use: OcrInputFilterWizard.Run("img.png", out double confidence);</para>
                <para>Please note that this is a debug method which is CPU-intensive. When using a large PDF it may be wise to only scan a single page rather than the whole document.</para>
            </summary>
            <param name="filePath">Relative or Absolute filepath to image to run wizard on.</param>
            <param name="ironOcrConfidence">Out-variable of confidence of the best read result from Tesseract itself.</param>
            <param name="tesseract">Optional Tesseract to include. Can be used if multiple languages need to be read.</param>
            <returns>Code to use to reproduce the best confidence result as a multi-line string.</returns>
        </member>
        <member name="M:IronOcr.OcrInputFilterWizard.Run(System.String,IronOcr.IronTesseract)">
            <summary>
                <para>This method applies a brute-force filter assessment tool to try filter combinations within IronOCR to get the highest IronTesseract confidence.</para>
                <para>Example use: OcrInputFilterWizard.Run("img.png");</para>
                <para>Please note that this is a debug method which is CPU-intensive. When using a large PDF it may be wise to only scan a single page rather than the whole document.</para>
            </summary>
            <param name="filePath">Relative or Absolute filepath to image to run wizard on.</param>
            <param name="tesseract">Optional Tesseract to include. Can be used if multiple languages need to be read.</param>
            <returns>Code to use to reproduce the best confidence result as a multi-line string.</returns>
        </member>
        <member name="M:IronOcr.OcrReadTask.Cancel">
            <summary>
            Abort the associated Ocr reading
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult">
            <summary>
             A full document object model (DOM) for results when <see cref="T:IronOcr.IronTesseract" /> reads an image or <see cref="T:IronOcr.OcrInput" />.
            <para>Gives access to Text, Pages, Words, Paragraphs, Lines, Words, Characters,  Images, Barcodes, Coordinates, Font information in granular detail.</para></summary>
        </member>
        <member name="T:IronOcr.OcrResult.Barcode">
            <summary>
            Represents a barcode discovered during OCR.  See <see cref="F:IronOcr.TesseractConfiguration.ReadBarCodes" /> which must be set true to use this feature.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Barcode.BarcodeNumber">
            <summary>
            One based number of this barcode within the <see cref="T:IronOcr.OcrResult" /> document.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Barcode.Value">
            <summary>
            Text value of the barcode.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Barcode.Format">
            <summary>
            Barcode format / type.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Barcode.Text">
            <summary>
            Text value of the barcode. Synonym of <see cref="P:IronOcr.OcrResult.Barcode.Value" />.
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.Barcode.ToString">
            <summary>
            Text value of the barcode. Synonym of <see cref="P:IronOcr.OcrResult.Barcode.Value" />.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.Block">
            <summary>
            Represents a block of text containing zero or more paragraphs.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Block.Paragraphs">
            <summary>
            Every paragraph of text within this block.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Block.Lines">
            <summary>
            Every line of text within this block.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Block.Words">
            <summary>
            Every word of text within this block - in order.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Block.Characters">
            <summary>
            Every character of text within this block - in order.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Block.BlockNumber">
            <summary>
            A unique ID for this Block within its <see cref="T:IronOcr.OcrResult" /> object.  The first block will be numbered 1.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Block.BlockType">
            <summary>
             A string representation of the type of block.
            <para>See https://github.com/charlesw/tesseract/blob/master/src/Tesseract/PolyBlockType.cs</para></summary>
        </member>
        <member name="T:IronOcr.OcrResult.Character">
            <summary>
            Represents a single character (char) of text.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Character.Block">
            <summary>
            The block of text containing this character.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Character.Paragraph">
            <summary>
            The paragraph of text containing this character.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Character.Line">
            <summary>
            The line of text containing this character.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Character.Word">
            <summary>
            The word containing this character.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Character.Font">
            <summary>
            Detailed font information for this character.  May only be visible using <see cref="F:IronOcr.TesseractEngineMode.TesseractOnly" />.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Character.CharacterNumber">
            <summary>
            A unique ID number for this character within the document. The first character will be 1.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Character.Choices">
            <summary>
            A list of alternative words choices and their statistical relevance. 
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.Character.ToChar">
            <summary>
            Converts this object to a <see cref="T:System.Char" /></summary>
            <returns>A single character</returns>
        </member>
        <member name="T:IronOcr.OcrResult.Choice">
            <summary />
        </member>
        <member name="F:IronOcr.OcrResult.Choice.Text">
            <summary>
            The text for this word choice.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Choice.Confidence">
            <summary>
             Statistical Confidence as a percentage.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Cancelled">
            <summary>
            Indicates that the Ocr reading was cancelled by the user or after a timeout
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.TesseractVersion">
            <summary>
            The <see cref="T:IronOcr.TesseractVersion" /> used to generate this <see cref="T:IronOcr.OcrResult" />. 
            </summary>
            <seealso cref="T:IronOcr.TesseractVersion" />
        </member>
        <member name="P:IronOcr.OcrResult.Text">
            <summary>
            Returns the entire Text content of this OCR document.  4 <see cref="P:System.Environment.NewLine" /> characters will separate pages.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Confidence">
            <summary>
            OCR statistical accuracy confidence as an average of every character. <para> 1 = 100%, 0 = 0%</para></summary>
        </member>
        <member name="P:IronOcr.OcrResult.Pages">
            <summary>
             Represents every page within this <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.SaveAsTextFile(System.String)">
            <summary>
             Exports a .txt version of the Tesseract results objects document. This is a plain text file. 
             <para> 4 Environment.Newlines between pages. 2 Environment.Newlines between paragraphs.</para></summary>
            <param name="Path">The file path the text file will be saved to.</param>
        </member>
        <member name="M:IronOcr.OcrResult.SaveAsSearchablePdfBytes">
            <summary>
             Exports a searchable PDF version of the OCR input document as a byte array.    Works for all input formats including PDFs &amp; Images.
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.SaveAsSearchablePdfStream">
            <summary>
            Exports a searchable PDF version of the OCR input document as a Stream.    Works for all input formats including PDFs &amp; Images.
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.SaveAsSearchablePdf(System.String)">
            <summary>
             Exports a searchable PDF version of the OCR input document.    Works for all input formats including PDFs &amp; Images.
            </summary>
            <param name="Path">The file path the PDF will be saved to.</param>
        </member>
        <member name="M:IronOcr.OcrResult.SaveAsHocrString">
            <summary>
             Exports an hOCR version of the Tesseract results object document as a string. This is an XHTML file which can be read as XML or HTML.
             <para>https://en.wikipedia.org/wiki/HOCR</para></summary>
        </member>
        <member name="M:IronOcr.OcrResult.SaveAsHocrFile(System.String)">
            <summary>
             Exports an hOCR version of the Tesseract results object document. This is an XHTML file which can be read as XML or HTML.
             <para>https://en.wikipedia.org/wiki/HOCR</para></summary>
            <param name="Path">The file path the xhtml file will be saved to.</param>
        </member>
        <member name="P:IronOcr.OcrResult.Barcodes">
            <summary>
            Represents every barcode  discovered in this OCR document.  Developers must set <see cref="F:IronOcr.TesseractConfiguration.ReadBarCodes" /> = True for this feature to be active.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Blocks">
            <summary>
            Represents every block of text discovered in this OCR document in order of appearance. A Block is a collection of 1 or more paragraphs located closely  together.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Paragraphs">
            <summary>
            Represents every paragraph of text discovered in this OCR document in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Lines">
            <summary>
            Represents every line of text discovered in this OCR document in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Words">
            <summary>
            Represents every word discovered in this OCR document in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Characters">
            <summary>
            Represents every symbol (char) discovered in this OCR document in order of appearance.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.Line">
            <summary>
            A line of text within an <see cref="F:IronOcr.OcrResult.Line.Paragraph" /></summary>
        </member>
        <member name="F:IronOcr.OcrResult.Line.Block">
            <summary>
            The <see cref="F:IronOcr.OcrResult.Line.Block" /> of text which contains this line.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Line.Paragraph">
            <summary>
            The <see cref="F:IronOcr.OcrResult.Line.Paragraph" /> which contains this line of text.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Line.Words">
            <summary>
            Every <see cref="T:IronOcr.OcrResult.Word" /> contained within this Line. In order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Line.Characters">
            <summary>
            Every symbol (char) contained within this Line. In order of appearance.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Line.BaselineAngle">
            <summary>
            Angle at which this line of text slopes.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Line.BaselineOffset">
            <summary>
            pixel offset defining how this line of text slopes.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Line.LineNumber">
            <summary>
            One based line number (identified) within this <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.OcrFont">
            <summary>
            Detailed font information returned when using  Tesseract OEM engine modes.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsSmallCaps">
            <summary>
            Is the text in "Small Caps" (half height capital letters). 
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsBold">
            <summary>
            Is the text Bold.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsItalic">
            <summary>
            Is the text Italic.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsSerif">
            <summary>
            Is the text Serif (like Times-New Roman).
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsUnderlined">
            <summary>
            Is the text Underlined.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsFixedWidth">
            <summary>
            Is the text FixedWidth (monospaced like Courier). 
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.IsCaligraphic">
            <summary>
            Is the text in a calligraphic or "Fruktur" style. 
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.FontName">
            <summary>
            Best guess at the closest known typeface name.  
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrFont.FontSize">
            <summary>
            Best guess at the font height in points.  
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.OcrResultElement">
            <summary>
            Lowest level of abstract OcrResult DOM element.  All result objects extend from this including <see cref="T:IronOcr.OcrResult.Barcode" />, <see cref="T:IronOcr.OcrResult.Character" />,  <see cref="T:IronOcr.OcrResult.Word" />,  <see cref="T:IronOcr.OcrResult.Line" />,  <see cref="T:IronOcr.OcrResult.Paragraph" /> ...
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.OcrResultElement.ToBitmap(IronOcr.OcrInput)">
            <summary>
            Returns an image of this element.
            </summary>
            <param name="Input">The OcrInput document that was read by <see cref="T:IronOcr.IronTesseract" /></param>
            <returns>A <see cref="T:IronSoftware.Drawing.AnyBitmap" />.</returns>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultElement.Width">
            <summary>
            Width in Pixels
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultElement.Height">
            <summary>
            Height in Pixels
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultElement.X">
            <summary>
            Position of this OCR Results object on the source image (page) in pixels counted from the left edge.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultElement.Y">
            <summary>
            Position of this OCR Results object on the source image (page) in pixels counted down from the top edge.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultElement.Location">
            <summary>
            Returns a <see cref="T:IronSoftware.Drawing.CropRectangle" /> of the location and size of this element within an OCR page.  Units are pixels and reference locations on the source image.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.OcrResultTextElement">
            <summary>
            An abstract class representing discovered OCR DOM text elements such as <see cref="T:IronOcr.OcrResult.Character" />,  <see cref="T:IronOcr.OcrResult.Word" />,  <see cref="T:IronOcr.OcrResult.Line" />,  <see cref="T:IronOcr.OcrResult.Paragraph" /> ...
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultTextElement.TextDirection">
            <summary>
            The direction text was read in: such as 'Left to Right' or 'Top to Bottom'.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultTextElement.Text">
            <summary>
            The full text of this OcrResultElement as a string.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.OcrResultTextElement.Confidence">
            <summary>
            OCR statistical accuracy confidence as an average of every character within this object. <para> 1 = 100%, 0 = 0%</para></summary>
        </member>
        <member name="M:IronOcr.OcrResult.OcrResultTextElement.ToString">
            <summary>
            Full OCR text discovered within this object. <para> A synonym of <see cref="P:IronOcr.OcrResult.OcrResultTextElement.Text" /></para>.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.Page">
            <summary>
            Represents a single page within an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Rotation">
            <summary>
            The number of degrees the original page has been rotated to produce this result.  
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Barcodes">
            <summary>
            Represents every barcode discovered in this Page.  Developers must set <see cref="F:IronOcr.TesseractConfiguration.ReadBarCodes" /> = True for this feature to be active.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.WordCount">
            <summary>
            The number of words on this page.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.PageNumber">
            <summary>
            A 1 based unique identifier for this page within an <see cref="T:IronOcr.OcrResult" /> object.  The first page is number 1.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Page.PdfExtractedText">
            <summary>
            When Reading PDFs.  Gives an alternative value to <see cref="P:IronOcr.OcrResult.Text" /> which comes from machine decoding PDF document strings only.  Can not read text from images.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Confidence">
            <summary>
            OCR statistical accuracy confidence as an average of every character. <para> 1 = 100%, 0 = 0%</para></summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Blocks">
            <summary>
            Represents every block of text discovered within this <see cref="T:IronOcr.OcrResult.Page" /> in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Paragraphs">
            <summary>
            Represents every paragraph of text discovered within this <see cref="T:IronOcr.OcrResult.Page" /> in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Lines">
            <summary>
            Represents every line of text discovered within this <see cref="T:IronOcr.OcrResult.Page" /> in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Words">
            <summary>
            Represents every word discovered within this <see cref="T:IronOcr.OcrResult.Page" /> in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.Characters">
            <summary>
            Represents every symbol (char) discovered within this <see cref="T:IronOcr.OcrResult.Page" /> in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Page.ContentArea">
            <summary>
            Represents the rectangular area of this <see cref="T:IronOcr.OcrResult.Page" />  page on which OCR has been applied. Dimensions are in Pixels.
            <para>Default value is the entire size of the Page.  Relates to <see cref="M:IronOcr.OcrInput.AddImage(IronSoftware.Drawing.AnyBitmap,IronSoftware.Drawing.CropRectangle)" /></para></summary>
        </member>
        <member name="M:IronOcr.OcrResult.Page.ContentAreaToBitmap(IronOcr.OcrInput)">
            <summary>
            Returns an image of the <see cref="P:IronOcr.OcrResult.Page.ContentArea" /> of this <see cref="T:IronOcr.OcrResult.Page" />.
            </summary>
            <param name="Input">The OcrInput document that was read by <see cref="T:IronOcr.IronTesseract" /></param>
            <returns>A <see cref="T:IronSoftware.Drawing.AnyBitmap" />.</returns>
        </member>
        <member name="T:IronOcr.OcrResult.Paragraph">
            <summary>
            Represents a paragraph of text with an <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Paragraph.Block">
            <summary>
            Represents the Block of text that contains this paragraph.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Paragraph.Lines">
            <summary>
            Represents every line of text in this paragraph.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Paragraph.Words">
            <summary>
            Represents every word in this paragraph, in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Paragraph.Characters">
            <summary>
            Represents every character  in this paragraph, in order of appearance.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Paragraph.ParagraphNumber">
            <summary>
            1 based unique numerical identifier for this paragraph within the <see cref="T:IronOcr.OcrResult" /> document.
            </summary>
        </member>
        <member name="M:IronOcr.OcrResult.ToJson">
            <summary>
            Serializes the <see cref="T:IronOcr.OcrResult" /> object to a JSON string.
            </summary>
            <remarks>Use the method <see cref="M:IronOcr.OcrResult.FromJson(System.String)" /> for deserializing the JSON to the <see cref="T:IronOcr.OcrResult" /> object.
            </remarks>
            <returns>
            The JSON string representation of the <see cref="T:IronOcr.OcrResult" />.
            </returns>
        </member>
        <member name="M:IronOcr.OcrResult.FromJson(System.String)">
            <summary>
            Deserializes the JSON to the <see cref="T:IronOcr.OcrResult" /> object.
            </summary>
            <param name="json">A JSON string representation of the <see cref="T:IronOcr.OcrResult" />.</param>
            <returns>The deserialized <see cref="T:IronOcr.OcrResult" /> object from the JSON string.</returns>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="json" /> is null</exception>
        </member>
        <member name="P:IronOcr.OcrResult.EngineModeUsed">
            <summary>
            The <see cref="T:IronOcr.TesseractEngineMode" /> used to generate this <see cref="T:IronOcr.OcrResult" />. 
            </summary>
            <seealso cref="T:IronOcr.TesseractEngineMode" />
        </member>
        <member name="T:IronOcr.OcrResult.TextFlow">
            <summary>
            Describes text direction
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.TextFlow.LeftToRight">
            <summary>
            LTR Languages such as English.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.TextFlow.RightToLeft">
            <summary>
            RTL Languages such as Arabic.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.TextFlow.TopToBottom">
            <summary>
            Vertical languages such as found in some forms of East Asian script.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.Word">
            <summary>
            Represents a Word discovered during OCR.  
            </summary>
            <seealso cref="T:IronOcr.OcrResult" />
        </member>
        <member name="F:IronOcr.OcrResult.Word.Block">
            <summary>
            The <see cref="F:IronOcr.OcrResult.Word.Block" /> containing this Word.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Word.Paragraph">
            <summary>
            The <see cref="F:IronOcr.OcrResult.Word.Paragraph" /> containing this Word.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.Word.Line">
            <summary>
            The <see cref="F:IronOcr.OcrResult.Word.Line" /> containing this Word.
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Word.Characters">
            <summary>
            A list of every symbol (char) within this word in order. 
            </summary>
        </member>
        <member name="P:IronOcr.OcrResult.Word.WordNumber">
            <summary>
            1 based number to identify this word within the <see cref="T:IronOcr.OcrResult" /></summary>
        </member>
        <member name="P:IronOcr.OcrResult.Word.Font">
            <summary>
            Legacy. Null unless the Tesseract 3 Engine Mode "TesseractMode" is used.
            </summary>
        </member>
        <member name="T:IronOcr.OcrResult.BarcodeEncoding">
            <summary>
            Barcode Encoding Types.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Codabar">
            <summary>
                Codabar 1D barcode format.  Codabar is a linear barcode symbology developed in 1972 by Pitney Bowes Corp
              <para>Please Note: Codabar encodes numerical data (digits) only.</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Code39">
            <summary>
                Code 39 1D barcode format. Code 39 is a variable length, discrete barcode symbology. The Code 39 specification defines 43 characters, consisting of uppercase letters (A through Z).
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Code93">
            <summary>
                Code 93 1D barcode format. Code 93 is a barcode symbology designed in 1982 by Intermec to provide a higher density and data security enhancement to Code 39.
                <para>Code 93 Supports encoding of only the following ASCII characters: A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 - . $ / + % SPACE</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Code128">
            <summary>
                Code 128 1D format. Code 128 is a high-density linear barcode symbology defined in ISO/IEC 15417:2007. It is used for alphanumeric or numeric-only barcodes.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.EAN8">
            <summary>
                EAN-8 1D barcode format. An EAN-8 is an EAN/UPC symbology barcode and is derived from the longer International Article Number (EAN-13) code.
               <para>Please Note: EAN-8 may only encode numerical (digits) content of length 7 or 8 digits long.   Shorter Barcodes will have trailing zeros (000) prepended to the start of the number automatically.</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.EAN13">
            <summary>
                EAN-13 1D format. The International Article Number (also known as European Article Number or EAN) is a standard describing a barcode symbology and numbering system used in global trade to identify a specific retail product type, in a specific packaging configuration, from a specific manufacturer.Titf
                <para>Please Note: EAN-13 may only encode numerical (digits) content of length 12 or 13 digits long.   Shorter Barcodes will have trailing zeros (000) prepended to the start of the number automatically.</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.ITF">
            <summary>
                 ITF (Interleaved Two of Five) 1D format.  ITF-14 is the GS1 implementation of an Interleaved 2 of 5 (ITF) bar code to encode a Global Trade Item Number. ITF-14 symbols are generally used on packaging levels of a product, such as a case box of 24 cans of soup. The ITF-14 will always encode 14 digits.s
               <para>Please Note: ITF encodes numerical data only. If the number if digits is not even, a '0' will automatically be prepended.</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.UPCA">
            <summary>
                 UPC-A 1D format. The Universal Product Code (UPC) is a barcode symbology that is widely used in the United States, Canada, United Kingdom, Australia, New Zealand, in Europe and other countries for tracking trade items in stores. UPC (technically refers to UPC-A) consists of 12 numeric digits, that are uniquely assigned to each trade item. Along with the related EAN barcode, the UPC is the barcode mainly used for scanning of trade items at the point of sale, per GS1 specifications.
                 <para>Please Note: UPCA may only encode numerical (digits) content of length 12 or 13 digits long.   Shorter Barcodes will have trailing zeros (000) prepended to the start of the number automatically.</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.UPCE">
            <summary>
                 UPC-E 1D format. To allow the use of UPC barcodes on smaller packages, where a full 12-digit barcode may not fit, a 'zero-suppressed' version of UPC was developed, called UPC-E, in which the number system digit, all trailing zeros in the manufacturer code, and all leading zeros in the product code, are suppressed (omitted).MSI
                 <para>Please Note: UPCE may only encode numerical (digits) content of between 8 and more than 13 digits long.</para></summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.MSI">
            <summary>
                MSI 1D format.  MSI is a barcode symbology developed by the MSI Data Corporation, based on the original Plessey Code symbology.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Plessey">
            <summary>
                Plessey 1D format.  Plessey Code is a 1D linear barcode symbology based on pulse width modulation, developed in 1971 by The Plessey Company PLC, a British-based company.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Databar">
            <summary> 
                "RSS Expanded" or "GS1 Databar" barcode formats.   Includes 1D barcode and stacked 2D variants of this barcode format.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Rss14">
            <summary> 
                Reduce Space Symbology 14 barcode format. May represent a 1D barcode or Stacked 2D barcode.   RSS 14 barcode (Reduce Space Symbology) encodes the full 14-digit EAN.UCC item identification in a symbol that can be omni-directionally scanned by suitably configured point-of-sale laser scanners. It is the latest barcode type for space-constrained identification from EAN International and the Uniform Code Council, Inc.. RSS barcodes have been identified to target the grocery industry and in healthcare, where items are too small to allow for other barcode symbologies.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.PDF417">
            <summary> 
                PDF417 format.  PDF417 is a stacked linear barcode symbol format used in a variety of applications, primarily transport, identification cards, and inventory management. PDF stands for Portable Data File. The 417 signifies that each pattern in the code consists of 4 bars and spaces, and that each pattern is 17 units long. The PDF417 symbology was invented by Dr. Ynjiun P. Wang at Symbol Technologies in 1991. (Wang 1993) It is ISO standard 15438.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Aztec">
            <summary> 
                Aztec 2D barcode format.  Aztec Code is a type of 2D barcode invented by Andrew Longacre, Jr. and Robert Hussey in 1995. Named after the resemblance of the central finder pattern to an Aztec pyramid, Aztec code has the potential to use less space than other matrix barcodes because it does not require a surrounding blank "quiet zone".s
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.DataMatrix">
            <summary> 
                Data Matrix 2D barcode format. An example of a Data Matrix code, encoding the text: "Wikipedia, the free encyclopedia" A Data Matrix is a two-dimensional barcode consisting of black and white "cells" or modules arranged in either a square or rectangular pattern, also known as a matrix. The information to be encoded can be text or numeric data. Usual data size is from a few bytes up to 1556 bytes.
              </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.MaxiCode">
            <summary> 
                 MaxiCode 2D barcode format.  MaxiCode is a public domain, machine-readable symbol system originally created and used by United Parcel Service. Suitable for tracking and managing the shipment of packages, it resembles a barcode, but uses dots arranged in a hexagonal grid instead .
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.QRCode">
            <summary> 
                QR Code 2D barcode format.  QR code (abbreviated from Quick Response Code) is the trademark for a type of matrix barcode (or two-dimensional barcode) first designed in 1994 for the automotive industry in Japan. A barcode is a machine-readable optical label that contains information about the item to which it is attached. A QR code uses four standardized encoding modes (numeric, alphanumeric, byte/binary, and kanji) to efficiently store data; extensions may also be used.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.IntelligentMail">
            <summary> 
                Intelligent Mail 2D barcode format.  The Intelligent Mail Barcode (Also known as "IM Barcode" or "USPS OneCode Barcodes" or "IMB") is a 65-bar barcode for use on mail in the United States. The term "Intelligent Mail" refers to services offered by the United States Postal Service for domestic mail delivery. The IM barcode is intended to provide greater information and functionality than its predecessors POSTNET and PLANET.
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.PharmaCode">
            <summary>
            Pharmaceutical Binary Code. A reading fault tolerant binary barcode standard used in the medical industry.   https://en.wikipedia.org/wiki/Pharmacode
            </summary>
        </member>
        <member name="F:IronOcr.OcrResult.BarcodeEncoding.Other">
            <summary>
            Unspecified Barcode Encoding
            </summary>
        </member>
        <member name="T:IronOcr.OpenCvClient">
            <summary>
            Client layer for OpenCV interop
            </summary>
        </member>
        <member name="P:IronOcr.OpenCvClient.Instance">
            <summary>
            OpenCvClient Instance
            </summary>
        </member>
        <member name="M:IronOcr.OpenCvClient.Finalize">
            <summary>
            Dispose OpenCvClient
            </summary>
        </member>
        <member name="M:IronOcr.OpenCvClient.OpenCvClientInit">
            <summary>
            Initilize OpenCvClient
            </summary>
        </member>
        <member name="M:IronOcr.OpenCvClient.Dispose">
            <summary>
            Dispose OpenCvClient
            </summary>
        </member>
        <member name="M:IronOcr.OpenCvClient.FindTextRegion(SixLabors.ImageSharp.Image,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Find first region of Text in image using OpenCV
            </summary>
            <param name="bitmap">Source image.</param>
            <param name="scale">Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="dilation_amount">Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="binarize">True to convert the image to black and white, False otherwise</param>
            <param name="invert">True to invert image colors when binarizing, False otherwise</param>
        </member>
        <member name="M:IronOcr.OpenCvClient.FindTextRegions(SixLabors.ImageSharp.Image,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Find all regions of Text in image using OpenCV
            </summary>
            <param name="bitmap">Source image.</param>
            <param name="scale">Resolution scale factor. Image width and height will be multiplied by this value.</param>
            <param name="dilation_amount">Dilation amount, in pixels. Text areas width and height will be increased by this value.</param>
            <param name="binarize">True to convert the image to black and white, False otherwise</param>
            <param name="invert">True to invert image colors when binarizing, False otherwise</param>
        </member>
        <member name="T:IronOcr.BarcodeReaderSafety">
            <summary>
            extensions methods which are working directly on any IBarcodeReaderGeneric implementation
            </summary>
        </member>
        <member name="M:IronOcr.BarcodeReaderSafety.SafeDecode(ZXing.ImageSharp.BarcodeReader{SixLabors.ImageSharp.PixelFormats.Rgba32},SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32})">
            <summary>
            uses the BarcodeReader class for decoding
            </summary>
            <param name="reader" />
            <param name="image" />
            <returns />
        </member>
        <member name="M:IronOcr.BarcodeReaderSafety.SafeDecodeMultiple(ZXing.ImageSharp.BarcodeReader{SixLabors.ImageSharp.PixelFormats.Rgba32},SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32})">
            <summary>
            uses the BarcodeReader class for decoding
            </summary>
            <param name="reader" />
            <param name="image" />
            <returns />
        </member>
        <member name="T:Babel.Licensing.LicenseFileFoundEventArgs">
            <summary>
                Additional information for license file found events.
            </summary>
        </member>
        <member name="P:Babel.Licensing.LicenseFileFoundEventArgs.Skip">
            <summary>
                 Gets or sets a value indicating whether the skip the license file.
             </summary>
            <value>
                 true if skip the license file, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseFileFoundEventArgs.LicenseFilePath">
            <summary>
                 Gets the full pathname of the license file.
             </summary>
            <value>
                 The full pathname of the license file.
             </value>
        </member>
        <member name="M:Babel.Licensing.LicenseFileFoundEventArgs.#ctor(System.String)">
            <summary>
                 Generate a new instance of <see cref="T:Babel.Licensing.LicenseFileFoundEventArgs" /> class.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="licenseFilePath">  The full path of the license file. </param>
        </member>
        <member name="T:Babel.Licensing.BabelFileLicenseProvider">
            <summary>
                Represents an license provider used to manage licenses stored in a file on disk. 
                This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Babel.Licensing.BabelFileLicenseProvider.LicenseFileSearchDirectories">
            <summary>
                 Gets or sets the directories where to search for a license file.
             </summary>
            <value>
                 The array of search directories.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelFileLicenseProvider.LicenseFilePath">
            <summary>
                 Gets or sets the license file full path.
             </summary>
            <value>
                 The license file full path.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelFileLicenseProvider.EnvironmentVariable">
            <summary>
                 Gets or sets the environment variable name that contains the license file path.
             </summary>
            <value>
                 The environment variable name.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelFileLicenseProvider.LicenseFactory">
            <summary>
                 Gets or sets the <see cref="T:Babel.Licensing.ILicenseFactory" />.
             </summary>
            <value>
                 The license factory.
             </value>
        </member>
        <member name="E:Babel.Licensing.BabelFileLicenseProvider.LicenseFileFound">
            <summary>
                Event queue for all listeners interested in LicenseFileFound events.
            </summary>
        </member>
        <member name="M:Babel.Licensing.BabelFileLicenseProvider.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Babel.Licensing.BabelFileLicenseProvider" /> class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.BabelFileLicenseProvider.#ctor(Babel.Licensing.ILicenseFactory)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.BabelFileLicenseProvider" />
                 class.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="factory">  The license factory. </param>
        </member>
        <member name="M:Babel.Licensing.BabelFileLicenseProvider.GetLicense(Babel.Licensing.ILicenseContext,System.Type,System.Object)">
            <summary>
                 When overridden in a derived class, gets a license for an instance or type of component, when given a context
                 and whether the denial of a license throws an exception.
             </summary>
            <param name="context">
                 A <see cref="T:Babel.Licensing.ILicenseContext" />
                  that specifies where you can use the licensed object.
             </param>
            <param name="type">
                 A <see cref="T:System.Type" />
                  that represents the component requesting the license.
             </param>
            <param name="instance"> An object that is requesting the license. </param>
            <returns>
                 A valid <see cref="T:Babel.Licensing.ILicense" />
                 .
             </returns>
        </member>
        <member name="M:Babel.Licensing.BabelFileLicenseProvider.ValidateLicenseKey(System.String,Babel.Licensing.ILicenseContext,System.Type,System.Object)">
            <summary>
                 Validates the license key.
             </summary>
            <param name="licenseKey">   The license key. </param>
            <param name="context">
                  A <see cref="T:Babel.Licensing.ILicenseContext" />
                  that specifies where you can use the licensed object.
             </param>
            <param name="type">
                  A <see cref="T:System.Type" />
                  that represents the component requesting the license.
             </param>
            <param name="instance">     An object that is requesting the license. </param>
            <returns>
                 A valid <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.BabelFileLicenseProvider.OnLicenseFileFound(Babel.Licensing.LicenseFileFoundEventArgs)">
            <summary>
                 Raises the license file found event.
             </summary>
            <param name="args"> Event information to send to registered event handlers. </param>
        </member>
        <member name="T:Babel.Licensing.BabelLicense">
            <summary>
                Provides the abstract base class for implementing a license.
            </summary>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.Id">
            <summary>
                 Gets or sets the license identifier.
             </summary>
            <value>
                 The license identifier.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.Type">
            <summary>
                 Gets or sets the license type.
             </summary>
            <value>
                 The license type.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.Sites">
            <summary>
                 Gets or sets the number of sites to license.
             </summary>
            <value>
                 The licensed sites.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.IssueDate">
            <summary>
                 Gets, sets the license issue date.
             </summary>
            <value>
                 The license issue date.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.ExpireDate">
            <summary>
                 Gets, sets the license expire date.
             </summary>
            <value>
                 The license expire date.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.SupportExpireDate">
            <summary>
                 Gets, sets the license expire date.
             </summary>
            <value>
                 The license expire date.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.LicenseKey">
            <summary>
                 Gets the license key granted to this component.
             </summary>
            <value>
                 A license key granted to this component.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.Licensee">
            <summary>
                 Gets, sets the <see cref="T:Babel.Licensing.Licensee" /> information.
             </summary>
            <value>
                 An instance of a <see cref="T:Babel.Licensing.Licensee" /> object or a null reference
                 (Nothing in Visual Basic) if no licensee information is available.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.Product">
            <summary>
                 Gets, sets the licensed product information.
             </summary>
            <value>
                 An instance of a <see cref="T:Babel.Licensing.Product" /> object or a null reference
                 (Nothing in Visual Basic) if no product information is available.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.Assemblies">
            <summary>
                 Gets the licensed assemblies collection.
             </summary>
            <value>
                 The licensed assemblies collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.Components">
            <summary>
                 Gets the licensed components collection.
             </summary>
            <value>
                 The licensed components collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.Features">
            <summary>
                 Gets the license <see cref="T:Babel.Licensing.Feature" /> collection.
             </summary>
            <value>
                 The license feature collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.Fields">
            <summary>
                 Gets the license <see cref="T:Babel.Licensing.Field" /> collection.
             </summary>
            <value>
                 The license field collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicense.Restrictions">
            <summary>
                 Gets the collection of <see cref="T:Babel.Licensing.Restriction" /> objects.
             </summary>
            <value>
                 The collection of <see cref="T:Babel.Licensing.Restriction" /> objects.
             </value>
        </member>
        <member name="M:Babel.Licensing.BabelLicense.#ctor">
            <summary>
                Specialized default constructor for use only by derived class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.BabelLicense.Finalize">
            <summary>
                <see cref="T:Babel.Licensing.BabelLicense" /> finalizer.
            </summary>
        </member>
        <member name="M:Babel.Licensing.BabelLicense.Dispose">
            <summary>
                Releases the unmanaged resources used by the Babel.Licensing.BabelLicense.
            </summary>
        </member>
        <member name="M:Babel.Licensing.BabelLicense.Dispose(System.Boolean)">
            <summary>
                 Releases the unmanaged resources used by the Babel.Licensing.BabelLicense and optionally releases the managed
                 resources.
             </summary>
            <param name="disposing">
                 true to release both managed and unmanaged resources; false to release only unmanaged resources.
             </param>
        </member>
        <member name="T:Babel.Licensing.BabelLicenseContext">
            <summary>
                An abstract base class for license context.
            </summary>
        </member>
        <member name="P:Babel.Licensing.BabelLicenseContext.FallbackContext">
            <summary>
                 Gets or sets a fallback license context. 
                 The fallback context will be used in search for license services when the required service is not found in the present context.
             </summary>
            <value>
                 The fallback context.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicenseContext.Settings">
            <summary>
                 Gets or sets license context options.
             </summary>
            <value>
                 The license context settings.
             </value>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseContext.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="P:Babel.Licensing.BabelLicenseContext.ContextName">
            <summary>
                 Gets the name of the context.
             </summary>
            <value>
                 The name of the context.
             </value>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseContext.LoadLicenseKey(System.Type)">
            <summary>
                 Loads license key.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="type"> The type. </param>
            <returns>
                 The license key.
             </returns>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseContext.SaveLicenseKey(System.Type,System.String)">
            <summary>
                 Saves a license key.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="type"> The type. </param>
            <param name="key">  The key. </param>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseContext.GetService(System.Type)">
            <summary>
                 Provides a license service for the given type. 
             </summary>
            <param name="serviceType">  Type of the service. </param>
            <returns>
                 The service.
             </returns>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseContext.IsContextValid(System.Type)">
            <summary>
                 Query if a context is valid for the given type.
                 If the context is not valid the license will be reloaded inside the context.
             </summary>
            <param name="type"> The type. </param>
            <returns>
                 true if the context is valid, false if not.
             </returns>
        </member>
        <member name="T:Babel.Licensing.BabelMultipleLicenseException">
            <summary>
                Exception for signaling multiple license errors.
            </summary>
        </member>
        <member name="P:Babel.Licensing.BabelMultipleLicenseException.ValidationResults">
            <summary>
                 Gets the composite license validation results.
             </summary>
            <value>
                 The composite license validation results.
             </value>
        </member>
        <member name="M:Babel.Licensing.BabelMultipleLicenseException.#ctor(System.Collections.Generic.IEnumerable{Babel.Licensing.LicenseValidationResult})">
            <summary>
                 Constructor.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="results">  The collection of license validation results. </param>
        </member>
        <member name="T:Babel.Licensing.BabelLicenseException">
            <summary>
                Represents the exception thrown for license errors.
            </summary>
        </member>
        <member name="P:Babel.Licensing.BabelLicenseException.Status">
            <summary>
                 Gets the license status that generates this exception.
             </summary>
            <value>
                 The license status value that generates this exception.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelLicenseException.LicensedType">
            <summary>
                 Gets the type of the component that was not granted a license.
             </summary>
            <value>
                 A <see cref="T:System.Type" /> that represents the type of component that was not granted a license.
             </value>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseException.#ctor">
            <summary>
                Initializes a new instance of the Babel.Licensing.BabelLicenseException class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseException.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the System.Exception class with a specified
                 error message.
             </summary>
            <param name="message">  The message that describes the error. </param>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseException.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.BabelLicenseException" /> class with a specified
                 error message and a reference to the inner exception that is the cause of this exception.
             </summary>
            <param name="message">          The error message that explains the reason for the exception. </param>
            <param name="innerException">   The exception that is the cause of the current exception, or a null reference
                                             (Nothing in Visual Basic) if no inner exception is specified. </param>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseException.#ctor(Babel.Licensing.LicenseStatus)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.BabelLicenseException" /> class with a specified
                 <see cref="T:Babel.Licensing.LicenseStatus" /> value.
             </summary>
            <param name="status">   The license status that generated this error. </param>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseException.#ctor(Babel.Licensing.LicenseStatus,System.Exception)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.BabelLicenseException" /> class with a specified
                 <see cref="T:Babel.Licensing.LicenseStatus" /> value and a reference to the inner exception that is the cause 
                 of this exception.
             </summary>
            <param name="status">           The license status that generated this error. </param>
            <param name="innerException">   The exception that is the cause of the current exception, or a null reference
                                             (Nothing in Visual Basic) if no inner exception is specified. </param>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseException.#ctor(System.Type)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.BabelLicenseException" /> class for the type of component that was denied a license.
             </summary>
            <param name="type"> A <see cref="T:System.Type" /> that represents the type of component that was not granted a license. </param>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseException.#ctor(System.Type,System.Object)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.BabelLicenseException" /> class for the type and the instance of the component that was denied a license.
             </summary>
            <param name="type"> A <see cref="T:System.Type" /> that represents the type of component that was not granted a license. </param>
            <param name="instance"> The instance of the component that was not granted a license. </param>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseException.#ctor(System.Type,System.Object,System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:Babel.Licensing.BabelLicenseException" /> class for the type and the instance of the component 
             that was denied a license, along with a message to display.
             </summary>
            <param name="type"> A <see cref="T:System.Type" /> that represents the type of component that was not granted a license. </param>
            <param name="instance"> The instance of the component that was not granted a license. </param>
            <param name="message">  The exception message to display. </param>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseException.#ctor(System.Type,System.Object,System.String,System.Exception)">
            <summary>
             Initializes a new instance of the <see cref="T:Babel.Licensing.BabelLicenseException" /> class for the type and the instance of the component 
             that was denied a license, along with a message to display.
             </summary>
            <param name="type"> A <see cref="T:System.Type" /> that represents the type of component that was not granted a license. </param>
            <param name="instance"> The instance of the component that was not granted a license. </param>
            <param name="message">  The exception message to display. </param>
            <param name="innerException"> An <see cref="T:System.Exception" /> that represents the original exception. </param>
        </member>
        <member name="T:Babel.Licensing.BabelLicenseManager">
            <summary>
                Provides properties and methods to manage a ILicenseProvider. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Babel.Licensing.BabelLicenseManager.CurrentContext">
            <summary>
                 Gets the current <see cref="T:Babel.Licensing.ILicenseContext" /> , which specifies when you can use the licensed object.
             </summary>
            <value>
                 A <see cref="T:Babel.Licensing.ILicenseContext" /> that specifies when you can use the licensed object.
             </value>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseManager.RegisterLicenseProvider(System.Type,Babel.Licensing.ILicenseProvider)">
            <summary>
                 Registers the license provider.
             </summary>
            <param name="type">
                 A <see cref="T:System.Type" />
                 that represents the type of object that requests the license.
             </param>
            <param name="provider"> The license provider instance. </param>
            <example>
                <code source="Examples\BabelLicenseManager.RegisterLicenseProvider.cs" language="cs" />
                <code source="Examples\BabelLicenseManager.RegisterLicenseProvider.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseManager.GetLicenseProvider(System.Type)">
            <summary>
                Gets a registered license provider of a given type.
            </summary>
            <param name="type">
                A <see cref="T:System.Type" />
                that represents the type of object that requests the license.
            </param>
            <returns>The license provider instance.</returns>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseManager.Validate(System.Type)">
            <summary>
                 Determines whether a license can be granted for the specified type.
             </summary>
            <param name="type"> A <see cref="T:System.Type" /> that represents the type of object that requests the license. </param>
            <exception cref="T:Babel.Licensing.BabelLicenseException"> A License cannot be granted. </exception>
            <example>
                <code source="Examples\BabelLicenseManager.Validate.cs" language="cs" />
                <code source="Examples\BabelLicenseManager.Validate.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseManager.Validate(System.Type,System.Object)">
            <summary>
                 Determines whether a license can be granted for the instance of the specified type.
             </summary>
            <exception cref="T:Babel.Licensing.BabelLicenseException"> The type is licensed, but a License cannot be granted. </exception>
            <param name="type">     A <see cref="T:System.Type" /> that represents the type of object that requests the license. </param>
            <param name="instance"> An object of the specified type or a type derived from the specified type. </param>
            <returns>
                 An valid license.
             </returns>
            <example>
                <code source="Examples\BabelLicenseManager.Validate.cs" language="cs" />
                <code source="Examples\BabelLicenseManager.Validate.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseManager.IsLicensed(System.Type)">
            <summary>
                 Returns whether the given type has a valid license.
             </summary>
            <param name="type"> The <see cref="T:System.Type" /> to find a valid license for. </param>
            <returns>
                 true if the given type is licensed; otherwise, false.
             </returns>
            <example>
                <code source="Examples\BabelLicenseManager.IsLicensed.cs" language="cs" />
                <code source="Examples\BabelLicenseManager.IsLicensed.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseManager.IsValid(System.Type)">
            <summary>
                 Determines whether a valid license can be granted for the specified type.
             </summary>
            <param name="type"> A <see cref="T:System.Type" /> that represents the type of object that requests the license. </param>
            <returns>
                 true if a valid license can be granted; otherwise, false.
             </returns>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseManager.IsValid(System.Type,System.Object,Babel.Licensing.ILicense@)">
            <summary>
                 Determines whether a valid license can be granted for the specified instance of the type. This method creates a valid License.
             </summary>
            <param name="type">     A <see cref="T:System.Type" /> that represents the type of object that requests the license. </param>
            <param name="instance"> An object of the specified type or a type derived from the specified type. </param>
            <param name="license">  A <see cref="T:Babel.Licensing.ILicense" /> that is a valid license, or null if a valid license cannot be granted. </param>
            <returns>
                 true if a valid license can be granted; otherwise, false.
             </returns>
        </member>
        <member name="T:Babel.Licensing.BabelLicenseProvider">
            <summary>
                Provides the abstract base class for implementing a <see cref="T:System.ComponentModel.LicenseProvider" /> 
                that is also compatible with <see cref="T:Babel.Licensing.BabelLicenseManager" /></summary>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseProvider.GetLicense(Babel.Licensing.ILicenseContext,System.Type,System.Object)">
            <summary>
                 When overridden in a derived class, gets a license for an instance or type of component, when given a context
                 and whether the denial of a license throws an exception.
             </summary>
            <param name="context">
                 A <see cref="T:Babel.Licensing.ILicenseContext" />
                  that specifies where you can use the licensed object.
             </param>
            <param name="type">
                 A <see cref="T:System.Type" />
                  that represents the component requesting the license.
             </param>
            <param name="instance"> An object that is requesting the license. </param>
            <returns>
                 A valid <see cref="T:Babel.Licensing.ILicense" />.
             </returns>
        </member>
        <member name="M:Babel.Licensing.BabelLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
                 When overridden in a derived class, gets a license for an instance or type of component, when given a context
                 and whether the denial of a license throws an exception.
             </summary>
            <exception cref="T:System.ComponentModel.LicenseException"> Thrown when a License error condition occurs. </exception>
            <param name="context">
                 A <see cref="T:System.ComponentModel.LicenseContext" />
                  that specifies where you can use the licensed object.
             </param>
            <param name="type">
                 A <see cref="T:System.Type" />
                  that represents the component requesting the license.
             </param>
            <param name="instance">         An object that is requesting the license. </param>
            <param name="allowExceptions">
                 true if a <see cref="T:System.ComponentModel.LicenseException" />
                  should be thrown when the component cannot be granted a license; otherwise, false.
             </param>
            <returns>
                 A valid <see cref="T:System.ComponentModel.License" />.
             </returns>
        </member>
        <member name="T:Babel.Licensing.BabelLicensing">
            <summary>
            BabelLicensing class
            </summary>
        </member>
        <member name="P:Babel.Licensing.BabelLicensing.Instance">
            <summary>
                 Gets the instance.
             </summary>
            <value>
                 The instance.
             </value>
        </member>
        <member name="M:Babel.Licensing.BabelLicensing.Create(Babel.Licensing.BabelServiceConfiguration)">
            <summary>
                 Creates a new BabelReporting.
             </summary>
            <exception cref="T:System.InvalidOperationException">    Thrown when the requested operation is invalid. </exception>
            <param name="configuration">    The configuration. </param>
            <returns>
                 A BabelReporting.
             </returns>
        </member>
        <member name="M:Babel.Licensing.BabelLicensing.#ctor(Babel.Licensing.BabelServiceConfiguration)">
            <summary>
                 Default constructor.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="configuration">    The configuration. </param>
        </member>
        <member name="T:Babel.Licensing.BabelService">
            <summary>
            Base class for all Babel services
            </summary>
        </member>
        <member name="P:Babel.Licensing.BabelService.Configuration">
            <summary>
                 Gets the configuration.
             </summary>
            <value>
                 The configuration.
             </value>
        </member>
        <member name="M:Babel.Licensing.BabelService.#ctor(Babel.Licensing.BabelServiceConfiguration)">
            <summary>
            BabelService instance constructor. 
            </summary>
            <param name="configuration">The service configuration</param>
        </member>
        <member name="T:Babel.Licensing.BabelServiceConfiguration">
            <summary>
                Represents configuration of the reporting service client.
            </summary>
        </member>
        <member name="P:Babel.Licensing.BabelServiceConfiguration.ServiceUrl">
            <summary>
                 Gets or sets the URL for the service.
             </summary>
            <value>
                 The service URL.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelServiceConfiguration.ApiKey">
            <summary>
                 Gets or sets the reporting service API key.
             </summary>
            <value>
                 The reporting service API key.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelServiceConfiguration.Namespace">
            <summary>
                 Gets or sets the reporting service API namespace.
             </summary>
            <value>
                 The reporting service API namespace.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelServiceConfiguration.ApiVersion">
            <summary>
                 Gets or sets the reporting service API version.
             </summary>
            <value>
                 The reporting service API version.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelServiceConfiguration.RetryCount">
            <summary>
                 Gets or sets the number times to retry submitting a report when a destination connection failure occurs.
             </summary>
            <value>
                 The number of retries.
             </value>
        </member>
        <member name="P:Babel.Licensing.BabelServiceConfiguration.EnableEncryption">
            <summary>
            Whether to encrypt messages sent sent to the server.
            </summary>
            <value>
                True if encryption is enabled, otherwise false.
            </value>
        </member>
        <member name="P:Babel.Licensing.BabelServiceConfiguration.License">
            <summary>
                 Gets or sets the license used to authenticate the applicaion with the remote service.
             </summary>
            <value>
                 The license used to authenticate with the remote service.
             </value>
        </member>
        <member name="M:Babel.Licensing.BabelServiceConfiguration.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="T:Babel.Licensing.CreateCustomRestrictionEventArgs">
            <summary>
                Additional information for create CreateCustomRestriction event.
            </summary>
        </member>
        <member name="P:Babel.Licensing.CreateCustomRestrictionEventArgs.RestrictionName">
            <summary>
                 Gets the name of the restriction to create.
             </summary>
            <value>
                 The name of the restriction to create.
             </value>
        </member>
        <member name="P:Babel.Licensing.CreateCustomRestrictionEventArgs.Restriction">
            <summary>
                 Sets the restriction object.
             </summary>
            <value>
                 The restriction object created.
             </value>
        </member>
        <member name="M:Babel.Licensing.CreateCustomRestrictionEventArgs.#ctor(System.String)">
            <summary>
                 Generate a new instance of <see cref="T:Babel.Licensing.CreateCustomRestrictionEventArgs" /> class.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="restrictionName">  The name of the restriction to create. </param>
        </member>
        <member name="T:Babel.Licensing.CreateCustomSignatureProviderEventArgs">
            <summary>
                Additional information for create CreateCustomSignatureProvider event.
            </summary>
        </member>
        <member name="P:Babel.Licensing.CreateCustomSignatureProviderEventArgs.AlgorithmName">
            <summary>
                 Gets the algorithm name of the <see cref="T:Babel.Licensing.ISignatureProvider" /> to create.
             </summary>
            <value>
                 The algorithm name of the signature provider to create.
             </value>
        </member>
        <member name="P:Babel.Licensing.CreateCustomSignatureProviderEventArgs.SignatureProvider">
            <summary>
                 Sets the signature provider object.
             </summary>
            <value>
                 The signature provider object created.
             </value>
        </member>
        <member name="M:Babel.Licensing.CreateCustomSignatureProviderEventArgs.#ctor(System.String)">
            <summary>
                 Generate a new instance of <see cref="T:Babel.Licensing.CreateCustomSignatureProviderEventArgs" /> class.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="algorithmName">  The algorithm name of the <see cref="T:Babel.Licensing.ISignatureProvider" /> to create. </param>
        </member>
        <member name="T:Babel.Licensing.ECDsaKeySize">
            <summary>
                Values that represent ECDSA key sizes.
            </summary>
        </member>
        <member name="F:Babel.Licensing.ECDsaKeySize.KeySize112bit">
            <summary>
                Represents 112 bit key size.
            </summary>
        </member>
        <member name="F:Babel.Licensing.ECDsaKeySize.KeySize192bit">
            <summary>
                Represents 192 bit key size.
            </summary>
        </member>
        <member name="F:Babel.Licensing.ECDsaKeySize.KeySize256bit">
            <summary>
                Represents 256 bit key size.
            </summary>
        </member>
        <member name="F:Babel.Licensing.ECDsaKeySize.KeySize384bit">
            <summary>
                Represents 384 bit key size.
            </summary>
        </member>
        <member name="F:Babel.Licensing.ECDsaKeySize.KeySize521bit">
            <summary>
                Represents 512 bit key size.
            </summary>
        </member>
        <member name="T:Babel.Licensing.ECDsaSignature">
            <summary>
                Creates and verifies digital signature using the 
                Elliptic Curve Digital Signature Algorithm (ECDSA).
                This class cannot be inherited.
            </summary>
            <seealso cref="T:Babel.Licensing.RSASignature" />
            <seealso cref="T:Babel.Licensing.XmlDigitalSignature" />
            <example>
                <code source="Examples\ECDsaSignature.Constructor1.cs" language="cs" />
                <code source="Examples\ECDsaSignature.Constructor1.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.ECDsaSignature.FromKeys(System.String,System.String)">
            <summary>
                 Creates an <see cref="T:Babel.Licensing.ECDsaSignature" /> object from the given public and private keys.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="publicKey">    The public key Base32 encoded string. </param>
            <param name="privateKey">   An optional private key Base32 encoded string. </param>
            <returns>
                 The ECDsaSignature with the given keys.
             </returns>
            <seealso cref="T:Babel.Licensing.ECDsaSignature" />
        </member>
        <member name="P:Babel.Licensing.ECDsaSignature.KeySize">
            <summary>
                 Gets ECDSA algorithm key size.
             </summary>
            <value>
                 A <see cref="T:Babel.Licensing.ECDsaKeySize" /> value representing the key size.
             </value>
        </member>
        <member name="P:Babel.Licensing.ECDsaSignature.PublicKey">
            <summary>
                 Gets the public key as an encoded Base32 string.
             </summary>
            <value>
                 The public key Base32 encoded string.
             </value>
        </member>
        <member name="P:Babel.Licensing.ECDsaSignature.PrivateKey">
            <summary>
                 Gets the private key as an encoded Base32 string.
             </summary>
            <value>
                 The private key Base32 encoded string.
             </value>
        </member>
        <member name="P:Babel.Licensing.ECDsaSignature.GenerateKeyInfo">
            <summary>
                 Gets or sets a value indicating whether the generate key information.
             </summary>
            <value>
                 true if generate key information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.ECDsaSignature.HasKeySize">
            <summary>
                 Gets a value indicating whether this object has key size.
             </summary>
            <value>
                 True if this object has key size, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.ECDsaSignature.HasPublicKey">
            <summary>
                 Gets a value indicating whether this object has public key.
             </summary>
            <value>
                 true if this object has public key, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.ECDsaSignature.HasPrivateKey">
            <summary>
                 Gets a value indicating whether this object has private key.
             </summary>
            <value>
                 true if this object has private key, false if not.
             </value>
        </member>
        <member name="M:Babel.Licensing.ECDsaSignature.#ctor">
            <summary>
                Create a new instance of <see cref="T:Babel.Licensing.ECDsaSignature" /> class.
            </summary>
            <example>
                <code source="Examples\ECDsaSignature.Constructor1.cs" language="cs" />
                <code source="Examples\ECDsaSignature.Constructor1.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.ECDsaSignature.#ctor(Babel.Licensing.ECDsaKeySize)">
            <summary>
                 Create a new instance of <see cref="T:Babel.Licensing.ECDsaSignature" /> class with 
                 the given <see cref="T:Babel.Licensing.ECDsaKeySize" />.
             </summary>
            <param name="keySize">  A value indicating the bit size of the key. </param>
            <example>
                <code source="Examples\ECDsaSignature.Constructor2.cs" language="cs" />
                <code source="Examples\ECDsaSignature.Constructor2.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.ECDsaSignature.ExportKeys(System.Boolean)">
            <summary>
                 Export ECDsa keys as base 64 encoded string.
             </summary>
            <param name="publicKeyOnly">    Whether to write only public key data. </param>
            <returns>
                 The base 64 encoded ECDsa key.
             </returns>
        </member>
        <member name="M:Babel.Licensing.ECDsaSignature.ImportKeys(System.String)">
            <summary>
                 Import ECDsa keys.
             </summary>
            <exception cref="T:System.ArgumentNullException">        Thrown when one or more required arguments are null. </exception>
            <exception cref="T:System.InvalidOperationException">    Thrown when the requested operation is invalid. </exception>
            <param name="key">   The base64 encoded string ECDsa key. </param>
        </member>
        <member name="P:Babel.Licensing.ECDsaSignature.AlgorithmName">
            <summary>
                 Gets the name of the sign algorithm.
             </summary>
            <value>
                 The name of the sign algorithm.
             </value>
        </member>
        <member name="M:Babel.Licensing.ECDsaSignature.CreateKeyPair">
            <summary>
                Creates a new key pair.
            </summary>
            <seealso cref="T:Babel.Licensing.ECDsaSignature" />
        </member>
        <member name="M:Babel.Licensing.ECDsaSignature.SignData(System.Byte[])">
            <summary>
                 Generate the signature for the given data.
             </summary>
            <param name="data"> The data to sign. </param>
            <returns>
                 Returns the generated signature.
             </returns>
            <seealso cref="T:Babel.Licensing.ECDsaSignature" />
        </member>
        <member name="M:Babel.Licensing.ECDsaSignature.VerifyData(System.Byte[],System.Byte[])">
            <summary>
                 Verify data.
             </summary>
            <param name="data">         The data. </param>
            <param name="signature">    The signature. </param>
            <returns>
                <c>true</c> if the signature is valid, <c>false</c> if is not valid.
             </returns>
            <seealso cref="T:Babel.Licensing.ECDsaSignature" />
        </member>
        <member name="M:Babel.Licensing.ECDsaSignature.WritePem(System.String,System.Boolean)">
            <summary>
                 Writes the signature using PEM format to the specified file.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when one or more arguments have unsupported or illegal values.
             </exception>
            <param name="path">             The file path. </param>
            <param name="publicKeyOnly">    Whether to write only public key data. </param>
        </member>
        <member name="M:Babel.Licensing.ECDsaSignature.WritePem(System.IO.Stream,System.Boolean)">
            <summary>
                 Writes the signature using PEM format to the specified stream.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="stream">           The stream to write. </param>
            <param name="publicKeyOnly">    Whether to write only public key data. </param>
        </member>
        <member name="T:Babel.Licensing.Rnd">
            <summary>
                A random. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:Babel.Licensing.Rnd.Alphabet">
            <summary>
                The alphabet.
            </summary>
        </member>
        <member name="M:Babel.Licensing.Rnd.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="M:Babel.Licensing.Rnd.#ctor(System.Int32)">
            <summary>
                 Constructor.
             </summary>
            <param name="seed"> The seed used to generate dandom values. </param>
        </member>
        <member name="M:Babel.Licensing.Rnd.Seed(System.Int32)">
            <summary>
                 Change random seed.
             </summary>
            <param name="seed"> The seed. </param>
        </member>
        <member name="M:Babel.Licensing.Rnd.String(System.Int32)">
            <summary>
                 Generates a random string.
             </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 Thrown when one or more arguments are outside the required range.
             </exception>
            <param name="length">   The length. </param>
            <returns>
                 A string.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Rnd.Array(System.Int32)">
            <summary>
                 Generates a random array of bytes.
             </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 Thrown when one or more arguments are outside the required range.
             </exception>
            <param name="size"> The array size. </param>
            <returns>
                 A byte[] array filled with random values.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Rnd.Fill(System.Byte[],System.Int32,System.Int32)">
            <summary>
                 Fills random array of bytes.
             </summary>
            <exception cref="T:System.ArgumentNullException">        Thrown when one or more required arguments are null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 Thrown when one or more arguments are outside the required range.
             </exception>
            <param name="array">    The array. </param>
            <param name="start">    The start index where to start fill random values. </param>
            <param name="count">    The number of random values to generate. </param>
        </member>
        <member name="M:Babel.Licensing.Rnd.Double">
            <summary>
                 Gets the double.
             </summary>
            <returns>
                 A double.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Rnd.Int">
            <summary>
                 Ints.
             </summary>
            <returns>
                 A double.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Rnd.Long">
            <summary>
                 Gets the long.
             </summary>
            <returns>
                 A long.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Rnd.Int(System.Int32,System.Int32)">
            <summary>
                 Ints.
             </summary>
            <param name="min">  The minimum. </param>
            <param name="max">  The maximum. </param>
            <returns>
                 A double.
             </returns>
        </member>
        <member name="T:Babel.Licensing.IRSAKeys">
            <summary>
                Interface for signature providers based on RSA algorithm.
            </summary>
            <example>
                <code source="Examples\RSASignature.Constructor1.cs" language="cs" />
                <code source="Examples\RSASignature.Constructor1.vb" language="vbnet" />
            </example>
        </member>
        <member name="P:Babel.Licensing.IRSAKeys.HasPublicKey">
            <summary>
                 Gets a value indicating whether this object has public key.
             </summary>
            <value>
                 true if this object has public key, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.IRSAKeys.HasPrivateKey">
            <summary>
                 Gets a value indicating whether this object has private key.
             </summary>
            <value>
                 true if this object has private key, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.IRSAKeys.KeyPair">
            <summary>
                 Gets or sets the RSA key pair.
             </summary>
            <value>
                 The RSA key pair byte array.
             </value>
        </member>
        <member name="P:Babel.Licensing.IRSAKeys.RSA">
            <summary>
                 Gets or sets the RSA key pair.
             </summary>
            <value>
                 The RSA key pair.
             </value>
        </member>
        <member name="T:Babel.Licensing.RSASignature">
            <summary>
                Creates and verifies digital signature using RSA-SH1 algorithm.
                This class cannot be inherited.
            </summary>
            <seealso cref="T:Babel.Licensing.ECDsaSignature" />
            <seealso cref="T:Babel.Licensing.XmlDigitalSignature" />
        </member>
        <member name="P:Babel.Licensing.RSASignature.HasKeySize">
            <summary>
                 Gets a value indicating whether this object has key size.
             </summary>
            <value>
                 True if this object has key size, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.RSASignature.KeySize">
            <summary>
                 Gets or sets the RSA key size.
             </summary>
            <value>
                 The size of the RSA key.
             </value>
        </member>
        <member name="P:Babel.Licensing.RSASignature.GenerateKeyInfo">
            <summary>
                 Gets or sets a value indicating whether the generate key information.
             </summary>
            <value>
                 true if generate key information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.RSASignature.HasPublicKey">
            <summary>
                 Gets a value indicating whether this object has public key.
             </summary>
            <value>
                 true if this object has public key, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.RSASignature.HasPrivateKey">
            <summary>
                 Gets a value indicating whether this object has private key.
             </summary>
            <value>
                 true if this object has private key, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.RSASignature.KeyPair">
            <summary>
                 Gets or sets the RSA key pair.
             </summary>
            <value>
                 The RSA key pair byte array.
             </value>
        </member>
        <member name="P:Babel.Licensing.RSASignature.RSA">
            <summary>
                 Gets or sets the RSA key pair.
             </summary>
            <value>
                 The RSA key pair.
             </value>
        </member>
        <member name="M:Babel.Licensing.RSASignature.FromKeys(System.String)">
            <summary>
                 Creates an <see cref="T:Babel.Licensing.RSASignature" /> object from the given public and private keys.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="rsaKey">    The encoded string RSA key. </param>
            <returns>
                 An instance of RSASignature.
             </returns>
            <seealso cref="T:Babel.Licensing.RSASignature" />
            <example>
                <code source="Examples\RSASignature.Constructor2.cs" language="cs" />
                <code source="Examples\RSASignature.Constructor2.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.RSASignature.FromStrongNamePublicKey(System.Byte[])">
            <summary>
                 Creates an <see cref="T:Babel.Licensing.RSASignature" /> object from the given strong name public key buffer.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="publicKey">    The strong name assembly public key. </param>
            <returns>
                 An instance of RSASignature.
             </returns>
        </member>
        <member name="M:Babel.Licensing.RSASignature.CreateFromRawData(System.Byte[],System.String)">
            <summary>
                 Creates an instance of <see cref="T:Babel.Licensing.RSASignature" /> from the specified key buffer.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the keyData argument is null.
             </exception>
            <param name="keyData">  The key pair buffer. This can be an SNK or PFX key buffer. </param>
            <param name="password"> (Optional) the key password. </param>
            <returns>
                 The created <see cref="T:Babel.Licensing.RSASignature" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.RSASignature.#ctor(System.Security.Cryptography.RSA)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.RSASignature" /> class with the specified RSA algorithm.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the rsa argument is null.
             </exception>
            <param name="rsa"> The RSA algorithm. </param>
        </member>
        <member name="M:Babel.Licensing.RSASignature.#ctor(System.Security.Cryptography.RSA,System.Boolean)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.RSASignature" />
                 class with the specified RSA algorithm and a flag which specify to whether to add 
                 public key information to the signature.
             </summary>
            <param name="rsa">              The RSA algorithm. </param>
            <param name="generateKeyInfo">  true to add public key information to signature element, false if not. </param>
            <remarks>
             If the public key information is not added to the signature, the RSA public key must be provided before calling the  
             method VerifyData. 
             </remarks>
        </member>
        <member name="M:Babel.Licensing.RSASignature.#ctor(System.Int32)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.RSASignature" /> class with the specified RSA key size.
             </summary>
            <param name="keySize">  Size of the RSA key. </param>
            <example>
                <code source="Examples\RSASignature.Constructor2.cs" language="cs" />
                <code source="Examples\RSASignature.Constructor2.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.RSASignature.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Babel.Licensing.RSASignature" /> class.
            </summary>
            <example>
                <code source="Examples\RSASignature.Constructor1.cs" language="cs" />
                <code source="Examples\RSASignature.Constructor1.vb" language="vbnet" />
            </example>
        </member>
        <member name="P:Babel.Licensing.RSASignature.AlgorithmName">
            <summary>
                 Gets the name of the sign algorithm.
             </summary>
            <value>
                 The name of the sign algorithm.
             </value>
        </member>
        <member name="M:Babel.Licensing.RSASignature.CreateKeyPair">
            <summary>
                Creates a new key pair.
            </summary>
            <seealso cref="T:Babel.Licensing.RSASignature" />
        </member>
        <member name="M:Babel.Licensing.RSASignature.SignData(System.Byte[])">
            <summary>
                 Generate the signature for the given data.
             </summary>
            <param name="data"> The data to sign. </param>
            <returns>
                 Returns the generated signature.
             </returns>
            <seealso cref="T:Babel.Licensing.RSASignature" />
        </member>
        <member name="M:Babel.Licensing.RSASignature.VerifyData(System.Byte[],System.Byte[])">
            <summary>
                 Verify the signature of a given data buffer.
             </summary>
            <param name="data">         The data to verify. </param>
            <param name="signature">    The signature buffer. </param>
            <returns>
                <c>true</c> if the signature is valid, <c>false</c> if is not valid.
             </returns>
            <seealso cref="T:Babel.Licensing.RSASignature" />
        </member>
        <member name="M:Babel.Licensing.RSASignature.WritePem(System.String,System.Boolean)">
            <summary>
                 Writes the signature using PEM format to the specified file.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when one or more arguments have unsupported or illegal values.
             </exception>
            <param name="path">             The file path. </param>
            <param name="publicKeyOnly">    Whether to write only public key data. </param>
            <example>
                <code source="Examples\RSASignature.WritePem.cs" language="cs" />
                <code source="Examples\RSASignature.WritePem.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.RSASignature.WritePem(System.IO.Stream,System.Boolean)">
            <summary>
                 Writes the signature using PEM format to the specified stream.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="stream">           The stream to write. </param>
            <param name="publicKeyOnly">    Whether to write only public key data. </param>
        </member>
        <member name="M:Babel.Licensing.RSASignature.ExportKeys(System.Boolean)">
            <summary>
                 Export RSA keys as base 64 encoded string.
             </summary>
            <param name="publicKeyOnly">    Whether to write only public key data. </param>
            <returns>
                 The base 64 encoded RSA key.
             </returns>
        </member>
        <member name="M:Babel.Licensing.RSASignature.ImportKeys(System.String)">
            <summary>
                 Import RSA keys.
             </summary>
            <exception cref="T:System.ArgumentNullException">        Thrown when one or more required arguments are null. </exception>
            <exception cref="T:System.InvalidOperationException">    Thrown when the requested operation is invalid. </exception>
            <param name="rsaKey">   The base64 encoded string RSA key. </param>
        </member>
        <member name="M:Babel.Licensing.RSASignature.ImportRSA(System.Security.Cryptography.RSA)">
            <summary>
                 Import RSA keys.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="rsa">  The RSA algorithm. </param>
        </member>
        <member name="M:Babel.Licensing.RSASignature.ToRSA">
            <summary>
                 Converts this object to a <see cref="T:System.Security.Cryptography.RSA" />.
             </summary>
            <exception cref="T:System.InvalidOperationException">
                 Thrown when the requested operation is invalid.
             </exception>
            <returns>
                 This object as a RSA.
             </returns>
        </member>
        <member name="M:Babel.Licensing.RSASignature.CreateFromKeyFile(System.String,System.String)">
            <summary>
                 Creates an instance of <see cref="T:Babel.Licensing.RSASignature" /> from the specified key pair file.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the keyFile argument is null.
             </exception>
            <param name="keyFile">  The key pair file path. This can be an SNK or PFX file. </param>
            <param name="password"> (Optional) the key password. </param>
            <returns>
                 The created <see cref="T:Babel.Licensing.RSASignature" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.RSASignature.CreateFromKeyContainer(System.String)">
            <summary>
                 Creates an instance of <see cref="T:Babel.Licensing.RSASignature" /> from the specified key container.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the container argument is null.
             </exception>
            <param name="container">    The key container name. </param>
            <returns>
                 The created <see cref="T:Babel.Licensing.RSASignature" /> object.
             </returns>
        </member>
        <member name="T:Babel.Licensing.XmlDigitalSignature">
            <summary>
                Provides a means to read and validate and digitally sign XML documents.
            </summary>
            <seealso cref="T:Babel.Licensing.ECDsaSignature" />
            <seealso cref="T:Babel.Licensing.RSASignature" />
        </member>
        <member name="F:Babel.Licensing.XmlDigitalSignature.XmlDSigNamespace">
            <summary>
                The XML digital signature namespace.
            </summary>
        </member>
        <member name="P:Babel.Licensing.XmlDigitalSignature.RSA">
            <summary>
                 Gets or sets the <see cref="T:System.Security.Cryptography.RSA" /> algorithm.
             </summary>
            <value>
                 The <see cref="T:System.Security.Cryptography.RSA" /> algorithm.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlDigitalSignature.GenerateKeyInfo">
            <summary>
                 Gets or sets a value indicating whether the generate key information.
             </summary>
            <value>
                 true if generate key information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlDigitalSignature.SignatureValue">
            <summary>
                 Gets the signature value.
             </summary>
            <value>
                 The signature value.
             </value>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.#ctor(System.Security.Cryptography.RSA)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.XmlDigitalSignature" /> class with the specified RSA algorithm.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the rsa argument is null.
             </exception>
            <param name="rsa"> The RSA algorithm. </param>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.#ctor(System.Security.Cryptography.RSA,System.Boolean)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.XmlDigitalSignature" />
                 class with the specified RSA algorithm.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="rsa">              The RSA algorithm. </param>
            <param name="generateKeyInfo">  true to add public key information to signature element, false if not. </param>
        </member>
        <member name="P:Babel.Licensing.XmlDigitalSignature.AlgorithmName">
            <summary>
                 Gets the name of the sign algorithm.
             </summary>
            <value>
                 The name of the sign algorithm.
             </value>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.Babel#Licensing#ISignatureProvider#SignData(System.Byte[])">
            <summary>
                 Generate the signature for the given data.
             </summary>
            <param name="data"> The data to sign. </param>
            <returns>
                 Returns the generated signature.
             </returns>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.Babel#Licensing#ISignatureProvider#VerifyData(System.Byte[],System.Byte[])">
            <summary>
                 Verify the signature of a given data buffer.
             </summary>
            <param name="data">         The data to verify. </param>
            <param name="signature">    The signature buffer. </param>
            <returns>
                <c>true</c> if the signature is valid, <c>false</c> if is not valid.
             </returns>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.WritePem(System.String,System.Boolean)">
            <summary>
                 Writes the signature using PEM format to the specified file.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when one or more arguments have unsupported or illegal values.
             </exception>
            <param name="path">             The file path. </param>
            <param name="publicKeyOnly">    Whether to write only public key data. </param>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.WritePem(System.IO.Stream,System.Boolean)">
            <summary>
                 Writes the signature using PEM format to the specified stream.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="stream">           The stream to write. </param>
            <param name="publicKeyOnly">    Whether to write only public key data. </param>
        </member>
        <member name="P:Babel.Licensing.XmlDigitalSignature.HasPublicKey">
            <summary>
                 Gets a value indicating whether this object has public key.
             </summary>
            <value>
                 true if this object has public key, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlDigitalSignature.HasPrivateKey">
            <summary>
                 Gets a value indicating whether this object has private key.
             </summary>
            <value>
                 true if this object has private key, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlDigitalSignature.KeyPair">
            <summary>
                 Gets or sets the RSA key pair.
             </summary>
            <value>
                 The RSA key pair.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlDigitalSignature.HasKeySize">
            <summary>
                 Gets a value indicating whether this object has key size.
             </summary>
            <value>
                 True if this object has key size, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlDigitalSignature.KeySize">
            <summary>
                 Gets the key size.
             </summary>
            <value>
                 The size of the key.
             </value>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.CreateFromSignedXml(System.String)">
            <summary>
                 Creates an <see cref="T:Babel.Licensing.XmlDigitalSignature" /> object from the digitally signed XML document.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when the XML is not digitally signed.
             </exception>
            <param name="xml">  The digitally signed XML document. </param>
            <returns>
                 The created <see cref="T:Babel.Licensing.XmlDigitalSignature" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.CreateFromKeyFile(System.String,System.String)">
            <summary>
                 Creates an instance of <see cref="T:Babel.Licensing.XmlDigitalSignature" /> from the specified key pair file.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the keyFile argument is null.
             </exception>
            <param name="keyFile">  The key pair file path. This can be an SNK or PFX file. </param>
            <param name="password"> (Optional) the key password. </param>
            <returns>
                 The created <see cref="T:Babel.Licensing.XmlDigitalSignature" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.CreateFromKeyContainer(System.String)">
            <summary>
                 Creates an instance of <see cref="T:Babel.Licensing.XmlDigitalSignature" /> from the specified key container.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the container argument is null.
             </exception>
            <param name="container">    The key container name. </param>
            <returns>
                 The created <see cref="T:Babel.Licensing.XmlDigitalSignature" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.ToRSASignature">
            <summary>
                 Converts this object to an <see cref="T:Babel.Licensing.RSASignature" /> object.
             </summary>
            <returns>
                 The <see cref="T:Babel.Licensing.RSASignature" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.LoadXml(System.String)">
            <summary>
                 Loads an XML file to sign.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="xml">  The XML document. </param>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.Sign">
            <summary>
                Sign the XML.
            </summary>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.VerifySignature">
            <summary>
                 Verify the XML digital signature.
             </summary>
            <returns>
                 true if the signature is valid, false if not.
             </returns>
        </member>
        <member name="M:Babel.Licensing.XmlDigitalSignature.WriteXml(System.Xml.XmlWriter)">
            <summary>
                 Writes the XML to the specified <see cref="T:System.Xml.XmlWriter" />.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="writer">   The XML writer. </param>
        </member>
        <member name="T:Babel.Licensing.HexEncoding">
            <summary>
                Converts between binary data and an hex-encoded string.
                This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Babel.Licensing.HexEncoding.TryDecode(System.String,System.Byte[]@)">
            <summary>
                 Attempts to decode from the given data.
             </summary>
            <param name="encoded">  The encoded string. </param>
            <param name="buffer">   [out] The buffer. </param>
            <returns>
                 true if it succeeds, false if it fails.
             </returns>
        </member>
        <member name="M:Babel.Licensing.HexEncoding.Decode(System.String)">
            <summary>
                 Decodes the given hex string to its byte representation.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="encoded">  The encoded string. </param>
            <returns>
                 The decoded string buffer.
             </returns>
            <example>
                <code source="Examples\HexEncoding.cs" language="cs" />
                <code source="Examples\HexEncoding.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.HexEncoding.Encode(System.Byte[])">
            <summary>
                 Encodes the given buffer to an hex string.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="buffer">   The buffer. </param>
            <returns>
                 The encoded hex string.
             </returns>
            <example>
                <code source="Examples\HexEncoding.cs" language="cs" />
                <code source="Examples\HexEncoding.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.HexEncoding.IsValidChar(System.Char)">
            <summary>
                 Query if the given character is a valid hex character.
             </summary>
            <param name="value">   The input character. </param>
            <returns>
                 true if valid character, false if not.
             </returns>
        </member>
        <member name="T:Babel.Licensing.Feature">
            <summary>
                Represents a license feature. A feature is used typically to enable additional.  
            </summary>
        </member>
        <member name="P:Babel.Licensing.Feature.Listeners">
            <summary>
                 Gets the listeners.
             </summary>
            <value>
                 The listeners.
             </value>
        </member>
        <member name="P:Babel.Licensing.Feature.Id">
            <summary>
                 Gets or sets the feature identifier.
             </summary>
            <value>
                 The feature identifier.
             </value>
        </member>
        <member name="P:Babel.Licensing.Feature.Name">
            <summary>
                 Gets or sets the feature name.
             </summary>
            <value>
                 The feature name.
             </value>
        </member>
        <member name="P:Babel.Licensing.Feature.Description">
            <summary>
                 Gets or sets the feature description.
             </summary>
            <value>
                 The feature description.
             </value>
        </member>
        <member name="P:Babel.Licensing.Feature.ExpireDate">
            <summary>
                 Gets or sets the feature expire date.
             </summary>
            <value>
                 The feature expire date.
             </value>
        </member>
        <member name="P:Babel.Licensing.Feature.Data">
            <summary>
                 Gets or sets the data associated with this feature.
             </summary>
            <value>
                 An array of bytes that contains the data contained in this feature.
             </value>
        </member>
        <member name="P:Babel.Licensing.Feature.Key">
            <summary>
                 Gets or sets the feature key. This is an additional field used to store encrypt key information.
             </summary>
            <value>
                 The feature key.
             </value>
        </member>
        <member name="M:Babel.Licensing.Feature.#ctor">
            <summary>
                Specialized default constructor for use only by derived class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.Feature.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.Feature" /> class with a given feature name.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when the parameter name is null. </exception>
            <param name="name"> The feature name. </param>
            <example>
                <code source="Examples\Feature.Constructor1.cs" language="cs" />
                <code source="Examples\Feature.Constructor1.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Feature.#ctor(System.String,System.Byte[])">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.Feature" />
                 class with a given feature name and data.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="name"> The feature name. </param>
            <param name="data"> An array of bytes that contains the data related to this feature. </param>
            <example>
                <code source="Examples\Feature.Constructor1.cs" language="cs" />
                <code source="Examples\Feature.Constructor1.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Feature.#ctor(Babel.Licensing.Feature)">
            <summary>
                 Copy constructor.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when the parameter other to copy is null. </exception>
            <param name="other">    The Feature object to copy. </param>
        </member>
        <member name="M:Babel.Licensing.Feature.Attach(Babel.Licensing.IObjectListener)">
            <summary>
                 Attaches the given listener.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="listener"> The listener. </param>
        </member>
        <member name="M:Babel.Licensing.Feature.Detach(Babel.Licensing.IObjectListener)">
            <summary>
                 Detaches the given listener.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="listener"> The listener. </param>
        </member>
        <member name="M:Babel.Licensing.Feature.Notify(System.Object[])">
            <summary>
                 Notifies registered listeners.
             </summary>
            <param name="args"> A variable-length parameters list containing arguments. </param>
        </member>
        <member name="T:Babel.Licensing.Field">
            <summary>
                Represents a license field used to store key value pairs in a license.
            </summary>
        </member>
        <member name="P:Babel.Licensing.Field.Listeners">
            <summary>
                 Gets the listeners.
             </summary>
            <value>
                 The listeners.
             </value>
        </member>
        <member name="P:Babel.Licensing.Field.Id">
            <summary>
                 Gets or sets the field identifier.
             </summary>
            <value>
                 The field identifier.
             </value>
        </member>
        <member name="P:Babel.Licensing.Field.Name">
            <summary>
                 Gets or sets the field name.
             </summary>
            <value>
                 The field name.
             </value>
        </member>
        <member name="P:Babel.Licensing.Field.Value">
            <summary>
                 Gets or sets the field value.
             </summary>
            <value>
                 The value stored into this field object.
             </value>
        </member>
        <member name="M:Babel.Licensing.Field.#ctor">
            <summary>
                Specialized default constructor for use only by derived class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.Field.#ctor(System.String,System.String)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.Field" /> class with the given name and value.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="name">     The field name. </param>
            <param name="value">    The value stored into this field object. </param>
            <example>
                <code source="Examples\Field.Constructor1.cs" language="cs" />
                <code source="Examples\Field.Constructor1.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Field.#ctor(System.String)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.Field" /> class with the given field name.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when the parameter name is null. </exception>
            <param name="name"> The field name. </param>
        </member>
        <member name="M:Babel.Licensing.Field.#ctor(Babel.Licensing.Field)">
            <summary>
                 Copy constructor.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when the parameter other to copy is null. </exception>
            <param name="other">    The Field object to copy. </param>
        </member>
        <member name="M:Babel.Licensing.Field.Attach(Babel.Licensing.IObjectListener)">
            <summary>
                 Attaches the given listener.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="listener"> The listener. </param>
        </member>
        <member name="M:Babel.Licensing.Field.Detach(Babel.Licensing.IObjectListener)">
            <summary>
                 Detaches the given listener.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="listener"> The listener. </param>
        </member>
        <member name="M:Babel.Licensing.Field.Notify(System.Object[])">
            <summary>
                 Notifies registered listeners.
             </summary>
            <param name="args"> A variable-length parameters list containing arguments. </param>
        </member>
        <member name="T:Babel.Licensing.HardwareComponents">
            <summary>
                A bitfield of flags for specifying hardware components.
            </summary>
            <seealso cref="T:Babel.Licensing.HardwareId" />
        </member>
        <member name="F:Babel.Licensing.HardwareComponents.Cpu">
            <summary>
                A binary constant representing the CPU flag.
            </summary>
        </member>
        <member name="F:Babel.Licensing.HardwareComponents.Ethernet">
            <summary>
                A binary constant representing the Ethernet cards flag.
            </summary>
        </member>
        <member name="F:Babel.Licensing.HardwareComponents.Disk">
            <summary>
                A binary constant representing the disk flag.
            </summary>
        </member>
        <member name="F:Babel.Licensing.HardwareComponents.Motherboard">
            <summary>
                A binary constant representing the Motherboard flag.
            </summary>
        </member>
        <member name="F:Babel.Licensing.HardwareComponents.Bios">
            <summary>
                A binary constant representing the BIOS flag.
            </summary>
        </member>
        <member name="F:Babel.Licensing.HardwareComponents.SystemName">
            <summary>
                A binary constant representing the system name flag.
            </summary>
        </member>
        <member name="F:Babel.Licensing.HardwareComponents.All">
            <summary>
                A binary constant representing all flag.
            </summary>
        </member>
        <member name="T:Babel.Licensing.HardwareId">
            <summary>
                A hardware identifier.
            </summary>
        </member>
        <member name="P:Babel.Licensing.HardwareId.Salt">
            <summary>
                 Gets or sets the seed used to generate the key.
             </summary>
            <value>
                 A value used to seed the generated key.
             </value>
        </member>
        <member name="P:Babel.Licensing.HardwareId.RequiredComponents">
            <summary>
                 Gets or sets the hardware components required to generate the hardware key identifier.
             </summary>
            <value>
                 The required hardware components.
             </value>
        </member>
        <member name="M:Babel.Licensing.HardwareId.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Babel.Licensing.HardwareId" /> class.
            </summary>
            <example> This example show how to generate an hardware key using the computer name.
            
                <code language="cs">
                    HardwareId hardwareId = new HardwareId();
                    string hardwareKey = hardwareId.ToMachineKey();
                </code><code language="vbnet">
                    Dim hardwareId As New HardwareId()
                    Dim hardwareKey As String = hardwareId.ToMachineKey()
                </code></example>
        </member>
        <member name="M:Babel.Licensing.HardwareId.#ctor(Babel.Licensing.HardwareComponents)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.HardwareId" /> class
                 with the specified hardware components.
             </summary>
            <param name="components">   The hardware components used to generate the machine key. </param>
            <example> This example show how to generate an hardware key using the disk serial number 
                       and the Ethernet MAC address information.
             
                 <code language="cs">
                     HardwareId hardwareId = new HardwareId(HardwareComponents.Disk | HardwareComponents.Ethernet);
                     string hardwareKey = hardwareId.ToMachineKey();
                 </code><code language="vbnet">
                     Dim hardwareId As New HardwareId(HardwareComponents.Disk Or HardwareComponents.Ethernet)
                     Dim hardwareKey As String = hardwareId.ToMachineKey()
                 </code></example>
        </member>
        <member name="M:Babel.Licensing.HardwareId.#ctor(Babel.Licensing.HardwareComponents,System.Byte[])">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.HardwareId" />
                 class with the specified hardware components and salt byte array to seed the key.
             </summary>
            <param name="components">   The hardware components used to generate the machine key. </param>
            <param name="salt">         A value used to seed the generated key. </param>
            <example> This example shows how to create an hardware key with two bytes random salt.
             
                <code source="Examples\HardwareId.Salt.cs" language="cs" /><code source="Examples\HardwareId.Salt.vb" language="vbnet" /></example>
        </member>
        <member name="M:Babel.Licensing.HardwareId.ToMachineKey(System.Int32)">
            <summary>
                 Converts this object to a machine key.
             </summary>
            <param name="tokenSize">    (Optional) Size of the readable token. </param>
            <exception cref="T:System.ArgumentException">
                 Thrown when one or more arguments have unsupported or illegal values.
             </exception>
            <returns>
                 A string that represents the hardware components.
             </returns>
        </member>
        <member name="M:Babel.Licensing.HardwareId.IsValid(System.String)">
            <summary>
                 Query if 'key' is valid.
             </summary>
            <exception cref="T:System.ArgumentNullException">    
                 Thrown when one or more required arguments are null. </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when one or more arguments have unsupported or illegal values.
             </exception>
            <param name="key">  The key. </param>
            <returns>
                 true if valid, false if not.
             </returns>
        </member>
        <member name="T:Babel.Licensing.ICreateCustomRestriction">
            <summary>
                Interface for create custom restriction.
            </summary>
        </member>
        <member name="E:Babel.Licensing.ICreateCustomRestriction.CreateCustomRestriction">
            <summary>
                Event queue for all listeners interested in CreateCustomRestriction events.
            </summary>
        </member>
        <member name="T:Babel.Licensing.ICreateCustomSignatureProvider">
            <summary>
                Interface for create custom signature provider.
            </summary>
        </member>
        <member name="E:Babel.Licensing.ICreateCustomSignatureProvider.CreateCustomSignatureProvider">
            <summary>
                Event queue for all listeners interested in CreateCustomSignatureProvider events.
            </summary>
        </member>
        <member name="T:Babel.Licensing.IdFormat">
            <summary>
                Values that represent various ID formats.
            </summary>
            <example>
                <code source="Examples\IdGenerator.cs" language="cs" />
                <code source="Examples\IdGenerator.vb" language="vbnet" />
            </example>
            <seealso cref="T:Babel.Licensing.IdGenerator" />
        </member>
        <member name="F:Babel.Licensing.IdFormat.Hex">
            <summary>
                Hexadecimal string format.
            </summary>
        </member>
        <member name="F:Babel.Licensing.IdFormat.Decimal">
            <summary>
                Decimal string format.
            </summary>
        </member>
        <member name="F:Babel.Licensing.IdFormat.Base32">
            <summary>
                Base 32 string format.
            </summary>
        </member>
        <member name="T:Babel.Licensing.IdGenerator">
            <summary>
                A license identifier generator. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Babel.Licensing.IdGenerator.Prefix">
            <summary>
                 Gets or sets the identifier prefix.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <value>
                 Returns the identifier prefix.
             </value>
        </member>
        <member name="P:Babel.Licensing.IdGenerator.Length">
            <summary>
                 Gets or sets the identifier length.
             </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 Thrown when one or more arguments are outside the required range.
             </exception>
            <value>
                 The identifier length.
             </value>
        </member>
        <member name="P:Babel.Licensing.IdGenerator.Format">
            <summary>
                 Gets or sets the format to use.
             </summary>
            <value>
                 The format.
             </value>
        </member>
        <member name="M:Babel.Licensing.IdGenerator.#ctor(System.String,System.Int32)">
            <summary>
                 Generate a new instance of <see cref="T:Babel.Licensing.IdGenerator" /> class specifying 
                 the identifier prefix and length.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the prefix argument is null.
             </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 Thrown when the length argument is less or equal to zero.
             </exception>
            <param name="prefix">   The identifier prefix. </param>
            <param name="length">   The total identifier string length. </param>
        </member>
        <member name="M:Babel.Licensing.IdGenerator.#ctor(System.String)">
            <summary>
                 Generate a new instance of <see cref="T:Babel.Licensing.IdGenerator" /> class specifying
                 the identifier prefix.
             </summary>
            <param name="prefix">   The identifier prefix. </param>
            <example>
                <code source="Examples\IdGenerator.Constructor1.cs" language="cs" />
                <code source="Examples\IdGenerator.Constructor1.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.IdGenerator.#ctor">
            <summary>
                Generate a new instance of <see cref="T:Babel.Licensing.IdGenerator" /> class.
            </summary>
            <example>
                <code source="Examples\IdGenerator.cs" language="cs" />
                <code source="Examples\IdGenerator.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.IdGenerator.Create(System.String,System.Int32)">
            <summary>
                 Creates a new identifier string with given prefix.
             </summary>
            <param name="prefix">   The identifier prefix. </param>
            <param name="length">   The total identifier string length. </param>
            <returns>
                 A string.
             </returns>
        </member>
        <member name="M:Babel.Licensing.IdGenerator.CreateId">
            <summary>
                 Creates the a new identifier string.
             </summary>
            <returns>
                 The new identifier.
             </returns>
        </member>
        <member name="T:Babel.Licensing.IEnvironmentInformation">
            <summary>
                Provides a mechanism for retrieving environment information.
            </summary>
        </member>
        <member name="P:Babel.Licensing.IEnvironmentInformation.IsVirtualEnvironment">
            <summary>
                 Gets a value indicating whether this object is running in a virtual environment.
             </summary>
            <value>
                 true if this object is virtual environment, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.IEnvironmentInformation.VirtualEnvironment">
            <summary>
                 Gets the virtual environment name.
             </summary>
            <value>
                 The virtual environment name.
             </value>
        </member>
        <member name="P:Babel.Licensing.IEnvironmentInformation.IsSystemClockRollback">
            <summary>
                 Gets a value indicating whether the system clock was set back.
             </summary>
            <value>
                 true if the system clock was set back, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.IEnvironmentInformation.InstanceCount">
            <summary>
                 Gets the application instance number.
             </summary>
            <value>
                 The application instance number.
             </value>
        </member>
        <member name="P:Babel.Licensing.IEnvironmentInformation.ApplicationName">
            <summary>
                 Gets the name of the application.
             </summary>
            <value>
                 The name of the application.
             </value>
        </member>
        <member name="P:Babel.Licensing.IEnvironmentInformation.ApplicationVersion">
            <summary>
                 Gets the application version.
             </summary>
            <value>
                 The version of the application.
             </value>
        </member>
        <member name="P:Babel.Licensing.IEnvironmentInformation.ProcessName">
            <summary>
                 Gets the name of the process.
             </summary>
            <value>
                 The name of the process.
             </value>
        </member>
        <member name="P:Babel.Licensing.IEnvironmentInformation.Is64BitProcess">
            <summary>
                 Whether the current process is a 64-bit process.
             </summary>
            <value>
                 true if the process is 64-bit; otherwise, false.
             </value>
        </member>
        <member name="M:Babel.Licensing.IEnvironmentInformation.GetLicenseUsageMode(Babel.Licensing.ILicenseContext)">
            <summary>
                 Gets license usage mode.
             </summary>
            <param name="context">  The license context. </param>
            <returns>
                 The license usage mode.
             </returns>
        </member>
        <member name="T:Babel.Licensing.ILicense">
            <summary>
                Defines a common interface for license objects.
            </summary>
        </member>
        <member name="P:Babel.Licensing.ILicense.Id">
            <summary>
                 Gets or sets the license identifier.
             </summary>
            <value>
                 The license identifier.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.Type">
            <summary>
                 Gets or sets the license type.
             </summary>
            <value>
                 The license type.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.Sites">
            <summary>
                 Gets or sets the number of sites to license.
             </summary>
            <value>
                 The licensed sites.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.LicenseKey">
            <summary>
                 Gets the license key.
             </summary>
            <value>
                 The license key.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.IssueDate">
            <summary>
                 Gets or sets the license issue date.
             </summary>
            <value>
                 The license issue date.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.ExpireDate">
            <summary>
                 Gets or sets the license expire date.
             </summary>
            <value>
                 The license expire date.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.SupportExpireDate">
            <summary>
                 Gets or sets the license support expire date.
             </summary>
            <value>
                 The license support expire date.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.Licensee">
            <summary>
                 Gets or sets the <see cref="T:Babel.Licensing.Licensee" /> information.
             </summary>
            <value>
                 An instance of a <see cref="T:Babel.Licensing.Licensee" /> object or a null reference 
                 (Nothing in Visual Basic) if no licensee information is available.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.Product">
            <summary>
                 Gets or sets the licensed product information.
             </summary>
            <value>
                 An instance of a <see cref="T:Babel.Licensing.Product" /> object or a null reference 
                 (Nothing in Visual Basic) if no product information is available.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.Assemblies">
            <summary>
                 Gets the collection of licensed assemblies full names.
             </summary>
            <value>
                 The licensed assemblies collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.Components">
            <summary>
                 Gets the licensed components collection.
             </summary>
            <value>
                 The licensed components collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.Features">
            <summary>
                 Gets the collection of license <see cref="T:Babel.Licensing.Feature" />.
             </summary>
            <value>
                 The <see cref="T:Babel.Licensing.Feature" /> collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.Fields">
            <summary>
                 Gets the collection of license <see cref="T:Babel.Licensing.Field" />.
             </summary>
            <value>
                 The <see cref="T:Babel.Licensing.Field" /> collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicense.Restrictions">
            <summary>
                 Gets the collection of <see cref="T:Babel.Licensing.Restriction" /> objects.
             </summary>
            <value>
                 The collection of <see cref="T:Babel.Licensing.Restriction" /> objects.
             </value>
        </member>
        <member name="T:Babel.Licensing.ILicenseSerializable">
            <summary>
                Defines a common interface for objects that can be serialized into licenses.
            </summary>
        </member>
        <member name="M:Babel.Licensing.ILicenseSerializable.Write(System.Object)">
            <summary>
                 Write the object to a license.
             </summary>
            <param name="context"> The context to which the object is serialized. </param>
        </member>
        <member name="M:Babel.Licensing.ILicenseSerializable.Read(System.Object)">
            <summary>
                 Read the object from a license.
             </summary>
            <param name="context"> The context from which the object is deserialized. </param>
        </member>
        <member name="T:Babel.Licensing.ILicenseBuilderProvider">
            <summary>
                Interface for license builder provider.
            </summary>
        </member>
        <member name="M:Babel.Licensing.ILicenseBuilderProvider.GetLicenseBuilder">
            <summary>
                 Gets an instance of an object that implements <see cref="T:Babel.Licensing.ILicenseBuilder" /> interfaces.
             </summary>
            <returns>
                 The license builder object.
             </returns>
        </member>
        <member name="T:Babel.Licensing.ILicenseBuilderProvider`1">
            <summary>
                 Interface for license builder provider.
             </summary>
            <typeparam name="T"> Generic type parameter. </typeparam>
        </member>
        <member name="T:Babel.Licensing.ILicenseBuilder">
            <summary>
                Interface for license builder.
            </summary>
        </member>
        <member name="M:Babel.Licensing.ILicenseBuilder.Load(System.IO.Stream)">
            <summary>
                 Loads the license from the specified file.
             </summary>
            <param name="stream"> Specify the input stream. </param>
        </member>
        <member name="M:Babel.Licensing.ILicenseBuilder.Save(System.IO.Stream)">
            <summary>
                 Saves a copy of the license into the specified file.
             </summary>
            <param name="stream"> Specify the output stream. </param>
        </member>
        <member name="M:Babel.Licensing.ILicenseBuilder.AddOrUpdate(Babel.Licensing.ILicense)">
            <summary>
                 Adds a <see cref="T:Babel.Licensing.ILicense" /> with a given key <see cref="P:Babel.Licensing.ILicense.Id" />
                 to the builder if the license does not already exists, or updates the <see cref="T:Babel.Licensing.ILicense" />
                 if the key already exists.
             </summary>
            <param name="license"> The <see cref="T:Babel.Licensing.ILicense" /> object. </param>
        </member>
        <member name="M:Babel.Licensing.ILicenseBuilder.Remove(Babel.Licensing.ILicense)">
            <summary>
                 Removes a <see cref="T:Babel.Licensing.ILicense" /> with a given key <see cref="P:Babel.Licensing.ILicense.Id" />
                 from the builder.
             </summary>
            <param name="license"> The <see cref="T:Babel.Licensing.ILicense" /> object to be removed. </param>
            <returns>
                 true if it succeeds, false if it fails.
             </returns>
        </member>
        <member name="M:Babel.Licensing.ILicenseBuilder.ToLicenses">
            <summary>
                 Converts the current builder state to a collection of <see cref="T:Babel.Licensing.ILicense" /> objects.
             </summary>
            <returns>
                 The current state as a collection of <see cref="T:Babel.Licensing.ILicense" /> objects.
             </returns>
        </member>
        <member name="P:Babel.Licensing.ILicenseBuilder.SignatureProvider">
            <summary>
                 Gets or sets the signature provider.
             </summary>
            <value>
                 The signature provider type <see cref="T:Babel.Licensing.ISignatureProvider" />.
             </value>
        </member>
        <member name="M:Babel.Licensing.ILicenseBuilder.Sign">
            <summary>
                Add a signature to the license object.
            </summary>
        </member>
        <member name="M:Babel.Licensing.ILicenseBuilder.Validate">
            <summary>
                 Validates the license signature.
             </summary>
            <returns>
                 true if it succeeds, false if it fails.
             </returns>
        </member>
        <member name="T:Babel.Licensing.ContextSettings">
            <summary>
                Provides the class used to configure license validation.
            </summary>
        </member>
        <member name="P:Babel.Licensing.ContextSettings.RefreshTime">
            <summary>
                 Gets or sets the refresh time after which the context is reloaded.
                 Is not set the license will be always reloaded.
             </summary>
            <value>
                 The refresh time or null.
             </value>
        </member>
        <member name="P:Babel.Licensing.ContextSettings.CheckSystemTimeRoollback">
            <summary>
                 Gets or sets a value that indicates whether to check that 
                 the system clock has been set back.
             </summary>
            <value>
                 true if we want to check that the system clock has been set back, false if not.
             </value>
        </member>
        <member name="T:Babel.Licensing.ILicenseContext">
            <summary>
                Interface for license context.
            </summary>
        </member>
        <member name="P:Babel.Licensing.ILicenseContext.ContextName">
            <summary>
                 Gets the name of the context.
             </summary>
            <value>
                 The name of the context.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicenseContext.FallbackContext">
            <summary>
                 Gets or sets a context for the fallback.
             </summary>
            <value>
                 The fallback context.
             </value>
        </member>
        <member name="P:Babel.Licensing.ILicenseContext.Settings">
            <summary>
                 Gets or sets license context options.
             </summary>
            <value>
                 The license context settings.
             </value>
        </member>
        <member name="M:Babel.Licensing.ILicenseContext.LoadLicenseKey(System.Type)">
            <summary>
                 Loads license key.
             </summary>
            <param name="type"> The type. </param>
            <returns>
                 The license key.
             </returns>
        </member>
        <member name="M:Babel.Licensing.ILicenseContext.SaveLicenseKey(System.Type,System.String)">
            <summary>
                 Saves a license key.
             </summary>
            <param name="type"> The type. </param>
            <param name="key">  The key. </param>
        </member>
        <member name="T:Babel.Licensing.ILicenseProvider">
            <summary>
                Interface for license providers.
            </summary>
        </member>
        <member name="M:Babel.Licensing.ILicenseProvider.GetLicense(Babel.Licensing.ILicenseContext,System.Type,System.Object)">
            <summary>
                 Gets a license for an instance or type of component.
             </summary>
            <param name="context">  A <see cref="T:Babel.Licensing.ILicenseContext" /> that specifies where you can use the licensed object. </param>
            <param name="type">     A <see cref="T:System.Type" /> that represents the component requesting the license. </param>
            <param name="instance"> An object that is requesting the license. </param>
            <returns>
                 A valid license.
             </returns>
        </member>
        <member name="T:Babel.Licensing.INetworkInformation">
            <summary>
                Provides a mechanism for retrieving network information.
            </summary>
        </member>
        <member name="P:Babel.Licensing.INetworkInformation.NetworkDomains">
            <summary>
                 Gets the network domains.
             </summary>
            <value>
                 The network domains.
             </value>
        </member>
        <member name="P:Babel.Licensing.INetworkInformation.NetworkIPs">
            <summary>
                 Gets the network IP addresses.
             </summary>
            <value>
                 The network IPs.
             </value>
        </member>
        <member name="T:Babel.Licensing.IObjectListener">
            <summary>
                Interface for listener.
            </summary>
        </member>
        <member name="M:Babel.Licensing.IObjectListener.Update(Babel.Licensing.IObservableObject,System.Object[])">
            <summary>
                 Updates this object.
             </summary>
            <param name="observable">   The observable object. </param>
            <param name="args">         A variable-length parameters list containing arguments. </param>
        </member>
        <member name="T:Babel.Licensing.IObservableObject">
            <summary>
                Interface for observable object.
            </summary>
        </member>
        <member name="M:Babel.Licensing.IObservableObject.Attach(Babel.Licensing.IObjectListener)">
            <summary>
                 Attaches the given listener.
             </summary>
            <param name="listener"> The listener. </param>
        </member>
        <member name="M:Babel.Licensing.IObservableObject.Detach(Babel.Licensing.IObjectListener)">
            <summary>
                 Detaches the given listener.
             </summary>
            <param name="listener"> The listener. </param>
        </member>
        <member name="M:Babel.Licensing.IObservableObject.Notify(System.Object[])">
            <summary>
                 Notifies registered listeners.
             </summary>
            <param name="args"> A variable-length parameters list containing arguments. </param>
        </member>
        <member name="T:Babel.Licensing.IReadableLicenseString">
            <summary>
                Interface for readable license strings.
            </summary>
        </member>
        <member name="M:Babel.Licensing.IReadableLicenseString.ToReadableString(System.String)">
            <summary>
                 Converts the license object to a readable string.
             </summary>
            <param name="format">   Describes the format to use. </param>
            <returns>
                 The license as a string.
             </returns>
        </member>
        <member name="M:Babel.Licensing.IReadableLicenseString.Parse(System.String)">
            <summary>
                 Parse the specified license string.
             </summary>
            <param name="license">  The license string. </param>
        </member>
        <member name="T:Babel.Licensing.IRestrictionFactory">
            <summary>
                Interface for restriction factory.
            </summary>
        </member>
        <member name="M:Babel.Licensing.IRestrictionFactory.CreateRestriction(System.String)">
            <summary>
                 Creates a restriction.
             </summary>
            <param name="type"> The restriction type name. </param>
            <returns>
                 The new restriction.
             </returns>
        </member>
        <member name="T:Babel.Licensing.ISignatureProviderFactory">
            <summary>
                Interface for signature provider factory.
            </summary>
        </member>
        <member name="M:Babel.Licensing.ISignatureProviderFactory.CreateSignatureProvider(System.String)">
            <summary>
                 Creates signature provider.
             </summary>
            <param name="name"> The algorithm name. </param>
            <returns>
                 The new signature provider.
             </returns>
        </member>
        <member name="T:Babel.Licensing.ILicenseFactory">
            <summary>
                Interface for license factory.
            </summary>
        </member>
        <member name="M:Babel.Licensing.ILicenseFactory.CreateFeature(System.String)">
            <summary>
                 Creates a license feature.
             </summary>
            <param name="name"> The feature name. </param>
            <returns>
                 The new feature.
             </returns>
        </member>
        <member name="M:Babel.Licensing.ILicenseFactory.CreateField(System.String)">
            <summary>
                 Creates a license field.
             </summary>
            <param name="name"> The field name. </param>
            <returns>
                 The new field.
             </returns>
        </member>
        <member name="T:Babel.Licensing.ISignatureKeyInfo">
            <summary>
                Interface for signature key information.
            </summary>
        </member>
        <member name="P:Babel.Licensing.ISignatureKeyInfo.AlgorithmName">
            <summary>
                 Gets the name of the sign algorithm.
             </summary>
            <value>
                 The name of the sign algorithm.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISignatureKeyInfo.HasKeySize">
            <summary>
                 Gets a value indicating whether this object has key size.
             </summary>
            <value>
                 True if this object has key size, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISignatureKeyInfo.KeySize">
            <summary>
                 Gets the key size.
             </summary>
            <value>
                 The size of the key.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISignatureKeyInfo.HasPublicKey">
            <summary>
                 Gets a value indicating whether this object has public key.
             </summary>
            <value>
                 true if this object has public key, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISignatureKeyInfo.HasPrivateKey">
            <summary>
                 Gets a value indicating whether this object has private key.
             </summary>
            <value>
                 true if this object has private key, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISignatureKeyInfo.GenerateKeyInfo">
            <summary>
                 Gets or sets a value indicating whether to generate key information in the signature.
             </summary>
            <value>
                 true if generate key information, false if not.
             </value>
        </member>
        <member name="T:Babel.Licensing.ISignatureProvider">
            <summary>
                Interface for signature providers.
            </summary>
            <seealso cref="T:Babel.Licensing.ECDsaSignature" />
            <seealso cref="T:Babel.Licensing.RSASignature" />
            <seealso cref="T:Babel.Licensing.XmlDigitalSignature" />
        </member>
        <member name="P:Babel.Licensing.ISignatureProvider.AlgorithmName">
            <summary>
                 Gets the name of the sign algorithm.
             </summary>
            <value>
                 The name of the sign algorithm.
             </value>
        </member>
        <member name="M:Babel.Licensing.ISignatureProvider.SignData(System.Byte[])">
            <summary>
                 Generate the signature for the given data.
             </summary>
            <param name="data"> The data to sign. </param>
            <returns>
                 Returns the generated signature.
             </returns>
        </member>
        <member name="M:Babel.Licensing.ISignatureProvider.VerifyData(System.Byte[],System.Byte[])">
            <summary>
                 Verify the signature of a given data buffer.
             </summary>
            <param name="data">         The data to verify. </param>
            <param name="signature">    The signature buffer. </param>
            <returns>
                <c>true</c> if the signature is valid, <c>false</c> if is not valid.
             </returns>
        </member>
        <member name="T:Babel.Licensing.ISignatureWriter">
            <summary>
                Interface for signature types that can be written to a stream.
            </summary>
        </member>
        <member name="M:Babel.Licensing.ISignatureWriter.WritePem(System.IO.Stream,System.Boolean)">
            <summary>
                 Writes the signature using PEM format to the specified stream.
             </summary>
            <param name="stream">           The stream to write. </param>
            <param name="publicKeyOnly">    Whether to write only public key data. </param>
        </member>
        <member name="T:Babel.Licensing.ISystemInformation">
            <summary>
                Provides a mechanism for retrieving system information.
            </summary>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.OperatingSystem">
            <summary>
                 Gets the operating system name.
             </summary>
            <value>
                 The operating system name.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.SystemName">
            <summary>
                 Gets the name of the system.
             </summary>
            <value>
                 The name of the system.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.SystemManufacturer">
            <summary>
                 Gets the system manufacturer.
             </summary>
            <value>
                 The system manufacturer.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.SystemProductName">
            <summary>
                 Gets the system product name.
             </summary>
            <value>
                 The system product name.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.TotalPhysicalMemory">
            <summary>
                 Gets the total physical memory.
             </summary>
            <value>
                 The total physical memory in bytes.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.CurrentMemoryUsage">
            <summary>
                 Gets the current memory usage.
             </summary>
            <value>
                 The current memory usage.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.ProcessorCount">
            <summary>
                 Gets the number of physical processors.
             </summary>
            <value>
                 The number of processors.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.LogicalProcessorCount">
            <summary>
                 Gets the number of logical processors.
             </summary>
            <value>
                 The number of processors.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.ProcessorId">
            <summary>
                 Gets the CPU identifier.
             </summary>
            <value>
                 The CPU identifier.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.ProcessorName">
            <summary>
                 Gets the CPU name.
             </summary>
            <value>
                 The CPU name.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.ProcessorType">
            <summary>
                 Gets the CPU type.
             </summary>
            <value>
                 The CPU type.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.ProcessorArchitecture">
            <summary>
                 Gets the CPU architecture.
             </summary>
            <value>
                 The CPU architecture.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.ProcessorFeatures">
            <summary>
                 Gets the available CPU features.
             </summary>
            <value>
                 The processor features.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.EthernetCards">
            <summary>
                 Gets the ethernet cards.
             </summary>
            <value>
                 The ethernet cards.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.DiskSerialNumbers">
            <summary>
                 Gets the disk serial numbers.
             </summary>
            <value>
                 The disk serial numbers.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.MotherboardSerialNumber">
            <summary>
                 Gets the motherboard serial number.
             </summary>
            <value>
                 The motherboard serial number.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.BiosSerialNumber">
            <summary>
                 Gets the BIOS serial number.
             </summary>
            <value>
                 The BIOS serial number.
             </value>
        </member>
        <member name="P:Babel.Licensing.ISystemInformation.DisplayProperties">
            <summary>
                 Gets the display properties.
             </summary>
            <value>
                 The display properties.
             </value>
        </member>
        <member name="T:Babel.Licensing.KeyHelpers">
            <summary>
                String license helpers.
            </summary>
        </member>
        <member name="M:Babel.Licensing.KeyHelpers.ToReadableKey(System.String,System.Int32)">
            <summary>
                 Split the license key in tokens separated by a '-' character to provide a more convenient and
                 human readable license string.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the key argument is null.
             </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 Thrown when the tokenSize argument is a negative integer.
             </exception>
            <param name="key">          The license key. </param>
            <param name="tokenSize">    The length of each readable key token. </param>
            <returns>
                 The given key converted to human readable string.
             </returns>
            <example>
                <code language="cs">
                     // Returns XYZW5-RTJ3W-DA13M-8RCGY-OMX7Z
                     string readableKey = KeyHelpers.ToReadableKey("XYZW5RTJ3WDA13M8RCGYOMX7Z", 5);
                 </code>
                <code language="vbnet">
                     ' Returns XYZW5-RTJ3W-DA13M-8RCGY-OMX7Z
                     Dim readableKey As String = KeyHelpers.ToReadableKey("XYZW5RTJ3WDA13M8RCGYOMX7Z", 5)
                 </code>
            </example>
        </member>
        <member name="T:Babel.Licensing.Licenseable">
            <summary>
                Provides a set of static (Shared in Visual Basic) methods for objects that implement <see cref="T:Babel.Licensing.ILicense" />.
            </summary>
        </member>
        <member name="M:Babel.Licensing.Licenseable.ForAnyAssembly``1(``0)">
            <summary>
                 An extension method that is used to license all assemblies
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <typeparam name="T">    Generic type parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.ForAssembly``1(``0,System.Reflection.Assembly)">
            <summary>
                 An extension method that is used to partially fill the <see cref="T:Babel.Licensing.ILicense" />
                 objects with the information provided by the given <see cref="T:System.Reflection.Assembly" />.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic type parameter <see cref="T:Babel.Licensing.ILicense" />. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="assembly"> The assembly from which the license information are retrieved. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.ForAssembly``1(``0,System.String)">
            <summary>
                 An extension method that is used to partially fill the <see cref="T:Babel.Licensing.ILicense" />
                 objects with the information provided by the full assembly name.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic type parameter <see cref="T:Babel.Licensing.ILicense" />. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="fullName"> The assembly full name. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithId``1(``0,System.String)">
            <summary>
                 An extension method used to assign an Id to the license.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="id">       The string identifier. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithUniqueId``1(``0,System.String)">
            <summary>
                 An extension method that is used to assign a unique identifier to a license.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="prefix">   An optional identifier prefix. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithType``1(``0,System.String)">
            <summary>
                 An extension method that is used to assign the license type.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic type parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="type">     The license type. </param>
            <returns>
                 A T.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.IssuedAt``1(``0,System.Nullable{System.DateTime})">
            <summary>
                 An extension method that is used to assign the license issue date.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">        Generic type parameter. </typeparam>
            <param name="license">      The license to act on. </param>
            <param name="issueDate">    The issue date. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.ExpiresAt``1(``0,System.Nullable{System.DateTime})">
            <summary>
                 An extension method that is used to assign an expiration date to the license object.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">      The license to act on. </param>
            <param name="expireDate">   The expire date. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.SupportExpiresAt``1(``0,System.Nullable{System.DateTime})">
            <summary>
                 An extension method that is used to assign the support expiration date to the license object.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">      The license to act on. </param>
            <param name="expireDate">   The support expire date. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.LicensedTo``1(``0,System.String,System.String,System.String,System.String,System.Byte[])">
            <summary>
                 An extension method that is used to fill licensee information.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">        Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">      The license to act on. </param>
            <param name="name">         The licensee name. </param>
            <param name="contactInfo">  Information describing the contact. </param>
            <param name="company">      The licensee company. </param>
            <param name="url">          An URL where to find licensee information. </param>
            <param name="data">         Custom licensee data. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.ForProduct``1(``0,System.String,System.String,System.String,System.String,System.String)">
            <summary>
                 An extension method that is used to provide information about the licensed product.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">        Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">      The license to act on. </param>
            <param name="name">         The product name. </param>
            <param name="version">      The product version. </param>
            <param name="description">  A description about the product. </param>
            <param name="url">          An URL where to find additional product information. </param>
            <param name="copyright">    Product copyright information. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.ForAnyComponent``1(``0)">
            <summary>
                 An extension method used to license any component.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <typeparam name="T">    Generic type parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithComponents``1(``0,System.String[])">
            <summary>
                 An extension method used to add component information.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">        Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">      The license to act on. </param>
            <param name="components">   A variable-length parameters list containing the components. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithField``1(``0,System.String,System.String)">
            <summary>
                 An extension method that is used to add license fields.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.InvalidOperationException">
                 Thrown when the field with the given name is already present in the collection.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="name">     The field name. </param>
            <param name="value">    The field value. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
            <example>
                <code source="Examples\Field.Constructor1.cs" language="cs" />
                <code source="Examples\Field.Constructor1.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithFields``1(``0,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
                 An extension method that is used to add a dictionary of fields.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.InvalidOperationException">
                 Thrown when a field with a given name is already present in the field collection.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="fields">   The dictionary of license fields to add. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithFields``1(``0,Babel.Licensing.Field[])">
            <summary>
                 An extension method that is used to add several license fields.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.InvalidOperationException">
                 Thrown when a field with a given name is already present in the field collection.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="fields">   The license fields to add. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
            <example>
                <code source="Examples\Field.Constructor1.cs" language="cs" />
                <code source="Examples\Field.Constructor1.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithFeature``1(``0,System.String,System.String,System.Byte[],System.Nullable{System.DateTime},System.Byte[])">
            <summary>
                 An extension method that add a feature to the license.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.InvalidOperationException">
                 Thrown when the feature with the given name is already present in the features collection.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">      The license to act on. </param>
            <param name="name">         The feature name. </param>
            <param name="description">  A description about the feature. </param>
            <param name="data">         Custom feature data. </param>
            <param name="expires">      The feature expire date. </param>
            <param name="key">          The feature key. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
            <example>
                <code source="Examples\Feature.Constructor1.cs" language="cs" />
                <code source="Examples\Feature.Constructor1.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithFeature``1(``0,Babel.Licensing.Feature)">
            <summary>
                 An extension method that add a feature to the license.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.InvalidOperationException">
                 Thrown when the feature with the given name is already present in the features collection.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="feature">  The feature object to add. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithFeatures``1(``0,Babel.Licensing.Feature[])">
            <summary>
                 An extension method that is used to add several license <see cref="T:Babel.Licensing.Feature" /> objects.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.InvalidOperationException">
                 Thrown when a feature with a given name is already present in the feature collection.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="features"> A variable-length parameters list containing <see cref="T:Babel.Licensing.Feature" /> objects. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithRestrictions``1(``0,Babel.Licensing.Restriction[])">
            <summary>
                 An extension method that is used to add several license 
                 <see cref="T:Babel.Licensing.Restriction" /> objects.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when a restriction with a given name is already present in the restriction collection.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">      The license to act on. </param>
            <param name="restrictions"> A variable-length parameters list containing <see cref="T:Babel.Licensing.Restriction" /> objects. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.ForBetaTesters``1(``0,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
                 An extension method used to add a <see cref="T:Babel.Licensing.BetaRestriction" /> object to
                 the license.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">         Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">       The license to act on. </param>
            <param name="recentChanges"> Information about recent changes introduced with this beta release. </param>
            <param name="buildType">     The build type. </param>
            <param name="expires">       Defines a period after which this beta expires. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithTrialDays``1(``0,System.Nullable{System.Int32})">
            <summary>
                 Defines a trial license which can be used for a limited number of days.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 Thrown when one or more arguments are outside the required range.
             </exception>
            <typeparam name="T">        Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">      The license to act on. </param>
            <param name="trialDays">    The number of trial days. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
            <example>
                <code source="Examples\TrialRestriction.cs" language="cs" />
                <code source="Examples\TrialRestriction.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithTrialRunTime``1(``0,System.Nullable{System.TimeSpan})">
            <summary>
                 Defines a trial license which can run for a limited time period.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="runTime">  The trial run time. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithMaximumRunningInstances``1(``0,System.Nullable{System.Int32})">
            <summary>
                 Defines a trial license that allow only given number of application instances running simultaneously.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 Thrown when one or more arguments are outside the required range.
             </exception>
            <typeparam name="T">            Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">          The license to act on. </param>
            <param name="instanceCount">    Number of permitted instances. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithMaximumRunCount``1(``0,System.Nullable{System.Int32})">
            <summary>
                 Defines a trial license that allow the application to run only for given number of times.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 Thrown when one or more arguments are outside the required range.
             </exception>
            <typeparam name="T">       Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">     The license to act on. </param>
            <param name="runCount">    The maximum number of times the application can run. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.WithHardwareKey``1(``0,System.String)">
            <summary>
                 An extension method used to add a <see cref="T:Babel.Licensing.HardwareRestriction" /> object to
                 the license.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">        Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">      The license to act on. </param>
            <param name="hardwareKey">  The hardware key. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
            <example>
                <code source="Examples\HardwareRestriction.cs" language="cs" />
                <code source="Examples\HardwareRestriction.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Licenseable.UseOnlyAt``1(``0,System.String)">
            <summary>
                 An ILicense extension method used to add a <see cref="T:Babel.Licensing.UsageRestriction" /> object to
                 the license.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="usage">    The license usage mode. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.NotForVirtualEnvironment``1(``0)">
            <summary>
                 An ILicense extension method that is used to prevent the execution of the 
                 application in a virtual environment.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
            <example>
                <code source="Examples\UsageRestriction.cs" language="cs" />
                <code source="Examples\UsageRestriction.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Licenseable.RestrictedToProcess``1(``0,System.String[])">
            <summary>
                 An ILicense extension method that is used to restrict the license usage to a list of process names.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <typeparam name="T">    Generic type parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="process">  A variable-length parameters list containing the process names. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
            <example>
                <code source="Examples\UsageRestriction.cs" language="cs" />
                <code source="Examples\UsageRestriction.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Licenseable.CopyFrom``1(``0,``0)">
            <summary>
                 An ILicense extension method that copies ILicense objects.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <typeparam name="T">    Generic type parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="other">    Another instance to copy. </param>
            <returns>
                 The copied <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.ToRestrictedDomain``1(``0,System.String,System.String)">
            <summary>
                 An ILicense extension method used to add a <see cref="T:Babel.Licensing.DomainRestriction" /> object to
                 the license.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicense" /> parameter. </typeparam>
            <param name="license">  The license to act on. </param>
            <param name="domain">   The domain name. </param>
            <param name="role">     The server role. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicense" /> object.
             </returns>
            <example>
                <code source="Examples\DomainRestriction.cs" language="cs" />
                <code source="Examples\DomainRestriction.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Licenseable.ToReadableString(Babel.Licensing.ILicenseBuilder,System.String)">
            <summary>
                 An ILicenseBuilder extension method that converts the current license to a readable string.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when one or more arguments have unsupported or illegal values.
             </exception>
            <param name="builder">  The license builder to act on. </param>
            <param name="format">   (Optional) Describes the format to use. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.SignWith(Babel.Licensing.ILicense,Babel.Licensing.ISignatureProvider)">
            <summary>
                 An ILicense extension method that is used to sign the current license object with 
                 the given <see cref="T:Babel.Licensing.ISignatureProvider" />.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="license">      The license to act on. </param>
            <param name="signature">    The signature provider object. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </returns>
            <example>
                This example shows how to sign a license with an RSA signature.
                
                <code source="Examples\Licenseable.SignWith.cs" language="cs" /><code source="Examples\Licenseable.SignWith.vb" language="vbnet" /></example>
        </member>
        <member name="M:Babel.Licensing.Licenseable.SignWithKeys(Babel.Licensing.ILicense,System.String,System.String)">
            <summary>
                 An ILicense extension method that is used to sign the current license object with
                 the given key pair.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when one or more arguments have unsupported or illegal values.
             </exception>
            <param name="license">      The license to act on. </param>
            <param name="publicKey">    The public key. </param>
            <param name="privateKey">   The private key. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </returns>
            <example>
                <code source="Examples\StringLicense.Constructor.cs" language="cs" />
                <code source="Examples\StringLicense.Constructor.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Licenseable.ValidateWith(Babel.Licensing.ILicense,Babel.Licensing.ISignatureProvider)">
            <summary>
                 An ILicense extension method that validates the current license object with 
                 the given <see cref="T:Babel.Licensing.ISignatureProvider" />.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when one or more arguments have unsupported or illegal values.
             </exception>
            <param name="license">      The license to act on. </param>
            <param name="signature">    The signature provider object. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.ValidateWithPublicKey(Babel.Licensing.ILicense,System.String)">
            <summary>
                 An ILicense extension method that validates the current license object with
                 the given public key.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when one or more arguments have unsupported or illegal values.
             </exception>
            <param name="license">      The license to act on. </param>
            <param name="publicKey">    The public key. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.Build(Babel.Licensing.ILicense)">
            <summary>
                 An extension method that converts the input license to a <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="license">  The license to act on. </param>
            <returns>
                 A <see cref="T:Babel.Licensing.ILicenseBuilder" /> that represents the input license object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.AddLicense``1(``0,Babel.Licensing.ILicense)">
            <summary>
                 An extension method that adds a license to the current license builder.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicenseBuilder" /> type parameter. </typeparam>
            <param name="builder">  The license builder to act on. </param>
            <param name="license">  The license to add. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </returns>
            <example>
                <code source="Examples\XmlLicense.AddLicense.vb" language="vbnet" />
                <code source="Examples\XmlLicense.AddLicense.cs" language="cs" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Licenseable.RemoveLicense``1(``0,Babel.Licensing.ILicense)">
            <summary>
                 An extension method that removes the given license object from the current license builder.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicenseBuilder" /> type parameter. </typeparam>
            <param name="builder">  The license builder to act on. </param>
            <param name="license">  The license to remove. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.SignWith(Babel.Licensing.ILicenseBuilder,Babel.Licensing.ISignatureProvider)">
            <summary>
                 An extension method used to sign the current license state with a given signature provider.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="builder">  The license builder to act on. </param>
            <param name="provider"> The signature provider. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.SignWithKeys(Babel.Licensing.ILicenseBuilder,System.String,System.String)">
            <summary>
                 An extension method used to sign the current license state with a given key pair.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when one or more arguments have unsupported or illegal values.
             </exception>
            <param name="builder">      The license builder to act on. </param>
            <param name="publicKey">    The public key. </param>
            <param name="privateKey">   The private key. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.ValidateSignature(Babel.Licensing.ILicenseBuilder)">
            <summary>
                 An extension method that validates the current license signature.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when one or more arguments have illegal values or when the signature is not valid.
             </exception>
            <param name="builder">  The license builder to act on. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.Load(Babel.Licensing.ILicenseBuilder,System.String)">
            <summary>
                 An extension method that loads the license from a given file.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="builder">  The license builder to act on. </param>
            <param name="path">     The file to be read. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Licenseable.Save``1(``0,System.String)">
            <summary>
                 An extension method that saves the license to a file.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <typeparam name="T">    Generic <see cref="T:Babel.Licensing.ILicenseBuilder" /> type parameter. </typeparam>
            <param name="builder">  The license builder to act on. </param>
            <param name="path">     The file to be saved. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.ILicenseBuilder" /> object.
             </returns>
            <example>
                <code source="Examples\XmlLicense.Save.vb" language="vbnet" />
                <code source="Examples\XmlLicense.Save.cs" language="cs" />
            </example>
        </member>
        <member name="T:Babel.Licensing.Licensee">
            <summary>
                Represents the licensee information associated with the license. 
                This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Babel.Licensing.Licensee.Id">
            <summary>
                 Gets or sets the licensee identifier.
             </summary>
            <value>
                 The licensee identifier.
             </value>
        </member>
        <member name="P:Babel.Licensing.Licensee.Company">
            <summary>
                 Gets or sets the licensee company.
             </summary>
            <value>
                 The licensee company.
             </value>
        </member>
        <member name="P:Babel.Licensing.Licensee.Url">
            <summary>
                 Gets or sets the URL information associated with the licensee.
                 This can be the licensee company URL.
             </summary>
            <value>
                 The licensee URL.
             </value>
        </member>
        <member name="P:Babel.Licensing.Licensee.Name">
            <summary>
                 Gets or sets the licensee name.
             </summary>
            <value>
                 The licensee name.
             </value>
        </member>
        <member name="P:Babel.Licensing.Licensee.ContactInfo">
            <summary>
                Gets or sets licensee contact information.
            </summary>
            <value>
                Information describing the licensee contact.
            </value>
        </member>
        <member name="P:Babel.Licensing.Licensee.Data">
            <summary>
                 Gets or sets additional licensee data.
             </summary>
            <value>
                 An array of byte that represents licensee data.
             </value>
        </member>
        <member name="M:Babel.Licensing.Licensee.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="M:Babel.Licensing.Licensee.#ctor(Babel.Licensing.Licensee)">
            <summary>
                 Copy constructor.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the parameter other to copy is null.
             </exception>
            <param name="other"> The Licensee object to copy. </param>
        </member>
        <member name="T:Babel.Licensing.LicenseRestrictionProvider">
            <summary>
                Defines a license restriction provider.
            </summary>
        </member>
        <member name="M:Babel.Licensing.LicenseRestrictionProvider.#ctor">
            <summary>
                Specialized default constructor for use only by derived class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.LicenseRestrictionProvider.GetLicenseRestriction(System.String,System.Type,System.Object)">
            <summary>
                 Gets license restriction.
             </summary>
            <param name="restriction">  The restriction. </param>
            <param name="type">         The type. </param>
            <param name="instance">     The instance. </param>
            <returns>
                 The license restriction.
             </returns>
        </member>
        <member name="T:Babel.Licensing.LicenseRestrictionProviderAttribute">
            <summary>
                Attribute for license restriction provider. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Babel.Licensing.LicenseRestrictionProviderAttribute.LicenseRestrictionProvider">
            <summary>
                 Gets the license restriction provider.
             </summary>
            <value>
                 The license restriction provider.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseRestrictionProviderAttribute.RestrictionProviderType">
            <summary>
                 Gets the type of the restriction provider.
             </summary>
            <value>
                 The type of the restriction provider.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseRestrictionProviderAttribute.RestrictionProviderName">
            <summary>
                 Gets the name of the restriction provider.
             </summary>
            <value>
                 The name of the restriction provider.
             </value>
        </member>
        <member name="M:Babel.Licensing.LicenseRestrictionProviderAttribute.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="M:Babel.Licensing.LicenseRestrictionProviderAttribute.#ctor(System.Type)">
            <summary>
                 Constructor.
             </summary>
            <param name="type"> The type. </param>
        </member>
        <member name="M:Babel.Licensing.LicenseRestrictionProviderAttribute.#ctor(System.String)">
            <summary>
                 Constructor.
             </summary>
            <param name="name"> The name. </param>
        </member>
        <member name="M:Babel.Licensing.LicenseRestrictionProviderAttribute.Equals(System.Object)">
            <summary>
                 Returns a value that indicates whether this instance is equal to a specified object.
             </summary>
            <param name="obj">
                 An <see cref="T:System.Object" /> to compare with this instance or null.
             </param>
            <returns>
                 true if <paramref name="obj" /> equals the type and value of this instance; otherwise,
                 false.
             </returns>
        </member>
        <member name="M:Babel.Licensing.LicenseRestrictionProviderAttribute.GetHashCode">
            <summary>
                 Returns the hash code for this instance.
             </summary>
            <returns>
                 A 32-bit signed integer hash code.
             </returns>
        </member>
        <member name="T:Babel.Licensing.ILicenseServiceProvider">
            <summary>
                Interface for license service provider.
            </summary>
        </member>
        <member name="M:Babel.Licensing.ILicenseServiceProvider.GetService(System.Type)">
            <summary>
                 Gets a service.
             </summary>
            <param name="serviceType">  Type of the service. </param>
            <returns>
                 The service instance.
             </returns>
        </member>
        <member name="T:Babel.Licensing.LicenseServices">
            <summary>
                Provides a way to register and obtain a list of services to support licensing.
                This class cannot be inherited.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseServices.Current">
            <summary>
                The LicenseServices singleton.
            </summary>
        </member>
        <member name="P:Babel.Licensing.LicenseServices.LicenseContext">
            <summary>
                 Gets or sets a license context.
             </summary>
            <value>
                 The license context.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseServices.RegisteredServiceTypes">
            <summary>
            Gets the list of registered service types.
            </summary>
            <value>
                The list of registered service types.
            </value>
        </member>
        <member name="M:Babel.Licensing.LicenseServices.#ctor">
            <summary>
                Constructor that prevents a default instance of this class from being created.
            </summary>
        </member>
        <member name="M:Babel.Licensing.LicenseServices.AddService(System.Type,System.Object)">
            <summary>
                 Adds the specified service to the internal collection of services.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="serviceType">  The type of the service to add. </param>
            <param name="service">      The service object instance to add. </param>
        </member>
        <member name="M:Babel.Licensing.LicenseServices.GetService(System.Type)">
            <summary>
                 Gets type-based services from the license service provider.
             </summary>
            <param name="serviceType">  An object that specifies the type of service object to get. </param>
            <returns>
                 The requested service, or a null reference (Nothing in Visual Basic) if the service could not be located
             </returns>
            <remarks>
                 The return value of GetService must be cast to the interface type.
             </remarks>
        </member>
        <member name="M:Babel.Licensing.LicenseServices.GetService(System.String)">
            <summary>
                 Gets type-based services from the license service provider.
             </summary>
            <param name="serviceType">  The full type name of service object to get. </param>
            <returns>
                 The requested service, or a null reference (Nothing in Visual Basic) if the service could not be located
             </returns>
            <remarks>
                 The return value of GetService must be cast to the interface type.
             </remarks>
        </member>
        <member name="T:Babel.Licensing.LicenseStatus">
            <summary>
                Values that represent a license status.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.InternalError">
            <summary>
                Represents an internal error.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.TimeRollback">
            <summary>
                Occurs when the system clock was set back.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.LicenseExpired">
            <summary>
                Indicates that the license has expired.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.BadLicenseFormat">
            <summary>
                Indicates that the data representing the license have an invalid format.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.AssemblyNotSigned">
            <summary>
                This error occurs when the licensed assembly has not been digitally signed.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.AssemblyNotLicensed">
            <summary>
                An error that occurs when it was not found any license for the assembly which has been validated.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.ComponentNotLicensed">
            <summary>
                An error that occurs when the component that has been validated is not licensed.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.NoSignature">
            <summary>
                This error occurs when the license is not digitally signed.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.NoPublicKey">
            <summary>
                An error that occurs when the public key information required to validate a license is not available.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.InvalidSignature">
            <summary>
                Represents a license with an invalid digital signature.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.BadRestrictionFormat">
            <summary>
                This error occurs for a license restriction with an invalid format.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.InvalidRestriction">
            <summary>
                This error occurs when the restriction validation is not passed.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.RestrictionExpired">
            <summary>
                This error occurs when a license has a restriction with the expiry date that has passed.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.MultipleLicenseValidationErrors">
            <summary>
                This error occurs when a license has a multiple validation errors.
            </summary>
        </member>
        <member name="F:Babel.Licensing.LicenseStatus.Valid">
            <summary>
                Represents a license that has passed all the validations.
            </summary>
        </member>
        <member name="T:Babel.Licensing.LicenseValidationResult">
            <summary>
                Encapsulates the result of a license validation.
            </summary>
        </member>
        <member name="P:Babel.Licensing.LicenseValidationResult.LicenseId">
            <summary>
                 Gets or sets the identifier of the license.
             </summary>
            <value>
                 The identifier of the license.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseValidationResult.Restriction">
            <summary>
                 Gets or sets the name of the restriction that generates this validation result.
             </summary>
            <value>
                 The restriction name.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseValidationResult.Exception">
            <summary>
                 Gets or sets the license validation exception.
             </summary>
            <value>
                 The license validation exception.
             </value>
        </member>
        <member name="M:Babel.Licensing.LicenseValidationResult.#ctor(System.String,System.Exception)">
            <summary>
                 Initializes a new instance of the <see cref="T:Babel.Licensing.LicenseValidationResult" /> class with a specified license ID.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="licenseId">    The license identifier. </param>
            <param name="exception">    The license validation exception. </param>
        </member>
        <member name="T:Babel.Licensing.Pem">
            <summary>
                An utility class to read PEM files.
            </summary>
        </member>
        <member name="M:Babel.Licensing.Pem.ReadSignature(System.String)">
            <summary>
                 Creates a signature provider object from a PEF file.
             </summary>
            <param name="fileName"> The PEM file name. </param>
            <returns>
                 A signature provider object.
             </returns>
            <seealso cref="T:Babel.Licensing.ISignatureProvider" />
            <seealso cref="T:Babel.Licensing.ECDsaSignature" />
            <seealso cref="T:Babel.Licensing.RSASignature" />
        </member>
        <member name="M:Babel.Licensing.Pem.ReadSignature(System.IO.Stream)">
            <summary>
                 Creates a signature provider object from a PEF stream.
             </summary>
            <param name="stream"> The PEM stream. </param>
            <returns>
                 A signature provider object.
             </returns>
            <seealso cref="T:Babel.Licensing.ISignatureProvider" />
            <seealso cref="T:Babel.Licensing.ECDsaSignature" />
            <seealso cref="T:Babel.Licensing.RSASignature" />
        </member>
        <member name="T:Babel.Licensing.Product">
            <summary>
                Represents the licensed product.
                This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Babel.Licensing.Product.Id">
            <summary>
                 Gets or sets the product identifier.
             </summary>
            <value>
                 The product identifier.
             </value>
        </member>
        <member name="P:Babel.Licensing.Product.Name">
            <summary>
                 Gets or sets the product name.
             </summary>
            <value>
                 The product name.
             </value>
        </member>
        <member name="P:Babel.Licensing.Product.Version">
            <summary>
                 Gets or sets the product version.
             </summary>
            <value>
                 The product version.
             </value>
        </member>
        <member name="P:Babel.Licensing.Product.Copyright">
            <summary>
                 Gets or sets product copyright.
             </summary>
            <value>
                 The product copyright.
             </value>
        </member>
        <member name="P:Babel.Licensing.Product.Url">
            <summary>
                 Gets or sets URL where to find product information.
             </summary>
            <value>
                 The URL that represents this product.
             </value>
        </member>
        <member name="P:Babel.Licensing.Product.Description">
            <summary>
                 Gets or sets the product description.
             </summary>
            <value>
                 The product description.
             </value>
        </member>
        <member name="M:Babel.Licensing.Product.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="M:Babel.Licensing.Product.#ctor(Babel.Licensing.Product)">
            <summary>
                 Copy constructor.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the parameter other to copy is null.
             </exception>
            <param name="other">    The Product object to copy. </param>
        </member>
        <member name="T:Babel.Licensing.AfterSendReportEventArgs">
            <summary>
                Additional information for after send report events.
            </summary>
        </member>
        <member name="P:Babel.Licensing.AfterSendReportEventArgs.Report">
            <summary>
                 Gets the report object.
             </summary>
            <value>
                 The report.
             </value>
        </member>
        <member name="P:Babel.Licensing.AfterSendReportEventArgs.Error">
            <summary>
                 Gets the error.
             </summary>
            <value>
                 The error.
             </value>
        </member>
        <member name="M:Babel.Licensing.AfterSendReportEventArgs.#ctor(Babel.Licensing.Report,System.Exception)">
            <summary>
                 Constructor.
             </summary>
            <param name="report">   The report. </param>
            <param name="error">    The error. </param>
        </member>
        <member name="T:Babel.Licensing.BabelReporting">
            <summary>
                A babel report service client. This class cannot be inherited.
            </summary>
            <example>
                <code source="Examples\BabelReporting.Configuration.cs" language="cs" />
                <code source="Examples\BabelReporting.Configuration.vb" language="vbnet" />
            </example>
        </member>
        <member name="P:Babel.Licensing.BabelReporting.Instance">
            <summary>
                 Gets the instance.
             </summary>
            <value>
                 The instance.
             </value>
        </member>
        <member name="M:Babel.Licensing.BabelReporting.Create(Babel.Licensing.BabelServiceConfiguration)">
            <summary>
                 Creates a new BabelReporting.
             </summary>
            <exception cref="T:System.InvalidOperationException">    Thrown when the requested operation is invalid. </exception>
            <param name="configuration">    The configuration. </param>
            <returns>
                 A BabelReporting.
             </returns>
        </member>
        <member name="E:Babel.Licensing.BabelReporting.BeforeSendReport">
            <summary>
                Event queue for all listeners interested in BeforeSendReport events.
            </summary>
        </member>
        <member name="E:Babel.Licensing.BabelReporting.AfterSendReport">
            <summary>
                Event queue for all listeners interested in AfterSendReport events.
            </summary>
        </member>
        <member name="M:Babel.Licensing.BabelReporting.#ctor(Babel.Licensing.BabelServiceConfiguration)">
            <summary>
                 Default constructor.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="configuration">    The configuration. </param>
        </member>
        <member name="M:Babel.Licensing.BabelReporting.Send(Babel.Licensing.Report)">
            <summary>
                 Send this message.
             </summary>
            <param name="report">   The report. </param>
            <returns>
                 true if it succeeds, false if it fails.
             </returns>
        </member>
        <member name="T:Babel.Licensing.BabelReportingExtensions">
            <summary>
                A babel reporting extensions.
            </summary>
        </member>
        <member name="M:Babel.Licensing.BabelReportingExtensions.ReportExceptions(Babel.Licensing.BabelReporting,System.Action{Babel.Licensing.ExceptionReportOptions})">
            <summary>
                 A BabelReporting extension method that configure exception reporting.
             </summary>
            <param name="self">             The self to act on. </param>
            <param name="configureOptions"> (Optional) Options for controlling the reporting configuration. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.BabelReporting" /> object.
             </returns>
            <example>
                <code source="Examples\ExceptionReport.Send.cs" language="cs" />
                <code source="Examples\ExceptionReport.Send.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.BabelReportingExtensions.SendExceptionReport(Babel.Licensing.BabelReporting,System.Exception)">
            <summary>
                 A BabelReporting extension method that reports an exception.
             </summary>
            <param name="self"> The self to act on. </param>
            <param name="e">    The exception. </param>
            <returns>
                 True if it succeeds, false if it fails.
             </returns>
        </member>
        <member name="M:Babel.Licensing.BabelReportingExtensions.ReportLicenseUsage(Babel.Licensing.BabelReporting,System.Action{Babel.Licensing.LicenseUsageReportOptions})">
            <summary>
                 A BabelReporting extension method that configure license usage reporting.
             </summary>
            <param name="self">             The self to act on. </param>
            <param name="configureOptions"> (Optional) Options for controlling the configure. </param>
            <returns>
                 The input <see cref="T:Babel.Licensing.BabelReporting" /> object.
             </returns>
            <example>
                <code source="Examples\LicenseUsageReport.Send.cs" language="cs" />
                <code source="Examples\LicenseUsageReport.Send.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.BabelReportingExtensions.SendLicenseUsageReport(Babel.Licensing.BabelReporting)">
            <summary>
                 A BabelReporting extension method that sends a license usage report.
             </summary>
            <param name="self"> The self to act on. </param>
            <returns>
                 True if it succeeds, false if it fails.
             </returns>
        </member>
        <member name="T:Babel.Licensing.BeforeSendReportEventArgs">
            <summary>
                Additional information for before send report events.
            </summary>
        </member>
        <member name="P:Babel.Licensing.BeforeSendReportEventArgs.Report">
            <summary>
                 Gets the report.
             </summary>
            <value>
                 The report.
             </value>
        </member>
        <member name="P:Babel.Licensing.BeforeSendReportEventArgs.Cancel">
            <summary>
                 Gets or sets a value indicating whether to cancel report sending.
             </summary>
            <value>
                 true if cancel, false if not.
             </value>
        </member>
        <member name="M:Babel.Licensing.BeforeSendReportEventArgs.#ctor(Babel.Licensing.Report)">
            <summary>
                 Constructor.
             </summary>
            <param name="report">   The report. </param>
        </member>
        <member name="T:Babel.Licensing.EnvironmentReportOptions">
            <summary>
                 Options for collecting environment information.
            </summary>
        </member>
        <member name="P:Babel.Licensing.EnvironmentReportOptions.CollectApplicationInformation">
            <summary>
                 Gets or sets a value indicating whether the collect application information.
             </summary>
            <value>
                 True if collect application information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.EnvironmentReportOptions.CollectUserInformation">
            <summary>
                 Gets or sets a value indicating whether the collect user information.
             </summary>
            <value>
                 True if collect user information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.EnvironmentReportOptions.CollectEnvironmentVariables">
            <summary>
                 Gets or sets a value indicating whether the collect environment variables.
             </summary>
            <value>
                 True if collect environment variables, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.EnvironmentReportOptions.EnvironmentVariables">
            <summary>
                 Gets or sets the environment variable list to collect.
                 If empty all environment variables are collected.
             </summary>
            <value>
                 The environment variables to collect.
             </value>
        </member>
        <member name="P:Babel.Licensing.EnvironmentReportOptions.CollectVirtualMachineInformation">
            <summary>
                 Gets or sets a value indicating whether the collect virtual machine information.
             </summary>
            <value>
                 True if collect virtual machine information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.EnvironmentReportOptions.CollectLoadedAssemblies">
            <summary>
                 Gets or sets a value indicating whether the collect loaded assemblies.
             </summary>
            <value>
                 True if collect loaded assemblies, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.EnvironmentReportOptions.CollectLoadeModules">
            <summary>
                 Gets or sets a value indicating whether the collect loaded modules.
             </summary>
            <value>
                 True if collect loaded modules, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.EnvironmentReportOptions.AssemblyNames">
            <summary>
                 Gets or sets the list of assembly names to collect.
             </summary>
            <value>
                 The assembly names to collect.
             </value>
        </member>
        <member name="P:Babel.Licensing.EnvironmentReportOptions.CollectProcessInformation">
            <summary>
                 Gets or sets a value indicating whether to collect process information.
             </summary>
            <value>
                 True if collect process information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.EnvironmentReportOptions.ProcessNames">
            <summary>
                 Gets or sets the list of process names to collect.
             </summary>
            <value>
                 The process names to collect.
             </value>
        </member>
        <member name="M:Babel.Licensing.EnvironmentReportOptions.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="T:Babel.Licensing.SystemReportOptions">
            <summary>
                Options for collecting system information.
            </summary>
        </member>
        <member name="P:Babel.Licensing.SystemReportOptions.CollectSystemInformation">
            <summary>
                 Gets or sets a value indicating whether the collect system information.
             </summary>
            <value>
                 True if collect system information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.SystemReportOptions.CollectOsInformation">
            <summary>
                 Gets or sets a value indicating whether the collect operating system information.
             </summary>
            <value>
                 True if collect operating system information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.SystemReportOptions.CollectProcessorInformation">
            <summary>
                 Gets or sets a value indicating whether the collect processor information.
             </summary>
            <value>
                 True if collect processor information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.SystemReportOptions.CollectDiskInformation">
            <summary>
                 Gets or sets a value indicating whether the collect disk information.
             </summary>
            <value>
                 True if collect disk information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.SystemReportOptions.CollectMemoryInformation">
            <summary>
                 Gets or sets a value indicating whether the collect memory information.
             </summary>
            <value>
                 True if collect memory information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.SystemReportOptions.CollectDisplayInformation">
            <summary>
                 Gets or sets a value indicating whether the collect display information.
             </summary>
            <value>
                 True if collect display information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.SystemReportOptions.CollectNetworkInformation">
            <summary>
                 Gets or sets a value indicating whether the collect network information.
             </summary>
            <value>
                 True if collect network information, false if not.
             </value>
        </member>
        <member name="M:Babel.Licensing.SystemReportOptions.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="T:Babel.Licensing.NetworkReportOptions">
            <summary>
                Options for collecting network information.
            </summary>
        </member>
        <member name="P:Babel.Licensing.NetworkReportOptions.CollecAdapterInformation">
            <summary>
                 Gets or sets a value indicating whether the collec adapter information.
             </summary>
            <value>
                 True if collec adapter information, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.NetworkReportOptions.CollecDomainInformation">
            <summary>
                 Gets or sets a value indicating whether the collec domain information.
             </summary>
            <value>
                 True if collec domain information, false if not.
             </value>
        </member>
        <member name="M:Babel.Licensing.NetworkReportOptions.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="T:Babel.Licensing.ExceptionReportOptions">
            <summary>
                Options class provides information needed to control exception report behavior.
            </summary>
        </member>
        <member name="P:Babel.Licensing.ExceptionReportOptions.Environment">
            <summary>
                 Gets or sets the environment options.
             </summary>
            <value>
                 The environment.
             </value>
        </member>
        <member name="P:Babel.Licensing.ExceptionReportOptions.System">
            <summary>
                 Gets or sets the system options.
             </summary>
            <value>
                 The system.
             </value>
        </member>
        <member name="P:Babel.Licensing.ExceptionReportOptions.Network">
            <summary>
                 Gets or sets the network options.
             </summary>
            <value>
                 The network.
             </value>
        </member>
        <member name="P:Babel.Licensing.ExceptionReportOptions.Formatted">
            <summary>
                 Gets or sets a value indicating whether the report should be formatted.
             </summary>
            <value>
                 True if formatted, false if not.
             </value>
        </member>
        <member name="M:Babel.Licensing.ExceptionReportOptions.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="T:Babel.Licensing.IReportSender">
            <summary>
                Interface for report sender.
            </summary>
        </member>
        <member name="E:Babel.Licensing.IReportSender.BeforeSendReport">
            <summary>
                Event queue for all listeners interested in BeforeSendReport events.
            </summary>
        </member>
        <member name="E:Babel.Licensing.IReportSender.AfterSendReport">
            <summary>
                Event queue for all listeners interested in AfterSendReport events.
            </summary>
        </member>
        <member name="M:Babel.Licensing.IReportSender.Send(Babel.Licensing.Report)">
            <summary>
                 Send a <see cref="T:Babel.Licensing.Report" />.
             </summary>
            <param name="report">   The report to send. </param>
            <returns>
                 True if it succeeds, false if it fails.
             </returns>
        </member>
        <member name="T:Babel.Licensing.LicenseReportOptions">
            <summary>
                Options class provides information needed to control license usage report behavior.
            </summary>
        </member>
        <member name="P:Babel.Licensing.LicenseReportOptions.CollectFeaturesAccess">
            <summary>
                 Gets or sets a value indicating whether the collect features access.
             </summary>
            <value>
                 True if collect features access, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseReportOptions.CollectFieldsAccess">
            <summary>
                 Gets or sets a value indicating whether the collect fields access.
             </summary>
            <value>
                 True if collect fields access, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseReportOptions.CollectRestrictionsAccess">
            <summary>
                 Gets or sets a value indicating whether the collect restrictions access.
             </summary>
            <value>
                 True if collect restrictions access, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseReportOptions.CollectMembers">
            <summary>
                 Gets or sets the included members names.
             </summary>
            <value>
                 The include members names.
             </value>
        </member>
        <member name="M:Babel.Licensing.LicenseReportOptions.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="T:Babel.Licensing.LicenseUsageReportOptions">
            <summary>
                A report license usage options.
            </summary>
        </member>
        <member name="P:Babel.Licensing.LicenseUsageReportOptions.License">
            <summary>
                 Gets or sets the license report options.
             </summary>
            <value>
                 The license.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseUsageReportOptions.Environment">
            <summary>
                 Gets or sets the environment report options.
             </summary>
            <value>
                 The environment.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseUsageReportOptions.System">
            <summary>
                 Gets or sets the system.
             </summary>
            <value>
                 The system.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseUsageReportOptions.Network">
            <summary>
                 Gets or sets the network report options.
             </summary>
            <value>
                 The network.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseUsageReportOptions.EncryptionKey">
            <summary>
                 Gets or sets the encryption key.
             </summary>
            <value>
                 The encryption key.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseUsageReportOptions.EncryptionEncoding">
            <summary>
                 Gets or sets the encryption encoding. The default encoding is <see cref="T:Babel.Licensing.Base32Encoding" /></summary>
            <value>
                 The encryption encoding.
             </value>
        </member>
        <member name="P:Babel.Licensing.LicenseUsageReportOptions.Formatted">
            <summary>
                 Gets or sets a value indicating whether the report should be formatted.
             </summary>
            <value>
                 True if formatted, false if not.
             </value>
        </member>
        <member name="M:Babel.Licensing.LicenseUsageReportOptions.#ctor">
            <summary>
                Default constructor.
            </summary>
        </member>
        <member name="T:Babel.Licensing.Report">
            <summary>
                Represents the base class for any report object.
            </summary>
        </member>
        <member name="F:Babel.Licensing.Report.FormatVersion">
            <summary>
                Current Report version.
            </summary>
        </member>
        <member name="P:Babel.Licensing.Report.Properties">
            <summary>
                 Gets the report properties.
             </summary>
            <value>
                 The properties.
             </value>
        </member>
        <member name="P:Babel.Licensing.Report.Name">
            <summary>
                 Gets the report name.
             </summary>
            <value>
                 The report name.
             </value>
        </member>
        <member name="P:Babel.Licensing.Report.Content">
            <summary>
                 Gets the report content.
             </summary>
            <value>
                 The report content.
             </value>
        </member>
        <member name="P:Babel.Licensing.Report.Date">
            <summary>
                 Gets or sets the report date.
             </summary>
            <value>
                 The report date.
             </value>
        </member>
        <member name="P:Babel.Licensing.Report.Version">
            <summary>
                 Gets the report version.
             </summary>
            <value>
                 The report version.
             </value>
        </member>
        <member name="P:Babel.Licensing.Report.Encrypted">
            <summary>
                 Gets a value indicating whether the report content is encrypted.
             </summary>
            <value>
                 True if this report content is encrypted, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.Report.BaseAddress">
            <summary>
            Gets the server base address for this report object.
            </summary>
            <value>
                The report server base address.
            </value>
        </member>
        <member name="M:Babel.Licensing.Report.#ctor(System.String)">
            <summary>
                 Initializes a new report instance with a given name.
             </summary>
            <param name="name"> The name. </param>
        </member>
        <member name="M:Babel.Licensing.Report.#ctor(System.String,System.String)">
            <summary>
                 Initializes a new report instance with a given report name and content.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="name">     The report name. </param>
            <param name="content">  The report content. </param>
        </member>
        <member name="M:Babel.Licensing.Report.Create(System.String,System.String)">
            <summary>
                 Creates a report from its string content.
             </summary>
            <exception cref="T:System.ArgumentNullException">        Thrown when one or more required arguments are null. </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when one or more arguments have unsupported or illegal values.
             </exception>
            <exception cref="T:System.InvalidOperationException">    Thrown when the requested operation is invalid. </exception>
            <param name="report">   The report content. </param>
            <param name="password"> (Optional) The password to decrypt report content. </param>
            <returns>
                 A Report object.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Report.Build">
            <summary>
                Builds this object.
            </summary>
        </member>
        <member name="T:Babel.Licensing.ValidationResult">
            <summary>
                Values that represent license restriction validation codes.
            </summary>
        </member>
        <member name="F:Babel.Licensing.ValidationResult.Valid">
            <summary>
                Represents a valid restriction option.
            </summary>
        </member>
        <member name="F:Babel.Licensing.ValidationResult.BadFormat">
            <summary>
                Represents a bad format restriction option.
            </summary>
        </member>
        <member name="F:Babel.Licensing.ValidationResult.Expired">
            <summary>
                Represents a restriction that has the expire date passed.
            </summary>
        </member>
        <member name="F:Babel.Licensing.ValidationResult.Invalid">
            <summary>
                Represents a restriction that has not passed the validation.
            </summary>
        </member>
        <member name="T:Babel.Licensing.Restriction">
            <summary>
                Defines a base class for a license restriction.
            </summary>
        </member>
        <member name="P:Babel.Licensing.Restriction.Name">
            <summary>
                 Gets the restriction name.
             </summary>
            <value>
                 The restriction name.
             </value>
        </member>
        <member name="P:Babel.Licensing.Restriction.License">
            <summary>
                Get the parent license
            </summary>
        </member>
        <member name="P:Babel.Licensing.Restriction.Listeners">
            <summary>
                 Gets the listeners.
             </summary>
            <value>
                 The listeners.
             </value>
        </member>
        <member name="P:Babel.Licensing.Restriction.Id">
            <summary>
                 Gets or sets the restriction identifier.
             </summary>
            <value>
                 The restriction identifier.
             </value>
        </member>
        <member name="P:Babel.Licensing.Restriction.ExpireDate">
            <summary>
                 Gets or sets the expire date after which the license is no longer valid.
             </summary>
            <value>
                 A <see cref="T:System.DateTime" /> expire date.
             </value>
        </member>
        <member name="M:Babel.Licensing.Restriction.#ctor">
            <summary>
                Default constructor for use only by derived class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.Restriction.Validate(Babel.Licensing.ILicenseContext,System.Type,System.Object)">
            <summary>
                 Validates the current restriction object.
             </summary>
            <param name="context">  The license context. </param>
            <param name="type">     The <see cref="T:System.Type" /> for which the restriction is validated. </param>
            <param name="instance"> The instance. </param>
            <returns>
                 The validation result code <see cref="T:Babel.Licensing.ValidationResult" />.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Restriction.Attach(Babel.Licensing.IObjectListener)">
            <summary>
                 Attaches the given listener.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="listener"> The listener. </param>
        </member>
        <member name="M:Babel.Licensing.Restriction.Detach(Babel.Licensing.IObjectListener)">
            <summary>
                 Detaches the given listener.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="listener"> The listener. </param>
        </member>
        <member name="M:Babel.Licensing.Restriction.Notify(System.Object[])">
            <summary>
                 Notifies registered listeners.
             </summary>
            <param name="args"> A variable-length parameters list containing arguments. </param>
        </member>
        <member name="T:Babel.Licensing.BetaRestriction">
            <summary>
                Defines a <see cref="T:Babel.Licensing.Restriction" /> typically used to tag 
                the license with beta release information. Setting an expire date for this restriction will allow
                to deliver software beta releases, valid for a limited time, before the delivery of the live release.
            </summary>
            <example>
                <code source="Examples\BetaRestriction.cs" language="cs" />
                <code source="Examples\BetaRestriction.vb" language="vbnet" />
            </example>
        </member>
        <member name="P:Babel.Licensing.BetaRestriction.Name">
            <summary>
                 Gets the restriction name.
             </summary>
            <value>
                 The restriction name.
             </value>
        </member>
        <member name="P:Babel.Licensing.BetaRestriction.BuildType">
            <summary>
                 Gets the type of the build for this beta release.
             </summary>
            <value>
                 A string representing the build type.
             </value>
        </member>
        <member name="P:Babel.Licensing.BetaRestriction.RecentChanges">
            <summary>
                 Gets this beta recent changes.
             </summary>
            <value>
                 A brief description of the changes introduced with this beta release.
             </value>
        </member>
        <member name="M:Babel.Licensing.BetaRestriction.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Babel.Licensing.BetaRestriction" /> class.
            </summary>
        </member>
        <member name="T:Babel.Licensing.DomainRestriction">
            <summary>
                Defines a <see cref="T:Babel.Licensing.Restriction" /> used to tie the license to a given network domain. 
            </summary>
            <example>
                <code source="Examples\DomainRestriction.cs" language="cs" />
                <code source="Examples\DomainRestriction.vb" language="vbnet" />
            </example>
        </member>
        <member name="P:Babel.Licensing.DomainRestriction.Name">
            <summary>
                 Gets the restriction name.
             </summary>
            <value>
                 The restriction name.
             </value>
        </member>
        <member name="P:Babel.Licensing.DomainRestriction.Domain">
            <summary>
                 Gets the network domain name.
             </summary>
            <value>
                 A string that represents the domain.
             </value>
        </member>
        <member name="P:Babel.Licensing.DomainRestriction.Role">
            <summary>
                 Gets the role associated to this domain.
             </summary>
            <value>
                 The domain role.
             </value>
        </member>
        <member name="M:Babel.Licensing.DomainRestriction.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Babel.Licensing.DomainRestriction" /> class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.DomainRestriction.Validate(Babel.Licensing.ILicenseContext,System.Type,System.Object)">
            <summary>
                 Validates the current domain license restriction.
             </summary>
            <param name="context">  The license context. </param>
            <param name="type">
                 The <see cref="T:System.Type" /> for which the restriction is validated.
             </param>
            <param name="instance"> The object instance for which the restriction is validated. </param>
            <returns>
                 The validation result code <see cref="T:Babel.Licensing.ValidationResult" />.
             </returns>
        </member>
        <member name="T:Babel.Licensing.HardwareRestriction">
            <summary>
                Defines an hardware <see cref="T:Babel.Licensing.Restriction" /> object.
                The hardware restriction tie the license to a particular hardware represented by a key string.
                This class cannot be inherited.
            </summary>
            <example>
                <code source="Examples\HardwareRestriction.cs" language="cs" />
                <code source="Examples\HardwareRestriction.vb" language="vbnet" />
            </example>
        </member>
        <member name="P:Babel.Licensing.HardwareRestriction.Name">
            <summary>
                 Gets the restriction name.
             </summary>
            <value>
                 The restriction name.
             </value>
        </member>
        <member name="P:Babel.Licensing.HardwareRestriction.HardwareKey">
            <summary>
                 Gets the hardware key.
             </summary>
            <value>
                 The hardware key.
             </value>
        </member>
        <member name="P:Babel.Licensing.HardwareRestriction.Data">
            <summary>
                 Gets additional hardware information.
             </summary>
            <value>
                 An array of bytes that contains additional hardware information.
             </value>
        </member>
        <member name="M:Babel.Licensing.HardwareRestriction.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Babel.Licensing.HardwareRestriction" /> class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.HardwareRestriction.Validate(Babel.Licensing.ILicenseContext,System.Type,System.Object)">
            <summary>
                 Validates the current hardware restriction.
             </summary>
            <param name="context">  The license context. </param>
            <param name="type">
                 The <see cref="T:System.Type" /> for which the restriction is validated.
             </param>
            <param name="instance"> The object instance for which the restriction is validated. </param>
            <returns>
                 The validation result code <see cref="T:Babel.Licensing.ValidationResult" />.
             </returns>
        </member>
        <member name="T:Babel.Licensing.TrialRestriction">
            <summary>
                Represents a <see cref="T:Babel.Licensing.Restriction" /> typically used to define trial licenses.
                The trial restriction can limit the number of days the license can be used, the number of application
                instances that can run simultaneously, the total number of executions and the running time.
            </summary>
            <example>
                <code source="Examples\TrialRestriction.cs" language="cs" />
                <code source="Examples\TrialRestriction.vb" language="vbnet" />
            </example>
        </member>
        <member name="P:Babel.Licensing.TrialRestriction.Name">
            <summary>
                 Gets the restriction name.
             </summary>
            <value>
                 The restriction name.
             </value>
        </member>
        <member name="P:Babel.Licensing.TrialRestriction.ExpireDays">
            <summary>
                 Gets the number of days after which the license expires.
             </summary>
            <value>
                 The number of trial days.
             </value>
        </member>
        <member name="P:Babel.Licensing.TrialRestriction.RunInstances">
            <summary>
                 Gets or sets the number of the software instances that are allowed to run simultaneously.
             </summary>
            <value>
                 The number of allowed instances.
             </value>
        </member>
        <member name="P:Babel.Licensing.TrialRestriction.RunCount">
            <summary>
                 Gets the number of runs after which the license expires.
             </summary>
            <value>
                 The total number of runs available for this license.
             </value>
        </member>
        <member name="P:Babel.Licensing.TrialRestriction.RunCountLeft">
            <summary>
                 Gets the run count remaining before the license expires.
             </summary>
            <value>
                 The run count remaining.
             </value>
        </member>
        <member name="P:Babel.Licensing.TrialRestriction.RunTime">
            <summary>
                 Gets the time that the software is allowed to run before the license expires.
             </summary>
            <value>
                 The run time.
             </value>
        </member>
        <member name="P:Babel.Licensing.TrialRestriction.Terms">
            <summary>
                 Gets the license trial terms.
             </summary>
            <value>
                 The trial terms for this license.
             </value>
        </member>
        <member name="P:Babel.Licensing.TrialRestriction.TimeLeft">
            <summary>
                 Gets the time remaining before the license expires.
             </summary>
            <value>
                 The trial time remaining.
             </value>
        </member>
        <member name="M:Babel.Licensing.TrialRestriction.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Babel.Licensing.TrialRestriction" /> class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.TrialRestriction.Validate(Babel.Licensing.ILicenseContext,System.Type,System.Object)">
            <summary>
                 Validates the current trial license restriction.
             </summary>
            <param name="context">  The license context. </param>
            <param name="type">
                 The <see cref="T:System.Type" /> for which the restriction is validated.
             </param>
            <param name="instance"> The object instance for which the restriction is validated. </param>
            <returns>
                 The validation result code <see cref="T:Babel.Licensing.ValidationResult" />.
             </returns>
        </member>
        <member name="T:Babel.Licensing.UsageRestriction">
            <summary>
                An usage <see cref="T:Babel.Licensing.Restriction" /> is typically used to define environment license restrictions.
            </summary>
            <example>
                <code source="Examples\UsageRestriction.cs" language="cs" />
                <code source="Examples\UsageRestriction.vb" language="vbnet" />
            </example>
        </member>
        <member name="P:Babel.Licensing.UsageRestriction.Name">
            <summary>
                 Gets the restriction name.
             </summary>
            <value>
                 The restriction name.
             </value>
        </member>
        <member name="P:Babel.Licensing.UsageRestriction.Usage">
            <summary>
                 Gets or sets the license usage.
             </summary>
            <value>
                 The license usage.
             </value>
        </member>
        <member name="P:Babel.Licensing.UsageRestriction.ProcessList">
            <summary>
                 Gets or sets the name of the process.
             </summary>
            <value>
                 The name of the process.
             </value>
        </member>
        <member name="P:Babel.Licensing.UsageRestriction.CanRunInVirtualEnvironment">
            <summary>
                 Whether the use of the license is permitted inside a virtual machine or emulator.
             </summary>
            <value>
                 Null if the restriction is not defined, true if the license is valid inside a virtual environment, otherwise false.
             </value>
        </member>
        <member name="M:Babel.Licensing.UsageRestriction.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Babel.Licensing.UsageRestriction" /> class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.UsageRestriction.Validate(Babel.Licensing.ILicenseContext,System.Type,System.Object)">
            <summary>
                 Validates the current license usage restriction object.
             </summary>
            <param name="context">  The license context. </param>
            <param name="type">
                 The <see cref="T:System.Type" /> for which the restriction is validated.
             </param>
            <param name="instance"> The instance. </param>
            <returns>
                 The validation result code <see cref="T:Babel.Licensing.ValidationResult" />.
             </returns>
        </member>
        <member name="T:Babel.Licensing.StringEncrypter">
            <summary>   A string encryptor class. </summary>
        </member>
        <member name="M:Babel.Licensing.StringEncrypter.Encrypt(System.String,System.String)">
            <summary>   A string extension method that encrypts. </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
            <param name="self">     The string to act on. </param>
            <param name="password"> The password used to encrypt. </param>
            <returns>   The encrypted string. </returns>
        </member>
        <member name="M:Babel.Licensing.StringEncrypter.Encrypt(System.String,System.String,Babel.Licensing.IEncoding)">
            <summary>
                 A string extension method that encrypts strings.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="self">     The string to act on. </param>
            <param name="password"> The password used to encrypt. </param>
            <param name="encoding"> The encrypted string encoding. </param>
            <returns>
                 The encrypted string.
             </returns>
        </member>
        <member name="M:Babel.Licensing.StringEncrypter.Decrypt(System.String,System.String)">
            <summary>   A string extension method that decrypts. </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
            <param name="self">     The string to act on. </param>
            <param name="password"> The password used to encrypt. </param>
            <returns>   The decrypted string. </returns>
        </member>
        <member name="M:Babel.Licensing.StringEncrypter.Decrypt(System.String,System.String,Babel.Licensing.IEncoding)">
            <summary>
                 A string extension method that decrypts strings.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="self">     The string to act on. </param>
            <param name="password"> The password used to encrypt. </param>
            <param name="encoding"> The encrypted string encoding. </param>
            <returns>
                 The decrypted string.
             </returns>
        </member>
        <member name="M:Babel.Licensing.StringEncrypter.Encrypt(System.String,System.Byte[])">
            <summary>   A string extension method that encrypts. </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
            <param name="self">     The string to act on. </param>
            <param name="password"> The password used to encrypt. </param>
            <returns>   The encrypted string. </returns>
        </member>
        <member name="M:Babel.Licensing.StringEncrypter.Decrypt(System.String,System.Byte[])">
            <summary>   A string extension method that decrypts. </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
            <param name="self">     The string to act on. </param>
            <param name="password"> The password used to encrypt. </param>
            <returns>   The decrypted string. </returns>
        </member>
        <member name="T:Babel.Licensing.StringFormat">
            <summary>
                Values that represent license string formats.
            </summary>
        </member>
        <member name="F:Babel.Licensing.StringFormat.Base32">
            <summary>
                Represents the Base32 string format.
            </summary>
        </member>
        <member name="F:Babel.Licensing.StringFormat.Ascii">
            <summary>
                Represents the ASCII string format.
            </summary>
        </member>
        <member name="T:Babel.Licensing.SerialBuilder">
            <summary>
                This class is used to generate serial license strings.
                The generated serial is a relative short license string.
                This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Babel.Licensing.SerialBuilder.SerialFormat">
            <summary>
                 Gets or sets the serial format <see cref="T:Babel.Licensing.StringFormat" />.
             </summary>
            <value>
                 The string format used to generate the serial.
             </value>
        </member>
        <member name="P:Babel.Licensing.SerialBuilder.PrivateKey">
            <summary>
                 Gets or sets the private key used to sign the license.
                 The key represented by a Base32 encoded string.
             </summary>
            <value>
                 The private key Base32 encoded string.
             </value>
        </member>
        <member name="P:Babel.Licensing.SerialBuilder.PublicKey">
            <summary>
                 Gets or sets the public key used to validate the license.
                 The key represented by a Base32 encoded string.
             </summary>
            <value>
                 The public key Base32 encoded string.
             </value>
        </member>
        <member name="P:Babel.Licensing.SerialBuilder.LicenseId">
            <summary>
                 Gets or sets the license identifier.
             </summary>
            <value>
                 The identifier of the license.
             </value>
        </member>
        <member name="P:Babel.Licensing.SerialBuilder.LicenseInfo">
            <summary>
                 Gets or sets general information stored into the license.
             </summary>
            <value>
                 Information stored into the license.
             </value>
        </member>
        <member name="P:Babel.Licensing.SerialBuilder.ExpireDate">
            <summary>
                 Gets or sets the license expire date.
             </summary>
            <value>
                 The expire date.
             </value>
        </member>
        <member name="P:Babel.Licensing.SerialBuilder.ExpireDays">
            <summary>
                 Gets or sets the number of days after which the generated license expires.
             </summary>
            <value>
                 The number of expire days.
             </value>
        </member>
        <member name="P:Babel.Licensing.SerialBuilder.RunInstances">
            <summary>
                 Gets or sets the number of application instances are allowed 
                 to run simultaneously for the generated license.
             </summary>
            <value>
                 The number of application instances are allowed
                 to run simultaneously.
             </value>
        </member>
        <member name="P:Babel.Licensing.SerialBuilder.DomainName">
            <summary>
                 Gets or sets the name of the domain.
             </summary>
            <value>
                 The name of the domain.
             </value>
        </member>
        <member name="P:Babel.Licensing.SerialBuilder.HardwareKey">
            <summary>
                 Gets or sets the hardware key.
             </summary>
            <value>
                 The hardware key.
             </value>
        </member>
        <member name="M:Babel.Licensing.SerialBuilder.#ctor">
            <summary>
                Create a new instance of <see cref="T:Babel.Licensing.SerialBuilder" /> class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.SerialBuilder.GenerateSerial(System.Int32)">
            <summary>
                 Generates a new serial.
             </summary>
            <param name="tokenLength"> (Optional) length of the tokens. </param>
            <returns>
                 The serial.
             </returns>
        </member>
        <member name="M:Babel.Licensing.SerialBuilder.IsValid(System.String)">
            <summary>
                 Query if 'serial' is valid.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the serial argument is null.
             </exception>
            <param name="serial"> The serial to validate. </param>
            <returns>
                <c>true</c> if the serial valid, <c>false</c> if is not valid.
             </returns>
        </member>
        <member name="M:Babel.Licensing.SerialBuilder.CreateKeyPair(Babel.Licensing.ECDsaKeySize)">
            <summary>
                 Creates key pair used to generate and validate a serial.
             </summary>
            <param name="keySize">  Size of the key. </param>
        </member>
        <member name="T:Babel.Licensing.SerialManager">
            <summary>
                This class is used to validate serials and get <see cref="T:Babel.Licensing.StringLicense" /> object from serials.
                This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Babel.Licensing.SerialManager.PublicKey">
            <summary>
                 Gets or sets the public key used to validate serials.
             </summary>
            <value>
                 The public key as base 32 string.
             </value>
        </member>
        <member name="M:Babel.Licensing.SerialManager.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Babel.Licensing.SerialManager" /> class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.SerialManager.IsValid(System.String)">
            <summary>
                 Query if the serial specified is valid.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the argument serial is null.
             </exception>
            <param name="serial">  The serial as base32 string. The serial can include '-' characters.</param>
            <returns>
                <c>true</c> if the serial is valid, otherwise <c>false</c>.
             </returns>
        </member>
        <member name="M:Babel.Licensing.SerialManager.Validate(System.String,System.Type,System.Object)">
            <summary>
                 Validates the given serial and returns a <see cref="T:Babel.Licensing.StringLicense" /> 
                 object if the serial is valid.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:Babel.Licensing.BabelLicenseException">
                 Thrown when a Babel License error condition occurs.
             </exception>
            <param name="serial">
                 The serial as base32 string. The serial can include '-' characters.
             </param>
            <param name="type">     The type. </param>
            <param name="instance"> The instance. </param>
            <returns>
                 A <see cref="T:Babel.Licensing.StringLicense" /> object if the serial is valid, otherwise 
                 it throws a <see cref="T:Babel.Licensing.BabelLicenseException" />.
             </returns>
        </member>
        <member name="T:Babel.Licensing.StringLicense">
            <summary>
                Defines a license object that can be retrieved from an encoded string. 
                This class cannot be inherited.
            </summary>
        </member>
        <member name="F:Babel.Licensing.StringLicense.DefaultMaskSize">
            <summary>
                The default string license mask size used to randomize the generated string.
            </summary>
        </member>
        <member name="P:Babel.Licensing.StringLicense.LicenseKey">
            <summary>
                 Gets the license key granted to this component.
             </summary>
            <value>
                 A license key granted to this component.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.Timestamp">
            <summary>
                 Gets the date/time when this object was created.
             </summary>
            <value>
                 This object timestamp.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.IsTrial">
            <summary>
                 Gets a value indicating whether this object represents a trial license.
             </summary>
            <value>
                 true if this objects contains a trial license, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.IsBeta">
            <summary>
                 Gets a value indicating whether this object represents a beta license.
             </summary>
            <value>
                 true if this is a beta license, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.Id">
            <summary>
                 Gets the license identifier.
             </summary>
            <value>
                 The license identifier.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.IssueDate">
            <summary>
                 Gets the license issue date.
             </summary>
            <value>
                 The license issue date.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.ExpireDate">
            <summary>
                 Gets the license expire date.
             </summary>
            <value>
                 The license expire date.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.SupportExpireDate">
            <summary>
                 Gets the license support expire date.
             </summary>
            <value>
                 The license support expire date.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.Type">
            <summary>
                 Gets the license type.
             </summary>
            <value>
                 The license type.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.Sites">
            <summary>
                 Gets or sets the number of sites to license.
             </summary>
            <value>
                 The licensed sites.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.Licensee">
            <summary>
                 Gets the <see cref="T:Babel.Licensing.Licensee" /> information.
             </summary>
            <value>
                 An instance of a <see cref="T:Babel.Licensing.Licensee" /> object or a null reference
                 (Nothing in Visual Basic) if no licensee information is available.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.Product">
            <summary>
                 Gets the licensed product information.
             </summary>
            <value>
                 An instance of a <see cref="T:Babel.Licensing.Product" /> object or a null reference
                 (Nothing in Visual Basic) if no product information is available.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.Assemblies">
            <summary>
                 Gets the collection of licensed assemblies full names.
             </summary>
            <value>
                 The licensed assemblies collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.Components">
            <summary>
                 Gets the licensed components collection.
             </summary>
            <value>
                 The licensed components collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.Features">
            <summary>
                 Gets the license <see cref="T:Babel.Licensing.Feature" /> collection.
             </summary>
            <value>
                 The license feature collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.Fields">
            <summary>
                 Gets the license <see cref="T:Babel.Licensing.Field" /> collection.
             </summary>
            <value>
                 The license field collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicense.Restrictions">
            <summary>
                 Gets the collection of <see cref="T:Babel.Licensing.Restriction" /> objects.
             </summary>
            <value>
                 The collection of <see cref="T:Babel.Licensing.Restriction" /> objects.
             </value>
        </member>
        <member name="M:Babel.Licensing.StringLicense.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Babel.Licensing.StringLicense" /> class.
            </summary>
            <example>
                <code source="Examples\StringLicense.Constructor.cs" language="cs" />
                <code source="Examples\StringLicense.Constructor.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.StringLicense.Finalize">
            <summary>
                Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Babel.Licensing.StringLicense.Dispose">
            <summary>
                Disposes of the resources used by the license object.
            </summary>
        </member>
        <member name="T:Babel.Licensing.StringLicenseBuilder">
            <summary>
                This class is used to generate encoded license strings.
                This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Babel.Licensing.StringLicenseBuilder.Format">
            <summary>
                 Gets or sets the <see cref="T:Babel.Licensing.StringFormat" /> used to generate the license.
             </summary>
            <value>
                 The license string format.
             </value>
        </member>
        <member name="E:Babel.Licensing.StringLicenseBuilder.CreateCustomRestriction">
            <summary>
                Event queue for all listeners interested in CreateCustomRestriction events.
            </summary>
        </member>
        <member name="E:Babel.Licensing.StringLicenseBuilder.CreateCustomSignatureProvider">
            <summary>
                Event queue for all listeners interested in CreateCustomSignatureProvider events.
            </summary>
            <example>
                This example shows how to implement a custom MD5 signature provider.
                <code source="Examples\CustomSignatureProvider.MD5Signature.cs" language="cs" /><code source="Examples\CustomSignatureProvider.MD5Signature.vb" language="vbnet" /></example>
            <example>
                The MD5 signature can be used to create and validate the license key.
                <code source="Examples\CustomSignatureProvider.MD5Signature.Validate.cs" language="cs" /><code source="Examples\CustomSignatureProvider.MD5Signature.Validate.vb" language="vbnet" /></example>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.#ctor">
            <summary>
                Create a new instance of <see cref="T:Babel.Licensing.StringLicenseBuilder" /> class.
            </summary>
            <example>
                <code source="Examples\StringLicenseBuilder.Constructor.vb" language="vbnet" />
                <code source="Examples\StringLicenseBuilder.Constructor.cs" language="cs" />
            </example>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.#ctor(Babel.Licensing.ISignatureProvider)">
            <summary>
                 Create a new instance of <see cref="T:Babel.Licensing.StringLicenseBuilder" /> class with the given
                 signature provider.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="signer">   The license signature provider <see cref="T:Babel.Licensing.ISignatureProvider" />. </param>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.ToReadableString(System.String)">
            <summary>
                 Converts the current license state to a readable string.
             </summary>
            <param name="format">   Describes the format to use. </param>
            <returns>
                 The current license state as a string.
             </returns>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.ToString(System.String)">
            <summary>
                 Returns an encoded license string according to the format specified.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown if the format parameter is null.
             </exception>
            <exception cref="T:System.ArgumentException">
                 Thrown when the format parameter specified is not valid.
             </exception>
            <param name="format">Describes the format to use. This can be ASCII or Base32.</param>
            <returns>
                 A string that represents the current license in the given format.
             </returns>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.ToString">
            <summary>
                 Returns an encoded string that represents the current license.
             </summary>
            <returns>
                 A string that represents the current license in the format specified for <see cref="T:Babel.Licensing.StringLicenseBuilder" />.
             </returns>
        </member>
        <member name="P:Babel.Licensing.StringLicenseBuilder.SignatureProvider">
            <summary>
                 Gets or sets the signature provider.
                 The signature provider is used to sign and verify the integrity of the license data.
             </summary>
            <value>
                 The signature provider type <see cref="T:Babel.Licensing.ISignatureProvider" />.
             </value>
            <example>
                <code>
                    StringLicenseBuilder builder = new StringLicenseBuilder();
                    builder.SignatureProvider = RSASignature.CreateFromKeyFile("KeyPair.snk");
                 </code>
            </example>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.ToLicenses">
            <summary>
                 Converts this object to a <see cref="T:Babel.Licensing.ILicense" /> object.
             </summary>
            <returns>
                 This object as a <see cref="T:Babel.Licensing.ILicense" />.
             </returns>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.Load(System.IO.Stream)">
            <summary>
                 Loads the license from the specified file.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the fileName argument is null.
             </exception>
            <exception cref="T:Babel.Licensing.BabelLicenseException">
                 Thrown when the file contains bad data.
             </exception>
            <param name="stream"> Specify the input license stream. </param>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.Load(System.IO.TextReader)">
            <summary>
                 Loads the license from the given text reader.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the reader argument is null.
             </exception>
            <exception cref="T:Babel.Licensing.BabelLicenseException">
                 Thrown when the <see cref="T:System.IO.TextReader" /> reads bad data.
             </exception>
            <param name="reader">   The <see cref="T:System.IO.TextReader" /> used to read the license. </param>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.Parse(System.String)">
            <summary>
                 Parse the input license string. If the string is not a valid encoded license string,
                 it throws a <see cref="T:Babel.Licensing.BabelLicenseException" />.
             </summary>
            <param name="license">  The encoded license string to parse. </param>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.Save(System.IO.Stream)">
            <summary>
                 Saves the current license state to the specified file.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the fileName argument is null.
             </exception>
            <param name="stream"> The output license stream.
             </param>
            <example> 
                 This sample shows how to generate and save an encoded license string to a file.
                 <code>
                     StringLicense license = new StringLicense();
            
                     license.Id = IdGenerator.Create("lic", 5);
                     license.Product = new Product();
                     license.Product.Id = IdGenerator.Create("prd", 5);
            
                     // Create an encoded string license
                     StringLicenseBuilder builder = new StringLicenseBuilder();
                     builder.AddOrUpdate(license);
                     
                     // Save the license to memory
                     MemoryStream stream = new MemoryStream();
                     builder.Save(stream);
                 </code></example>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.Save(System.IO.TextWriter)">
            <summary>
                 Saves the current license using the given <see cref="T:System.IO.TextWriter" />.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the writer argument is null.
             </exception>
            <param name="writer">   The <see cref="T:System.IO.TextWriter" /> object used to save the license. </param>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.SetMaskSize(System.Int32)">
            <summary>
                 Sets the mask size used to randomize the generated license.
             </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
                 Thrown when the size argument is a negative number.
             </exception>
            <param name="size"> The size represent the number of bytes used to randomize the license. </param>
            <example>
                <code>
                      StringLicenseBuilder builder = new StringLicenseBuilder();
                      
                      // Generates one of the possible 256 random licenses
                      string license = builder.ToString();
                 </code>
            </example>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.SetMask(System.Byte[])">
            <summary>
                 Sets the mask used to generate the license.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="mask"> An array of bytes. </param>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.AddOrUpdate(Babel.Licensing.ILicense)">
            <summary>
                 Adds a <see cref="T:Babel.Licensing.ILicense" /> with a given key <see cref="P:Babel.Licensing.ILicense.Id" />
                 to the <see cref="T:Babel.Licensing.StringLicenseBuilder" /> if the license does not already exists, or updates the 
                 <see cref="T:Babel.Licensing.ILicense" /> if the key already exists.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the license argument is null.
             </exception>
            <param name="license"> The <see cref="T:Babel.Licensing.ILicense" /> object. </param>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.Remove(Babel.Licensing.ILicense)">
            <summary>
                 Removes a <see cref="T:Babel.Licensing.ILicense" /> with a given key <see cref="P:Babel.Licensing.ILicense.Id" />
                 from the <see cref="T:Babel.Licensing.StringLicenseBuilder" />.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the license argument is null.
             </exception>
                     Remove
             <param name="license"> The <see cref="T:Babel.Licensing.ILicense" /> object to be removed. </param><returns><c>true</c> if the license is successfully removed, <c>false</c> if it fails to remove the license.
             </returns></member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.Sign">
            <summary>
                 Add a signature to the current license object.
             </summary>
            <exception cref="T:System.InvalidOperationException">
                 Thrown if there is the signature cannot be generated.
             </exception>
        </member>
        <member name="M:Babel.Licensing.StringLicenseBuilder.Validate">
            <summary>
                 Validates the current license signature.
                 This method doesn't validate license restrictions. 
                 Is not meant to be used to validate the license in client applications. 
                 To validate the license in client applications use the <see cref="T:Babel.Licensing.StringLicenseManager" /> class.
             </summary>
            <returns>
                 true if the signature id valid, false if the signature is not present or not valid.
             </returns>
        </member>
        <member name="T:Babel.Licensing.StringLicenseManager">
            <summary>
                This class is used to validate string licenses and get <see cref="T:Babel.Licensing.StringLicense" /> object from license string.
            </summary>
        </member>
        <member name="E:Babel.Licensing.StringLicenseManager.CreateCustomRestriction">
            <summary>
                Event queue for all listeners interested in CreateCustomRestriction events.
            </summary>
        </member>
        <member name="M:Babel.Licensing.StringLicenseManager.OnCreateCustomRestriction(Babel.Licensing.CreateCustomRestrictionEventArgs)">
            <summary>
                 Raises the CreateCustomRestriction event.
             </summary>
            <param name="ea">   Event information to send to registered event handlers. </param>
        </member>
        <member name="E:Babel.Licensing.StringLicenseManager.CreateCustomSignatureProvider">
            <summary>
                Event queue for all listeners interested in CreateCustomSignatureProvider events.
            </summary>
        </member>
        <member name="M:Babel.Licensing.StringLicenseManager.OnCreateCustomSignatureProvider(Babel.Licensing.CreateCustomSignatureProviderEventArgs)">
            <summary>
                 Raises the CreateCustomSignatureProvider event.
             </summary>
            <param name="ea">   Event information to send to registered event handlers. </param>
        </member>
        <member name="P:Babel.Licensing.StringLicenseManager.LicenseFactory">
            <summary>
                 Gets or sets the license factory.
             </summary>
            <value>
                 The license factory.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicenseManager.SignatureProvider">
            <summary>
                 Gets or sets the signature provider.
             </summary>
            <value>
                 The signature provider.
             </value>
        </member>
        <member name="P:Babel.Licensing.StringLicenseManager.CurrentContext">
            <summary>
                 Gets or sets the license context.
             </summary>
            <value>
                 The current context.
             </value>
        </member>
        <member name="M:Babel.Licensing.StringLicenseManager.IsValid(System.String,System.Type,System.Object)">
            <summary>
                 Determines whether the given string is a valid license.
             </summary>
            <param name="license">  The license string. </param>
            <param name="type">     The type associated with the license. </param>
            <param name="instance"> The object instance associated with the license. </param>
            <returns>
                 true if the given string license is valid; otherwise, false.
             </returns>
            <remarks>
             To successfully validate a license, the license must be signed and 
             the signature must carry enough information to reconstruct the <see cref="T:Babel.Licensing.ISignatureProvider" /> 
             object valid for validating signatures.
             For instance, if you have signed the license with an <see cref="T:Babel.Licensing.RSASignature" /> object, the 
             signature must include the public key. If the public key is not available inside the signature element, it will be
             extracted from the assembly strong name information. If the assembly is not signed and the public key is not embedded into
             the signature element the validation will fails. 
             For signature generated by the <see cref="T:Babel.Licensing.ECDsaSignature" /> provider, the public key cannot be extracted from
             the assembly strong name as ECDsa signatures are not based on RSA algorithm used to strong name the assembly. 
             In this scenario the ECDsa signature must carry the public key information to validate the signature. 
             If the signature does not embed the public key information, you should provide the StringLicenseManager with an instance of  
             the <see cref="T:Babel.Licensing.ECDsaSignature" /> provider generated from the ECDsa public key before calling 
             any validation method.
             To embed into the signature the key information required for the validation, the signature provider must implement
             the <see cref="T:Babel.Licensing.ISignatureKeyInfo" /> interface and the 
             <see cref="P:Babel.Licensing.ISignatureKeyInfo.GenerateKeyInfo" /> property must be set to true.
             </remarks>
        </member>
        <member name="M:Babel.Licensing.StringLicenseManager.Validate(System.String,System.Type,System.Object)">
            <summary>
                 Validates the string license.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:Babel.Licensing.BabelLicenseException">
                 Thrown when a Babel License error condition occurs.
             </exception>
            <param name="licenseKey">  The string license string. </param>
            <param name="type"> The type associated with the license. </param>
            <param name="instance"> The object instance associated with the license. </param>
            <returns>
                 An <see cref="T:Babel.Licensing.StringLicense" /> object that has been validated.
             </returns>
            <remarks>
             To successfully validate a license, the license must be signed and 
             the signature must carry enough information to reconstruct the <see cref="T:Babel.Licensing.ISignatureProvider" /> 
             object valid for validating signatures.
             For instance, if you have signed the license with an <see cref="T:Babel.Licensing.RSASignature" /> object, the 
             signature must include the public key. If the public key is not available inside the signature element, it will be
             extracted from the assembly strong name information. If the assembly is not signed and the public key is not embedded into
             the signature element the validation will fails. 
             For signature generated by the <see cref="T:Babel.Licensing.ECDsaSignature" /> provider, the public key cannot be extracted from
             the assembly strong name as ECDsa signatures are not based on RSA algorithm used to strong name the assembly. 
             In this scenario the ECDsa signature must carry the public key information to validate the signature. 
             If the signature does not embed the public key information, you should provide the StringLicenseManager with an instance of  
             the <see cref="T:Babel.Licensing.ECDsaSignature" /> provider generated from the ECDsa public key before calling 
             any validation method.
             To embed into the signature the key information required for the validation, the signature provider must implement
             the <see cref="T:Babel.Licensing.ISignatureKeyInfo" /> interface and the 
             <see cref="P:Babel.Licensing.ISignatureKeyInfo.GenerateKeyInfo" /> property must be set to true.
             </remarks>
        </member>
        <member name="T:Babel.Licensing.Ascii85Encoding">
            <summary>
            Converts between binary data and an Ascii85-encoded string.
            </summary>
            <remarks>See <a href="http://en.wikipedia.org/wiki/Ascii85">Ascii85 at Wikipedia</a>.</remarks>
        </member>
        <member name="M:Babel.Licensing.Ascii85Encoding.CanDecode(System.String)">
            <summary>
                 Determine if we can decode the given string.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="encoded">  The Ascii85 string. </param>
            <returns>
                 true if we can decode, false if not.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Ascii85Encoding.Encode(System.Byte[])">
            <summary>
            Encodes the specified byte array in Ascii85.
            </summary>
            <param name="bytes">The bytes to encode.</param>
            <returns>An Ascii85-encoded string representing the input byte array.</returns>
            <example>
                <code source="Examples\Ascii85Encoding.cs" language="cs" />
                <code source="Examples\Ascii85Encoding.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Ascii85Encoding.Decode(System.String)">
            <summary>
            Decodes the specified Ascii85 string into the corresponding byte array.
            </summary>
            <param name="encoded">The Ascii85 string.</param>
            <returns>The decoded byte array.</returns>
            <example>
                <code source="Examples\Ascii85Encoding.cs" language="cs" />
                <code source="Examples\Ascii85Encoding.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Ascii85Encoding.IsValidChar(System.Char)">
            <summary>
                 Query if the given character is a valid for encoding.
             </summary>
            <param name="value">   The input character. </param>
            <returns>
                 true if valid character, false if not.
             </returns>
            <example>
                <code source="Examples\Ascii85Encoding.IsValidChar.cs" language="cs" />
                <code source="Examples\Ascii85Encoding.IsValidChar.vb" language="vbnet" />
            </example>
        </member>
        <member name="T:Babel.Licensing.Base32Encoding">
            <summary>
                Converts between binary data and an base32-encoded string.
                This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Babel.Licensing.Base32Encoding.CanDecode(System.String)">
            <summary>
                 Determine if we can decode the given string.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="encoded">  The encoded string. </param>
            <returns>
                 true if we can decode, false if not.
             </returns>
        </member>
        <member name="M:Babel.Licensing.Base32Encoding.Encode(System.Byte[])">
            <summary>
                 Encodes the given buffer.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="bytes">    The buffer. </param>
            <returns>
                 The encoded string.
             </returns>
            <example>
                <code source="Examples\Base32Encoding.cs" language="cs" />
                <code source="Examples\Base32Encoding.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Base32Encoding.Decode(System.String)">
            <summary>
                 Decodes the given string to its byte representation.
             </summary>
            <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are null. </exception>
            <param name="encoded">  The encoded string. </param>
            <returns>
                 The decoded string buffer.
             </returns>
            <example>
                <code source="Examples\Base32Encoding.cs" language="cs" />
                <code source="Examples\Base32Encoding.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.Base32Encoding.IsValidChar(System.Char)">
            <summary>
                 Query if the given character is a valid for encoding.
             </summary>
            <param name="ch">   The input character. </param>
            <returns>
                 true if valid character, false if not.
             </returns>
            <example>
                <code source="Examples\Base32Encoding.IsValidChar.cs" language="cs" />
                <code source="Examples\Base32Encoding.IsValidChar.vb" language="vbnet" />
            </example>
        </member>
        <member name="T:Babel.Licensing.IEncoding">
            <summary>
                Defines a common interface for objects that can provide string encoding.
            </summary>
        </member>
        <member name="M:Babel.Licensing.IEncoding.Encode(System.Byte[])">
            <summary>
                 Encodes the given buffer.
             </summary>
            <param name="buffer">   The buffer. </param>
            <returns>
                 The encoded string.
             </returns>
        </member>
        <member name="M:Babel.Licensing.IEncoding.Decode(System.String)">
            <summary>
                 Decodes the given string to its byte representation.
             </summary>
            <param name="encoded">  The encoded string. </param>
            <returns>
                 The decoded string buffer.
             </returns>
        </member>
        <member name="M:Babel.Licensing.IEncoding.IsValidChar(System.Char)">
            <summary>
                 Query if the given character is a valid for encoding.
             </summary>
            <param name="value">   The input character. </param>
            <returns>
                 true if valid character, false if not.
             </returns>
        </member>
        <member name="T:Babel.Licensing.XmlLicense">
            <summary>
                Defines a license object that can be retrieved from an XML document. 
                This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Babel.Licensing.XmlLicense.Parse(System.String)">
            <summary>
                Parse the specified XML license string.
            </summary>
            <param name="licenseKey">The license key.</param>
            <returns>An XmlLicense object that corresponds to the license key.</returns>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.LicenseKey">
            <summary>
                 Gets the license key granted to this component.
             </summary>
            <value>
                 A license key granted to this component.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.Id">
            <summary>
                 Gets or sets the license identifier.
             </summary>
            <value>
                 The license identifier.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.Type">
            <summary>
                 Gets or sets the license type.
             </summary>
            <value>
                 The license type.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.Sites">
            <summary>
                 Gets or sets the number of sites to license.
             </summary>
            <value>
                 The licensed sites.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.Timestamp">
            <summary>
                 Gets the license object creation time.
             </summary>
            <value>
                 The date and time the license object was instantiated.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.IssueDate">
            <summary>
                 Gets, sets the license issue date.
             </summary>
            <value>
                 The license issue date.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.ExpireDate">
            <summary>
                 Gets, sets the license expire date.
             </summary>
            <value>
                 The license expire date.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.SupportExpireDate">
            <summary>
                 Gets, sets the license support expire date.
             </summary>
            <value>
                 The license support expire date.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.Licensee">
            <summary>
                 Gets, sets the <see cref="T:Babel.Licensing.Licensee" /> information.
             </summary>
            <value>
                 An instance of a <see cref="T:Babel.Licensing.Licensee" /> object or a null reference
                 (Nothing in Visual Basic) if no licensee information is available.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.Product">
            <summary>
                 Gets, sets the licensed product information.
             </summary>
            <value>
                 An instance of a <see cref="T:Babel.Licensing.Product" /> object or a null reference
                 (Nothing in Visual Basic) if no product information is available.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.Assemblies">
            <summary>
                 Gets the licensed assemblies collection.
             </summary>
            <value>
                 The licensed assemblies collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.Components">
            <summary>
                 Gets the licensed components collection.
             </summary>
            <value>
                 The licensed components collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.Features">
            <summary>
                 Gets the license <see cref="T:Babel.Licensing.Feature" /> collection.
             </summary>
            <value>
                 The license feature collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.Fields">
            <summary>
                 Gets the license <see cref="T:Babel.Licensing.Field" /> collection.
             </summary>
            <value>
                 The license field collection.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.Restrictions">
            <summary>
                 Gets the collection of <see cref="T:Babel.Licensing.Restriction" /> objects.
             </summary>
            <value>
                 The collection of <see cref="T:Babel.Licensing.Restriction" /> objects.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.IsTrial">
            <summary>
                 Gets a value indicating whether this object is trial.
             </summary>
            <value>
                 true if this object is trial, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicense.IsBeta">
            <summary>
                 Gets a value indicating whether this object is beta.
             </summary>
            <value>
                 true if this object is beta, false if not.
             </value>
        </member>
        <member name="M:Babel.Licensing.XmlLicense.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Babel.Licensing.XmlLicense" /> class.
            </summary>
            <example>
                <code source="Examples\XmlLicense.Constructor.cs" language="cs" />
                <code source="Examples\XmlLicense.Constructor.vb" language="vbnet" />
            </example>
        </member>
        <member name="M:Babel.Licensing.XmlLicense.Finalize">
            <summary>
                Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Babel.Licensing.XmlLicense.Dispose">
            <summary>
                Disposes of the resources used by the license object.
            </summary>
        </member>
        <member name="T:Babel.Licensing.XmlLicenseBuilder">
            <summary>
                Provides a custom constructor and validation for XML licenses.
                This class cannot be inherited.
            </summary>
        </member>
        <member name="E:Babel.Licensing.XmlLicenseBuilder.CreateCustomRestriction">
            <summary>
                Event queue for all listeners interested in CreateCustomRestriction events.
            </summary>
            <example>
                This code creates an XML license with a custom restriction.
                <code source="Examples\CustomRestriction.Create.cs" language="cs" /><code source="Examples\CustomRestriction.Create.vb" language="vbnet" /></example>
            <example>
                To validate a custom restriction, handle the CreateCustomRestriction event
                and create the proper restriction object.
                <code source="Examples\CustomRestriction.Validate.cs" language="cs" /><code source="Examples\CustomRestriction.Validate.vb" language="vbnet" /></example>
            <example>
                This is the implementation of a custom restriction that is able to validate the 
                machine minimum requirements in terms of available memory and total number of CPU present.
                <code source="Examples\CustomRestriction.MinimumRequirementsRestriction.cs" language="cs" /><code source="Examples\CustomRestriction.MinimumRequirementsRestriction.vb" language="vbnet" /></example>
        </member>
        <member name="E:Babel.Licensing.XmlLicenseBuilder.CreateCustomSignatureProvider">
            <summary>
                Event queue for all listeners interested in CreateCustomSignatureProvider events.
            </summary>
        </member>
        <member name="P:Babel.Licensing.XmlLicenseBuilder.SignatureProvider">
            <summary>
                 Gets or sets the signature provider.
                 The signature provider is used to sign and verify the integrity of the license data.
             </summary>
            <value>
                 The signature provider type <see cref="T:Babel.Licensing.ISignatureProvider" />.
             </value>
            <example>
                <code>
                    XmlLicenseBuilder builder = new XmlLicenseBuilder();
                    builder.SignatureProvider = RSASignature.CreateFromKeyFile("KeyPair.snk");
                 </code>
            </example>
        </member>
        <member name="P:Babel.Licensing.XmlLicenseBuilder.HasSignature">
            <summary>
                 Indicates whether the license has a signature.
             </summary>
            <value>
                <c>true</c> if this object has signature, <c>false</c> if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicenseBuilder.Encoding">
            <summary>
                 Gets or sets the character encoding used to save the license.
             </summary>
            <value>
                 The character encoding used to save the license.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicenseBuilder.AddXmlDeclaration">
            <summary>
                 Gets or sets a value indicating whether the add XML declaration.
             </summary>
            <value>
                 True if add XML declaration, false if not.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicenseBuilder.Formatted">
            <summary>
                 Gets or sets a value indicating whether the indent the generated XML.
             </summary>
            <value>
                 True if indent, false if not.
             </value>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.#ctor(Babel.Licensing.ISignatureProvider)">
            <summary>
                 Create a new instance of <see cref="T:Babel.Licensing.XmlLicenseBuilder" /> class with the 
                 specified <see cref="T:Babel.Licensing.ISignatureProvider" /> signature provider.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="signer">   The <see cref="T:Babel.Licensing.ISignatureProvider" /> object used to digitally sign the license information.</param>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.#ctor">
            <summary>
                Create a new instance of <see cref="T:Babel.Licensing.XmlLicenseBuilder" /> class.
            </summary>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.ToReadableString(System.String)">
            <summary>
                 Creates and returns a string representation of the current XML license.
             </summary>
            <param name="format">   Describes the format to use. </param>
            <remarks>
                 Available formats
                 B: Not formatted XML
             </remarks>
            <returns>
                 This XML license as a string.
             </returns>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.Parse(System.String)">
            <summary>
                 Parse the specified XML license string.
             </summary>
            <param name="license">  The XML license string. </param>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.ToXml(System.Boolean)">
            <summary>
                 Converts this instance to an XML string.
             </summary>
            <param name="formatted"> Whether to format the XML output. </param>
            <returns>
                 The XML license string.
             </returns>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.ToLicenses">
            <summary>
                 Converts this object to a <see cref="T:Babel.Licensing.ILicense" /> object.
             </summary>
            <returns>
                 This object as a <see cref="T:Babel.Licensing.ILicense" />.
             </returns>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.LoadXml(System.String)">
            <summary>
                 Loads the license from the specified XML document.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the xml argument is null.
             </exception>
            <exception cref="T:Babel.Licensing.BabelLicenseException">
                 Thrown when the xml contains bad license data.
             </exception>
            <param name="xml"> The XML license document. </param>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.Load(System.IO.Stream)">
            <summary>
                 Loads the license from the specified stream.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the stream argument is null.
             </exception>
            <exception cref="T:Babel.Licensing.BabelLicenseException">
                 Thrown when the stream contains bad data.
             </exception>
            <param name="stream"> Specify the stream where to load the license. </param>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.Load(System.String)">
            <summary>
                 Loads the license from the given file.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="path"> The file name where to save the license. </param>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.Save(System.IO.Stream)">
            <summary>
                 Saves the current license state to the specified stream.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the stream argument is null.
             </exception>
            <param name="stream"> The stream where to write the license.
             </param>
            <example> 
                 This sample shows how to generate and save an XML license to a MemoryStream.
                 <code>
                     XmlLicense license = new XmlLicense();
            
                     license.Id = IdGenerator.Create("lic", 5);
                     license.Product = new Product();
                     license.Product.Id = IdGenerator.Create("prd", 5);
            
                     // Create and sign a license
                     XmlLicenseBuilder builder = new XmlLicenseBuilder();
                     builder.SignatureProvider = RSASignature.CreateFromKeyFile("KeyPair.snk");
                     builder.AddOrUpdate(license);
                     builder.Sign();
                     
                     // Save the license 
                     MemoryStream stream = new MemoryStream();
                     builder.Save(stream);
                 </code></example>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.Save(System.String)">
            <summary>
                 Saves the current license state to a given file.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <param name="path"> The file path where to save the license. </param>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.AddOrUpdate(Babel.Licensing.ILicense)">
            <summary>
                 Adds a <see cref="T:Babel.Licensing.ILicense" /> with a given key <see cref="P:Babel.Licensing.ILicense.Id" />
                 to the builder if the license does not already exists, or updates the <see cref="T:Babel.Licensing.ILicense" />
                 if the key already exists.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the license argument is null.
             </exception>
            <param name="license"> The <see cref="T:Babel.Licensing.ILicense" /> object. </param>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.Remove(Babel.Licensing.ILicense)">
            <summary>
                 Removes a <see cref="T:Babel.Licensing.ILicense" /> with a given key <see cref="P:Babel.Licensing.ILicense.Id" />
                 from the <see cref="T:Babel.Licensing.XmlLicenseBuilder" />.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when the license argument is null.
             </exception>
            <param name="license"> The <see cref="T:Babel.Licensing.ILicense" /> object to be removed. </param>
            <returns>
                <c>true</c> if the license is successfully removed, <c>false</c> if it fails to remove the license.
             </returns>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.Sign">
            <summary>
                 Add a signature to the current license object.
             </summary>
            <exception cref="T:System.InvalidOperationException">
                 Thrown when the signature cannot be generated.
             </exception>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseBuilder.Validate">
            <summary>
                Validates the current license signature.
                This method doesn't validate license restrictions. 
                Is not meant to be used to validate the license in client applications. 
                To validate the license in client applications use the <see cref="T:Babel.Licensing.XmlLicenseManager" /> class.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                Thrown when the signature cannot be validated.
            </exception>
            <returns>
                <c>true</c> if the signature id valid, <c>false</c> if the signature is not present or not valid.
            </returns>
        </member>
        <member name="T:Babel.Licensing.XmlLicenseManager">
            <summary>
                This class is used to validate XML license and get <see cref="T:Babel.Licensing.XmlLicense" /> object from XML.
            </summary>
        </member>
        <member name="E:Babel.Licensing.XmlLicenseManager.CreateCustomRestriction">
            <summary>
                Event queue for all listeners interested in CreateCustomRestriction events.
            </summary>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseManager.OnCreateCustomRestriction(Babel.Licensing.CreateCustomRestrictionEventArgs)">
            <summary>
                 Raises the CreateCustomRestriction event.
             </summary>
            <param name="ea">   Event information to send to registered event handlers. </param>
        </member>
        <member name="E:Babel.Licensing.XmlLicenseManager.CreateCustomSignatureProvider">
            <summary>
                Event queue for all listeners interested in CreateCustomSignatureProvider events.
            </summary>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseManager.OnCreateCustomSignatureProvider(Babel.Licensing.CreateCustomSignatureProviderEventArgs)">
            <summary>
                 Raises the CreateCustomSignatureProvider event.
             </summary>
            <param name="ea">   Event information to send to registered event handlers. </param>
        </member>
        <member name="P:Babel.Licensing.XmlLicenseManager.LicenseFactory">
            <summary>
                 Gets or sets the license factory.
             </summary>
            <value>
                 The license factory.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicenseManager.SignatureProvider">
            <summary>
                 Gets or sets the signature provider.
             </summary>
            <value>
                 The signature provider.
             </value>
        </member>
        <member name="P:Babel.Licensing.XmlLicenseManager.CurrentContext">
            <summary>
                 Gets or sets the license context.
             </summary>
            <value>
                 The current context.
             </value>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseManager.IsValid(System.String,System.Type,System.Object)">
            <summary>
                 Determines whether the given XML string is a valid license.
             </summary>
            <param name="xml">      The XML license string. </param>
            <param name="type">     The type associated with the license. </param>
            <param name="instance"> The object instance associated with the license. </param>
            <returns>
                 true if the given XML license is valid; otherwise, false.
             </returns>
            <remarks>
             To successfully validate a license, the license must be signed and 
             the signature must carry enough information to reconstruct the <see cref="T:Babel.Licensing.ISignatureProvider" /> 
             object valid for validating signatures.
             For instance, if you have signed the license with an <see cref="T:Babel.Licensing.RSASignature" /> object, the 
             signature must include the public key. If the public key is not available inside the signature element, it will be
             extracted from the assembly strong name information. If the assembly is not signed and the public key is not embedded into
             the signature element the validation will fails. 
             For signature generated by the <see cref="T:Babel.Licensing.ECDsaSignature" /> provider, the public key cannot be extracted from
             the assembly strong name as ECDsa signatures are not based on RSA algorithm used to strong name the assembly. 
             In this scenario the ECDsa signature must carry the public key information to validate the signature. 
             If the signature does not embed the public key information, you should provide the XmlLicenseManager with an instance of  
             the <see cref="T:Babel.Licensing.ECDsaSignature" /> provider generated from the ECDsa public key before calling 
             any validation method.
             To embed into the signature the key information required for the validation, the signature provider must implement
             the <see cref="T:Babel.Licensing.ISignatureKeyInfo" /> interface and the 
             <see cref="P:Babel.Licensing.ISignatureKeyInfo.GenerateKeyInfo" /> property must be set to true.
             </remarks>
        </member>
        <member name="M:Babel.Licensing.XmlLicenseManager.Validate(System.String,System.Type,System.Object)">
            <summary>
                 Validates the XML license.
             </summary>
            <exception cref="T:System.ArgumentNullException">
                 Thrown when one or more required arguments are null.
             </exception>
            <exception cref="T:Babel.Licensing.BabelLicenseException">
                 Thrown when a Babel License error condition occurs.
             </exception>
            <param name="xml">  The XML license string. </param>
            <param name="type"> The type associated with the license. </param>
            <param name="instance"> The object instance associated with the license. </param>
            <returns>
                 An XmlLicense object that has been validated.
             </returns>
            <remarks>
             To successfully validate a license, the license must be signed and 
             the signature must carry enough information to reconstruct the <see cref="T:Babel.Licensing.ISignatureProvider" /> 
             object valid for validating signatures.
             For instance, if you have signed the license with an <see cref="T:Babel.Licensing.RSASignature" /> object, the 
             signature must include the public key. If the public key is not available inside the signature element, it will be
             extracted from the assembly strong name information. If the assembly is not signed and the public key is not embedded into
             the signature element the validation will fails. 
             For signature generated by the <see cref="T:Babel.Licensing.ECDsaSignature" /> provider, the public key cannot be extracted from
             the assembly strong name as ECDsa signatures are not based on RSA algorithm used to strong name the assembly. 
             In this scenario the ECDsa signature must carry the public key information to validate the signature. 
             If the signature does not embed the public key information, you should provide the XmlLicenseManager with an instance of  
             the <see cref="T:Babel.Licensing.ECDsaSignature" /> provider generated from the ECDsa public key before calling 
             any validation method.
             To embed into the signature the key information required for the validation, the signature provider must implement
             the <see cref="T:Babel.Licensing.ISignatureKeyInfo" /> interface and the 
             <see cref="P:Babel.Licensing.ISignatureKeyInfo.GenerateKeyInfo" /> property must be set to true.
             </remarks>
        </member>
        <member name="P:System.Security.Cryptography.Xml.ReferenceList.System#Collections#IList#Item(System.Int32)">
            <internalonly />
        </member>
        <member name="P:System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Item(System.Int32)">
            <internalonly />
        </member>
        <member name="M:System.Security.Cryptography.Xml.SignedXmlDebugLog.WriteLine(System.Object,System.Diagnostics.TraceEventType,System.Security.Cryptography.Xml.SignedXmlDebugLog.SignedXmlDebugEvent,System.String)">
            <summary>
                Write data to the log
            </summary>
            <param name="source">object doing the trace</param>
            <param name="eventType">severity of the debug event</param>
            <param name="data">data being written</param>
            <param name="eventId">type of event being traced</param>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffTag">
            <summary>
            TIFF tag definitions.
            </summary>
            <remarks>
            Joris Van Damme maintains
            <a href="http://www.awaresystems.be/imaging/tiff/tifftags.html" target="_blank">
            TIFF Tag Reference</a>, good source of tag information. It's an overview of known TIFF
            Tags with properties, short description, and other useful information.
            </remarks>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IGNORE">
            <summary>
            Tag placeholder
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SUBFILETYPE">
            <summary>
            Subfile data descriptor.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.FileType" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.OSUBFILETYPE">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Kind of data in subfile. For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.OFileType" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEWIDTH">
            <summary>
            Image width in pixels.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGELENGTH">
            <summary>
            Image height in pixels.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BITSPERSAMPLE">
            <summary>
            Bits per channel (sample).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.COMPRESSION">
            <summary>
            Data compression technique.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Compression" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PHOTOMETRIC">
            <summary>
            Photometric interpretation.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Photometric" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.THRESHHOLDING">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Thresholding used on data. For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Threshold" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CELLWIDTH">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Dithering matrix width.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CELLLENGTH">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Dithering matrix height.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FILLORDER">
            <summary>
            Data order within a byte.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.FillOrder" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DOCUMENTNAME">
            <summary>
            Name of document which holds for image.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEDESCRIPTION">
            <summary>
            Information about image.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MAKE">
            <summary>
            Scanner manufacturer name.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MODEL">
            <summary>
            Scanner model name/number.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPOFFSETS">
            <summary>
            Offsets to data strips.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ORIENTATION">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Image orientation. For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Orientation" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SAMPLESPERPIXEL">
            <summary>
            Samples per pixel.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ROWSPERSTRIP">
            <summary>
            Rows per strip of data.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.STRIPBYTECOUNTS">
            <summary>
            Bytes counts for strips.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MINSAMPLEVALUE">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Minimum sample value.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MAXSAMPLEVALUE">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Maximum sample value.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.XRESOLUTION">
            <summary>
            Pixels/resolution in x.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.YRESOLUTION">
            <summary>
            Pixels/resolution in y.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PLANARCONFIG">
            <summary>
            Storage organization.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.PlanarConfig" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PAGENAME">
            <summary>
            Page name image is from.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.XPOSITION">
            <summary>
            X page offset of image lhs.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.YPOSITION">
            <summary>
            Y page offset of image lhs.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FREEOFFSETS">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Byte offset to free block.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FREEBYTECOUNTS">
            <summary>
            [obsoleted by TIFF rev. 5.0]<br />
            Sizes of free blocks.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GRAYRESPONSEUNIT">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br />
            Gray scale curve accuracy.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.GrayResponseUnit" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GRAYRESPONSECURVE">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br />
            Gray scale response curve.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GROUP3OPTIONS">
            <summary>
            Options for CCITT Group 3 fax encoding. 32 flag bits.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Group3Opt" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.T4OPTIONS">
            <summary>
            TIFF 6.0 proper name alias for GROUP3OPTIONS.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GROUP4OPTIONS">
            <summary>
            Options for CCITT Group 4 fax encoding. 32 flag bits.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Group3Opt" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.T6OPTIONS">
            <summary>
            TIFF 6.0 proper name alias for GROUP4OPTIONS.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.RESOLUTIONUNIT">
            <summary>
            Units of resolutions.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.ResUnit" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PAGENUMBER">
            <summary>
            Page numbers of multi-page.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.COLORRESPONSEUNIT">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br />
            Color curve accuracy.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.ColorResponseUnit" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TRANSFERFUNCTION">
            <summary>
            Colorimetry info.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SOFTWARE">
            <summary>
            Name &amp; release.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DATETIME">
            <summary>
            Creation date and time.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ARTIST">
            <summary>
            Creator of image.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.HOSTCOMPUTER">
            <summary>
            Machine where created.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PREDICTOR">
            <summary>
            Prediction scheme w/ LZW.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.Predictor" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.WHITEPOINT">
            <summary>
            Image white point.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PRIMARYCHROMATICITIES">
            <summary>
            Primary chromaticities.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.COLORMAP">
            <summary>
            RGB map for pallette image.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.HALFTONEHINTS">
            <summary>
            Highlight + shadow info.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TILEWIDTH">
            <summary>
            Tile width in pixels.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TILELENGTH">
            <summary>
            Tile height in pixels.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TILEOFFSETS">
            <summary>
            Offsets to data tiles.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TILEBYTECOUNTS">
            <summary>
            Byte counts for tiles.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BADFAXLINES">
            <summary>
            Lines with wrong pixel count.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CLEANFAXDATA">
            <summary>
            Regenerated line info.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.CleanFaxData" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CONSECUTIVEBADFAXLINES">
            <summary>
            Max consecutive bad lines.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SUBIFD">
            <summary>
            Subimage descriptors.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.INKSET">
            <summary>
            Inks in separated image.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.InkSet" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.INKNAMES">
            <summary>
            ASCII names of inks.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.NUMBEROFINKS">
            <summary>
            Number of inks.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DOTRANGE">
            <summary>
            0% and 100% dot codes.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TARGETPRINTER">
            <summary>
            Separation target.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXTRASAMPLES">
            <summary>
            Information about extra samples.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.ExtraSample" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SAMPLEFORMAT">
            <summary>
            Data sample format.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.SampleFormat" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SMINSAMPLEVALUE">
            <summary>
            Variable MinSampleValue.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SMAXSAMPLEVALUE">
            <summary>
            Variable MaxSampleValue.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CLIPPATH">
            <summary>
            ClipPath. Introduced post TIFF rev 6.0 by Adobe TIFF technote 2.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.XCLIPPATHUNITS">
            <summary>
            XClipPathUnits. Introduced post TIFF rev 6.0 by Adobe TIFF technote 2.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.YCLIPPATHUNITS">
            <summary>
            YClipPathUnits. Introduced post TIFF rev 6.0 by Adobe TIFF technote 2.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.INDEXED">
            <summary>
            Indexed. Introduced post TIFF rev 6.0 by Adobe TIFF Technote 3.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGTABLES">
            <summary>
            JPEG table stream. Introduced post TIFF rev 6.0.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.OPIPROXY">
            <summary>
            OPI Proxy. Introduced post TIFF rev 6.0 by Adobe TIFF technote.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGPROC">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            JPEG processing algorithm.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.JpegProc" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGIFOFFSET">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            Pointer to SOI marker.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGIFBYTECOUNT">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            JFIF stream length
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGRESTARTINTERVAL">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            Restart interval length.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGLOSSLESSPREDICTORS">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            Lossless proc predictor.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGPOINTTRANSFORM">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            Lossless point transform.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGQTABLES">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            Q matrice offsets.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGDCTABLES">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            DCT table offsets.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGACTABLES">
            <summary>
            [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
            AC coefficient offsets.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.YCBCRCOEFFICIENTS">
            <summary>
            RGB -&gt; YCbCr transform.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.YCBCRSUBSAMPLING">
            <summary>
            YCbCr subsampling factors.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.YCBCRPOSITIONING">
            <summary>
            Subsample positioning.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.YCbCrPosition" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REFERENCEBLACKWHITE">
            <summary>
            Colorimetry info.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.XMLPACKET">
            <summary>
            XML packet. Introduced post TIFF rev 6.0 by Adobe XMP Specification, January 2004.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.OPIIMAGEID">
            <summary>
            OPI ImageID. Introduced post TIFF rev 6.0 by Adobe TIFF technote.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REFPTS">
            <summary>
            Image reference points. Private tag registered to Island Graphics.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REGIONTACKPOINT">
            <summary>
            Region-xform tack point. Private tag registered to Island Graphics.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REGIONWARPCORNERS">
            <summary>
            Warp quadrilateral. Private tag registered to Island Graphics.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REGIONAFFINE">
            <summary>
            Affine transformation matrix. Private tag registered to Island Graphics.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MATTEING">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br />
            Use EXTRASAMPLE tag. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DATATYPE">
            <summary>
            [obsoleted by TIFF rev. 6.0]<br />
            Use SAMPLEFORMAT tag. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IMAGEDEPTH">
            <summary>
            Z depth of image. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.TILEDEPTH">
            <summary>
            Z depth/data tile. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_IMAGEFULLWIDTH">
            <summary>
            Full image size in X. This tag is set when an image has been cropped out of a larger
            image. It reflect width of the original uncropped image. The XPOSITION tag can be used
            to determine the position of the smaller image in the larger one.
            Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_IMAGEFULLLENGTH">
            <summary>
            Full image size in Y. This tag is set when an image has been cropped out of a larger
            image. It reflect height of the original uncropped image. The YPOSITION can be used
            to determine the position of the smaller image in the larger one.
            Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_TEXTUREFORMAT">
            <summary>
            Texture map format. Used to identify special image modes and data used by Pixar's
            texture formats. Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_WRAPMODES">
            <summary>
            S&amp;T wrap modes. Used to identify special image modes and data used by Pixar's
            texture formats. Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_FOVCOT">
            <summary>
            Cotan(fov) for env. maps. Used to identify special image modes and data used by
            Pixar's texture formats. Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_MATRIX_WORLDTOSCREEN">
            <summary>
            Used to identify special image modes and data used by Pixar's texture formats.
            Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXAR_MATRIX_WORLDTOCAMERA">
            <summary>
            Used to identify special image modes and data used by Pixar's texture formats.
            Private tag registered to Pixar.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.WRITERSERIALNUMBER">
            <summary>
            Device serial number. Private tag registered to Eastman Kodak.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.COPYRIGHT">
            <summary>
            Copyright string. This tag is listed in the TIFF rev. 6.0 w/ unknown ownership.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.RICHTIFFIPTC">
            <summary>
            IPTC TAG from RichTIFF specifications.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8SITE">
            <summary>
            Site name. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8COLORSEQUENCE">
            <summary>
            Color seq. [RGB, CMYK, etc]. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8HEADER">
            <summary>
            DDES Header. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8RASTERPADDING">
            <summary>
            Raster scanline padding. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8BITSPERRUNLENGTH">
            <summary>
            The number of bits in short run. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8BITSPEREXTENDEDRUNLENGTH">
            <summary>
            The number of bits in long run. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8COLORTABLE">
            <summary>
            LW colortable. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8IMAGECOLORINDICATOR">
            <summary>
            BP/BL image color switch. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8BKGCOLORINDICATOR">
            <summary>
            BP/BL bg color switch. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8IMAGECOLORVALUE">
            <summary>
            BP/BL image color value. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8BKGCOLORVALUE">
            <summary>
            BP/BL bg color value. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8PIXELINTENSITYRANGE">
            <summary>
            MP pixel intensity value. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8TRANSPARENCYINDICATOR">
            <summary>
            HC transparency switch. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8COLORCHARACTERIZATION">
            <summary>
            Color characterization table. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8HCUSAGE">
            <summary>
            HC usage indicator. Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8TRAPINDICATOR">
            <summary>
            Trapping indicator (untrapped = 0, trapped = 1). Reserved for ANSI IT8 TIFF/IT.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.IT8CMYKEQUIVALENT">
            <summary>
            CMYK color equivalents.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FRAMECOUNT">
            <summary>
            Sequence Frame Count. Private tag registered to Texas Instruments.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PHOTOSHOP">
            <summary>
            Private tag registered to Adobe for PhotoShop.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIFIFD">
            <summary>
            Pointer to EXIF private directory. This tag is documented in EXIF specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ICCPROFILE">
            <summary>
            ICC profile data. ?? Private tag registered to Adobe. ??
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JBIGOPTIONS">
            <summary>
            JBIG options. Private tag registered to Pixel Magic.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GPSIFD">
            <summary>
            Pointer to GPS private directory. This tag is documented in EXIF specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FAXRECVPARAMS">
            <summary>
            Encoded Class 2 ses. params. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FAXSUBADDRESS">
            <summary>
            Received SubAddr string. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FAXRECVTIME">
            <summary>
            Receive time (secs). Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FAXDCS">
            <summary>
            Encoded fax ses. params, Table 2/T.30. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.STONITS">
            <summary>
            Sample value to Nits. Private tag registered to SGI.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FEDEX_EDR">
            <summary>
            Private tag registered to FedEx.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.INTEROPERABILITYIFD">
            <summary>
            Pointer to Interoperability private directory.
            This tag is documented in EXIF specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DNGVERSION">
            <summary>
            DNG version number. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DNGBACKWARDVERSION">
            <summary>
            DNG compatibility version. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.UNIQUECAMERAMODEL">
            <summary>
            Name for the camera model. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.LOCALIZEDCAMERAMODEL">
            <summary>
            Localized camera model name. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CFAPLANECOLOR">
            <summary>
            CFAPattern-&gt;LinearRaw space mapping. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CFALAYOUT">
            <summary>
            Spatial layout of the CFA. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.LINEARIZATIONTABLE">
            <summary>
            Lookup table description. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BLACKLEVELREPEATDIM">
            <summary>
            Repeat pattern size for the BlackLevel tag. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BLACKLEVEL">
            <summary>
            Zero light encoding level. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BLACKLEVELDELTAH">
            <summary>
            Zero light encoding level differences (columns). Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BLACKLEVELDELTAV">
            <summary>
            Zero light encoding level differences (rows). Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.WHITELEVEL">
            <summary>
            Fully saturated encoding level. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DEFAULTSCALE">
            <summary>
            Default scale factors. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DEFAULTCROPORIGIN">
            <summary>
            Origin of the final image area. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DEFAULTCROPSIZE">
            <summary>
            Size of the final image area. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.COLORMATRIX1">
            <summary>
            XYZ-&gt;reference color space transformation matrix 1.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.COLORMATRIX2">
            <summary>
            XYZ-&gt;reference color space transformation matrix 2.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CAMERACALIBRATION1">
            <summary>
            Calibration matrix 1. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CAMERACALIBRATION2">
            <summary>
            Calibration matrix 2. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REDUCTIONMATRIX1">
            <summary>
            Dimensionality reduction matrix 1. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.REDUCTIONMATRIX2">
            <summary>
            Dimensionality reduction matrix 2. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ANALOGBALANCE">
            <summary>
            Gain applied the stored raw values. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ASSHOTNEUTRAL">
            <summary>
            Selected white balance in linear reference space.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ASSHOTWHITEXY">
            <summary>
            Selected white balance in x-y chromaticity coordinates.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BASELINEEXPOSURE">
            <summary>
            How much to move the zero point. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BASELINENOISE">
            <summary>
            Relative noise level. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BASELINESHARPNESS">
            <summary>
            Relative amount of sharpening. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BAYERGREENSPLIT">
            <summary>
            How closely the values of the green pixels in the blue/green rows 
            track the values of the green pixels in the red/green rows.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.LINEARRESPONSELIMIT">
            <summary>
            Non-linear encoding range. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CAMERASERIALNUMBER">
            <summary>
            Camera's serial number. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.LENSINFO">
            <summary>
            Information about the lens.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CHROMABLURRADIUS">
            <summary>
            Chroma blur radius. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ANTIALIASSTRENGTH">
            <summary>
            Relative strength of the camera's anti-alias filter.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SHADOWSCALE">
            <summary>
            Used by Adobe Camera Raw. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DNGPRIVATEDATA">
            <summary>
            Manufacturer's private data. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MAKERNOTESAFETY">
            <summary>
            Whether the EXIF MakerNote tag is safe to preserve along with the rest of the EXIF data.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CALIBRATIONILLUMINANT1">
            <summary>
            Illuminant 1. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CALIBRATIONILLUMINANT2">
            <summary>
            Illuminant 2. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.BESTQUALITYSCALE">
            <summary>
            Best quality multiplier. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.RAWDATAUNIQUEID">
            <summary>
            Unique identifier for the raw image data. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ORIGINALRAWFILENAME">
            <summary>
            File name of the original raw file. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ORIGINALRAWFILEDATA">
            <summary>
            Contents of the original raw file. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ACTIVEAREA">
            <summary>
            Active (non-masked) pixels of the sensor. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.MASKEDAREAS">
            <summary>
            List of coordinates of fully masked pixels. Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ASSHOTICCPROFILE">
            <summary>
            Used to map cameras's color space into ICC profile space.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ASSHOTPREPROFILEMATRIX">
            <summary>
            Used to map cameras's color space into ICC profile space.
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CURRENTICCPROFILE">
            <summary>
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.CURRENTPREPROFILEMATRIX">
            <summary>
            Introduced by Adobe DNG specification.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSHUESHIFTVALUES">
            <summary>
            Undefined tag used by Eastman Kodak, hue shift correction data.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FAXMODE">
            <summary>
            [pseudo tag. not written to file]<br />
            Group 3/4 format control.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.FaxMode" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGQUALITY">
            <summary>
            [pseudo tag. not written to file]<br />
            Compression quality level. Quality level is on the IJG 0-100 scale. Default value is 75.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGCOLORMODE">
            <summary>
            [pseudo tag. not written to file]<br />
            Auto RGB&lt;=&gt;YCbCr convert.
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.JpegColorMode" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.JPEGTABLESMODE">
            <summary>
            [pseudo tag. not written to file]<br />
            For the list of possible values, see <see cref="T:BitMiracle.LibTiff.Classic.JpegTablesMode" />.
            Default is <see cref="F:BitMiracle.LibTiff.Classic.JpegTablesMode.QUANT" /> | <see cref="F:BitMiracle.LibTiff.Classic.JpegTablesMode.HUFF" />.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.FAXFILLFUNC">
            <summary>
            [pseudo tag. not written to file]<br />
            G3/G4 fill function.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXARLOGDATAFMT">
            <summary>
            [pseudo tag. not written to file]<br />
            PixarLogCodec I/O data sz.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSIMAGERTYPE">
            <summary>
            [pseudo tag. not written to file]<br />
            Imager mode &amp; filter.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSINTERPMODE">
            <summary>
            [pseudo tag. not written to file]<br />
            Interpolation mode.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSBALANCEARRAY">
            <summary>
            [pseudo tag. not written to file]<br />
            Color balance values.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>). 
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSCORRECTMATRIX">
            <summary>
            [pseudo tag. not written to file]<br />
            Color correction values.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>). 
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSGAMMA">
            <summary>
            [pseudo tag. not written to file]<br />
            Gamma value.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>). 
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSTOESHOULDERPTS">
            <summary>
            [pseudo tag. not written to file]<br />
            Toe &amp; shoulder points.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>). 
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSCALIBRATIONFD">
            <summary>
            [pseudo tag. not written to file]<br />
            Calibration file description.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.ZIPQUALITY">
            <summary>
            [pseudo tag. not written to file]<br />
            Compression quality level.
            Quality level is on the ZLIB 1-9 scale. Default value is -1.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.PIXARLOGQUALITY">
            <summary>
            [pseudo tag. not written to file]<br />
            PixarLog uses same scale.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.DCSCLIPRECTANGLE">
            <summary>
            [pseudo tag. not written to file]<br />
            Area of image to acquire.
            Allocated to Oceana Matrix (<a href="mailto:dev@oceana.com">dev@oceana.com</a>).
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SGILOGDATAFMT">
            <summary>
            [pseudo tag. not written to file]<br />
            SGILog user data format.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.SGILOGENCODE">
            <summary>
            [pseudo tag. not written to file]<br />
            SGILog data encoding control.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_EXPOSURETIME">
            <summary>
            Exposure time.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FNUMBER">
            <summary>
            F number.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_EXPOSUREPROGRAM">
            <summary>
            Exposure program.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SPECTRALSENSITIVITY">
            <summary>
            Spectral sensitivity.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_ISOSPEEDRATINGS">
            <summary>
            ISO speed rating.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_OECF">
            <summary>
            Optoelectric conversion factor.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_EXIFVERSION">
            <summary>
            Exif version.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_DATETIMEORIGINAL">
            <summary>
            Date and time of original data generation.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_DATETIMEDIGITIZED">
            <summary>
            Date and time of digital data generation.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_COMPONENTSCONFIGURATION">
            <summary>
            Meaning of each component.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_COMPRESSEDBITSPERPIXEL">
            <summary>
            Image compression mode.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SHUTTERSPEEDVALUE">
            <summary>
            Shutter speed.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_APERTUREVALUE">
            <summary>
            Aperture.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_BRIGHTNESSVALUE">
            <summary>
            Brightness.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_EXPOSUREBIASVALUE">
            <summary>
            Exposure bias.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_MAXAPERTUREVALUE">
            <summary>
            Maximum lens aperture.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBJECTDISTANCE">
            <summary>
            Subject distance.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_METERINGMODE">
            <summary>
            Metering mode.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_LIGHTSOURCE">
            <summary>
            Light source.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FLASH">
            <summary>
            Flash.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FOCALLENGTH">
            <summary>
            Lens focal length.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBJECTAREA">
            <summary>
            Subject area.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_MAKERNOTE">
            <summary>
            Manufacturer notes.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_USERCOMMENT">
            <summary>
            User comments.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBSECTIME">
            <summary>
            DateTime subseconds.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBSECTIMEORIGINAL">
            <summary>
            DateTimeOriginal subseconds.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBSECTIMEDIGITIZED">
            <summary>
            DateTimeDigitized subseconds.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FLASHPIXVERSION">
            <summary>
            Supported Flashpix version.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_COLORSPACE">
            <summary>
            Color space information.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_PIXELXDIMENSION">
            <summary>
            Valid image width.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_PIXELYDIMENSION">
            <summary>
            Valid image height.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_RELATEDSOUNDFILE">
            <summary>
            Related audio file.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FLASHENERGY">
            <summary>
            Flash energy.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SPATIALFREQUENCYRESPONSE">
            <summary>
            Spatial frequency response.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FOCALPLANEXRESOLUTION">
            <summary>
            Focal plane X resolution.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FOCALPLANEYRESOLUTION">
            <summary>
            Focal plane Y resolution.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FOCALPLANERESOLUTIONUNIT">
            <summary>
            Focal plane resolution unit.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBJECTLOCATION">
            <summary>
            Subject location.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_EXPOSUREINDEX">
            <summary>
            Exposure index.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SENSINGMETHOD">
            <summary>
            Sensing method.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FILESOURCE">
            <summary>
            File source.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SCENETYPE">
            <summary>
            Scene type.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_CFAPATTERN">
            <summary>
            CFA pattern.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_CUSTOMRENDERED">
            <summary>
            Custom image processing.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_EXPOSUREMODE">
            <summary>
            Exposure mode.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_WHITEBALANCE">
            <summary>
            White balance.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_DIGITALZOOMRATIO">
            <summary>
            Digital zoom ratio.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_FOCALLENGTHIN35MMFILM">
            <summary>
            Focal length in 35 mm film.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SCENECAPTURETYPE">
            <summary>
            Scene capture type.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_GAINCONTROL">
            <summary>
            Gain control.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_CONTRAST">
            <summary>
            Contrast.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SATURATION">
            <summary>
            Saturation.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SHARPNESS">
            <summary>
            Sharpness.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_DEVICESETTINGDESCRIPTION">
            <summary>
            Device settings description.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_SUBJECTDISTANCERANGE">
            <summary>
            Subject distance range.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.EXIF_IMAGEUNIQUEID">
            <summary>
            Unique image ID.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GEOTIFF_MODELPIXELSCALETAG">
            <summary>
            This tag is defining exact affine transformations between raster and model space. Used in interchangeable GeoTIFF files.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GEOTIFF_MODELTIEPOINTTAG">
            <summary>
            This tag stores raster-&gt;model tiepoint pairs. Used in interchangeable GeoTIFF files.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GEOTIFF_MODELTRANSFORMATIONTAG">
            <summary>
            This tag is optionally provided for defining exact affine transformations between raster and model space. Used in interchangeable GeoTIFF files.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GEOTIFF_GEOKEYDIRECTORYTAG">
            <summary>
            This tag may be used to store the GeoKey Directory, which defines and references the "GeoKeys". Used in interchangeable GeoTIFF files.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GEOTIFF_GEODOUBLEPARAMSTAG">
            <summary>
            This tag is used to store all of the DOUBLE valued GeoKeys, referenced by the GeoKeyDirectoryTag. Used in interchangeable GeoTIFF files.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffTag.GEOTIFF_GEOASCIIPARAMSTAG">
            <summary>
            This tag is used to store all of the ASCII valued GeoKeys, referenced by the GeoKeyDirectoryTag. Used in interchangeable GeoTIFF files.
            </summary>
        </member>
        <member name="T:BitMiracle.LibTiff.Classic.TiffType">
            <summary>
            Tag data type.
            </summary>
            <remarks>Note: RATIONALs are the ratio of two 32-bit integer values.</remarks>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.NOTYPE">
            <summary>
            Placeholder.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.ANY">
            <summary>
            For field descriptor searching.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.BYTE">
            <summary>
            8-bit unsigned integer.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.ASCII">
            <summary>
            8-bit bytes with last byte <c>null</c>.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.SHORT">
            <summary>
            16-bit unsigned integer.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.LONG">
            <summary>
            32-bit unsigned integer.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.RATIONAL">
            <summary>
            64-bit unsigned fraction.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.SBYTE">
            <summary>
            8-bit signed integer.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.UNDEFINED">
            <summary>
            8-bit untyped data.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.SSHORT">
            <summary>
            16-bit signed integer.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.SLONG">
            <summary>
            32-bit signed integer.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.SRATIONAL">
            <summary>
            64-bit signed fraction.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.FLOAT">
            <summary>
            32-bit IEEE floating point.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.DOUBLE">
            <summary>
            64-bit IEEE floating point.
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.IFD">
            <summary>
            32-bit unsigned integer (offset)
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.LONG8">
            <summary>
            BigTIFF 64-bit unsigned long
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.SLONG8">
            <summary>
            BigTIFF 64-bit signed long
            </summary>
        </member>
        <member name="F:BitMiracle.LibTiff.Classic.TiffType.IFD8">
            <summary>
            BigTIFF 64-bit unsigned integer/long (offset)
            </summary>
        </member>
        <member name="T:Ionic.Zip.BadPasswordException">
            <summary>
            Issued when an <c>ZipEntry.ExtractWithPassword()</c> method is invoked
            with an incorrect password.
            </summary>
        </member>
        <member name="M:Ionic.Zip.BadPasswordException.#ctor">
            <summary>
            Default ctor.
            </summary>
        </member>
        <member name="M:Ionic.Zip.BadPasswordException.#ctor(System.String)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="message">The message in the exception.</param>
        </member>
        <member name="M:Ionic.Zip.BadPasswordException.#ctor(System.String,System.Exception)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="message">The message in the exception.</param>
            <param name="innerException">The innerException for this exception.</param>
        </member>
        <member name="M:Ionic.Zip.BadPasswordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="info">The serialization info for the exception.</param>
            <param name="context">The streaming context from which to deserialize.</param>
        </member>
        <member name="T:Ionic.Zip.BadReadException">
            <summary>
            Indicates that a read was attempted on a stream, and bad or incomplete data was
            received.
            </summary>
        </member>
        <member name="M:Ionic.Zip.BadReadException.#ctor">
            <summary>
            Default ctor.
            </summary>
        </member>
        <member name="M:Ionic.Zip.BadReadException.#ctor(System.String)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="message">The message in the exception.</param>
        </member>
        <member name="M:Ionic.Zip.BadReadException.#ctor(System.String,System.Exception)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="message">The message in the exception.</param>
            <param name="innerException">The innerException for this exception.</param>
        </member>
        <member name="M:Ionic.Zip.BadReadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="info">The serialization info for the exception.</param>
            <param name="context">The streaming context from which to deserialize.</param>
        </member>
        <member name="T:Ionic.Zip.BadCrcException">
            <summary>
            Issued when an CRC check fails upon extracting an entry from a zip archive.
            </summary>
        </member>
        <member name="M:Ionic.Zip.BadCrcException.#ctor">
            <summary>
            Default ctor.
            </summary>
        </member>
        <member name="M:Ionic.Zip.BadCrcException.#ctor(System.String)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="message">The message in the exception.</param>
        </member>
        <member name="M:Ionic.Zip.BadCrcException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="info">The serialization info for the exception.</param>
            <param name="context">The streaming context from which to deserialize.</param>
        </member>
        <member name="T:Ionic.Zip.SfxGenerationException">
            <summary>
            Issued when errors occur saving a self-extracting archive.
            </summary>
        </member>
        <member name="M:Ionic.Zip.SfxGenerationException.#ctor">
            <summary>
            Default ctor.
            </summary>
        </member>
        <member name="M:Ionic.Zip.SfxGenerationException.#ctor(System.String)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="message">The message in the exception.</param>
        </member>
        <member name="M:Ionic.Zip.SfxGenerationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="info">The serialization info for the exception.</param>
            <param name="context">The streaming context from which to deserialize.</param>
        </member>
        <member name="T:Ionic.Zip.BadStateException">
            <summary>
            Indicates that an operation was attempted on a ZipFile which was not possible
            given the state of the instance. For example, if you call <c>Save()</c> on a ZipFile
            which has no filename set, you can get this exception.
            </summary>
        </member>
        <member name="M:Ionic.Zip.BadStateException.#ctor">
            <summary>
            Default ctor.
            </summary>
        </member>
        <member name="M:Ionic.Zip.BadStateException.#ctor(System.String)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="message">The message in the exception.</param>
        </member>
        <member name="M:Ionic.Zip.BadStateException.#ctor(System.String,System.Exception)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="message">The message in the exception.</param>
            <param name="innerException">The innerException for this exception.</param>
        </member>
        <member name="M:Ionic.Zip.BadStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="info">The serialization info for the exception.</param>
            <param name="context">The streaming context from which to deserialize.</param>
        </member>
        <member name="T:Ionic.Zip.ZipException">
            <summary>
            Base class for all exceptions defined by and throw by the Zip library.
            </summary>
        </member>
        <member name="M:Ionic.Zip.ZipException.#ctor">
            <summary>
            Default ctor.
            </summary>
        </member>
        <member name="M:Ionic.Zip.ZipException.#ctor(System.String)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="message">The message in the exception.</param>
        </member>
        <member name="M:Ionic.Zip.ZipException.#ctor(System.String,System.Exception)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="message">The message in the exception.</param>
            <param name="innerException">The innerException for this exception.</param>
        </member>
        <member name="M:Ionic.Zip.ZipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Come on, you know how exceptions work. Why are you looking at this documentation?
            </summary>
            <param name="info">The serialization info for the exception.</param>
            <param name="context">The streaming context from which to deserialize.</param>
        </member>
        <member name="T:Ionic.LogicalConjunction">
            <summary>
            Enumerates the options for a logical conjunction. This enum is intended for use
            internally by the FileSelector class.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlNodeType">
            <summary>
            Represents the type of a node.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlNodeType.Document">
            <summary>
            The root of a document.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlNodeType.Element">
            <summary>
            An HTML element.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlNodeType.Comment">
            <summary>
            An HTML comment.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlNodeType.Text">
            <summary>
            A text node is always the child of an element or a document node.
            </summary>
        </member>
        <member name="T:IronSoftware.Licenses.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:IronSoftware.Licenses.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:IronSoftware.Licenses.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:IronSoftware.Licenses.Properties.Resources.Configs">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="T:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1">
            <summary>Provides the core logic for implementing a manual-reset <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource" /> or <see cref="T:System.Threading.Tasks.Sources.IValueTaskSource`1" />.</summary>
            <typeparam name="TResult" />
        </member>
        <member name="F:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1._continuation">
            <summary>
            The callback to invoke when the operation completes if <see cref="M:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1.OnCompleted(System.Action{System.Object},System.Object,System.Int16,System.Threading.Tasks.Sources.ValueTaskSourceOnCompletedFlags)" /> was called before the operation completed,
            or <see cref="F:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCoreShared.s_sentinel" /> if the operation completed before a callback was supplied,
            or null if a callback hasn't yet been provided and the operation hasn't yet completed.
            </summary>
        </member>
        <member name="F:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1._continuationState">
            <summary>State to pass to <see cref="F:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1._continuation" />.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1._executionContext">
            <summary>
                <see cref="T:System.Threading.ExecutionContext" /> to flow to the callback, or null if no flowing is required.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1._capturedContext">
            <summary>
            A "captured" <see cref="T:System.Threading.SynchronizationContext" /> or <see cref="T:System.Threading.Tasks.TaskScheduler" /> with which to invoke the callback,
            or null if no special context is required.
            </summary>
        </member>
        <member name="F:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1._completed">
            <summary>Whether the current operation has completed.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1._result">
            <summary>The result with which the operation succeeded, or the default value if it hasn't yet completed or failed.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1._error">
            <summary>The exception with which the operation failed, or null if it hasn't yet completed or completed successfully.</summary>
        </member>
        <member name="F:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1._version">
            <summary>The current version of this value, used to help prevent misuse.</summary>
        </member>
        <member name="P:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1.RunContinuationsAsynchronously">
            <summary>Gets or sets whether to force continuations to run asynchronously.</summary>
            <remarks>Continuations may run asynchronously if this is false, but they'll never run synchronously if this is true.</remarks>
        </member>
        <member name="M:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1.Reset">
            <summary>Resets to prepare for the next operation.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1.SetResult(`0)">
            <summary>Completes with a successful result.</summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1.SetException(System.Exception)">
            <summary>Complets with an error.</summary>
            <param name="error" />
        </member>
        <member name="P:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1.Version">
            <summary>Gets the operation version.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1.GetStatus(System.Int16)">
            <summary>Gets the status of the operation.</summary>
            <param name="token">Opaque value that was provided to the <see cref="T:System.Threading.Tasks.ValueTask" />'s constructor.</param>
        </member>
        <member name="M:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1.GetResult(System.Int16)">
            <summary>Gets the result of the operation.</summary>
            <param name="token">Opaque value that was provided to the <see cref="T:System.Threading.Tasks.ValueTask" />'s constructor.</param>
        </member>
        <member name="M:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1.OnCompleted(System.Action{System.Object},System.Object,System.Int16,System.Threading.Tasks.Sources.ValueTaskSourceOnCompletedFlags)">
            <summary>Schedules the continuation action for this operation.</summary>
            <param name="continuation">The continuation to invoke when the operation has completed.</param>
            <param name="state">The state object to pass to <paramref name="continuation" /> when it's invoked.</param>
            <param name="token">Opaque value that was provided to the <see cref="T:System.Threading.Tasks.ValueTask" />'s constructor.</param>
            <param name="flags">The flags describing the behavior of the continuation.</param>
        </member>
        <member name="M:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1.ValidateToken(System.Int16)">
            <summary>Ensures that the specified token matches the current version.</summary>
            <param name="token">The token supplied by <see cref="T:System.Threading.Tasks.ValueTask" />.</param>
        </member>
        <member name="M:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1.SignalCompletion">
            <summary>Signals that the operation has completed.  Invoked after the result or error has been set.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1.InvokeContinuation">
            <summary>
            Invokes the continuation with the appropriate captured context / scheduler.
            This assumes that if <see cref="F:System.Threading.Tasks.Sources.ManualResetValueTaskSourceCore`1._executionContext" /> is not null we're already
            running within that <see cref="T:System.Threading.ExecutionContext" />.
            </summary>
        </member>
        <member name="T:System.Threading.Tasks.TaskAsyncEnumerableExtensions">
            <summary>Provides a set of static methods for configuring <see cref="T:System.Threading.Tasks.Task" />-related behaviors on asynchronous enumerables and disposables.</summary>
        </member>
        <member name="M:System.Threading.Tasks.TaskAsyncEnumerableExtensions.ConfigureAwait(System.IAsyncDisposable,System.Boolean)">
            <summary>Configures how awaits on the tasks returned from an async disposable will be performed.</summary>
            <param name="source">The source async disposable.</param>
            <param name="continueOnCapturedContext">Whether to capture and marshal back to the current context.</param>
            <returns>The configured async disposable.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskAsyncEnumerableExtensions.ConfigureAwait``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Boolean)">
            <summary>Configures how awaits on the tasks returned from an async iteration will be performed.</summary>
            <typeparam name="T">The type of the objects being iterated.</typeparam>
            <param name="source">The source enumerable being iterated.</param>
            <param name="continueOnCapturedContext">Whether to capture and marshal back to the current context.</param>
            <returns>The configured enumerable.</returns>
        </member>
        <member name="M:System.Threading.Tasks.TaskAsyncEnumerableExtensions.WithCancellation``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)">
            <summary>Sets the <see cref="T:System.Threading.CancellationToken" /> to be passed to <see cref="M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)" /> when iterating.</summary>
            <typeparam name="T">The type of the objects being iterated.</typeparam>
            <param name="source">The source enumerable being iterated.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to use.</param>
            <returns>The configured enumerable.</returns>
        </member>
        <member name="T:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder">
            <summary>Represents a builder for asynchronous iterators.</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder.Create">
            <summary>Creates an instance of the <see cref="T:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder" /> struct.</summary>
            <returns>The initialized instance.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder.MoveNext``1(``0@)">
            <summary>Invokes <see cref="M:System.Runtime.CompilerServices.IAsyncStateMachine.MoveNext" /> on the state machine while guarding the <see cref="T:System.Threading.ExecutionContext" />.</summary>
            <typeparam name="TStateMachine">The type of the state machine.</typeparam>
            <param name="stateMachine">The state machine instance, passed by reference.</param>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder.AwaitOnCompleted``2(``0@,``1@)">
            <summary>Schedules the state machine to proceed to the next action when the specified awaiter completes.</summary>
            <typeparam name="TAwaiter">The type of the awaiter.</typeparam>
            <typeparam name="TStateMachine">The type of the state machine.</typeparam>
            <param name="awaiter">The awaiter.</param>
            <param name="stateMachine">The state machine.</param>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)">
            <summary>Schedules the state machine to proceed to the next action when the specified awaiter completes.</summary>
            <typeparam name="TAwaiter">The type of the awaiter.</typeparam>
            <typeparam name="TStateMachine">The type of the state machine.</typeparam>
            <param name="awaiter">The awaiter.</param>
            <param name="stateMachine">The state machine.</param>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder.Complete">
            <summary>Marks iteration as being completed, whether successfully or otherwise.</summary>
        </member>
        <member name="P:System.Runtime.CompilerServices.AsyncIteratorMethodBuilder.ObjectIdForDebugger">
            <summary>Gets an object that may be used to uniquely identify this builder to the debugger.</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.AsyncIteratorStateMachineAttribute">
            <summary>Indicates whether a method is an asynchronous iterator.</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncIteratorStateMachineAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.AsyncIteratorStateMachineAttribute" /> class.</summary>
            <param name="stateMachineType">The type object for the underlying state machine type that's used to implement a state machine method.</param>
        </member>
        <member name="T:System.Runtime.CompilerServices.ConfiguredAsyncDisposable">
            <summary>Provides a type that can be used to configure how awaits on an <see cref="T:System.IAsyncDisposable" /> are performed.</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1">
            <summary>Provides an awaitable async enumerable that enables cancelable iteration and configured awaits.</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.ConfigureAwait(System.Boolean)">
            <summary>Configures how awaits on the tasks returned from an async iteration will be performed.</summary>
            <param name="continueOnCapturedContext">Whether to capture and marshal back to the current context.</param>
            <returns>The configured enumerable.</returns>
            <remarks>This will replace any previous value set by <see cref="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.ConfigureAwait(System.Boolean)" /> for this iteration.</remarks>
        </member>
        <member name="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.WithCancellation(System.Threading.CancellationToken)">
            <summary>Sets the <see cref="T:System.Threading.CancellationToken" /> to be passed to <see cref="M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)" /> when iterating.</summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to use.</param>
            <returns>The configured enumerable.</returns>
            <remarks>This will replace any previous <see cref="T:System.Threading.CancellationToken" /> set by <see cref="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.WithCancellation(System.Threading.CancellationToken)" /> for this iteration.</remarks>
        </member>
        <member name="T:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.Enumerator">
            <summary>Provides an awaitable async enumerator that enables cancelable iteration and configured awaits.</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.Enumerator.MoveNextAsync">
            <summary>Advances the enumerator asynchronously to the next element of the collection.</summary>
            <returns>
            A <see cref="T:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1" /> that will complete with a result of <c>true</c>
            if the enumerator was successfully advanced to the next element, or <c>false</c> if the enumerator has
            passed the end of the collection.
            </returns>
        </member>
        <member name="P:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.Enumerator.Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.ConfiguredCancelableAsyncEnumerable`1.Enumerator.DisposeAsync">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources asynchronously.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.IAsyncEnumerable`1">
            <summary>Exposes an enumerator that provides asynchronous iteration over values of a specified type.</summary>
            <typeparam name="T">The type of values to enumerate.</typeparam>
        </member>
        <member name="M:System.Collections.Generic.IAsyncEnumerable`1.GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param>
            <returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="T:System.Collections.Generic.IAsyncEnumerator`1">
            <summary>Supports a simple asynchronous iteration over a generic collection.</summary>
            <typeparam name="T">The type of objects to enumerate.</typeparam>
        </member>
        <member name="M:System.Collections.Generic.IAsyncEnumerator`1.MoveNextAsync">
            <summary>Advances the enumerator asynchronously to the next element of the collection.</summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.ValueTask`1" /> that will complete with a result of <c>true</c> if the enumerator
            was successfully advanced to the next element, or <c>false</c> if the enumerator has passed the end
            of the collection.
            </returns>
        </member>
        <member name="P:System.Collections.Generic.IAsyncEnumerator`1.Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary>
        </member>
        <member name="T:System.IAsyncDisposable">
            <summary>Provides a mechanism for releasing unmanaged resources asynchronously.</summary>
        </member>
        <member name="M:System.IAsyncDisposable.DisposeAsync">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources asynchronously.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationExtensions">
            <summary>Extension methods for configuration classes.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.Add``1(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{``0})">
            <summary>Adds a new configuration source.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="configureSource">Configures the source secrets.</param>
            <typeparam name="TSource" />
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.AsEnumerable(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>Get the enumeration of key value pairs within the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /></summary>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> to enumerate.</param>
            <returns>An enumeration of key value pairs.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.AsEnumerable(Microsoft.Extensions.Configuration.IConfiguration,System.Boolean)">
            <summary>Get the enumeration of key value pairs within the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /></summary>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> to enumerate.</param>
            <param name="makePathsRelative">If true, the child keys returned will have the current configuration's Path trimmed from the front.</param>
            <returns>An enumeration of key value pairs.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.Exists(Microsoft.Extensions.Configuration.IConfigurationSection)">
            <summary>Determines whether the section has a <see cref="P:Microsoft.Extensions.Configuration.IConfigurationSection.Value" /> or has children.</summary>
            <param name="section" />
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtensions.GetConnectionString(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>Shorthand for GetSection("ConnectionStrings")[name].</summary>
            <param name="configuration">The configuration.</param>
            <param name="name">The connection string key.</param>
            <returns>The connection string.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationPath">
            <summary>Utility methods and constants for manipulating Configuration paths.</summary>
        </member>
        <member name="F:Microsoft.Extensions.Configuration.ConfigurationPath.KeyDelimiter">
            <summary>The delimiter ":" used to separate individual keys in a path.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationPath.Combine(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Combines path segments into one path.</summary>
            <param name="pathSegments">The path segments to combine.</param>
            <returns>The combined path.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationPath.Combine(System.String[])">
            <summary>Combines path segments into one path.</summary>
            <param name="pathSegments">The path segments to combine.</param>
            <returns>The combined path.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationPath.GetParentPath(System.String)">
            <summary>Extracts the path corresponding to the parent node for a given path.</summary>
            <param name="path">The path.</param>
            <returns>The original path minus the last individual segment found in it. Null if the original path corresponds to a top level node.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationPath.GetSectionKey(System.String)">
            <summary>Extracts the last path segment from the path.</summary>
            <param name="path">The path.</param>
            <returns>The last path segment of the path.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationRootExtensions">
            <summary>Extension methods for <see cref="T:Microsoft.Extensions.Configuration.IConfigurationRoot" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationRootExtensions.GetDebugView(Microsoft.Extensions.Configuration.IConfigurationRoot)">
            <summary>Generates a human-readable view of the configuration showing where each value came from.</summary>
            <param name="root" />
            <returns>The debug view.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.IConfiguration">
            <summary>Represents a set of key/value application configuration properties.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfiguration.GetChildren">
            <summary>Gets the immediate descendant configuration sub-sections.</summary>
            <returns>The configuration sub-sections.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfiguration.GetReloadToken">
            <summary>Returns a <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> that can be used to observe when this configuration is reloaded.</summary>
            <returns>A <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfiguration.GetSection(System.String)">
            <summary>Gets a configuration sub-section with the specified key.</summary>
            <param name="key">The key of the configuration section.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSection" />.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.IConfiguration.Item(System.String)">
            <summary>Gets or sets a configuration value.</summary>
            <param name="key">The configuration key.</param>
            <returns>The configuration value.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.IConfigurationBuilder">
            <summary>Represents a type used to build application configuration.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationBuilder.Add(Microsoft.Extensions.Configuration.IConfigurationSource)">
            <summary>Adds a new configuration source.</summary>
            <param name="source">The configuration source to add.</param>
            <returns>The same <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationBuilder.Build">
            <summary>Builds an <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> with keys and values from the set of sources registered in
            <see cref="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources" />.</summary>
            <returns>An <see cref="T:Microsoft.Extensions.Configuration.IConfigurationRoot" /> with keys and values from the registered sources.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties">
            <summary>Gets a key/value collection that can be used to share data between the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />
            and the registered <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />s.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Sources">
            <summary>Gets the sources used to obtain configuration values.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.IConfigurationProvider">
            <summary>Provides configuration key/values for an application.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>Returns the immediate descendant configuration keys for a given parent path based on this
            <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />s data and the set of keys returned by all the preceding
            <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />s.</summary>
            <param name="earlierKeys">The child keys returned by the preceding providers for the same parent path.</param>
            <param name="parentPath">The parent path.</param>
            <returns>The child keys.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationProvider.GetReloadToken">
            <summary>Returns a change token if this provider supports change tracking, null otherwise.</summary>
            <returns>The change token.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationProvider.Load">
            <summary>Loads configuration values from the source represented by this <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationProvider.Set(System.String,System.String)">
            <summary>Sets a configuration value for the specified key.</summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationProvider.TryGet(System.String,System.String@)">
            <summary>Tries to get a configuration value for the specified key.</summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>
                <see langword="true" /> if a value for the specified key was found; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.IConfigurationRoot">
            <summary>Represents the root of an <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> hierarchy.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationRoot.Reload">
            <summary>Force the configuration values to be reloaded from the underlying <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />s.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.IConfigurationRoot.Providers">
            <summary>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />s for this configuration.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.IConfigurationSection">
            <summary>Represents a section of application configuration values.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.IConfigurationSection.Key">
            <summary>Gets the key this section occupies in its parent.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.IConfigurationSection.Path">
            <summary>Gets the full path to this section within the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" />.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.IConfigurationSection.Value">
            <summary>Gets or sets the section value.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.IConfigurationSource">
            <summary>Represents a source of configuration key/values for an application.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.IConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Builds the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> for this source.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
            <returns>An <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /></returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.BinderOptions">
            <summary>Options class used by the <see cref="T:Microsoft.Extensions.Configuration.ConfigurationBinder" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.BinderOptions.#ctor" />
        <member name="P:Microsoft.Extensions.Configuration.BinderOptions.BindNonPublicProperties">
            <summary>When false (the default), the binder will only attempt to set public properties.
            If true, the binder will attempt to set all non read-only properties.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationBinder">
            <summary>Static helper class that allows binding strongly typed objects to configuration values.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object)">
            <summary>Attempts to bind the given object instance to configuration values by matching property names against configuration keys recursively.</summary>
            <param name="configuration">The configuration instance to bind.</param>
            <param name="instance">The object to bind.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.Object,System.Action{Microsoft.Extensions.Configuration.BinderOptions})">
            <summary>Attempts to bind the given object instance to configuration values by matching property names against configuration keys recursively.</summary>
            <param name="configuration">The configuration instance to bind.</param>
            <param name="instance">The object to bind.</param>
            <param name="configureOptions">Configures the binder options.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Bind(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Object)">
            <summary>Attempts to bind the given object instance to the configuration section specified by the key by matching property names against configuration keys recursively.</summary>
            <param name="configuration">The configuration instance to bind.</param>
            <param name="key">The key of the configuration section to bind.</param>
            <param name="instance">The object to bind.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Get(Microsoft.Extensions.Configuration.IConfiguration,System.Type)">
            <summary>Attempts to bind the configuration instance to a new instance of type T.
            If this configuration section has a value, that will be used.
            Otherwise binding by matching property names against configuration keys recursively.</summary>
            <param name="configuration">The configuration instance to bind.</param>
            <param name="type">The type of the new instance to bind.</param>
            <returns>The new instance if successful, null otherwise.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Get(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.Action{Microsoft.Extensions.Configuration.BinderOptions})">
            <summary>Attempts to bind the configuration instance to a new instance of type T.
            If this configuration section has a value, that will be used.
            Otherwise binding by matching property names against configuration keys recursively.</summary>
            <param name="configuration">The configuration instance to bind.</param>
            <param name="type">The type of the new instance to bind.</param>
            <param name="configureOptions">Configures the binder options.</param>
            <returns>The new instance if successful, null otherwise.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Get``1(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>Attempts to bind the configuration instance to a new instance of type T.
            If this configuration section has a value, that will be used.
            Otherwise binding by matching property names against configuration keys recursively.</summary>
            <param name="configuration">The configuration instance to bind.</param>
            <typeparam name="T">The type of the new instance to bind.</typeparam>
            <returns>The new instance of T if successful, default(T) otherwise.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.Get``1(Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.Extensions.Configuration.BinderOptions})">
            <summary>Attempts to bind the configuration instance to a new instance of type T.
            If this configuration section has a value, that will be used.
            Otherwise binding by matching property names against configuration keys recursively.</summary>
            <param name="configuration">The configuration instance to bind.</param>
            <param name="configureOptions">Configures the binder options.</param>
            <typeparam name="T">The type of the new instance to bind.</typeparam>
            <returns>The new instance of T if successful, default(T) otherwise.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String)">
            <summary>Extracts the value with the specified key and converts it to the specified type.</summary>
            <param name="configuration">The configuration.</param>
            <param name="type">The type to convert the value to.</param>
            <param name="key">The key of the configuration section's value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String,System.Object)">
            <summary>Extracts the value with the specified key and converts it to the specified type.</summary>
            <param name="configuration">The configuration.</param>
            <param name="type">The type to convert the value to.</param>
            <param name="key">The key of the configuration section's value to convert.</param>
            <param name="defaultValue">The default value to use if no value is found.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>Extracts the value with the specified key and converts it to type T.</summary>
            <param name="configuration">The configuration.</param>
            <param name="key">The key of the configuration section's value to convert.</param>
            <typeparam name="T">The type to convert the value to.</typeparam>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBinder.GetValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,``0)">
            <summary>Extracts the value with the specified key and converts it to type T.</summary>
            <param name="configuration">The configuration.</param>
            <param name="key">The key of the configuration section's value to convert.</param>
            <param name="defaultValue">The default value to use if no value is found.</param>
            <typeparam name="T">The type to convert the value to.</typeparam>
            <returns>The converted value.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ChainedBuilderExtensions">
            <summary>IConfigurationBuilder extension methods for the chaind configuration provider.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ChainedBuilderExtensions.AddConfiguration(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>Adds an existing configuration to <paramref name="configurationBuilder" />.</summary>
            <param name="configurationBuilder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="config">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> to add.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ChainedBuilderExtensions.AddConfiguration(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Boolean)">
            <summary>Adds an existing configuration to <paramref name="configurationBuilder" />.</summary>
            <param name="configurationBuilder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="config">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> to add.</param>
            <param name="shouldDisposeConfiguration">Whether the configuration should get disposed when the configuration provider is disposed.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ChainedConfigurationProvider">
            <summary>Chained implementation of <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /></summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.ChainedConfigurationSource)">
            <summary>Initialize a new instance from the source configuration.</summary>
            <param name="source">The source configuration.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>Returns the immediate descendant configuration keys for a given parent path based on this
            <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />s data and the set of keys returned by all the preceding
            <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />s.</summary>
            <param name="earlierKeys">The child keys returned by the preceding providers for the same parent path.</param>
            <param name="parentPath">The parent path.</param>
            <returns>The child keys.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.GetReloadToken">
            <summary>Returns a change token if this provider supports change tracking, null otherwise.</summary>
            <returns>The change token.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.Load">
            <summary>Loads configuration values from the source represented by this <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.Set(System.String,System.String)">
            <summary>Sets a configuration value for the specified key.</summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ChainedConfigurationProvider.TryGet(System.String,System.String@)">
            <summary>Tries to get a configuration value for the specified key.</summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>
                <see langword="true" /> if a value for the specified key was found; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ChainedConfigurationSource">
            <summary>Represents a chained <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> as an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ChainedConfigurationSource.#ctor" />
        <member name="M:Microsoft.Extensions.Configuration.ChainedConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Builds the <see cref="T:Microsoft.Extensions.Configuration.ChainedConfigurationProvider" /> for this source.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
            <returns>A <see cref="T:Microsoft.Extensions.Configuration.ChainedConfigurationProvider" /></returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ChainedConfigurationSource.Configuration">
            <summary>The chained configuration.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ChainedConfigurationSource.ShouldDisposeConfiguration">
            <summary>Whether the chained configuration should be disposed when the
            configuration provider gets disposed.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationBuilder">
            <summary>Used to build key/value based configuration settings for use in an application.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBuilder.#ctor" />
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBuilder.Add(Microsoft.Extensions.Configuration.IConfigurationSource)">
            <summary>Adds a new configuration source.</summary>
            <param name="source">The configuration source to add.</param>
            <returns>The same <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationBuilder.Build">
            <summary>Builds an <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> with keys and values from the set of providers registered in
            <see cref="P:Microsoft.Extensions.Configuration.ConfigurationBuilder.Sources" />.</summary>
            <returns>An <see cref="T:Microsoft.Extensions.Configuration.IConfigurationRoot" /> with keys and values from the registered providers.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ConfigurationBuilder.Properties">
            <summary>Gets a key/value collection that can be used to share data between the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />
            and the registered <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />s.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ConfigurationBuilder.Sources">
            <summary>Returns the sources used to obtain configuration values.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationKeyComparer">
            <summary>IComparer implementation used to order configuration keys.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationKeyComparer.#ctor" />
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationKeyComparer.Compare(System.String,System.String)">
            <summary>Compares two strings.</summary>
            <param name="x">First string.</param>
            <param name="y">Second string.</param>
            <returns>Less than 0 if x is less than y, 0 if x is equal to y and greater than 0 if x is greater than y.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ConfigurationKeyComparer.Instance">
            <summary>The default instance.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationProvider">
            <summary>Base helper class for implementing an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /></summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationProvider.#ctor">
            <summary>Initializes a new <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /></summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationProvider.GetChildKeys(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>Returns the list of keys that this provider has.</summary>
            <param name="earlierKeys">The earlier keys that other providers contain.</param>
            <param name="parentPath">The path for the parent IConfiguration.</param>
            <returns>The list of keys for this provider.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationProvider.GetReloadToken">
            <summary>Returns a <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> that can be used to listen when this provider is reloaded.</summary>
            <returns>The <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationProvider.Load">
            <summary>Loads (or reloads) the data for this provider.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationProvider.OnReload">
            <summary>Triggers the reload change token and creates a new one.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationProvider.Set(System.String,System.String)">
            <summary>Sets a value for a given key.</summary>
            <param name="key">The configuration key to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationProvider.ToString">
            <summary>Generates a string representing this provider name and relevant details.</summary>
            <returns>The configuration name.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationProvider.TryGet(System.String,System.String@)">
            <summary>Attempts to find a value with the given key, returns true if one is found, false otherwise.</summary>
            <param name="key">The key to lookup.</param>
            <param name="value">The value found at key if one is found.</param>
            <returns>
                <see langword="true" /> if key has a value, false otherwise.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ConfigurationProvider.Data">
            <summary>The configuration key value pairs for this provider.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationReloadToken">
            <summary>Implements <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /></summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationReloadToken.#ctor" />
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationReloadToken.OnReload">
            <summary>Used to trigger the change token when a reload occurs.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationReloadToken.RegisterChangeCallback(System.Action{System.Object},System.Object)">
            <summary>Registers for a callback that will be invoked when the entry has changed. <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" />
            MUST be set before the callback is invoked.</summary>
            <param name="callback">The callback to invoke.</param>
            <param name="state">State to be passed into the callback.</param>
            <returns>The <see cref="T:System.Threading.CancellationToken" /> registration.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ConfigurationReloadToken.ActiveChangeCallbacks">
            <summary>Indicates if this token will proactively raise callbacks. Callbacks are still guaranteed to be invoked, eventually.</summary>
            <returns>True if the token will proactively raise callbacks.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ConfigurationReloadToken.HasChanged">
            <summary>Gets a value that indicates if a change has occurred.</summary>
            <returns>True if a change has occurred.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationRoot">
            <summary>The root node for a configuration.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationRoot.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.Configuration.IConfigurationProvider})">
            <summary>Initializes a Configuration root with a list of providers.</summary>
            <param name="providers">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />s for this configuration.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationRoot.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationRoot.GetChildren">
            <summary>Gets the immediate children sub-sections.</summary>
            <returns>The children.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationRoot.GetReloadToken">
            <summary>Returns a <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> that can be used to observe when this configuration is reloaded.</summary>
            <returns>The <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationRoot.GetSection(System.String)">
            <summary>Gets a configuration sub-section with the specified key.</summary>
            <param name="key">The key of the configuration section.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSection" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationRoot.Reload">
            <summary>Force the configuration values to be reloaded from the underlying sources.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ConfigurationRoot.Item(System.String)">
            <summary>Gets or sets the value corresponding to a configuration key.</summary>
            <param name="key">The configuration key.</param>
            <returns>The configuration value.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ConfigurationRoot.Providers">
            <summary>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" />s for this configuration.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationSection">
            <summary>Represents a section of application configuration values.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationSection.#ctor(Microsoft.Extensions.Configuration.IConfigurationRoot,System.String)">
            <summary>Initializes a new instance.</summary>
            <param name="root">The configuration root.</param>
            <param name="path">The path to this section.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationSection.GetChildren">
            <summary>Gets the immediate descendant configuration sub-sections.</summary>
            <returns>The configuration sub-sections.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationSection.GetReloadToken">
            <summary>Returns a <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> that can be used to observe when this configuration is reloaded.</summary>
            <returns>The <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationSection.GetSection(System.String)">
            <summary>Gets a configuration sub-section with the specified key.</summary>
            <param name="key">The key of the configuration section.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSection" />.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ConfigurationSection.Item(System.String)">
            <summary>Gets or sets the value corresponding to a configuration key.</summary>
            <param name="key">The configuration key.</param>
            <returns>The configuration value.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ConfigurationSection.Key">
            <summary>Gets the key this section occupies in its parent.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ConfigurationSection.Path">
            <summary>Gets the full path to this section from the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationRoot" />.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.ConfigurationSection.Value">
            <summary>Gets or sets the section value.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider">
            <summary>In-memory implementation of <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /></summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource)">
            <summary>Initialize a new instance from the source.</summary>
            <param name="source">The source settings.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.Add(System.String,System.String)">
            <summary>Add a new key and value pair.</summary>
            <param name="key">The configuration key.</param>
            <param name="value">The configuration value.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource">
            <summary>Represents in-memory data as an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource.#ctor" />
        <member name="M:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Builds the <see cref="T:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider" /> for this source.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
            <returns>A <see cref="T:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationProvider" /></returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.Memory.MemoryConfigurationSource.InitialData">
            <summary>The initial key value configuration pairs.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.MemoryConfigurationBuilderExtensions">
            <summary>IConfigurationBuilder extension methods for the MemoryConfigurationProvider.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.MemoryConfigurationBuilderExtensions.AddInMemoryCollection(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Adds the memory configuration provider to <paramref name="configurationBuilder" />.</summary>
            <param name="configurationBuilder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.MemoryConfigurationBuilderExtensions.AddInMemoryCollection(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Adds the memory configuration provider to <paramref name="configurationBuilder" />.</summary>
            <param name="configurationBuilder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="initialData">The data to add to memory configuration provider.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.StreamConfigurationProvider">
            <summary>Stream based configuration provider.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.StreamConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.StreamConfigurationSource)">
            <summary>Constructor.</summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.StreamConfigurationProvider.Load">
            <summary>Load the configuration data from the stream. Will throw after the first call.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.StreamConfigurationProvider.Load(System.IO.Stream)">
            <summary>Load the configuration data from the stream.</summary>
            <param name="stream">The data stream.</param>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.StreamConfigurationProvider.Source">
            <summary>The source settings for this provider.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.StreamConfigurationSource">
            <summary>Stream based <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.StreamConfigurationSource.#ctor" />
        <member name="M:Microsoft.Extensions.Configuration.StreamConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Builds the <see cref="T:Microsoft.Extensions.Configuration.StreamConfigurationProvider" /> for this source.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
            <returns>An <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /></returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.StreamConfigurationSource.Stream">
            <summary>The stream containing the configuration data.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider">
            <summary>An environment variable based <see cref="T:Microsoft.Extensions.Configuration.ConfigurationProvider" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider.#ctor">
            <summary>Initializes a new instance.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider.#ctor(System.String)">
            <summary>Initializes a new instance with the specified prefix.</summary>
            <param name="prefix">A prefix used to filter the environment variables.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider.Load">
            <summary>Loads the environment variables.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource">
            <summary>Represents environment variables as an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource.#ctor" />
        <member name="M:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Builds the <see cref="T:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider" /> for this source.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
            <returns>A <see cref="T:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider" /></returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource.Prefix">
            <summary>A prefix used to filter environment variables.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.EnvironmentVariablesExtensions">
            <summary>Extension methods for registering <see cref="T:Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationProvider" /> with <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.EnvironmentVariablesExtensions.AddEnvironmentVariables(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Adds an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> that reads configuration values from environment variables.</summary>
            <param name="configurationBuilder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.EnvironmentVariablesExtensions.AddEnvironmentVariables(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{Microsoft.Extensions.Configuration.EnvironmentVariables.EnvironmentVariablesConfigurationSource})">
            <summary>Adds an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> that reads configuration values from environment variables.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="configureSource">Configures the source.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.EnvironmentVariablesExtensions.AddEnvironmentVariables(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)">
            <summary>Adds an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> that reads configuration values from environment variables
            with a specified prefix.</summary>
            <param name="configurationBuilder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="prefix">The prefix that environment variable names must start with. The prefix will be removed from the environment variable names.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.FileConfigurationExtensions">
            <summary>Extension methods for <see cref="T:Microsoft.Extensions.Configuration.FileConfigurationProvider" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.GetFileLoadExceptionHandler(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Gets the default <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> to be used for file-based providers.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.GetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Gets the default <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> to be used for file-based providers.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetBasePath(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)">
            <summary>Sets the FileProvider for file-based providers to a PhysicalFileProvider with the base path.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="basePath">The absolute path of file-based providers.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetFileLoadExceptionHandler(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{Microsoft.Extensions.Configuration.FileLoadExceptionContext})">
            <summary>Sets a default action to be invoked for file-based providers when an error occurs.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="handler">The Action to be invoked on a file load exception.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationExtensions.SetFileProvider(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider)">
            <summary>Sets the default <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> to be used for file-based providers.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="fileProvider">The default file provider instance.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.FileConfigurationProvider">
            <summary>Base class for file based <see cref="T:Microsoft.Extensions.Configuration.ConfigurationProvider" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.FileConfigurationSource)">
            <summary>Initializes a new instance with the specified source.</summary>
            <param name="source">The source settings.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationProvider.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationProvider.Dispose(System.Boolean)">
            <summary>Dispose the provider.</summary>
            <param name="disposing">
                <see langword="true" /> if invoked from <see cref="M:System.IDisposable.Dispose" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationProvider.Load">
            <summary>Loads the contents of the file at <see cref="T:System.IO.Path" />.</summary>
            <exception cref="T:System.IO.FileNotFoundException">If Optional is <see langword="false" /> on the source and a
            file does not exist at specified Path.</exception>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationProvider.Load(System.IO.Stream)">
            <summary>Loads this provider's data from a stream.</summary>
            <param name="stream">The stream to read.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationProvider.ToString">
            <summary>Generates a string representing this provider name and relevant details.</summary>
            <returns>The configuration name.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.FileConfigurationProvider.Source">
            <summary>The source settings for this provider.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.FileConfigurationSource">
            <summary>Represents a base class for file based <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationSource.#ctor" />
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Builds the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /> for this source.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
            <returns>A <see cref="T:Microsoft.Extensions.Configuration.IConfigurationProvider" /></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationSource.EnsureDefaults(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Called to use any default settings on the builder like the FileProvider or FileLoadExceptionHandler.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileConfigurationSource.ResolveFileProvider">
            <summary>If no file provider has been set, for absolute Path, this will creates a physical file provider 
            for the nearest existing directory.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.FileConfigurationSource.FileProvider">
            <summary>Used to access the contents of the file.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.FileConfigurationSource.OnLoadException">
            <summary>Will be called if an uncaught exception occurs in FileConfigurationProvider.Load.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.FileConfigurationSource.Optional">
            <summary>Determines if loading the file is optional.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.FileConfigurationSource.Path">
            <summary>The path to the file.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.FileConfigurationSource.ReloadDelay">
            <summary>Number of milliseconds that reload will wait before calling Load.  This helps
            avoid triggering reload before a file is completely written. Default is 250.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.FileConfigurationSource.ReloadOnChange">
            <summary>Determines whether the source will be loaded if the underlying file changes.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.FileLoadExceptionContext">
            <summary>Contains information about a file load exception.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.FileLoadExceptionContext.#ctor" />
        <member name="P:Microsoft.Extensions.Configuration.FileLoadExceptionContext.Exception">
            <summary>The exception that occurred in Load.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.FileLoadExceptionContext.Ignore">
            <summary>If true, the exception will not be rethrown.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.FileLoadExceptionContext.Provider">
            <summary>The <see cref="T:Microsoft.Extensions.Configuration.FileConfigurationProvider" /> that caused the exception.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider">
            <summary>A JSON file based <see cref="T:Microsoft.Extensions.Configuration.FileConfigurationProvider" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Json.JsonConfigurationSource)">
            <summary>Initializes a new instance with the specified source.</summary>
            <param name="source">The source settings.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider.Load(System.IO.Stream)">
            <summary>Loads the JSON data from a stream.</summary>
            <param name="stream">The stream to read.</param>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.Json.JsonConfigurationSource">
            <summary>Represents a JSON file as an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Json.JsonConfigurationSource.#ctor" />
        <member name="M:Microsoft.Extensions.Configuration.Json.JsonConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Builds the <see cref="T:Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider" /> for this source.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
            <returns>A <see cref="T:Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider" /></returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider">
            <summary>Loads configuration key/values from a json stream into a provider.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider.#ctor(Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource)">
            <summary>Constructor.</summary>
            <param name="source">The <see cref="T:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider.Load(System.IO.Stream)">
            <summary>Loads json configuration key/values from a stream into a provider.</summary>
            <param name="stream">The json <see cref="T:System.IO.Stream" /> to load configuration data from.</param>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource">
            <summary>Represents a JSON file as an <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSource" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource.#ctor" />
        <member name="M:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource.Build(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>Builds the <see cref="T:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider" /> for this source.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</param>
            <returns>An <see cref="T:Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider" /></returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.JsonConfigurationExtensions">
            <summary>Extension methods for adding <see cref="T:Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.FileProviders.IFileProvider,System.String,System.Boolean,System.Boolean)">
            <summary>Adds a JSON configuration source to <paramref name="builder" />.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="provider">The <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> to use to access the file.</param>
            <param name="path">Path relative to the base path stored in 
            <see cref="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties" /> of <paramref name="builder" />.</param>
            <param name="optional">Whether the file is optional.</param>
            <param name="reloadOnChange">Whether the configuration should be reloaded if the file changes.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Action{Microsoft.Extensions.Configuration.Json.JsonConfigurationSource})">
            <summary>Adds a JSON configuration source to <paramref name="builder" />.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="configureSource">Configures the source.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)">
            <summary>Adds the JSON configuration provider at <paramref name="path" /> to <paramref name="builder" />.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="path">Path relative to the base path stored in 
            <see cref="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties" /> of <paramref name="builder" />.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)">
            <summary>Adds the JSON configuration provider at <paramref name="path" /> to <paramref name="builder" />.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="path">Path relative to the base path stored in 
            <see cref="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties" /> of <paramref name="builder" />.</param>
            <param name="optional">Whether the file is optional.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonFile(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean,System.Boolean)">
            <summary>Adds the JSON configuration provider at <paramref name="path" /> to <paramref name="builder" />.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="path">Path relative to the base path stored in 
            <see cref="P:Microsoft.Extensions.Configuration.IConfigurationBuilder.Properties" /> of <paramref name="builder" />.</param>
            <param name="optional">Whether the file is optional.</param>
            <param name="reloadOnChange">Whether the configuration should be reloaded if the file changes.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.JsonConfigurationExtensions.AddJsonStream(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.IO.Stream)">
            <summary>Adds a JSON configuration source to <paramref name="builder" />.</summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> to add to.</param>
            <param name="stream">The <see cref="T:System.IO.Stream" /> to read the json configuration data from.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" />.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.UserSecrets.PathHelper">
            <summary>Provides paths for user secrets configuration files.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecrets.PathHelper.#ctor" />
        <member name="M:Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPathFromSecretsId(System.String)">
            <summary>
                <para>
            Returns the path to the JSON file that stores user secrets.</para>
                <para>
            This uses the current user profile to locate the secrets file on disk in a location outside of source control.</para>
            </summary>
            <param name="userSecretsId">The user secret ID.</param>
            <returns>The full path to the secret file.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute">
            <summary>
                <para>
            Represents the user secrets ID.</para>
                <para>
            In most cases, this attribute is automatically generated during compilation by MSBuild targets 
            included in the UserSecrets NuGet package. These targets use the MSBuild property 'UserSecretsId'
            to set the value for <see cref="P:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute.UserSecretsId" />.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute.#ctor(System.String)">
            <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</summary>
            <param name="userSecretId">The user secrets ID.</param>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute.UserSecretsId">
            <summary>The user secrets ID.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions">
            <summary>Configuration extensions for adding user secrets configuration source.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Reflection.Assembly)">
            <summary>
                <para>
            Adds the user secrets configuration source. This searches <paramref name="assembly" /> for an instance
            of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />, which specifies a user secrets ID.</para>
                <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.</para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="assembly">The assembly with the <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="assembly" /> does not have a valid <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" /></exception>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Reflection.Assembly,System.Boolean)">
            <summary>
                <para>
            Adds the user secrets configuration source. This searches <paramref name="assembly" /> for an instance
            of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />, which specifies a user secrets ID.</para>
                <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.</para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="assembly">The assembly with the <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</param>
            <param name="optional">Whether loading secrets is optional. When false, this method may throw.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="optional" /> is false and <paramref name="assembly" /> does not have a valid <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</exception>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Reflection.Assembly,System.Boolean,System.Boolean)">
            <summary>
                <para>
            Adds the user secrets configuration source. This searches <paramref name="assembly" /> for an instance
            of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />, which specifies a user secrets ID.</para>
                <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.</para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="assembly">The assembly with the <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</param>
            <param name="optional">Whether loading secrets is optional. When false, this method may throw.</param>
            <param name="reloadOnChange">Whether the configuration should be reloaded if the file changes.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="optional" /> is false and <paramref name="assembly" /> does not have a valid <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</exception>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)">
            <summary>
                <para>
            Adds the user secrets configuration source with specified user secrets ID.</para>
                <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.</para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="userSecretsId">The user secrets ID.</param>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)">
            <summary>
                <para>
            Adds the user secrets configuration source with specified user secrets ID.</para>
                <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.</para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="userSecretsId">The user secrets ID.</param>
            <param name="reloadOnChange">Whether the configuration should be reloaded if the file changes.</param>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets``1(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
                <para>
            Adds the user secrets configuration source. Searches the assembly that contains type <typeparamref name="T" />
            for an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />, which specifies a user secrets ID.</para>
                <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.</para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <typeparam name="T">The type from the assembly to search for an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</typeparam>
            <exception cref="T:System.InvalidOperationException">Thrown when the assembly containing <typeparamref name="T" /> does not have <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</exception>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets``1(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Boolean)">
            <summary>
                <para>
            Adds the user secrets configuration source. Searches the assembly that contains type <typeparamref name="T" />
            for an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />, which specifies a user secrets ID.</para>
                <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.</para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="optional">Whether loading secrets is optional. When false, this method may throw.</param>
            <typeparam name="T">The type from the assembly to search for an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</typeparam>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="optional" /> is false and the assembly containing <typeparamref name="T" /> does not have a valid <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</exception>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets``1(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Boolean,System.Boolean)">
            <summary>
                <para>
            Adds the user secrets configuration source. Searches the assembly that contains type <typeparamref name="T" />
            for an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />, which specifies a user secrets ID.</para>
                <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.</para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="optional">Whether loading secrets is optional. When false, this method may throw.</param>
            <param name="reloadOnChange">Whether the configuration should be reloaded if the file changes.</param>
            <typeparam name="T">The type from the assembly to search for an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</typeparam>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="optional" /> is false and the assembly containing <typeparamref name="T" /> does not have a valid <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</exception>
            <returns>The configuration builder.</returns>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.IDirectoryContents">
            <summary>Represents a directory's content in the file provider.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.IDirectoryContents.Exists">
            <summary>True if a directory was located at the given path.</summary>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.IFileInfo">
            <summary>Represents a file in the given file provider.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.IFileInfo.CreateReadStream">
            <summary>Return file contents as readonly stream. Caller should dispose stream when complete.</summary>
            <returns>The file stream</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.IFileInfo.Exists">
            <summary>True if resource exists in the underlying storage system.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.IFileInfo.IsDirectory">
            <summary>True for the case TryGetDirectoryContents has enumerated a sub-directory.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.IFileInfo.LastModified">
            <summary>Gets when the file was last modified.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.IFileInfo.Length">
            <summary>The length of the file in bytes, or -1 for a directory or non-existing files.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.IFileInfo.Name">
            <summary>The name of the file or directory, not including any path.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.IFileInfo.PhysicalPath">
            <summary>The path to the file, including the file name. Return null if the file is not directly accessible.</summary>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.IFileProvider">
            <summary>A read-only file provider abstraction.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)">
            <summary>Enumerate a directory at the given path, if any.</summary>
            <param name="subpath">Relative path that identifies the directory.</param>
            <returns>Returns the contents of the directory.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.IFileProvider.GetFileInfo(System.String)">
            <summary>Locate a file at the given path.</summary>
            <param name="subpath">Relative path that identifies the file.</param>
            <returns>The file information. Caller must check Exists property.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.IFileProvider.Watch(System.String)">
            <summary>Creates a <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> for the specified <paramref name="filter" />.</summary>
            <param name="filter">Filter string used to determine what files or folders to monitor. Example: */.cs, ., subFolder/*/.cshtml.</param>
            <returns>An <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> that is notified when a file matching <paramref name="filter" /> is added, modified or deleted.</returns>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents">
            <summary>Represents a non-existing directory.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents.#ctor" />
        <member name="M:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator to an empty collection.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents.Exists">
            <summary>Always false.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents.Singleton">
            <summary>A shared instance of <see cref="T:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents" /></summary>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.NotFoundFileInfo">
            <summary>Represents a non-existing file.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.NotFoundFileInfo.#ctor(System.String)">
            <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileProviders.NotFoundFileInfo" />.</summary>
            <param name="name">The name of the file that could not be found</param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.NotFoundFileInfo.CreateReadStream">
            <summary>Always throws. A stream cannot be created for non-existing file.</summary>
            <exception cref="T:System.IO.FileNotFoundException">Always thrown.</exception>
            <returns>Does not return</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.Exists">
            <summary>Always false.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.IsDirectory">
            <summary>Always false.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.LastModified">
            <summary>Returns <see cref="F:System.DateTimeOffset.MinValue" />.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.Length">
            <summary>Always equals -1.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.Name">
            <summary>The name of the file or directory, not including any path.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.NotFoundFileInfo.PhysicalPath">
            <summary>Always null.</summary>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.NullChangeToken">
            <summary>An empty change token that doesn't raise any change callbacks.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.NullChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)">
            <summary>Always returns an empty disposable object. Callbacks will never be called.</summary>
            <param name="callback">This parameter is ignored</param>
            <param name="state">This parameter is ignored</param>
            <returns>A disposable object that noops on dispose.</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.NullChangeToken.ActiveChangeCallbacks">
            <summary>Always false.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.NullChangeToken.HasChanged">
            <summary>Always false.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.NullChangeToken.Singleton">
            <summary>A singleton instance of <see cref="T:Microsoft.Extensions.FileProviders.NullChangeToken" /></summary>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.NullFileProvider">
            <summary>An empty file provider with no contents.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.NullFileProvider.#ctor" />
        <member name="M:Microsoft.Extensions.FileProviders.NullFileProvider.GetDirectoryContents(System.String)">
            <summary>Enumerate a non-existent directory.</summary>
            <param name="subpath">A path under the root directory. This parameter is ignored.</param>
            <returns>A <see cref="T:Microsoft.Extensions.FileProviders.IDirectoryContents" /> that does not exist and does not contain any contents.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.NullFileProvider.GetFileInfo(System.String)">
            <summary>Locate a non-existent file.</summary>
            <param name="subpath">A path under the root directory.</param>
            <returns>A <see cref="T:Microsoft.Extensions.FileProviders.IFileInfo" /> representing a non-existent file at the given path.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.NullFileProvider.Watch(System.String)">
            <summary>Returns a <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> that monitors nothing.</summary>
            <param name="filter">Filter string used to determine what files or folders to monitor. This parameter is ignored.</param>
            <returns>A <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> that does not register callbacks.</returns>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.Physical.ExclusionFilters">
            <summary>Specifies filtering behavior for files or directories.</summary>
        </member>
        <member name="F:Microsoft.Extensions.FileProviders.Physical.ExclusionFilters.DotPrefixed">
            <summary>Exclude files and directories when the name begins with period.</summary>
        </member>
        <member name="F:Microsoft.Extensions.FileProviders.Physical.ExclusionFilters.Hidden">
            <summary>Exclude files and directories when <see cref="F:System.IO.FileAttributes.Hidden" /> is set on <see cref="P:System.IO.FileSystemInfo.Attributes" />.</summary>
        </member>
        <member name="F:Microsoft.Extensions.FileProviders.Physical.ExclusionFilters.None">
            <summary>Do not exclude any files.</summary>
        </member>
        <member name="F:Microsoft.Extensions.FileProviders.Physical.ExclusionFilters.Sensitive">
            <summary>Equivalent to <c>DotPrefixed | Hidden | System</c>. Exclude files and directories when the name begins with a period, or has either <see cref="F:System.IO.FileAttributes.Hidden" /> or <see cref="F:System.IO.FileAttributes.System" /> is set on <see cref="P:System.IO.FileSystemInfo.Attributes" />.</summary>
        </member>
        <member name="F:Microsoft.Extensions.FileProviders.Physical.ExclusionFilters.System">
            <summary>Exclude files and directories when <see cref="F:System.IO.FileAttributes.System" /> is set on <see cref="P:System.IO.FileSystemInfo.Attributes" />.</summary>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo">
            <summary>Represents a directory on a physical filesystem.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.#ctor(System.IO.DirectoryInfo)">
            <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo" /> that wraps an instance of <see cref="T:System.IO.DirectoryInfo" /></summary>
            <param name="info">The directory</param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.CreateReadStream">
            <summary>Always throws an exception because read streams are not support on directories.</summary>
            <exception cref="T:System.InvalidOperationException">Always thrown</exception>
            <returns>Never returns</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.Exists">
            <summary>Determines if the resource exists in the underlying storage system.</summary>
            <returns>
                <see langword="true" /> if the resource exists in the underlying storage system; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.IsDirectory">
            <summary>Always true.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.LastModified">
            <summary>The time when the directory was last written to.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.Length">
            <summary>Always equals -1.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.Name">
            <summary>Gets the name of the file or directory, excluding the path.</summary>
            <returns>A string representing the name of the file or directory.</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PhysicalDirectoryInfo.PhysicalPath">
            <summary>Gets the full path to the file, including the file name.</summary>
            <returns>A string representing the full path to the file, or <see langword="null" /> if the file is not directly accessible.</returns>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo">
            <summary>Represents a file on a physical filesystem.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.#ctor(System.IO.FileInfo)">
            <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo" /> that wraps an instance of <see cref="T:System.IO.FileInfo" /></summary>
            <param name="info">The <see cref="T:System.IO.FileInfo" /></param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.CreateReadStream">
            <summary>Returns the file contents as a read-only stream.</summary>
            <returns>A read-only stream.</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Exists">
            <summary>Determines if the resource exists in the underlying system.</summary>
            <returns>
                <see langword="true" /> if the resource exists in the underlying storage system; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.IsDirectory">
            <summary>Always false.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.LastModified">
            <summary>Gets the last time the file was modified.</summary>
            <returns>A datetime offset representing the last time the file was modified.</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Length">
            <summary>The length of the file in bytes, or -1 for a directory or non-existing files.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.Name">
            <summary>The name of the file or directory, not including any path.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PhysicalFileInfo.PhysicalPath">
            <summary>The path to the file, including the file name. Return <see langword="null" /> if the file is not directly accessible.</summary>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher">
            <summary>
                <para>A file watcher that watches a physical filesystem for changes.</para>
                <para>Triggers events on <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> when files are created, change, renamed, or deleted.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.#ctor(System.String,System.IO.FileSystemWatcher,System.Boolean)">
            <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher" /> that watches files in <paramref name="root" />. Wraps an instance of <see cref="T:System.IO.FileSystemWatcher" />.</summary>
            <param name="root">Root directory for the watcher.</param>
            <param name="fileSystemWatcher">The wrapped watcher that is watching <paramref name="root" />.</param>
            <param name="pollForChanges">
                <see langword="true" /> when the watcher should use polling to trigger instances of <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> created by <see cref="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.CreateFileChangeToken(System.String)" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.#ctor(System.String,System.IO.FileSystemWatcher,System.Boolean,Microsoft.Extensions.FileProviders.Physical.ExclusionFilters)">
            <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher" /> that watches files in <paramref name="root" />. Wraps an instance of <see cref="T:System.IO.FileSystemWatcher" />.</summary>
            <param name="root">Root directory for the watcher.</param>
            <param name="fileSystemWatcher">The wrapped watcher that is watching <paramref name="root" />.</param>
            <param name="pollForChanges">
                <see langword="true" /> when the watcher should use polling to trigger instances of
            <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> created by <see cref="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.CreateFileChangeToken(System.String)" />.</param>
            <param name="filters">Specifies which files or directories are excluded. Notifications of changes to are not raised to these.</param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.CreateFileChangeToken(System.String)">
            <summary>
                <para>Creates an instance of <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> for all files and directories that match the <paramref name="filter" />.</para>
                <para>Globbing patterns are relative to the root directory given in the constructor <see cref="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.#ctor(System.String,System.IO.FileSystemWatcher,System.Boolean)" />. Globbing patterns are interpreted by <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" />.</para>
            </summary>
            <param name="filter">A globbing pattern for files and directories to watch.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="filter" /> is null.</exception>
            <returns>A change token for all files that match the filter.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.Dispose">
            <summary>Disposes the provider. Change tokens may not trigger after the provider is disposed.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.Dispose(System.Boolean)">
            <summary>Disposes the provider.</summary>
            <param name="disposing">If <see langword="true" />, is invoked from <see cref="M:System.IDisposable.Dispose" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher.Finalize">
            <summary>Destructor for <see cref="T:Microsoft.Extensions.FileProviders.Physical.PhysicalFilesWatcher" />.</summary>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken">
            <summary>
                <para>A change token that polls for file system changes.</para>
                <para>This change token does not raise any change callbacks. Callers should watch for <see cref="P:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken.HasChanged" /> to turn
                from false to true
                and dispose the token after this happens.</para>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken.#ctor(System.IO.FileInfo)">
            <summary>Initializes a new instance of <see cref="T:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken" /> that polls the specified file for changes as
            determined by <see cref="P:System.IO.FileSystemInfo.LastWriteTimeUtc" />.</summary>
            <param name="fileInfo">The <see cref="T:System.IO.FileInfo" /> to poll</param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)">
            <summary>Does not actually register callbacks.</summary>
            <param name="callback">This parameter is ignored</param>
            <param name="state">This parameter is ignored</param>
            <returns>A disposable object that noops when disposed</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken.ActiveChangeCallbacks">
            <summary>Always false.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken.HasChanged">
            <summary>True when the file has changed since the change token was created. Once the file changes, this value is always true.</summary>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken">
            <summary>A polling based <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> for wildcard patterns.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of <see cref="T:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken" />.</summary>
            <param name="root">The root of the file system.</param>
            <param name="pattern">The pattern to watch.</param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.GetLastWriteUtc(System.String)">
            <summary>Gets the last write time of the file at the specified <paramref name="path" />.</summary>
            <param name="path">The root relative path.</param>
            <returns>The <see cref="T:System.DateTime" /> that the file was last modified.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.Microsoft#Extensions#Primitives#IChangeToken#RegisterChangeCallback(System.Action{System.Object},System.Object)">
            <summary>Registers for a callback that will be invoked when the entry has changed.
 <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> MUST be set before the callback is invoked.</summary>
            <param name="callback">The <see cref="T:System.Action`1" /> to invoke.</param>
            <param name="state">State to be passed into the callback.</param>
            <returns>An <see cref="T:System.IDisposable" /> that is used to unregister the callback.</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.ActiveChangeCallbacks">
            <summary>Indicates if this token will pro-actively raise callbacks. If <see langword="false" />, the token consumer must poll <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> to detect changes.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.Physical.PollingWildCardChangeToken.HasChanged">
            <summary>Gets a value that indicates if a change has occurred.</summary>
        </member>
        <member name="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider">
            <summary>Looks up files using the on-disk file system.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.#ctor(System.String)">
            <summary>Initializes a new instance of a PhysicalFileProvider at the given root directory.</summary>
            <param name="root">The root directory. This should be an absolute path.</param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.#ctor(System.String,Microsoft.Extensions.FileProviders.Physical.ExclusionFilters)">
            <summary>Initializes a new instance of a PhysicalFileProvider at the given root directory.</summary>
            <param name="root">The root directory. This should be an absolute path.</param>
            <param name="filters">Specifies which files or directories are excluded.</param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Dispose">
            <summary>Disposes the provider. Change tokens may not trigger after the provider is disposed.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Dispose(System.Boolean)">
            <summary>Disposes the provider.</summary>
            <param name="disposing">
                <see langword="true" /> is invoked from <see cref="M:System.IDisposable.Dispose" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Finalize">
            <summary>Destructor for <see cref="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.GetDirectoryContents(System.String)">
            <summary>Enumerate a directory at the given path, if any.</summary>
            <param name="subpath">A path under the root directory. Leading slashes are ignored.</param>
            <returns>
            Contents of the directory. Caller must check <see cref="P:Microsoft.Extensions.FileProviders.IDirectoryContents.Exists" /> property. <see cref="T:Microsoft.Extensions.FileProviders.NotFoundDirectoryContents" /> if
            <paramref name="subpath" /> is absolute, if the directory does not exist, or <paramref name="subpath" /> has invalid
            characters.
          .</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.GetFileInfo(System.String)">
            <summary>Locate a file at the given path by directly mapping path segments to physical directories.</summary>
            <param name="subpath">A path under the root directory</param>
            <returns>The file information. Caller must check <see cref="P:Microsoft.Extensions.FileProviders.IFileInfo.Exists" /> property.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Watch(System.String)">
            <summary>
                <para>Creates an <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> for the specified <paramref name="filter" />.</para>
                <para>Globbing patterns are interpreted by <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" />.</para>
            </summary>
            <param name="filter">
            Filter string used to determine what files or folders to monitor. Examples: <c>\*\*/\*.cs</c>, <c>\*.\*</c>, <c>subfolder/\*\*/\*.cshtml</c>.</param>
            <returns>
                <para>An <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> that's notified when a file matching <paramref name="filter" /> is added, modified, or deleted.</para>
                <para>OR</para>
                <para>A <see cref="T:Microsoft.Extensions.FileProviders.NullChangeToken" /> if <paramref name="filter" /> has invalid filter characters or is an absolute path or is outside the root directory specified in the constructor <see cref="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.#ctor(System.String)" />.</para>
            </returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Root">
            <summary>The root directory for this instance.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.PhysicalFileProvider.UseActivePolling">
            <summary>Gets or sets a value that determines if this instance of <see cref="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" />
            actively polls for file changes.
            <para>
            When <see langword="true" />, the <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> returned by <see cref="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Watch(System.String)" /> actively polls for file changes
            (<see cref="P:Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks" /> is <see langword="true" />) instead of being passive.</para><para>
            This property is only effective when <see cref="P:Microsoft.Extensions.FileProviders.PhysicalFileProvider.UsePollingFileWatcher" /> is set.</para></summary>
            <returns>The default value of this property is determined by the value of the environment variable named <c>DOTNET_USE_POLLING_FILE_WATCHER</c>.
            When <see langword="true" /> or <c>1</c>, this property defaults to <see langword="true" />; otherwise <see langword="false" />.</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileProviders.PhysicalFileProvider.UsePollingFileWatcher">
            <summary>Gets or sets a value that determines if this instance of <see cref="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" />
            uses polling to determine file changes.
            <para>
            By default, <see cref="T:Microsoft.Extensions.FileProviders.PhysicalFileProvider" /> uses <see cref="T:System.IO.FileSystemWatcher" /> to listen to file change events for <see cref="M:Microsoft.Extensions.FileProviders.PhysicalFileProvider.Watch(System.String)" />. <see cref="T:System.IO.FileSystemWatcher" /> is ineffective in some scenarios such as mounted drives. Polling is required to effectively watch for file changes.</para></summary>
            <returns>
            The default value of this property is determined by the value of environment variable named <c>DOTNET_USE_POLLING_FILE_WATCHER</c>. When <see langword="true" /> or <c>1</c>, this property defaults to <see langword="true" />; otherwise <see langword="false" />.</returns>
        </member>
        <member name="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase">
            <summary>Represents a directory.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.#ctor" />
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.EnumerateFileSystemInfos">
            <summary>Enumerates all files and directories in the directory.</summary>
            <returns>Collection of files and directories</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetDirectory(System.String)">
            <summary>Returns an instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase" /> that represents a subdirectory.</summary>
            <param name="path">The directory name</param>
            <returns>Instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase" /> even if directory does not exist</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase.GetFile(System.String)">
            <summary>Returns an instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase" /> that represents a file in the directory.</summary>
            <param name="path">The file name</param>
            <returns>Instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase" /> even if file does not exist</returns>
        </member>
        <member name="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper">
            <summary>Wraps an instance of <see cref="T:System.IO.DirectoryInfo" /> and provides implementation of
            <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.#ctor(System.IO.DirectoryInfo)">
            <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper" />.</summary>
            <param name="directoryInfo">The <see cref="T:System.IO.DirectoryInfo" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.EnumerateFileSystemInfos" />
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetDirectory(System.String)">
            <summary>Returns an instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase" /> that represents a subdirectory.</summary>
            <param name="name">The directory name</param>
            <returns>The directory</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.GetFile(System.String)">
            <param name="name" />
        </member>
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.FullName">
            <summary>Returns the full path to the directory.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.Name" />
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoWrapper.ParentDirectory">
            <summary>Returns the parent directory.</summary>
        </member>
        <member name="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase">
            <summary>Represents a file.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase.#ctor" />
        <member name="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper">
            <summary>Wraps an instance of <see cref="T:System.IO.FileInfo" /> to provide implementation of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper.#ctor(System.IO.FileInfo)">
            <summary>Initializes instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper" /> to wrap the specified object <see cref="T:System.IO.FileInfo" />.</summary>
            <param name="fileInfo">The <see cref="T:System.IO.FileInfo" /></param>
        </member>
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper.FullName">
            <summary>The full path of the file. (Overrides <see cref="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.FullName" />).</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper.Name">
            <summary>The file name. (Overrides <see cref="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.Name" />).</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoWrapper.ParentDirectory">
            <summary>The directory containing the file. (Overrides <see cref="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.ParentDirectory" />).</summary>
        </member>
        <member name="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase">
            <summary>Shared abstraction for files and directories.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.#ctor" />
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.FullName">
            <summary>A string containing the full path of the file or directory.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.Name">
            <summary>A string containing the name of the file or directory.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileSystemInfoBase.ParentDirectory">
            <summary>The parent directory for the current file or directory.</summary>
        </member>
        <member name="T:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch">
            <summary>Represents a file that was matched by searching using a globbing pattern.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.#ctor(System.String,System.String)">
            <summary>Initializes new instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch" /></summary>
            <param name="path">The path to the matched file</param>
            <param name="stem">The stem</param>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Equals(Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch)">
            <summary>Determines if the specified match is equivalent to the current match using a case-insensitive comparison.</summary>
            <param name="other">The other match to be compared</param>
            <returns>
                <see langword="true" /> if <see cref="P:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Path" /> and <see cref="P:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Stem" /> are equal using case-insensitive comparison</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Equals(System.Object)">
            <summary>Determines if the specified object is equivalent to the current match using a case-insensitive comparison.</summary>
            <param name="obj">The object to be compared</param>
            <returns>
                <see langword="true" /> when <see cref="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Equals(Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch)" /></returns>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.GetHashCode">
            <summary>Gets a hash for the file pattern match.</summary>
            <returns>Some number</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Path">
            <summary>The path to the file matched.</summary>
        </member>
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch.Stem">
            <summary>The subpath to the matched file under the base directory searched.</summary>
        </member>
        <member name="T:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo">
            <summary>Avoids using disk for uses like Pattern Matching.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Creates a new InMemoryDirectoryInfo with the root directory and files given.</summary>
            <param name="rootDir">The root directory that this FileSystem will use.</param>
            <param name="files">Collection of file names. If relative paths <paramref name="rootDir" /> will be prepended to the paths.</param>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.EnumerateFileSystemInfos" />
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.GetDirectory(System.String)">
            <param name="path" />
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.GetFile(System.String)">
            <summary>Returns an instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase" /> that matches the <paramref name="path" /> given.</summary>
            <param name="path">The filename.</param>
            <returns>Instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Abstractions.FileInfoBase" /> if the file exists, null otherwise.</returns>
        </member>
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.FullName" />
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.Name" />
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.InMemoryDirectoryInfo.ParentDirectory" />
        <member name="T:Microsoft.Extensions.FileSystemGlobbing.Matcher">
            <summary>Searches the file system for files with names that match specified patterns.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.#ctor">
            <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" /> using case-insensitive matching.</summary>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.#ctor(System.StringComparison)">
            <summary>Initializes an instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" /> using the string comparsion method specified.</summary>
            <param name="comparisonType">The <see cref="T:System.StringComparison" /> to use</param>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.AddExclude(System.String)">
            <summary>
                <para>Add a file name pattern for files the matcher should exclude from the results. Patterns are relative to the
                root directory given when <see cref="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" /> is called.</para>
                <para>Use the forward slash '/' to represent directory separator. Use '*' to represent wildcards in file and
                directory names. Use '**' to represent arbitrary directory depth. Use '..' to represent a parent directory.</para>
            </summary>
            <param name="pattern">The globbing pattern</param>
            <returns>The matcher</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.AddInclude(System.String)">
            <summary>
                <para>Add a file name pattern that the matcher should use to discover files. Patterns are relative to the root
                directory given when <see cref="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)" /> is called.</para>
                <para>Use the forward slash '/' to represent directory separator. Use '*' to represent wildcards in file and
                directory names. Use '**' to represent arbitrary directory depth. Use '..' to represent a parent directory.</para>
            </summary>
            <param name="pattern">The globbing pattern</param>
            <returns>The matcher</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.Matcher.Execute(Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase)">
            <summary>Searches the directory specified for all files matching patterns added to this instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" /></summary>
            <param name="directoryInfo">The root directory for the search</param>
            <returns>Always returns instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult" />, even if not files were matched</returns>
        </member>
        <member name="T:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions" />
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddExcludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])">
            <summary>Adds multiple exclude patterns to <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" />.</summary>
            <param name="matcher">The matcher to which the exclude patterns are added.</param>
            <param name="excludePatternsGroups">A list of globbing patterns.</param>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.AddIncludePatterns(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String}[])">
            <summary>Adds multiple patterns to include in <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" />.</summary>
            <param name="matcher">The matcher to which the include patterns are added.</param>
            <param name="includePatternsGroups">A list of globbing patterns.</param>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.GetResultsInFullPath(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)">
            <summary>Searches the specified directory for all files matching patterns added to this instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.Matcher" />.</summary>
            <param name="matcher">The matcher.</param>
            <param name="directoryPath">The root directory for the search.</param>
            <returns>Absolute file paths of all files matched. Empty enumerable if no files matched given patterns.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Matches the files passed in with the patterns in the matcher without going to disk.</summary>
            <param name="matcher">The matcher that holds the patterns and pattern matching type.</param>
            <param name="files">The files to run the matcher against.</param>
            <returns>The match results.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String)">
            <summary>Matches the file passed in with the patterns in the matcher without going to disk.</summary>
            <param name="matcher">The matcher that holds the patterns and pattern matching type.</param>
            <param name="file">The file to run the matcher against.</param>
            <returns>The match results.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Matches the files passed in with the patterns in the matcher without going to disk.</summary>
            <param name="matcher">The matcher that holds the patterns and pattern matching type.</param>
            <param name="rootDir">The root directory for the matcher to match the files from.</param>
            <param name="files">The files to run the matcher against.</param>
            <returns>The match results.</returns>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.MatcherExtensions.Match(Microsoft.Extensions.FileSystemGlobbing.Matcher,System.String,System.String)">
            <summary>Matches the file passed in with the patterns in the matcher without going to disk.</summary>
            <param name="matcher">The matcher that holds the patterns and pattern matching type.</param>
            <param name="rootDir">The root directory for the matcher to match the file from.</param>
            <param name="file">The file to run the matcher against.</param>
            <returns>The match results.</returns>
        </member>
        <member name="T:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult">
            <summary>Represents a collection of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch" /></summary>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch})">
            <summary>Initializes the result with a collection of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch" /></summary>
            <param name="files">A collection of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch" /></param>
        </member>
        <member name="M:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch},System.Boolean)">
            <summary>Initializes the result with a collection of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch" /></summary>
            <param name="files">A collection of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch" /></param>
            <param name="hasMatches">A value that determines if <see cref="T:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult" /> has any matches.</param>
        </member>
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult.Files">
            <summary>A collection of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.FilePatternMatch" /></summary>
        </member>
        <member name="P:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult.HasMatches">
            <summary>Gets a value that determines if this instance of <see cref="T:Microsoft.Extensions.FileSystemGlobbing.PatternMatchingResult" /> has any matches.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Primitives.CancellationChangeToken">
            <summary>A <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> implementation using <see cref="T:System.Threading.CancellationToken" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.CancellationChangeToken.#ctor(System.Threading.CancellationToken)">
            <summary>Initializes a new instance of <see cref="T:Microsoft.Extensions.Primitives.CancellationChangeToken" />.</summary>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.CancellationChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)">
            <summary>Registers for a callback that will be invoked when the entry has changed. <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> must be set before the callback is invoked.</summary>
            <param name="callback">The <see cref="T:System.Action`1" /> to invoke.</param>
            <param name="state">State to be passed into the callback.</param>
            <returns>An <see cref="T:System.IDisposable" /> that is used to unregister the callback.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.CancellationChangeToken.ActiveChangeCallbacks">
            <summary>Indicates if this token will pro-actively raise callbacks. If <see langword="false" />, the token consumer must poll <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> to detect changes.</summary>
            <returns>
                <see langword="true" /> if the token will proactively raise callbacks; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.CancellationChangeToken.HasChanged">
            <summary>Gets a value that indicates if a change has occurred.</summary>
            <returns>
                <see langword="true" /> if a change has occured; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Primitives.ChangeToken">
            <summary>Propagates notifications that a change has occurred.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.ChangeToken.OnChange(System.Func{Microsoft.Extensions.Primitives.IChangeToken},System.Action)">
            <summary>Registers the <paramref name="changeTokenConsumer" /> action to be called whenever the token produced changes.</summary>
            <param name="changeTokenProducer">Produces the change token.</param>
            <param name="changeTokenConsumer">Action called when the token changes.</param>
            <returns />
        </member>
        <member name="M:Microsoft.Extensions.Primitives.ChangeToken.OnChange``1(System.Func{Microsoft.Extensions.Primitives.IChangeToken},System.Action{``0},``0)">
            <summary>Registers the <paramref name="changeTokenConsumer" /> action to be called whenever the token produced changes.</summary>
            <param name="changeTokenProducer">Produces the change token.</param>
            <param name="changeTokenConsumer">Action called when the token changes.</param>
            <param name="state">state for the consumer.</param>
            <typeparam name="TState">The type of the state for the <paramref name="changeTokenConsumer" /> action.</typeparam>
            <returns />
        </member>
        <member name="T:Microsoft.Extensions.Primitives.CompositeChangeToken">
            <summary>An <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> which represents one or more <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> instances.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.CompositeChangeToken.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.Extensions.Primitives.IChangeToken})">
            <summary>Creates a new instance of <see cref="T:Microsoft.Extensions.Primitives.CompositeChangeToken" />.</summary>
            <param name="changeTokens">The list of <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> to compose.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.CompositeChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)">
            <summary>Registers for a callback that will be invoked when the entry has changed. <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> must be set before the callback is invoked.</summary>
            <param name="callback">The <see cref="T:System.Action`1" /> to invoke.</param>
            <param name="state">State to be passed into the callback.</param>
            <returns>An <see cref="T:System.IDisposable" /> that is used to unregister the callback.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.CompositeChangeToken.ActiveChangeCallbacks">
            <summary>Indicates if this token will pro-actively raise callbacks. If <see langword="false" />, the token consumer must poll <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> to detect changes.</summary>
            <returns>
                <see langword="true" /> if the token will proactively raise callbacks; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.CompositeChangeToken.ChangeTokens">
            <summary>Returns the list of <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> which compose the current <see cref="T:Microsoft.Extensions.Primitives.CompositeChangeToken" />.</summary>
            <returns>The list of <see cref="T:Microsoft.Extensions.Primitives.IChangeToken" /> instances which compose the current <see cref="T:Microsoft.Extensions.Primitives.CompositeChangeToken" />.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.CompositeChangeToken.HasChanged">
            <summary>Gets a value that indicates if a change has occurred.</summary>
            <returns>
                <see langword="true" /> if a change has occured; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Primitives.Extensions" />
        <member name="M:Microsoft.Extensions.Primitives.Extensions.Append(System.Text.StringBuilder,Microsoft.Extensions.Primitives.StringSegment)">
            <summary>Add the given <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to the <see cref="T:System.Text.StringBuilder" />.</summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to add to.</param>
            <param name="segment">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to add.</param>
            <returns>The original <see cref="T:System.Text.StringBuilder" />.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Primitives.IChangeToken">
            <summary>Propagates notifications that a change has occurred.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.IChangeToken.RegisterChangeCallback(System.Action{System.Object},System.Object)">
            <summary>Registers for a callback that will be invoked when the entry has changed.
            <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> MUST be set before the callback is invoked.</summary>
            <param name="callback">The <see cref="T:System.Action`1" /> to invoke.</param>
            <param name="state">State to be passed into the callback.</param>
            <returns>An <see cref="T:System.IDisposable" /> that is used to unregister the callback.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.IChangeToken.ActiveChangeCallbacks">
            <summary>Indicates if this token will pro-actively raise callbacks. If <see langword="false" />, the token consumer must
            poll <see cref="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged" /> to detect changes.</summary>
            <returns>
                <see langword="true" /> if the token will proactively raise callbacks; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.IChangeToken.HasChanged">
            <summary>Gets a value that indicates if a change has occurred.</summary>
            <returns>
                <see langword="true" /> if a change has occurred; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Primitives.StringSegment">
            <summary>An optimized representation of a substring.</summary>
        </member>
        <member name="F:Microsoft.Extensions.Primitives.StringSegment.Empty">
            <summary>A <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> for <see cref="F:System.String.Empty" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.#ctor(System.String)">
            <summary>Initializes an instance of the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> struct.</summary>
            <param name="buffer">
            The original <see cref="T:System.String" />. The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> includes the whole <see cref="T:System.String" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.#ctor(System.String,System.Int32,System.Int32)">
            <summary>Initializes an instance of the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> struct.</summary>
            <param name="buffer">The original <see cref="T:System.String" /> used as buffer.</param>
            <param name="offset">The offset of the segment within the <paramref name="buffer" />.</param>
            <param name="length">The length of the segment.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="buffer" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> or <paramref name="length" /> is less than zero, or <paramref name="offset" /> +
            <paramref name="length" /> is greater than the number of characters in <paramref name="buffer" />.</exception>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.AsMemory">
            <summary>Gets a <see cref="T:System.ReadOnlyMemory`1" /> from the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
            <returns>The <see cref="T:System.ReadOnlyMemory`1" /> from this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.AsSpan">
            <summary>Gets a <see cref="T:System.ReadOnlySpan`1" /> from the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
            <returns>The <see cref="T:System.ReadOnlySpan`1" /> from this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Compare(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)">
            <summary>Compares substrings of two specified <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> objects using the specified rules,
            and returns an integer that indicates their relative position in the sort order.</summary>
            <param name="a">The first <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare.</param>
            <param name="b">The second <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare.</param>
            <param name="comparisonType">One of the enumeration values that specifies the rules for the comparison.</param>
            <returns>
            A 32-bit signed integer indicating the lexical relationship between the two comparands.
            The value is negative if <paramref name="a" /> is less than <paramref name="b" />, 0 if the two comparands are equal,
            and positive if <paramref name="a" /> is greater than <paramref name="b" />.
          .</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.EndsWith(System.String,System.StringComparison)">
            <summary>Checks if the end of this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> matches the specified <see cref="T:System.String" /> when compared using the specified <paramref name="comparisonType" />.</summary>
            <param name="text">The <see cref="T:System.String" />to compare.</param>
            <param name="comparisonType">One of the enumeration values that specifies the rules to use in the comparison.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="text" /> is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if <paramref name="text" /> matches the end of this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
                <see langword="true" /> if the current object is equal to the other parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)">
            <summary>Determines whether two specified <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> objects have the same value. A parameter specifies the culture, case, and
            sort rules used in the comparison.</summary>
            <param name="a">The first <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare.</param>
            <param name="b">The second <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare.</param>
            <param name="comparisonType">One of the enumeration values that specifies the rules for the comparison.</param>
            <returns>
                <see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Equals(Microsoft.Extensions.Primitives.StringSegment,System.StringComparison)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <param name="comparisonType">One of the enumeration values that specifies the rules to use in the comparison.</param>
            <returns>
                <see langword="true" /> if the current object is equal to the other parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.Object)">
            <param name="obj" />
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.String)">
            <summary>Checks if the specified <see cref="T:System.String" /> is equal to the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
            <param name="text">The <see cref="T:System.String" /> to compare with the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.String" /> is equal to the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Equals(System.String,System.StringComparison)">
            <summary>Checks if the specified <see cref="T:System.String" /> is equal to the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
            <param name="text">The <see cref="T:System.String" /> to compare with the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
            <param name="comparisonType">One of the enumeration values that specifies the rules to use in the comparison.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="text" /> is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.String" /> is equal to the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.GetHashCode" />
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char)">
            <summary>Gets the zero-based index of the first occurrence of the character <paramref name="c" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
            <param name="c">The Unicode character to seek.</param>
            <returns>The zero-based index position of <paramref name="c" /> from the beginning of the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> if that character is found, or -1 if it is not.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char,System.Int32)">
            <summary>Gets the zero-based index of the first occurrence of the character <paramref name="c" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.
            The search starts at <paramref name="start" />.</summary>
            <param name="c">The Unicode character to seek.</param>
            <param name="start">The zero-based index position at which the search starts.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="start" /> is greater than or equal to <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> or less than zero.</exception>
            <returns>The zero-based index position of <paramref name="c" /> from the beginning of the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> if that character is found, or -1 if it is not.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.IndexOf(System.Char,System.Int32,System.Int32)">
            <summary>Gets the zero-based index of the first occurrence of the character <paramref name="c" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.
            The search starts at <paramref name="start" /> and examines a specified number of <paramref name="count" /> character positions.</summary>
            <param name="c">The Unicode character to seek.</param>
            <param name="start">The zero-based index position at which the search starts.</param>
            <param name="count">The number of characters to examine.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="start" /> or <paramref name="count" /> is less than zero, or <paramref name="start" /> + <paramref name="count" /> is
            greater than <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />.</exception>
            <returns>The zero-based index position of <paramref name="c" /> from the beginning of the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> if that character is found, or -1 if it is not.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.IndexOfAny(System.Char[])">
            <summary>Reports the zero-based index of the first occurrence in this instance of any character in a specified array
            of Unicode characters.</summary>
            <param name="anyOf">A Unicode character array containing one or more characters to seek.</param>
            <returns>The zero-based index position of the first occurrence in this instance where any character in <paramref name="anyOf" />
            was found; -1 if no character in <paramref name="anyOf" /> was found.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.IndexOfAny(System.Char[],System.Int32)">
            <summary>Reports the zero-based index of the first occurrence in this instance of any character in a specified array
            of Unicode characters. The search starts at a specified character position.</summary>
            <param name="anyOf">A Unicode character array containing one or more characters to seek.</param>
            <param name="startIndex">The search starting position.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="startIndex" /> is greater than or equal to <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> or less than zero.</exception>
            <returns>The zero-based index position of the first occurrence in this instance where any character in <paramref name="anyOf" />
            was found; -1 if no character in <paramref name="anyOf" /> was found.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.IndexOfAny(System.Char[],System.Int32,System.Int32)">
            <summary>Reports the zero-based index of the first occurrence in this instance of any character in a specified array
            of Unicode characters. The search starts at a specified character position and examines a specified number
            of character positions.</summary>
            <param name="anyOf">A Unicode character array containing one or more characters to seek.</param>
            <param name="startIndex">The search starting position.</param>
            <param name="count">The number of character positions to examine.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="anyOf" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="startIndex" /> or <paramref name="count" /> is less than zero, or <paramref name="startIndex" /> + <paramref name="count" /> is
            greater than <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />.</exception>
            <returns>The zero-based index position of the first occurrence in this instance where any character in <paramref name="anyOf" />
            was found; -1 if no character in <paramref name="anyOf" /> was found.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.IsNullOrEmpty(Microsoft.Extensions.Primitives.StringSegment)">
            <summary>Indicates whether the specified <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> is null or an Empty string.</summary>
            <param name="value">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to test.</param>
            <returns />
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.LastIndexOf(System.Char)">
            <summary>Reports the zero-based index position of the last occurrence of a specified Unicode character within this instance.</summary>
            <param name="value">The Unicode character to seek.</param>
            <returns>The zero-based index position of value if that character is found, or -1 if it is not.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.op_Equality(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)">
            <summary>Checks if two specified <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> have the same value.</summary>
            <param name="left">The first <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare, or <see langword="null" />.</param>
            <param name="right">The second <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare, or <see langword="null" />.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is the same as the value of <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.op_Implicit(Microsoft.Extensions.Primitives.StringSegment)~System.ReadOnlyMemory{System.Char}">
            <summary>Creates a see <see cref="T:System.ReadOnlyMemory`1" /> from the given <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
            <param name="segment">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to convert to a <see cref="T:System.ReadOnlyMemory`1" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.op_Implicit(Microsoft.Extensions.Primitives.StringSegment)~System.ReadOnlySpan{System.Char}">
            <summary>Creates a see <see cref="T:System.ReadOnlySpan`1" /> from the given <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
            <param name="segment">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to convert to a <see cref="T:System.ReadOnlySpan`1" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.op_Implicit(System.String)~Microsoft.Extensions.Primitives.StringSegment">
            <summary>Creates a new <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> from the given <see cref="T:System.String" />.</summary>
            <param name="value">The <see cref="T:System.String" /> to convert to a <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.op_Inequality(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)">
            <summary>Checks if two specified <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> have different values.</summary>
            <param name="left">The first <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare, or <see langword="null" />.</param>
            <param name="right">The second <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to compare, or <see langword="null" />.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is different from the value of <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Split(System.Char[])">
            <summary>Splits a string into <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />s that are based on the characters in an array.</summary>
            <param name="chars">A character array that delimits the substrings in this string, an empty array that
            contains no delimiters, or null.</param>
            <returns>An <see cref="T:Microsoft.Extensions.Primitives.StringTokenizer" /> whose elements contain the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />s from this instance
            that are delimited by one or more characters in <paramref name="chars" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.StartsWith(System.String,System.StringComparison)">
            <summary>Checks if the beginning of this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> matches the specified <see cref="T:System.String" /> when compared using the specified <paramref name="comparisonType" />.</summary>
            <param name="text">The <see cref="T:System.String" />to compare.</param>
            <param name="comparisonType">One of the enumeration values that specifies the rules to use in the comparison.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="text" /> is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if <paramref name="text" /> matches the beginning of this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Subsegment(System.Int32)">
            <summary>Retrieves a <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> that represents a substring from this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.
            The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> starts at the position specified by <paramref name="offset" />.</summary>
            <param name="offset">The zero-based starting character position of a substring in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> is greater than or equal to <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> or less than zero.</exception>
            <returns>A <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> that begins at <paramref name="offset" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />
            whose length is the remainder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Subsegment(System.Int32,System.Int32)">
            <summary>Retrieves a <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> that represents a substring from this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.
            The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> starts at the position specified by <paramref name="offset" /> and has the specified <paramref name="length" />.</summary>
            <param name="offset">The zero-based starting character position of a substring in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
            <param name="length">The number of characters in the substring.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> or <paramref name="length" /> is less than zero, or <paramref name="offset" /> + <paramref name="length" /> is
            greater than <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />.</exception>
            <returns>A <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> that is equivalent to the substring of length <paramref name="length" /> that begins at <paramref name="offset" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Substring(System.Int32)">
            <summary>Retrieves a substring from this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.
            The substring starts at the position specified by <paramref name="offset" /> and has the remaining length.</summary>
            <param name="offset">The zero-based starting character position of a substring in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> is greater than or equal to <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> or less than zero.</exception>
            <returns>A <see cref="T:System.String" /> that is equivalent to the substring of remaining length that begins at
            <paramref name="offset" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Substring(System.Int32,System.Int32)">
            <summary>Retrieves a substring from this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.
            The substring starts at the position specified by <paramref name="offset" /> and has the specified <paramref name="length" />.</summary>
            <param name="offset">The zero-based starting character position of a substring in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</param>
            <param name="length">The number of characters in the substring.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> or <paramref name="length" /> is less than zero, or <paramref name="offset" /> + <paramref name="length" /> is
            greater than <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" />.</exception>
            <returns>A <see cref="T:System.String" /> that is equivalent to the substring of length <paramref name="length" /> that begins at
            <paramref name="offset" /> in this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.ToString">
            <summary>Returns the <see cref="T:System.String" /> represented by this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> or <see cref="F:System.String.Empty" /> if the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> does not contain a value.</summary>
            <returns>The <see cref="T:System.String" /> represented by this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> or <see cref="F:System.String.Empty" /> if the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> does not contain a value.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.Trim">
            <summary>Removes all leading and trailing whitespaces.</summary>
            <returns>The trimmed <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.TrimEnd">
            <summary>Removes all trailing whitespaces.</summary>
            <returns>The trimmed <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegment.TrimStart">
            <summary>Removes all leading whitespaces.</summary>
            <returns>The trimmed <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringSegment.Buffer">
            <summary>Gets the <see cref="T:System.String" /> buffer for this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
            <returns>The <see cref="T:System.String" /> buffer for this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringSegment.HasValue">
            <summary>Gets whether this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> contains a valid value.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> contains a valid value; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringSegment.Item(System.Int32)">
            <summary>Gets the <see cref="T:System.Char" /> at a specified position in the current <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
            <param name="index">The offset into the <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /></param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is greater than or equal to <see cref="P:Microsoft.Extensions.Primitives.StringSegment.Length" /> or less than zero.</exception>
            <returns>The <see cref="T:System.Char" /> at a specified position.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringSegment.Length">
            <summary>Gets the length of this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
            <returns>The length of this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringSegment.Offset">
            <summary>Gets the offset within the buffer for this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</summary>
            <returns>The offset within the buffer for this <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringSegment.Value">
            <summary>Gets the value of this segment as a <see cref="T:System.String" />.</summary>
            <returns>The value of this segment as a <see cref="T:System.String" />.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Primitives.StringSegmentComparer" />
        <member name="M:Microsoft.Extensions.Primitives.StringSegmentComparer.Compare(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)">
            <summary>Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegmentComparer.Equals(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment)">
            <summary>Determines whether the specified objects are equal.</summary>
            <param name="x">The first object of type <paramref name="T" /> to compare.</param>
            <param name="y">The second object of type <paramref name="T" /> to compare.</param>
            <returns>
                <see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringSegmentComparer.GetHashCode(Microsoft.Extensions.Primitives.StringSegment)">
            <summary>Returns a hash code for the specified object.</summary>
            <param name="obj">The <see cref="T:System.Object" /> for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringSegmentComparer.Ordinal" />
        <member name="P:Microsoft.Extensions.Primitives.StringSegmentComparer.OrdinalIgnoreCase" />
        <member name="T:Microsoft.Extensions.Primitives.StringTokenizer">
            <summary>Tokenizes a <see cref="T:System.String" /> into <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />s.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringTokenizer.#ctor(Microsoft.Extensions.Primitives.StringSegment,System.Char[])">
            <summary>Initializes a new instance of <see cref="T:Microsoft.Extensions.Primitives.StringTokenizer" />.</summary>
            <param name="value">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> to tokenize.</param>
            <param name="separators">The characters to tokenize by.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringTokenizer.#ctor(System.String,System.Char[])">
            <summary>Initializes a new instance of <see cref="T:Microsoft.Extensions.Primitives.StringTokenizer" />.</summary>
            <param name="value">The <see cref="T:System.String" /> to tokenize.</param>
            <param name="separators">The characters to tokenize by.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringTokenizer.GetEnumerator" />
        <member name="M:Microsoft.Extensions.Primitives.StringTokenizer.System#Collections#Generic#IEnumerable{Microsoft#Extensions#Primitives#StringSegment}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringTokenizer.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator" />
        <member name="M:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.#ctor(Microsoft.Extensions.Primitives.StringTokenizer@)">
            <param name="tokenizer" />
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.MoveNext">
            <summary>Advances the enumerator to the next element of the collection.</summary>
            <returns>
                <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Reset">
            <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringTokenizer.Enumerator.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Primitives.StringValues">
            <summary>Represents zero/null, one, or many strings in an efficient way.</summary>
        </member>
        <member name="F:Microsoft.Extensions.Primitives.StringValues.Empty">
            <summary>A readonly instance of the <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> struct whose value is an empty string array.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> structure using the specified string.</summary>
            <param name="value">A string value or <see langword="null" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.#ctor(System.String[])">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> structure using the specified array of strings.</summary>
            <param name="values">A string array.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Concat(Microsoft.Extensions.Primitives.StringValues,Microsoft.Extensions.Primitives.StringValues)">
            <summary>Concatenates two specified instances of <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</summary>
            <param name="values1">The first <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to concatenate.</param>
            <param name="values2">The second <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to concatenate.</param>
            <returns>The concatenation of <paramref name="values1" /> and <paramref name="values2" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Concat(Microsoft.Extensions.Primitives.StringValues@,System.String)">
            <summary>Concatenates specified instance of <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> with specified <see cref="T:System.String" />.</summary>
            <param name="values">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to concatenate.</param>
            <param name="value">The string to concatenate.</param>
            <returns>The concatenation of <paramref name="values" /> and <paramref name="value" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Concat(System.String,Microsoft.Extensions.Primitives.StringValues@)">
            <summary>Concatenates specified instance of <see cref="T:System.String" /> with specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</summary>
            <param name="value">The string to concatenate.</param>
            <param name="values">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to concatenate.</param>
            <returns>The concatenation of <paramref name="values" /> and <paramref name="values" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Equals(Microsoft.Extensions.Primitives.StringValues)">
            <summary>Determines whether this instance and another specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> object have the same values.</summary>
            <param name="other">The string to compare to this instance.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="other" /> is the same as the value of this instance; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Equals(Microsoft.Extensions.Primitives.StringValues,Microsoft.Extensions.Primitives.StringValues)">
            <summary>Determines whether two specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> objects have the same values in the same order.</summary>
            <param name="left">The first <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <param name="right">The second <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is the same as the value of <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Equals(Microsoft.Extensions.Primitives.StringValues,System.String)">
            <summary>Determines whether the specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> and <see cref="T:System.String" /> objects have the same values.</summary>
            <param name="left">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <param name="right">The <see cref="T:System.String" /> to compare.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is the same as the value of <paramref name="right" />; otherwise, <see langword="false" />. If <paramref name="right" /> is <see langword="null" />, the method returns <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Equals(Microsoft.Extensions.Primitives.StringValues,System.String[])">
            <summary>Determines whether the specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> and string array objects have the same values.</summary>
            <param name="left">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <param name="right">The string array to compare.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is the same as the value of <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Equals(System.Object)">
            <summary>Determines whether this instance and a specified object have the same value.</summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>
                <see langword="true" /> if the current object is equal to <paramref name="obj" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Equals(System.String)">
            <summary>Determines whether this instance and a specified string have the same value.</summary>
            <param name="other">The string to compare to this instance.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="other" /> is the same as this instance; otherwise, <see langword="false" />. If <paramref name="other" /> is <see langword="null" />, returns <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Equals(System.String,Microsoft.Extensions.Primitives.StringValues)">
            <summary>Determines whether the specified <see cref="T:System.String" /> and <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> objects have the same values.</summary>
            <param name="left">The string to compare.</param>
            <param name="right">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is the same as the value of <paramref name="right" />; otherwise, <see langword="false" />. If <paramref name="left" /> is <see langword="null" />, the method returns <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Equals(System.String[])">
            <summary>Determines whether this instance and a specified string array have the same values.</summary>
            <param name="other">The string array to compare to this instance.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="other" /> is the same as this instance; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Equals(System.String[],Microsoft.Extensions.Primitives.StringValues)">
            <summary>Determines whether the specified string array and <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> objects have the same values.</summary>
            <param name="left">The string array to compare.</param>
            <param name="right">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is the same as the value of <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.GetEnumerator">
            <summary>Retrieves an object that can iterate through the individual strings in this <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</summary>
            <returns>An enumerator that can be used to iterate through the <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.GetHashCode" />
        <member name="M:Microsoft.Extensions.Primitives.StringValues.IsNullOrEmpty(Microsoft.Extensions.Primitives.StringValues)">
            <summary>Indicates whether the specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> contains no string values.</summary>
            <param name="value">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to test.</param>
            <returns>
                <see langword="true" /> if <paramref name="value">value</paramref> contains a single <see langword="null" /> string or empty array; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(Microsoft.Extensions.Primitives.StringValues,Microsoft.Extensions.Primitives.StringValues)">
            <summary>Determines whether two specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> have the same values.</summary>
            <param name="left">The first <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <param name="right">The second <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is the same as the value of <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(Microsoft.Extensions.Primitives.StringValues,System.Object)">
            <summary>Determines whether the specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> and <see cref="T:System.Object" />, which must be a  <see cref="T:Microsoft.Extensions.Primitives.StringValues" />, <see cref="T:System.String" />, or array of <see cref="T:System.String" />, have the same value.</summary>
            <param name="left">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <param name="right">The <see cref="T:System.Object" /> to compare.</param>
            <returns>
                <see langword="true" /> if the <paramref name="left" /> object is equal to the <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(Microsoft.Extensions.Primitives.StringValues,System.String)">
            <param name="left" />
            <param name="right" />
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(Microsoft.Extensions.Primitives.StringValues,System.String[])">
            <param name="left" />
            <param name="right" />
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(System.Object,Microsoft.Extensions.Primitives.StringValues)">
            <summary>Determines whether the specified <see cref="T:System.Object" />, which must be a  <see cref="T:Microsoft.Extensions.Primitives.StringValues" />, <see cref="T:System.String" />, or array of <see cref="T:System.String" />, and specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" />,  have the same value.</summary>
            <param name="left">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <param name="right">The <see cref="T:System.Object" /> to compare.</param>
            <returns>
                <see langword="true" /> if the <paramref name="left" /> object is equal to the <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(System.String,Microsoft.Extensions.Primitives.StringValues)">
            <param name="left" />
            <param name="right" />
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Equality(System.String[],Microsoft.Extensions.Primitives.StringValues)">
            <param name="left" />
            <param name="right" />
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Implicit(Microsoft.Extensions.Primitives.StringValues)~System.String">
            <summary>Defines an implicit conversion of a given <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to a string, with multiple values joined as a comma separated string.</summary>
            <param name="values">A <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to implicitly convert.</param>
            <returns>Returns <see langword="null" /> where <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> has been initialized from an empty string array or is <see cref="P:Microsoft.Extensions.Primitives.StringValues.Empty" />. Otherwise, it returns the implicit conversion of <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to a string.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Implicit(Microsoft.Extensions.Primitives.StringValues)~System.String[]">
            <summary>Defines an implicit conversion of a given <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to a string array.</summary>
            <param name="value">A <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to implicitly convert.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Implicit(System.String)~Microsoft.Extensions.Primitives.StringValues">
            <summary>Defines an implicit conversion of a given string to a <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</summary>
            <param name="value">A string to implicitly convert.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Implicit(System.String[])~Microsoft.Extensions.Primitives.StringValues">
            <summary>Defines an implicit conversion of a given string array to a <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</summary>
            <param name="values">A string array to implicitly convert.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(Microsoft.Extensions.Primitives.StringValues,Microsoft.Extensions.Primitives.StringValues)">
            <summary>Determines whether two specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> have different values.</summary>
            <param name="left">The first <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <param name="right">The second <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is different to the value of <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(Microsoft.Extensions.Primitives.StringValues,System.Object)">
            <summary>Determines whether the specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> and <see cref="T:System.Object" />, which must be a  <see cref="T:Microsoft.Extensions.Primitives.StringValues" />, <see cref="T:System.String" />, or array of <see cref="T:System.String" />, have different values.</summary>
            <param name="left">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <param name="right">The <see cref="T:System.Object" /> to compare.</param>
            <returns>
                <see langword="true" /> if the <paramref name="left" /> object is equal to the <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(Microsoft.Extensions.Primitives.StringValues,System.String)">
            <summary>Determines whether the specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> and <see cref="T:System.String" /> objects have different values.</summary>
            <param name="left">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <param name="right">The <see cref="T:System.String" /> to compare.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is different to the value of <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(Microsoft.Extensions.Primitives.StringValues,System.String[])">
            <summary>Determines whether the specified <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> and string array have different values.</summary>
            <param name="left">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <param name="right">The string array to compare.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is different to the value of <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(System.Object,Microsoft.Extensions.Primitives.StringValues)">
            <summary>Determines whether the specified <see cref="T:System.Object" /> and <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> object have the same values.</summary>
            <param name="left">The <see cref="T:System.Object" /> to compare.</param>
            <param name="right">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <returns>
                <see langword="true" /> if the <paramref name="left" /> object is equal to the <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(System.String,Microsoft.Extensions.Primitives.StringValues)">
            <summary>Determines whether the specified <see cref="T:System.String" /> and <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> objects have different values.</summary>
            <param name="left">The string to compare.</param>
            <param name="right">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is different to the value of <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.op_Inequality(System.String[],Microsoft.Extensions.Primitives.StringValues)">
            <summary>Determines whether the specified string array and <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> have different values.</summary>
            <param name="left">The string array to compare.</param>
            <param name="right">The <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> to compare.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="left" /> is different to the value of <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#ICollection{System#String}#Add(System.String)">
            <summary>Adds an item to the collection.</summary>
            <param name="item">The object to add to the collection.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#ICollection{System#String}#Clear">
            <summary>Removes all items from the collection.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#ICollection{System#String}#Contains(System.String)">
            <summary>Determines whether a string is in the <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</summary>
            <param name="item">The string to locate in the <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</param>
            <returns>
                <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:Microsoft.Extensions.Primitives.StringValues" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#ICollection{System#String}#CopyTo(System.String[],System.Int32)">
            <summary>Copies the entire <see cref="T:Microsoft.Extensions.Primitives.StringValues" />to a string array, starting at the specified index of the target array.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in the destination array at which copying begins.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#ICollection{System#String}#Remove(System.String)">
            <summary>Removes the first occurrence of a specific object from the collection.</summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>
                <see langword="true" /> if <paramref name="item" /> was successfully removed from the collection; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original collection.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#IEnumerable{System#String}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#IList{System#String}#IndexOf(System.String)">
            <summary>Returns the zero-based index of the first occurrence of an item in the <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</summary>
            <param name="item">The string to locate in the <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</param>
            <returns>the zero-based index of the first occurrence of <paramref name="item" /> within the <see cref="T:Microsoft.Extensions.Primitives.StringValues" />, if found; otherwise, –1.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#IList{System#String}#Insert(System.Int32,System.String)">
            <summary>Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.</summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#IList{System#String}#RemoveAt(System.Int32)">
            <summary>Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.</summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.ToArray">
            <summary>Creates a string array from the current <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> object.</summary>
            <returns>A string array represented by this instance.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.ToString">
            <summary>Converts the value of the current <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> object to its equivalent string representation, with multiple values joined as a comma separated string.</summary>
            <returns>A string representation of the value of the current <see cref="T:Microsoft.Extensions.Primitives.StringValues" /> object.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringValues.Count">
            <summary>Gets the number of string elements contained in this <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</summary>
            <returns>The number of string elements contained in this <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringValues.Item(System.Int32)">
            <summary>Gets the string at index.</summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The string at the specified index.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#ICollection{System#String}#IsReadOnly">
            <summary>Gets a value indicating whether the collection is read-only.</summary>
            <returns>
                <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringValues.System#Collections#Generic#IList{System#String}#Item(System.Int32)">
            <summary>Gets the <see cref="T:System.String" /> at index.</summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The string at the specified index.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Primitives.StringValues.Enumerator">
            <summary>Enumerates the string values of a <see cref="T:Microsoft.Extensions.Primitives.StringValues" />.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Enumerator.#ctor(Microsoft.Extensions.Primitives.StringValues@)">
            <param name="values" />
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Enumerator.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Enumerator.MoveNext">
            <summary>Advances the enumerator to the next element of the collection.</summary>
            <returns>
                <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Primitives.StringValues.Enumerator.System#Collections#IEnumerator#Reset">
            <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringValues.Enumerator.Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="P:Microsoft.Extensions.Primitives.StringValues.Enumerator.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="T:Microsoft.Win32.Registry">
            <summary>Provides <see cref="T:Microsoft.Win32.RegistryKey" /> objects that represent the root keys in the Windows registry, and <see langword="static" /> methods to access key/value pairs.</summary>
        </member>
        <member name="F:Microsoft.Win32.Registry.ClassesRoot">
            <summary>Defines the types (or classes) of documents and the properties associated with those types. This field reads the Windows registry base key HKEY_CLASSES_ROOT.</summary>
        </member>
        <member name="F:Microsoft.Win32.Registry.CurrentConfig">
            <summary>Contains configuration information pertaining to the hardware that is not specific to the user. This field reads the Windows registry base key HKEY_CURRENT_CONFIG.</summary>
        </member>
        <member name="F:Microsoft.Win32.Registry.CurrentUser">
            <summary>Contains information about the current user preferences. This field reads the Windows registry base key HKEY_CURRENT_USER.</summary>
        </member>
        <member name="F:Microsoft.Win32.Registry.LocalMachine">
            <summary>Contains the configuration data for the local machine. This field reads the Windows registry base key HKEY_LOCAL_MACHINE.</summary>
        </member>
        <member name="F:Microsoft.Win32.Registry.PerformanceData">
            <summary>Contains performance information for software components. This field reads the Windows registry base key HKEY_PERFORMANCE_DATA.</summary>
        </member>
        <member name="F:Microsoft.Win32.Registry.Users">
            <summary>Contains information about the default user configuration. This field reads the Windows registry base key HKEY_USERS.</summary>
        </member>
        <member name="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)">
            <summary>Retrieves the value associated with the specified name, in the specified registry key. If the name is not found in the specified key, returns a default value that you provide, or <see langword="null" /> if the specified key does not exist.</summary>
            <param name="keyName">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</param>
            <param name="valueName">The name of the name/value pair.</param>
            <param name="defaultValue">The value to return if <paramref name="valueName" /> does not exist.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key.</exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="keyName" /> does not begin with a valid registry root.</exception>
            <returns>
                <see langword="null" /> if the subkey specified by <paramref name="keyName" /> does not exist; otherwise, the value associated with <paramref name="valueName" />, or <paramref name="defaultValue" /> if <paramref name="valueName" /> is not found.</returns>
        </member>
        <member name="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)">
            <summary>Sets the specified name/value pair on the specified registry key. If the specified key does not exist, it is created.</summary>
            <param name="keyName">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</param>
            <param name="valueName">The name of the name/value pair.</param>
            <param name="value">The value to be stored.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="keyName" /> does not begin with a valid registry root.  
  
 -or-  
  
 <paramref name="keyName" /> is longer than the maximum length allowed (255 characters).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys.</exception>
        </member>
        <member name="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
            <summary>Sets the name/value pair on the specified registry key, using the specified registry data type. If the specified key does not exist, it is created.</summary>
            <param name="keyName">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</param>
            <param name="valueName">The name of the name/value pair.</param>
            <param name="value">The value to be stored.</param>
            <param name="valueKind">The registry data type to use when storing the data.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="keyName" /> does not begin with a valid registry root.  
  
 -or-  
  
 <paramref name="keyName" /> is longer than the maximum length allowed (255 characters).  
  
 -or-  
  
 The type of <paramref name="value" /> did not match the registry data type specified by <paramref name="valueKind" />, therefore the data could not be converted properly.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node, or the key has not been opened with write access.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys.</exception>
        </member>
        <member name="T:Microsoft.Win32.RegistryHive">
            <summary>Represents the possible values for a top-level node on a foreign machine.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryHive.ClassesRoot">
            <summary>Represents the HKEY_CLASSES_ROOT base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryHive.CurrentConfig">
            <summary>Represents the HKEY_CURRENT_CONFIG base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryHive.CurrentUser">
            <summary>Represents the HKEY_CURRENT_USER base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryHive.LocalMachine">
            <summary>Represents the HKEY_LOCAL_MACHINE base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryHive.PerformanceData">
            <summary>Represents the HKEY_PERFORMANCE_DATA base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryHive.Users">
            <summary>Represents the HKEY_USERS base key on another computer. This value can be passed to the <see cref="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)" /> method, to open this node remotely.</summary>
        </member>
        <member name="T:Microsoft.Win32.RegistryKey">
            <summary>Represents a key-level node in the Windows registry. This class is a registry encapsulation.</summary>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.Close">
            <summary>Closes the key and flushes it to disk if its contents have been modified.</summary>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String)">
            <summary>Creates a new subkey or opens an existing subkey for write access.</summary>
            <param name="subkey">The name or path of the subkey to create or open. This string is not case-sensitive.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="subkey" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> on which this method is being invoked is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key , or the user does not have the necessary access rights.</exception>
            <exception cref="T:System.IO.IOException">The nesting level exceeds 510.  
  
 -or-  
  
 A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</exception>
            <returns>The newly created subkey, or <see langword="null" /> if the operation failed. If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)">
            <summary>Creates a new subkey or opens an existing subkey for write access, using the specified permission check option.</summary>
            <param name="subkey">The name or path of the subkey to create or open. This string is not case-sensitive.</param>
            <param name="permissionCheck">One of the enumeration values that specifies whether the key is opened for read or read/write access.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="subkey" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="permissionCheck" /> contains an invalid value.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> on which this method is being invoked is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</exception>
            <exception cref="T:System.IO.IOException">The nesting level exceeds 510.  
  
 -or-  
  
 A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</exception>
            <returns>The newly created subkey, or <see langword="null" /> if the operation failed. If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)">
            <summary>Creates a subkey or opens a subkey for write access, using the specified permission check and registry options.</summary>
            <param name="subkey">The name or path of the subkey to create or open.</param>
            <param name="permissionCheck">One of the enumeration values that specifies whether the key is opened for read or read/write access.</param>
            <param name="registryOptions">The registry option to use; for example, that creates a volatile key.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="subkey" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object cannot be written to; for example, it was not opened as a writable key, or the user does not have the required access rights.</exception>
            <exception cref="T:System.IO.IOException">The nesting level exceeds 510.  
  
 -or-  
  
 A system error occurred, such as deletion of the key or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key.</exception>
            <returns>The newly created subkey, or <see langword="null" /> if the operation failed.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)">
            <summary>Creates a subkey or opens a subkey for write access, using the specified permission check option, registry option, and registry security.</summary>
            <param name="subkey">The name or path of the subkey to create or open.</param>
            <param name="permissionCheck">One of the enumeration values that specifies whether the key is opened for read or read/write access.</param>
            <param name="registryOptions">The registry option to use.</param>
            <param name="registrySecurity">The access control security for the new subkey.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="subkey" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object is closed. Closed keys cannot be accessed.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object cannot be written to; for example, it was not opened as a writable key, or the user does not have the required access rights.</exception>
            <exception cref="T:System.IO.IOException">The nesting level exceeds 510.  
  
 -or-  
  
 A system error occurred, such as deletion of the key or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key.</exception>
            <returns>The newly created subkey, or <see langword="null" /> if the operation failed.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)">
            <summary>Creates a new subkey or opens an existing subkey for write access, using the specified permission check option and registry security.</summary>
            <param name="subkey">The name or path of the subkey to create or open. This string is not case-sensitive.</param>
            <param name="permissionCheck">One of the enumeration values that specifies whether the key is opened for read or read/write access.</param>
            <param name="registrySecurity">The access control security for the new key.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="subkey" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="permissionCheck" /> contains an invalid value.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> on which this method is being invoked is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</exception>
            <exception cref="T:System.IO.IOException">The nesting level exceeds 510.  
  
 -or-  
  
 A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</exception>
            <returns>The newly created subkey, or <see langword="null" /> if the operation failed. If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)">
            <summary>Creates a new subkey or opens an existing subkey with the specified access. Available starting with .NET Framework 4.6.</summary>
            <param name="subkey">The name or path of the subkey to create or open. This string is not case-sensitive.</param>
            <param name="writable">
                <see langword="true" /> to indicate the new subkey is writable; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="subkey" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</exception>
            <exception cref="T:System.IO.IOException">The nesting level exceeds 510.  
  
 -or-  
  
 A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</exception>
            <returns>The newly created subkey, or <see langword="null" /> if the operation failed. If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)">
            <summary>Creates a new subkey or opens an existing subkey with the specified access. Available starting with .NET Framework 4.6.</summary>
            <param name="subkey">The name or path of the subkey to create or open. This string is not case-sensitive.</param>
            <param name="writable">
                <see langword="true" /> to indicate the new subkey is writable; otherwise, <see langword="false" />.</param>
            <param name="options">The registry option to use.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="subkey" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="options" /> does not specify a valid Option</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</exception>
            <exception cref="T:System.IO.IOException">The nesting level exceeds 510.  
  
 -or-  
  
 A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Microsoft.Win32.Registry.LocalMachine" /> root.</exception>
            <returns>The newly created subkey, or <see langword="null" /> if the operation failed. If a zero-length string is specified for <paramref name="subkey" />, the current <see cref="T:Microsoft.Win32.RegistryKey" /> object is returned.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)">
            <summary>Deletes the specified subkey.</summary>
            <param name="subkey">The name of the subkey to delete. This string is not case-sensitive.</param>
            <exception cref="T:System.InvalidOperationException">The <paramref name="subkey" /> has child subkeys</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="subkey" /> parameter does not specify a valid registry key</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="subkey" /> is <see langword="null" /></exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the key.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)">
            <summary>Deletes the specified subkey, and specifies whether an exception is raised if the subkey is not found.</summary>
            <param name="subkey">The name of the subkey to delete. This string is not case-sensitive.</param>
            <param name="throwOnMissingSubKey">Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is <see langword="true" /> and the specified subkey does not exist, an exception is raised. If this argument is <see langword="false" /> and the specified subkey does not exist, no action is taken.</param>
            <exception cref="T:System.InvalidOperationException">
                <paramref name="subkey" /> has child subkeys.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="subkey" /> does not specify a valid registry key, and <paramref name="throwOnMissingSubKey" /> is <see langword="true" />.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="subkey" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the key.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)">
            <summary>Deletes a subkey and any child subkeys recursively.</summary>
            <param name="subkey">The subkey to delete. This string is not case-sensitive.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="subkey" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Deletion of a root hive is attempted.  
  
 -or-  
  
 <paramref name="subkey" /> does not specify a valid registry subkey.</exception>
            <exception cref="T:System.IO.IOException">An I/O error has occurred.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the key.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)">
            <summary>Deletes the specified subkey and any child subkeys recursively, and specifies whether an exception is raised if the subkey is not found.</summary>
            <param name="subkey">The name of the subkey to delete. This string is not case-sensitive.</param>
            <param name="throwOnMissingSubKey">Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is <see langword="true" /> and the specified subkey does not exist, an exception is raised. If this argument is <see langword="false" /> and the specified subkey does not exist, no action is taken.</param>
            <exception cref="T:System.ArgumentException">An attempt was made to delete the root hive of the tree.  
  
 -or-  
  
 <paramref name="subkey" /> does not specify a valid registry subkey, and <paramref name="throwOnMissingSubKey" /> is <see langword="true" />.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="subkey" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the key.</exception>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String)">
            <summary>Deletes the specified value from this key.</summary>
            <param name="name">The name of the value to delete.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="name" /> is not a valid reference to a value.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the value.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is read-only.</exception>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)">
            <summary>Deletes the specified value from this key, and specifies whether an exception is raised if the value is not found.</summary>
            <param name="name">The name of the value to delete.</param>
            <param name="throwOnMissingValue">Indicates whether an exception should be raised if the specified value cannot be found. If this argument is <see langword="true" /> and the specified value does not exist, an exception is raised. If this argument is <see langword="false" /> and the specified value does not exist, no action is taken.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="name" /> is not a valid reference to a value and <paramref name="throwOnMissingValue" /> is <see langword="true" />.  
  
 -or-  
  
 <paramref name="name" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the value.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is read-only.</exception>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.Dispose">
            <summary>Releases all resources used by the current instance of the <see cref="T:Microsoft.Win32.RegistryKey" /> class.</summary>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.Flush">
            <summary>Writes all the attributes of the specified open registry key into the registry.</summary>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)">
            <summary>Creates a registry key from a specified handle.</summary>
            <param name="handle">The handle to the registry key.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="handle" /> is <see langword="null" />.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to perform this action.</exception>
            <returns>A registry key.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)">
            <summary>Creates a registry key from a specified handle and registry view setting.</summary>
            <param name="handle">The handle to the registry key.</param>
            <param name="view">The registry view to use.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="view" /> is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="handle" /> is <see langword="null" />.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to perform this action.</exception>
            <returns>A registry key.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.GetAccessControl">
            <summary>Returns the access control security for the current registry key.</summary>
            <exception cref="T:System.Security.SecurityException">The user does not have the necessary permissions.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.InvalidOperationException">The current key has been deleted.</exception>
            <returns>An object that describes the access control permissions on the registry key represented by the current <see cref="T:Microsoft.Win32.RegistryKey" />.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
            <summary>Returns the specified sections of the access control security for the current registry key.</summary>
            <param name="includeSections">A bitwise combination of enumeration values that specifies the type of security information to get.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the necessary permissions.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.InvalidOperationException">The current key has been deleted.</exception>
            <returns>An object that describes the access control permissions on the registry key represented by the current <see cref="T:Microsoft.Win32.RegistryKey" />.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.GetSubKeyNames">
            <summary>Retrieves an array of strings that contains all the subkey names.</summary>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the key.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <exception cref="T:System.IO.IOException">A system error occurred, for example the current key has been deleted.</exception>
            <returns>An array of strings that contains the names of the subkeys for the current key.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.GetValue(System.String)">
            <summary>Retrieves the value associated with the specified name. Returns <see langword="null" /> if the name/value pair does not exist in the registry.</summary>
            <param name="name">The name of the value to retrieve. This string is not case-sensitive.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <returns>The value associated with <paramref name="name" />, or <see langword="null" /> if <paramref name="name" /> is not found.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)">
            <summary>Retrieves the value associated with the specified name. If the name is not found, returns the default value that you provide.</summary>
            <param name="name">The name of the value to retrieve. This string is not case-sensitive.</param>
            <param name="defaultValue">The value to return if <paramref name="name" /> does not exist.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <returns>The value associated with <paramref name="name" />, with any embedded environment variables left unexpanded, or <paramref name="defaultValue" /> if <paramref name="name" /> is not found.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)">
            <summary>Retrieves the value associated with the specified name and retrieval options. If the name is not found, returns the default value that you provide.</summary>
            <param name="name">The name of the value to retrieve. This string is not case-sensitive.</param>
            <param name="defaultValue">The value to return if <paramref name="name" /> does not exist.</param>
            <param name="options">One of the enumeration values that specifies optional processing of the retrieved value.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="options" /> is not a valid <see cref="T:Microsoft.Win32.RegistryValueOptions" /> value; for example, an invalid value is cast to <see cref="T:Microsoft.Win32.RegistryValueOptions" />.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <returns>The value associated with <paramref name="name" />, processed according to the specified <paramref name="options" />, or <paramref name="defaultValue" /> if <paramref name="name" /> is not found.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.GetValueKind(System.String)">
            <summary>Retrieves the registry data type of the value associated with the specified name.</summary>
            <param name="name">The name of the value whose registry data type is to be retrieved. This string is not case-sensitive.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.IO.IOException">The subkey that contains the specified value does not exist.  
  
 -or-  
  
 The name/value pair specified by <paramref name="name" /> does not exist.  
  
 This exception is not thrown on Windows 95, Windows 98, or Windows Millennium Edition.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <returns>The registry data type of the value associated with <paramref name="name" />.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.GetValueNames">
            <summary>Retrieves an array of strings that contains all the value names associated with this key.</summary>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <exception cref="T:System.IO.IOException">A system error occurred; for example, the current key has been deleted.</exception>
            <returns>An array of strings that contains the value names for the current key.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)">
            <summary>Opens a new <see cref="T:Microsoft.Win32.RegistryKey" /> that represents the requested key on the local machine with the specified view.</summary>
            <param name="hKey">The HKEY to open.</param>
            <param name="view">The registry view to use.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="hKey" /> or <paramref name="view" /> is invalid.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to perform this action.</exception>
            <returns>The requested registry key.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)">
            <summary>Opens a new <see cref="T:Microsoft.Win32.RegistryKey" /> that represents the requested key on a remote machine.</summary>
            <param name="hKey">The HKEY to open, from the <see cref="T:Microsoft.Win32.RegistryHive" /> enumeration.</param>
            <param name="machineName">The remote machine.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="hKey" /> is invalid.</exception>
            <exception cref="T:System.IO.IOException">
                <paramref name="machineName" /> is not found.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="machineName" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the proper permissions to perform this operation.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <returns>The requested registry key.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)">
            <summary>Opens a new registry key that represents the requested key on a remote machine with the specified view.</summary>
            <param name="hKey">The HKEY to open from the <see cref="T:Microsoft.Win32.RegistryHive" /> enumeration.</param>
            <param name="machineName">The remote machine.</param>
            <param name="view">The registry view to use.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="hKey" /> or <paramref name="view" /> is invalid.</exception>
            <exception cref="T:System.IO.IOException">
                <paramref name="machineName" /> is not found.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="machineName" /> is <see langword="null" />.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the required permissions to perform this operation.</exception>
            <returns>The requested registry key.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String)">
            <summary>Retrieves a subkey as read-only.</summary>
            <param name="name">The name or path of the subkey to open as read-only.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" /> is <see langword="null" /></exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read the registry key.</exception>
            <returns>The subkey requested, or <see langword="null" /> if the operation failed.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)">
            <summary>Retrieves the specified subkey for read or read/write access.</summary>
            <param name="name">The name or path of the subkey to create or open.</param>
            <param name="permissionCheck">One of the enumeration values that specifies whether the key is opened for read or read/write access.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" /> is <see langword="null" /></exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="permissionCheck" /> contains an invalid value.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read the registry key.</exception>
            <returns>The subkey requested, or <see langword="null" /> if the operation failed.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)">
            <summary>Retrieves the specified subkey for read or read/write access, requesting the specified access rights.</summary>
            <param name="name">The name or path of the subkey to create or open.</param>
            <param name="permissionCheck">One of the enumeration values that specifies whether the key is opened for read or read/write access.</param>
            <param name="rights">A bitwise combination of enumeration values that specifies the desired security access.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" /> is <see langword="null" /></exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="permissionCheck" /> contains an invalid value.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.Security.SecurityException">
                <paramref name="rights" /> includes invalid registry rights values.  
  
 -or-  
  
 The user does not have the requested permissions.</exception>
            <returns>The subkey requested, or <see langword="null" /> if the operation failed.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)">
            <summary>Retrieves a specified subkey, and specifies whether write access is to be applied to the key.</summary>
            <param name="name">Name or path of the subkey to open.</param>
            <param name="writable">Set to <see langword="true" /> if you need write access to the key.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to access the registry key in the specified mode.</exception>
            <returns>The subkey requested, or <see langword="null" /> if the operation failed.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)">
            <summary>Retrieves a subkey with the specified name and access rights. Available starting with .NET Framework 4.6.</summary>
            <param name="name">The name or path of the subkey to create or open.</param>
            <param name="rights">The rights for the registry key.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to access the registry key in the specified mode.</exception>
            <returns>The subkey requested, or <see langword="null" /> if the operation failed.</returns>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)">
            <summary>Applies Windows access control security to an existing registry key.</summary>
            <param name="registrySecurity">The access control security to apply to the current subkey.</param>
            <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a key with access control security, and the caller does not have <see cref="F:System.Security.AccessControl.RegistryRights.ChangePermissions" /> rights.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="registrySecurity" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)">
            <summary>Sets the specified name/value pair.</summary>
            <param name="name">The name of the value to store.</param>
            <param name="value">The data to be stored.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="value" /> is an unsupported data type.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and cannot be written to; for example, the key has not been opened with write access.  
  
 -or-  
  
 The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys.</exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</exception>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
            <summary>Sets the value of a name/value pair in the registry key, using the specified registry data type.</summary>
            <param name="name">The name of the value to be stored.</param>
            <param name="value">The data to be stored.</param>
            <param name="valueKind">The registry data type to use when storing the data.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The type of <paramref name="value" /> did not match the registry data type specified by <paramref name="valueKind" />, therefore the data could not be converted properly.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and cannot be written to; for example, the key has not been opened with write access.  
  
 -or-  
  
 The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys.</exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</exception>
        </member>
        <member name="M:Microsoft.Win32.RegistryKey.ToString">
            <summary>Retrieves a string representation of this key.</summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being accessed is closed (closed keys cannot be accessed).</exception>
            <returns>A string representing the key. If the specified key is invalid (cannot be found) then <see langword="null" /> is returned.</returns>
        </member>
        <member name="P:Microsoft.Win32.RegistryKey.Handle">
            <summary>Gets a <see cref="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" /> object that represents the registry key that the current <see cref="T:Microsoft.Win32.RegistryKey" /> object encapsulates.</summary>
            <exception cref="T:System.ObjectDisposedException">The registry key is closed. Closed keys cannot be accessed.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <exception cref="T:System.IO.IOException">A system error occurred, such as deletion of the current key.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read the key.</exception>
            <returns>The handle to the registry key.</returns>
        </member>
        <member name="P:Microsoft.Win32.RegistryKey.Name">
            <summary>Retrieves the name of the key.</summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is closed (closed keys cannot be accessed).</exception>
            <returns>The absolute (qualified) name of the key.</returns>
        </member>
        <member name="P:Microsoft.Win32.RegistryKey.SubKeyCount">
            <summary>Retrieves the count of subkeys of the current key.</summary>
            <exception cref="T:System.Security.SecurityException">The user does not have read permission for the key.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <exception cref="T:System.IO.IOException">A system error occurred, for example the current key has been deleted.</exception>
            <returns>The number of subkeys of the current key.</returns>
        </member>
        <member name="P:Microsoft.Win32.RegistryKey.ValueCount">
            <summary>Retrieves the count of values in the key.</summary>
            <exception cref="T:System.Security.SecurityException">The user does not have read permission for the key.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Microsoft.Win32.RegistryKey" /> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <exception cref="T:System.IO.IOException">A system error occurred, for example the current key has been deleted.</exception>
            <returns>The number of name/value pairs in the key.</returns>
        </member>
        <member name="P:Microsoft.Win32.RegistryKey.View">
            <summary>Gets the view that was used to create the registry key.</summary>
            <returns>The view that was used to create the registry key.  
  
 -or-  
  
 <see cref="F:Microsoft.Win32.RegistryView.Default" />, if no view was used.</returns>
        </member>
        <member name="T:Microsoft.Win32.RegistryKeyPermissionCheck">
            <summary>Specifies whether security checks are performed when opening registry keys and accessing their name/value pairs.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryKeyPermissionCheck.Default">
            <summary>The registry key inherits the mode of its parent. Security checks are performed when trying to access subkeys or values, unless the parent was opened with <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree" /> or <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree" /> mode.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree">
            <summary>Security checks are not performed when accessing subkeys or values. A security check is performed when trying to open the current key, unless the parent was opened with <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadSubTree" /> or <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree" />.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree">
            <summary>Security checks are not performed when accessing subkeys or values. A security check is performed when trying to open the current key, unless the parent was opened with <see cref="F:Microsoft.Win32.RegistryKeyPermissionCheck.ReadWriteSubTree" />.</summary>
        </member>
        <member name="T:Microsoft.Win32.RegistryOptions">
            <summary>Specifies options to use when creating a registry key.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryOptions.None">
            <summary>A non-volatile key. This is the default.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryOptions.Volatile">
            <summary>A volatile key. The information is stored in memory and is not preserved when the corresponding registry hive is unloaded.</summary>
        </member>
        <member name="T:Microsoft.Win32.RegistryValueKind">
            <summary>Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryValueKind.Binary">
            <summary>Binary data in any form. This value is equivalent to the Windows API registry data type REG_BINARY.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryValueKind.DWord">
            <summary>A 32-bit binary number. This value is equivalent to the Windows API registry data type REG_DWORD.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryValueKind.ExpandString">
            <summary>A null-terminated string that contains unexpanded references to environment variables, such as %PATH%, that are expanded when the value is retrieved. This value is equivalent to the Windows API registry data type REG_EXPAND_SZ.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryValueKind.MultiString">
            <summary>An array of null-terminated strings, terminated by two null characters. This value is equivalent to the Windows API registry data type REG_MULTI_SZ.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryValueKind.None">
            <summary>No data type.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryValueKind.QWord">
            <summary>A 64-bit binary number. This value is equivalent to the Windows API registry data type REG_QWORD.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryValueKind.String">
            <summary>A null-terminated string. This value is equivalent to the Windows API registry data type REG_SZ.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryValueKind.Unknown">
            <summary>An unsupported registry data type. For example, the Microsoft Windows API registry data type REG_RESOURCE_LIST is unsupported. Use this value to specify that the <see cref="M:Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)" /> method should determine the appropriate registry data type when storing a name/value pair.</summary>
        </member>
        <member name="T:Microsoft.Win32.RegistryValueOptions">
            <summary>Specifies optional behavior when retrieving name/value pairs from a registry key.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryValueOptions.DoNotExpandEnvironmentNames">
            <summary>A value of type <see cref="F:Microsoft.Win32.RegistryValueKind.ExpandString" /> is retrieved without expanding its embedded environment variables.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryValueOptions.None">
            <summary>No optional behavior is specified.</summary>
        </member>
        <member name="T:Microsoft.Win32.RegistryView">
            <summary>Specifies which registry view to target on a 64-bit operating system.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryView.Default">
            <summary>The default view.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryView.Registry32">
            <summary>The 32-bit view.</summary>
        </member>
        <member name="F:Microsoft.Win32.RegistryView.Registry64">
            <summary>The 64-bit view.</summary>
        </member>
        <member name="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle">
            <summary>Represents a safe handle to the Windows registry.</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor(System.IntPtr,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeRegistryHandle" /> class.</summary>
            <param name="preexistingHandle">An object that represents the pre-existing handle to use.</param>
            <param name="ownsHandle">
                <see langword="true" /> to reliably release the handle during the finalization phase; <see langword="false" /> to prevent reliable release.</param>
        </member>
        <member name="T:System.Security.AccessControl.RegistryAccessRule">
            <summary>Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</summary>
            <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
            <param name="registryRights">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</param>
            <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="registryRights" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="type" /> specifies an invalid value.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="identity" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="eventRights" /> is zero.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</summary>
            <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
            <param name="registryRights">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the rights allowed or denied.</param>
            <param name="inheritanceFlags">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</param>
            <param name="propagationFlags">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</param>
            <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="registryRights" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="type" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="inheritanceFlags" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="propagationFlags" /> specifies an invalid value.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="identity" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="registryRights" /> is zero.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</summary>
            <param name="identity">The name of the user or group the rule applies to.</param>
            <param name="registryRights">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</param>
            <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="registryRights" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="type" /> specifies an invalid value.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="registryRights" /> is zero.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="identity" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="identity" /> is a zero-length string.  
  
 -or-  
  
 <paramref name="identity" /> is longer than 512 characters.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</summary>
            <param name="identity">The name of the user or group the rule applies to.</param>
            <param name="registryRights">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</param>
            <param name="inheritanceFlags">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</param>
            <param name="propagationFlags">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</param>
            <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="registryRights" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="type" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="inheritanceFlags" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="propagationFlags" /> specifies an invalid value.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="eventRights" /> is zero.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="identity" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="identity" /> is a zero-length string.  
  
 -or-  
  
 <paramref name="identity" /> is longer than 512 characters.</exception>
        </member>
        <member name="P:System.Security.AccessControl.RegistryAccessRule.RegistryRights">
            <summary>Gets the rights allowed or denied by the access rule.</summary>
            <returns>A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied by the access rule.</returns>
        </member>
        <member name="T:System.Security.AccessControl.RegistryAuditRule">
            <summary>Represents a set of access rights to be audited for a user or group. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</summary>
            <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
            <param name="registryRights">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</param>
            <param name="inheritanceFlags">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying whether the audit rule applies to subkeys of the current key.</param>
            <param name="propagationFlags">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that affect the way an inherited audit rule is propagated to subkeys of the current key.</param>
            <param name="flags">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="eventRights" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="flags" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="inheritanceFlags" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="propagationFlags" /> specifies an invalid value.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="identity" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="registryRights" /> is zero.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the name of the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</summary>
            <param name="identity">The name of the user or group the rule applies to.</param>
            <param name="registryRights">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</param>
            <param name="inheritanceFlags">A combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags that specifies whether the audit rule applies to subkeys of the current key.</param>
            <param name="propagationFlags">A combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags that affect the way an inherited audit rule is propagated to subkeys of the current key.</param>
            <param name="flags">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="eventRights" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="flags" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="inheritanceFlags" /> specifies an invalid value.  
  
 -or-  
  
 <paramref name="propagationFlags" /> specifies an invalid value.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="registryRights" /> is zero.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="identity" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="identity" /> is a zero-length string.  
  
 -or-  
  
 <paramref name="identity" /> is longer than 512 characters.</exception>
        </member>
        <member name="P:System.Security.AccessControl.RegistryAuditRule.RegistryRights">
            <summary>Gets the access rights affected by the audit rule.</summary>
            <returns>A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values that indicates the rights affected by the audit rule.</returns>
        </member>
        <member name="T:System.Security.AccessControl.RegistryRights">
            <summary>Specifies the access control rights that can be applied to registry objects.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.ChangePermissions">
            <summary>The right to change the access rules and audit rules associated with a registry key.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.CreateLink">
            <summary>Reserved for system use.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.CreateSubKey">
            <summary>The right to create subkeys of a registry key.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.Delete">
            <summary>The right to delete a registry key.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.EnumerateSubKeys">
            <summary>The right to list the subkeys of a registry key.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.ExecuteKey">
            <summary>Same as <see cref="F:System.Security.AccessControl.RegistryRights.ReadKey" />.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.FullControl">
            <summary>The right to exert full control over a registry key, and to modify its access rules and audit rules.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.Notify">
            <summary>The right to request notification of changes on a registry key.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.QueryValues">
            <summary>The right to query the name/value pairs in a registry key.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.ReadKey">
            <summary>The right to query the name/value pairs in a registry key, to request notification of changes, to enumerate its subkeys, and to read its access rules and audit rules.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.ReadPermissions">
            <summary>The right to open and copy the access rules and audit rules for a registry key.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.SetValue">
            <summary>The right to create, delete, or set name/value pairs in a registry key.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.TakeOwnership">
            <summary>The right to change the owner of a registry key.</summary>
        </member>
        <member name="F:System.Security.AccessControl.RegistryRights.WriteKey">
            <summary>The right to create, delete, and set the name/value pairs in a registry key, to create or delete subkeys, to request notification of changes, to enumerate its subkeys, and to read its access rules and audit rules.</summary>
        </member>
        <member name="T:System.Security.AccessControl.RegistrySecurity">
            <summary>Represents the Windows access control security for a registry key. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class with default values.</summary>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</summary>
            <param name="identityReference">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</param>
            <param name="accessMask">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the access rights to allow or deny, cast to an integer.</param>
            <param name="isInherited">A Boolean value specifying whether the rule is inherited.</param>
            <param name="inheritanceFlags">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying how the rule is inherited by subkeys.</param>
            <param name="propagationFlags">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that modify the way the rule is inherited by subkeys. Meaningless if the value of <paramref name="inheritanceFlags" /> is <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
            <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="identityReference" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="accessMask" /> is zero.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
            <returns>A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> object representing the specified rights for the specified user.</returns>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)">
            <summary>Searches for a matching access control with which the new rule can be merged. If none are found, adds the new rule.</summary>
            <param name="rule">The access control rule to add.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="rule" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)">
            <summary>Searches for an audit rule with which the new rule can be merged. If none are found, adds the new rule.</summary>
            <param name="rule">The audit rule to add. The user specified by this rule determines the search.</param>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, the inheritance and propagation of the rule, and the outcome that triggers the rule.</summary>
            <param name="identityReference">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</param>
            <param name="accessMask">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the access rights to audit, cast to an integer.</param>
            <param name="isInherited">A Boolean value specifying whether the rule is inherited.</param>
            <param name="inheritanceFlags">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying how the rule is inherited by subkeys.</param>
            <param name="propagationFlags">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that modify the way the rule is inherited by subkeys. Meaningless if the value of <paramref name="inheritanceFlags" /> is <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
            <param name="flags">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit successful access, failed access, or both.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="identityReference" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="accessMask" /> is zero.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
            <returns>A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> object representing the specified audit rule for the specified user, with the specified flags. The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</returns>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)">
            <summary>Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified access rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</summary>
            <param name="rule">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="rule" /> is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if a compatible rule is found; otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)">
            <summary>Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</summary>
            <param name="rule">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for. Any rights, inheritance flags, or propagation flags specified by this rule are ignored.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="rule" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)">
            <summary>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</summary>
            <param name="rule">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to remove.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="rule" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)">
            <summary>Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</summary>
            <param name="rule">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with. Specifies the rights to remove from the compatible rule, if found.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="rule" /> is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if a compatible rule is found; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)">
            <summary>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</summary>
            <param name="rule">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> that specifies the user to search for. Any rights, inheritance flags, or propagation flags specified by this rule are ignored.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="rule" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)">
            <summary>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</summary>
            <param name="rule">The <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> to be removed.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="rule" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
            <summary>Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</summary>
            <param name="rule">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to add. The user specified by this rule determines the rules to remove before this rule is added.</param>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)">
            <summary>Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</summary>
            <param name="rule">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to add. The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="rule" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RegistrySecurity.SetAuditRule(System.Security.AccessControl.RegistryAuditRule)">
            <summary>Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</summary>
            <param name="rule">The <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> to add. The user specified by this rule determines the rules to remove before this rule is added.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="rule" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:System.Security.AccessControl.RegistrySecurity.AccessRightType">
            <summary>Gets the enumeration type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent access rights.</summary>
            <returns>A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryRights" /> enumeration.</returns>
        </member>
        <member name="P:System.Security.AccessControl.RegistrySecurity.AccessRuleType">
            <summary>Gets the type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent access rules.</summary>
            <returns>A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</returns>
        </member>
        <member name="P:System.Security.AccessControl.RegistrySecurity.AuditRuleType">
            <summary>Gets the type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent audit rules.</summary>
            <returns>A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class.</returns>
        </member>
        <member name="T:Newtonsoft.Json.JsonException">
            <summary>
            The exception thrown when an error occurs during JSON serialization or deserialization.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.JsonException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonException" /> class.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.JsonException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or <c>null</c> if no inner exception is specified.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is <c>null</c>.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <c>null</c> or <see cref="P:System.Exception.HResult" /> is zero (0).</exception>
        </member>
        <member name="T:Newtonsoft.Json.JsonReaderException">
            <summary>
            The exception thrown when an error occurs while reading JSON text.
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.JsonReaderException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
            <value>The line number indicating where the error occurred.</value>
        </member>
        <member name="P:Newtonsoft.Json.JsonReaderException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
            <value>The line position indicating where the error occurred.</value>
        </member>
        <member name="P:Newtonsoft.Json.JsonReaderException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="M:Newtonsoft.Json.JsonReaderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonReaderException" /> class.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.JsonReaderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonReaderException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonReaderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonReaderException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or <c>null</c> if no inner exception is specified.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonReaderException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is <c>null</c>.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <c>null</c> or <see cref="P:System.Exception.HResult" /> is zero (0).</exception>
        </member>
        <member name="M:Newtonsoft.Json.JsonReaderException.#ctor(System.String,System.String,System.Int32,System.Int32,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonReaderException" /> class
            with a specified error message, JSON path, line number, line position, and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="path">The path to the JSON where the error occurred.</param>
            <param name="lineNumber">The line number indicating where the error occurred.</param>
            <param name="linePosition">The line position indicating where the error occurred.</param>
            <param name="innerException">The exception that is the cause of the current exception, or <c>null</c> if no inner exception is specified.</param>
        </member>
        <member name="T:Newtonsoft.Json.JsonSerializationException">
            <summary>
            The exception thrown when an error occurs during JSON serialization or deserialization.
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.JsonSerializationException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
            <value>The line number indicating where the error occurred.</value>
        </member>
        <member name="P:Newtonsoft.Json.JsonSerializationException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
            <value>The line position indicating where the error occurred.</value>
        </member>
        <member name="P:Newtonsoft.Json.JsonSerializationException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="M:Newtonsoft.Json.JsonSerializationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonSerializationException" /> class.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.JsonSerializationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonSerializationException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonSerializationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonSerializationException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or <c>null</c> if no inner exception is specified.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonSerializationException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is <c>null</c>.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <c>null</c> or <see cref="P:System.Exception.HResult" /> is zero (0).</exception>
        </member>
        <member name="M:Newtonsoft.Json.JsonSerializationException.#ctor(System.String,System.String,System.Int32,System.Int32,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonSerializationException" /> class
            with a specified error message, JSON path, line number, line position, and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="path">The path to the JSON where the error occurred.</param>
            <param name="lineNumber">The line number indicating where the error occurred.</param>
            <param name="linePosition">The line position indicating where the error occurred.</param>
            <param name="innerException">The exception that is the cause of the current exception, or <c>null</c> if no inner exception is specified.</param>
        </member>
        <member name="T:Newtonsoft.Json.JsonToken">
            <summary>
            Specifies the type of JSON token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.None">
            <summary>
            This is returned by the <see cref="T:Newtonsoft.Json.JsonReader" /> if a read method has not been called.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.StartObject">
            <summary>
            An object start token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.StartArray">
            <summary>
            An array start token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.StartConstructor">
            <summary>
            A constructor start token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.PropertyName">
            <summary>
            An object property name.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Comment">
            <summary>
            A comment.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Raw">
            <summary>
            Raw JSON.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Integer">
            <summary>
            An integer.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Float">
            <summary>
            A float.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.String">
            <summary>
            A string.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Boolean">
            <summary>
            A boolean.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Null">
            <summary>
            A null token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Undefined">
            <summary>
            An undefined token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.EndObject">
            <summary>
            An object end token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.EndArray">
            <summary>
            An array end token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.EndConstructor">
            <summary>
            A constructor end token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Date">
            <summary>
            A Date.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.JsonToken.Bytes">
            <summary>
            Byte data.
            </summary>
        </member>
        <member name="T:Newtonsoft.Json.JsonWriterException">
            <summary>
            The exception thrown when an error occurs while writing JSON text.
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.JsonWriterException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="M:Newtonsoft.Json.JsonWriterException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonWriterException" /> class.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.JsonWriterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonWriterException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonWriterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonWriterException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or <c>null</c> if no inner exception is specified.</param>
        </member>
        <member name="M:Newtonsoft.Json.JsonWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonWriterException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is <c>null</c>.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <c>null</c> or <see cref="P:System.Exception.HResult" /> is zero (0).</exception>
        </member>
        <member name="M:Newtonsoft.Json.JsonWriterException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.JsonWriterException" /> class
            with a specified error message, JSON path and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="path">The path to the JSON where the error occurred.</param>
            <param name="innerException">The exception that is the cause of the current exception, or <c>null</c> if no inner exception is specified.</param>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Boolean">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Boolean" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.DateTimeOffset">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.DateTimeOffset" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Boolean}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Int64">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.DateTime}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.DateTimeOffset}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Decimal}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Double}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Char}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Char" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Int32">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Int32" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Int16">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Int16" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.UInt16">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.UInt16" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Char">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Char" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Byte">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Byte" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.SByte">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.SByte" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Int32}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" /> .
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Int16}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int16" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.UInt16}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt16" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Byte}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Byte" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.SByte}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.SByte" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.DateTime">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Int64}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Single}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Decimal">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Decimal" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.UInt32}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.UInt64}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Double">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Double" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Single">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Single" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.String">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.String" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.UInt32">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.UInt32" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.UInt64">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.UInt64" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Byte[]">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Byte" />[].
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Guid">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Guid" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.Guid}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" /> .
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.TimeSpan">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.TimeSpan" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Nullable{System.TimeSpan}">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Newtonsoft.Json.Linq.JToken.op_Explicit(Newtonsoft.Json.Linq.JToken)~System.Uri">
            <summary>
            Performs an explicit conversion from <see cref="T:Newtonsoft.Json.Linq.JToken" /> to <see cref="T:System.Uri" />.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:Newtonsoft.Json.Linq.JTokenType">
            <summary>
            Specifies the type of token.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.None">
            <summary>
            No token type has been set.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Object">
            <summary>
            A JSON object.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Array">
            <summary>
            A JSON array.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Constructor">
            <summary>
            A JSON constructor.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Property">
            <summary>
            A JSON object property.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Comment">
            <summary>
            A comment.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Integer">
            <summary>
            An integer value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Float">
            <summary>
            A float value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.String">
            <summary>
            A string value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Boolean">
            <summary>
            A boolean value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Null">
            <summary>
            A null value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Undefined">
            <summary>
            An undefined value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Date">
            <summary>
            A date value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Raw">
            <summary>
            A raw JSON value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Bytes">
            <summary>
            A collection of bytes value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Guid">
            <summary>
            A Guid value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.Uri">
            <summary>
            A Uri value.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Linq.JTokenType.TimeSpan">
            <summary>
            A TimeSpan value.
            </summary>
        </member>
        <member name="T:Newtonsoft.Json.Schema.JsonSchemaException">
            <summary>
                <para>
            Returns detailed information about the schema exception.
            </para>
                <note type="caution">
            JSON Schema validation has been moved to its own package. See <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="P:Newtonsoft.Json.Schema.JsonSchemaException.LineNumber">
            <summary>
            Gets the line number indicating where the error occurred.
            </summary>
            <value>The line number indicating where the error occurred.</value>
        </member>
        <member name="P:Newtonsoft.Json.Schema.JsonSchemaException.LinePosition">
            <summary>
            Gets the line position indicating where the error occurred.
            </summary>
            <value>The line position indicating where the error occurred.</value>
        </member>
        <member name="P:Newtonsoft.Json.Schema.JsonSchemaException.Path">
            <summary>
            Gets the path to the JSON where the error occurred.
            </summary>
            <value>The path to the JSON where the error occurred.</value>
        </member>
        <member name="M:Newtonsoft.Json.Schema.JsonSchemaException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.Schema.JsonSchemaException" /> class.
            </summary>
        </member>
        <member name="M:Newtonsoft.Json.Schema.JsonSchemaException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.Schema.JsonSchemaException" /> class
            with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Newtonsoft.Json.Schema.JsonSchemaException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.Schema.JsonSchemaException" /> class
            with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or <c>null</c> if no inner exception is specified.</param>
        </member>
        <member name="M:Newtonsoft.Json.Schema.JsonSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.Schema.JsonSchemaException" /> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is <c>null</c>.</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <c>null</c> or <see cref="P:System.Exception.HResult" /> is zero (0).</exception>
        </member>
        <member name="T:Newtonsoft.Json.Schema.JsonSchemaType">
            <summary>
                <para>
            The value types allowed by the <see cref="T:Newtonsoft.Json.Schema.JsonSchema" />.
            </para>
                <note type="caution">
            JSON Schema validation has been moved to its own package. See <see href="https://www.newtonsoft.com/jsonschema">https://www.newtonsoft.com/jsonschema</see> for more details.
            </note>
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.None">
            <summary>
            No type specified.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.String">
            <summary>
            String type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Float">
            <summary>
            Float type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Integer">
            <summary>
            Integer type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Boolean">
            <summary>
            Boolean type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Object">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Array">
            <summary>
            Array type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Null">
            <summary>
            Null type.
            </summary>
        </member>
        <member name="F:Newtonsoft.Json.Schema.JsonSchemaType.Any">
            <summary>
            Any type.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>Specifies that an output will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue" />, the parameter will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>Specifies that an output may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>Specifies that null is allowed as an input even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>
            Specifies that the method will not return if the associated Boolean parameter is passed the specified value.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute" /> class.
            </summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable by diagnostics if the argument to
            the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>Gets the condition parameter value.</summary>
        </member>
        <member name="T:System.Buffers.ArrayPool`1">
            <summary>Provides a resource pool that enables reusing instances of type <see cref="T[]" />.</summary>
            <typeparam name="T">The type of the objects that are in the resource pool.</typeparam>
        </member>
        <member name="M:System.Buffers.ArrayPool`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</summary>
        </member>
        <member name="M:System.Buffers.ArrayPool`1.Create">
            <summary>Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</summary>
            <returns>A new instance of the <see cref="System.Buffers.ArrayPool`1" /> class.</returns>
        </member>
        <member name="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
            <summary>Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class using the specifed configuration.</summary>
            <param name="maxArrayLength">The maximum length of an array instance that may be stored in the pool.</param>
            <param name="maxArraysPerBucket">The maximum number of array instances that may be stored in each bucket in the pool. The pool groups arrays of similar lengths into buckets for faster access.</param>
            <returns>A new instance of the <see cref="System.Buffers.ArrayPool`1" /> class with the specified configuration.</returns>
        </member>
        <member name="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
            <summary>Retrieves a buffer that is at least the requested length.</summary>
            <param name="minimumLength">The minimum length of the array.</param>
            <returns>An array of type <see cref="T[]" /> that is at least <paramref name="minimumLength">minimumLength</paramref> in length.</returns>
        </member>
        <member name="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
            <summary>Returns an array to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method on the same <see cref="T:System.Buffers.ArrayPool`1" /> instance.</summary>
            <param name="array">A buffer to return to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method.</param>
            <param name="clearArray">Indicates whether the contents of the buffer should be cleared before reuse. If <paramref name="clearArray">clearArray</paramref> is set to true, and if the pool will store the buffer to enable subsequent reuse, the <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> method will clear the <paramref name="array">array</paramref> of its contents so that a subsequent caller using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method will not see the content of the previous caller. If <paramref name="clearArray">clearArray</paramref> is set to false or if the pool will release the buffer, the array&amp;#39;s contents are left unchanged.</param>
        </member>
        <member name="P:System.Buffers.ArrayPool`1.Shared">
            <summary>Gets a shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</summary>
            <returns>A shared <see cref="System.Buffers.ArrayPool`1" /> instance.</returns>
        </member>
        <member name="T:System.Configuration.ApplicationScopedSettingAttribute">
            <summary>Specifies that an application settings property has a common value for all users of an application. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ApplicationScopedSettingAttribute" /> class.</summary>
        </member>
        <member name="T:System.Configuration.ApplicationSettingsBase">
            <summary>Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.</summary>
        </member>
        <member name="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
            <summary>Occurs after the value of an application settings property is changed.</summary>
        </member>
        <member name="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
            <summary>Occurs before the value of an application settings property is changed.</summary>
        </member>
        <member name="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
            <summary>Occurs after the application settings are retrieved from storage.</summary>
        </member>
        <member name="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
            <summary>Occurs before values are saved to the data store.</summary>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.#ctor">
            <summary>Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class to its default state.</summary>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
            <summary>Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component.</summary>
            <param name="owner">The component that will act as the owner of the application settings object.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="owner" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
            <summary>Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied owner component and settings key.</summary>
            <param name="owner">The component that will act as the owner of the application settings object.</param>
            <param name="settingsKey">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="owner" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
            <summary>Initializes an instance of the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class using the supplied settings key.</summary>
            <param name="settingsKey">A <see cref="T:System.String" /> that uniquely identifies separate instances of the wrapper class.</param>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
            <summary>Returns the value of the named settings property for the previous version of the same application.</summary>
            <param name="propertyName">A <see cref="T:System.String" /> containing the name of the settings property whose value is to be returned.</param>
            <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">The property does not exist. The property count is zero or the property cannot be found in the data store.</exception>
            <returns>An <see cref="T:System.Object" /> containing the value of the specified <see cref="T:System.Configuration.SettingsProperty" /> if found; otherwise, <see langword="null" />.</returns>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> event.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
            <summary>Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> event.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:System.Configuration.SettingChangingEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
            <summary>Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> event.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>Raises the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> event.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.Reload">
            <summary>Refreshes the application settings property values from persistent storage.</summary>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.Reset">
            <summary>Restores the persisted application settings values to their corresponding default properties.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be parsed.</exception>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.Save">
            <summary>Stores the current values of the application settings properties.</summary>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsBase.Upgrade">
            <summary>Updates application settings to reflect a more recent installation of the application.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be parsed.</exception>
        </member>
        <member name="P:System.Configuration.ApplicationSettingsBase.Context">
            <summary>Gets the application settings context associated with the settings group.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsContext" /> associated with the settings group.</returns>
        </member>
        <member name="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
            <summary>Gets or sets the value of the specified application settings property.</summary>
            <param name="propertyName">A <see cref="T:System.String" /> containing the name of the property to access.</param>
            <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">There are no properties associated with the current wrapper or the specified property could not be found.</exception>
            <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">An attempt was made to set a read-only property.</exception>
            <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">The value supplied is of a type incompatible with the settings property, during a set operation.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be parsed.</exception>
            <returns>If found, the value of the named settings property; otherwise, <see langword="null" />.</returns>
        </member>
        <member name="P:System.Configuration.ApplicationSettingsBase.Properties">
            <summary>Gets the collection of settings properties in the wrapper.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The associated settings provider could not be found or its instantiation failed.</exception>
            <returns>A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing all the <see cref="T:System.Configuration.SettingsProperty" /> objects used in the current wrapper.</returns>
        </member>
        <member name="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
            <summary>Gets a collection of property values.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> of property values.</returns>
        </member>
        <member name="P:System.Configuration.ApplicationSettingsBase.Providers">
            <summary>Gets the collection of application settings providers used by the wrapper.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsProviderCollection" /> containing all the <see cref="T:System.Configuration.SettingsProvider" /> objects used by the settings properties of the current settings wrapper.</returns>
        </member>
        <member name="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
            <summary>Gets or sets the settings key for the application settings group.</summary>
            <returns>A <see cref="T:System.String" /> containing the settings key for the current settings group.</returns>
        </member>
        <member name="T:System.Configuration.ApplicationSettingsGroup">
            <summary>Represents a grouping of related application settings sections within a configuration file. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.ApplicationSettingsGroup.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ApplicationSettingsGroup" /> class.</summary>
        </member>
        <member name="T:System.Configuration.AppSettingsReader">
            <summary>Provides a method for reading values of a particular type from the configuration.</summary>
        </member>
        <member name="M:System.Configuration.AppSettingsReader.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.AppSettingsReader" /> class.</summary>
        </member>
        <member name="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)">
            <summary>Gets the value for a specified key from the <see cref="P:System.Configuration.ConfigurationSettings.AppSettings" /> property and returns an object of the specified type containing the value from the configuration.</summary>
            <param name="key">The key for which to get the value.</param>
            <param name="type">The type of the object to return.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="key" /> is <see langword="null" />.  
  
-or-
  
 <paramref name="type" /> is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">
                <paramref name="key" /> does not exist in the <see langword="&lt;appSettings&gt;" /> configuration section.  
  
-or-
  
 The value in the <see langword="&lt;appSettings&gt;" /> configuration section for <paramref name="key" /> is not of type <paramref name="type" />.</exception>
            <returns>The value of the specified key.</returns>
        </member>
        <member name="T:System.Configuration.AppSettingsSection">
            <summary>Provides configuration system support for the <see langword="appSettings" /> configuration section. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.AppSettingsSection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.AppSettingsSection" /> class.</summary>
        </member>
        <member name="P:System.Configuration.AppSettingsSection.File">
            <summary>Gets or sets a configuration file that provides additional settings or overrides the settings specified in the <see langword="appSettings" /> element.</summary>
            <returns>A configuration file that provides additional settings or overrides the settings specified in the <see langword="appSettings" /> element.</returns>
        </member>
        <member name="P:System.Configuration.AppSettingsSection.Settings">
            <summary>Gets a collection of key/value pairs that contains application settings.</summary>
            <returns>A collection of key/value pairs that contains the application settings from the configuration file.</returns>
        </member>
        <member name="T:System.Configuration.CallbackValidator">
            <summary>Provides dynamic validation of an object.</summary>
        </member>
        <member name="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.CallbackValidator" /> class.</summary>
            <param name="type">The type of object that will be validated.</param>
            <param name="callback">The <see cref="T:System.Configuration.ValidatorCallback" /> used as the delegate.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="type" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
            <summary>Determines whether the type of the object can be validated.</summary>
            <param name="type">The type of object.</param>
            <returns>
                <see langword="true" /> if the <see langword="type" /> parameter matches the type used as the first parameter when creating an instance of <see cref="T:System.Configuration.CallbackValidator" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.CallbackValidator.Validate(System.Object)">
            <summary>Determines whether the value of an object is valid.</summary>
            <param name="value">The value of an object.</param>
        </member>
        <member name="T:System.Configuration.CallbackValidatorAttribute">
            <summary>Specifies a <see cref="T:System.Configuration.CallbackValidator" /> object to use for code validation. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.CallbackValidatorAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.CallbackValidatorAttribute" /> class.</summary>
        </member>
        <member name="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
            <summary>Gets or sets the name of the callback method.</summary>
            <returns>The name of the method to call.</returns>
        </member>
        <member name="P:System.Configuration.CallbackValidatorAttribute.Type">
            <summary>Gets or sets the type of the validator.</summary>
            <returns>The <see cref="T:System.Type" /> of the current validator attribute instance.</returns>
        </member>
        <member name="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
            <summary>Gets the validator instance.</summary>
            <exception cref="T:System.ArgumentNullException">The value of the <see cref="P:System.Configuration.CallbackValidatorAttribute.Type" /> property is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" /> property is not set to a public static void method with one object parameter.</exception>
            <returns>The current <see cref="T:System.Configuration.ConfigurationValidatorBase" /> instance.</returns>
        </member>
        <member name="T:System.Configuration.ClientSettingsSection">
            <summary>Represents a group of user-scoped application settings in a configuration file.</summary>
        </member>
        <member name="M:System.Configuration.ClientSettingsSection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ClientSettingsSection" /> class.</summary>
        </member>
        <member name="P:System.Configuration.ClientSettingsSection.Settings">
            <summary>Gets the collection of client settings for the section.</summary>
            <returns>A <see cref="T:System.Configuration.SettingElementCollection" /> containing all the client settings found in the current configuration section.</returns>
        </member>
        <member name="T:System.Configuration.CommaDelimitedStringCollection">
            <summary>Represents a collection of string elements separated by commas. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
            <summary>Creates a new instance of the <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
            <summary>Adds a string to the comma-delimited collection.</summary>
            <param name="value">A string value.</param>
        </member>
        <member name="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
            <summary>Adds all the strings in a string array to the collection.</summary>
            <param name="range">An array of strings to add to the collection.</param>
        </member>
        <member name="M:System.Configuration.CommaDelimitedStringCollection.Clear">
            <summary>Clears the collection.</summary>
        </member>
        <member name="M:System.Configuration.CommaDelimitedStringCollection.Clone">
            <summary>Creates a copy of the collection.</summary>
            <returns>A copy of the <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
        </member>
        <member name="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
            <summary>Adds a string element to the collection at the specified index.</summary>
            <param name="index">The index in the collection at which the new element will be added.</param>
            <param name="value">The value of the new element to add to the collection.</param>
        </member>
        <member name="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
            <summary>Removes a string element from the collection.</summary>
            <param name="value">The string to remove.</param>
        </member>
        <member name="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
            <summary>Sets the collection object to read-only.</summary>
        </member>
        <member name="M:System.Configuration.CommaDelimitedStringCollection.ToString">
            <summary>Returns a string representation of the object.</summary>
            <returns>A string representation of the object.</returns>
        </member>
        <member name="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
            <summary>Gets a value that specifies whether the collection has been modified.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> has been modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
            <summary>Gets a value indicating whether the collection object is read-only.</summary>
            <returns>
                <see langword="true" /> if the specified string element in the <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> is read-only; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
            <summary>Gets or sets a string element in the collection based on the index.</summary>
            <param name="index">The index of the string element in the collection.</param>
            <returns>A string element in the collection.</returns>
        </member>
        <member name="T:System.Configuration.CommaDelimitedStringCollectionConverter">
            <summary>Converts a comma-delimited string value to and from a <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> object. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.CommaDelimitedStringCollectionConverter" /> class.</summary>
        </member>
        <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts a <see cref="T:System.String" /> object to a <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> object.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> used during conversion.</param>
            <param name="data">The comma-separated <see cref="T:System.String" /> to convert.</param>
            <returns>A <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> containing the converted value.</returns>
        </member>
        <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts a <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> object to a <see cref="T:System.String" /> object.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> used during conversion.</param>
            <param name="value">The value to convert.</param>
            <param name="type">The conversion type.</param>
            <returns>The <see cref="T:System.String" /> representing the converted <paramref name="value" /> parameter, which is a <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
        </member>
        <member name="T:System.Configuration.Configuration">
            <summary>Represents a configuration file that is applicable to a particular computer, application, or resource. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.Configuration.GetSection(System.String)">
            <summary>Returns the specified <see cref="T:System.Configuration.ConfigurationSection" /> object.</summary>
            <param name="sectionName">The path to the section to be returned.</param>
            <returns>The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the requested section does not exist.</returns>
        </member>
        <member name="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
            <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
            <param name="sectionGroupName">The path name of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> to return.</param>
            <returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> specified, or <see langword="null" /> if the requested section group does not exist.</returns>
        </member>
        <member name="M:System.Configuration.Configuration.Save">
            <summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration" /> object to the current XML configuration file.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.  
  
-or-
  
 The configuration file has changed.</exception>
        </member>
        <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
            <summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration" /> object to the current XML configuration file.</summary>
            <param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> value that determines which property values to save.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.  
  
-or-
  
 The configuration file has changed.</exception>
        </member>
        <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
            <summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration" /> object to the current XML configuration file.</summary>
            <param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> value that determines which property values to save.</param>
            <param name="forceSaveAll">
                <see langword="true" /> to save even if the configuration was not modified; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.  
  
-or-
  
 The configuration file has changed.</exception>
        </member>
        <member name="M:System.Configuration.Configuration.SaveAs(System.String)">
            <summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration" /> object to the specified XML configuration file.</summary>
            <param name="filename">The path and file name to save the configuration file to.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.  
  
-or-
  
 The configuration file has changed.</exception>
        </member>
        <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration" /> object to the specified XML configuration file.</summary>
            <param name="filename">The path and file name to save the configuration file to.</param>
            <param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> value that determines which property values to save.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration file could not be written to.  
  
-or-
  
 The configuration file has changed.</exception>
        </member>
        <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
            <summary>Writes the configuration settings contained within this <see cref="T:System.Configuration.Configuration" /> object to the specified XML configuration file.</summary>
            <param name="filename">The path and file name to save the configuration file to.</param>
            <param name="saveMode">A <see cref="T:System.Configuration.ConfigurationSaveMode" /> value that determines which property values to save.</param>
            <param name="forceSaveAll">
                <see langword="true" /> to save even if the configuration was not modified; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="filename" /> is null or an empty string ("").</exception>
        </member>
        <member name="P:System.Configuration.Configuration.AppSettings">
            <summary>Gets the <see cref="T:System.Configuration.AppSettingsSection" /> object configuration section that applies to this <see cref="T:System.Configuration.Configuration" /> object.</summary>
            <returns>An <see cref="T:System.Configuration.AppSettingsSection" /> object representing the <see langword="appSettings" /> configuration section that applies to this <see cref="T:System.Configuration.Configuration" /> object.</returns>
        </member>
        <member name="P:System.Configuration.Configuration.AssemblyStringTransformer">
            <summary>Specifies a function delegate that is used to transform assembly strings in configuration files.</summary>
            <returns>A delegate that transforms type strings. The default value is <see langword="null" />.</returns>
        </member>
        <member name="P:System.Configuration.Configuration.ConnectionStrings">
            <summary>Gets a <see cref="T:System.Configuration.ConnectionStringsSection" /> configuration-section object that applies to this <see cref="T:System.Configuration.Configuration" /> object.</summary>
            <returns>A <see cref="T:System.Configuration.ConnectionStringsSection" /> configuration-section object representing the <see langword="connectionStrings" /> configuration section that applies to this <see cref="T:System.Configuration.Configuration" /> object.</returns>
        </member>
        <member name="P:System.Configuration.Configuration.EvaluationContext">
            <summary>Gets the <see cref="T:System.Configuration.ContextInformation" /> object for the <see cref="T:System.Configuration.Configuration" /> object.</summary>
            <returns>The <see cref="T:System.Configuration.ContextInformation" /> object for the <see cref="T:System.Configuration.Configuration" /> object.</returns>
        </member>
        <member name="P:System.Configuration.Configuration.FilePath">
            <summary>Gets the physical path to the configuration file represented by this <see cref="T:System.Configuration.Configuration" /> object.</summary>
            <returns>The physical path to the configuration file represented by this <see cref="T:System.Configuration.Configuration" /> object.</returns>
        </member>
        <member name="P:System.Configuration.Configuration.HasFile">
            <summary>Gets a value that indicates whether a file exists for the resource represented by this <see cref="T:System.Configuration.Configuration" /> object.</summary>
            <returns>
                <see langword="true" /> if there is a configuration file; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Configuration.Locations">
            <summary>Gets the locations defined within this <see cref="T:System.Configuration.Configuration" /> object.</summary>
            <returns>A <see cref="T:System.Configuration.ConfigurationLocationCollection" /> containing the locations defined within this <see cref="T:System.Configuration.Configuration" /> object.</returns>
        </member>
        <member name="P:System.Configuration.Configuration.NamespaceDeclared">
            <summary>Gets or sets a value indicating whether the configuration file has an XML namespace.</summary>
            <returns>
                <see langword="true" /> if the configuration file has an XML namespace; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Configuration.RootSectionGroup">
            <summary>Gets the root <see cref="T:System.Configuration.ConfigurationSectionGroup" /> for this <see cref="T:System.Configuration.Configuration" /> object.</summary>
            <returns>The root section group for this <see cref="T:System.Configuration.Configuration" /> object.</returns>
        </member>
        <member name="P:System.Configuration.Configuration.SectionGroups">
            <summary>Gets a collection of the section groups defined by this configuration.</summary>
            <returns>A <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> collection representing the collection of section groups for this <see cref="T:System.Configuration.Configuration" /> object.</returns>
        </member>
        <member name="P:System.Configuration.Configuration.Sections">
            <summary>Gets a collection of the sections defined by this <see cref="T:System.Configuration.Configuration" /> object.</summary>
            <returns>A collection of the sections defined by this <see cref="T:System.Configuration.Configuration" /> object.</returns>
        </member>
        <member name="P:System.Configuration.Configuration.TargetFramework">
            <summary>Specifies the targeted version of the .NET Framework when a version earlier than the current one is targeted.</summary>
            <returns>The name of the targeted version of the .NET Framework. The default value is <see langword="null" />, which indicates that the current version is targeted.</returns>
        </member>
        <member name="P:System.Configuration.Configuration.TypeStringTransformer">
            <summary>Specifies a function delegate that is used to transform type strings in configuration files.</summary>
            <returns>A delegate that transforms type strings. The default value is <see langword="null" />.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationAllowDefinition">
            <summary>Specifies the locations within the configuration-file hierarchy that can set or override the properties contained within a <see cref="T:System.Configuration.ConfigurationSection" /> object.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
            <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined anywhere.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
            <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined only in the Machine.config file.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
            <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined in either the Machine.config file, the machine-level Web.config file found in the same directory as Machine.config, or the top-level application Web.config file found in the virtual-directory root, but not in subdirectories of a virtual root.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
            <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined in either the Machine.config file or the machine-level Web.config file found in the same directory as Machine.config, but not in application Web.config files.</summary>
        </member>
        <member name="T:System.Configuration.ConfigurationAllowExeDefinition">
            <summary>Specifies the locations within the configuration-file hierarchy that can set or override the properties contained within a <see cref="T:System.Configuration.ConfigurationSection" /> object.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
            <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined only in the Machine.config file.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
            <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined either in the Machine.config file or in the Exe.config file in the client application directory. This is the default value.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
            <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined in the Machine.config file, in the Exe.config file in the client application directory, in the User.config file in the roaming user directory, or in the User.config file in the local user directory.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
            <summary>The <see cref="T:System.Configuration.ConfigurationSection" /> can be defined in the Machine.config file, in the Exe.config file in the client application directory, or in the User.config file in the roaming user directory.</summary>
        </member>
        <member name="T:System.Configuration.ConfigurationCollectionAttribute">
            <summary>Declaratively instructs the .NET Framework to create an instance of a configuration element collection. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> class.</summary>
            <param name="itemType">The type of the property collection to create.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="itemType" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
            <summary>Gets or sets the name of the <see langword="&lt;add&gt;" /> configuration element.</summary>
            <returns>The name that substitutes the standard name "add" for the configuration item.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
            <summary>Gets or sets the name for the <see langword="&lt;clear&gt;" /> configuration element.</summary>
            <returns>The name that replaces the standard name "clear" for the configuration item.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
            <summary>Gets or sets the type of the <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> attribute.</summary>
            <returns>The type of the <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
            <summary>Gets the type of the collection element.</summary>
            <returns>The type of the collection element.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
            <summary>Gets or sets the name for the <see langword="&lt;remove&gt;" /> configuration element.</summary>
            <returns>The name that replaces the standard name "remove" for the configuration element.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationConverterBase">
            <summary>The base class for the configuration converter types.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationConverterBase.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationConverterBase" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Determines whether the conversion is allowed.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="type">The <see cref="T:System.Type" /> to convert from.</param>
            <returns>
                <see langword="true" /> if the conversion is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Determines whether the conversion is allowed.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversion.</param>
            <param name="type">The type to convert to.</param>
            <returns>
                <see langword="true" /> if the conversion is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationElement">
            <summary>Represents a configuration element within a configuration file.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElement" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Reads XML from the configuration file.</summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader" /> that reads from the configuration file.</param>
            <param name="serializeCollectionKey">
                <see langword="true" /> to serialize only the collection key properties; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The element to read is locked.  
  
-or-
  
 An attribute of the current node is not recognized.  
  
-or-
  
 The lock status of the current node cannot be determined.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
            <summary>Compares the current <see cref="T:System.Configuration.ConfigurationElement" /> instance to the specified object.</summary>
            <param name="compareTo">The object to compare with.</param>
            <returns>
                <see langword="true" /> if the object to compare with is equal to the current <see cref="T:System.Configuration.ConfigurationElement" /> instance; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.GetHashCode">
            <summary>Gets a unique value representing the current <see cref="T:System.Configuration.ConfigurationElement" /> instance.</summary>
            <returns>A unique value representing the current <see cref="T:System.Configuration.ConfigurationElement" /> instance.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
            <summary>Returns the transformed version of the specified assembly name.</summary>
            <param name="assemblyName">The name of the assembly.</param>
            <returns>The transformed version of the assembly name. If no transformer is available, the <paramref name="assemblyName" /> parameter value is returned unchanged. The <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> property is <see langword="null" /> if no transformer is available.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
            <summary>Returns the transformed version of the specified type name.</summary>
            <param name="typeName">The name of the type.</param>
            <returns>The transformed version of the specified type name. If no transformer is available, the <paramref name="typeName" /> parameter value is returned unchanged. The <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> property is <see langword="null" /> if no transformer is available.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.Init">
            <summary>Sets the <see cref="T:System.Configuration.ConfigurationElement" /> object to its initial state.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.InitializeDefault">
            <summary>Used to initialize a default set of values for the <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.IsModified">
            <summary>Indicates whether this configuration element has been modified since it was last saved or loaded, when implemented in a derived class.</summary>
            <returns>
                <see langword="true" /> if the element has been modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Configuration.ConfigurationElement" /> object is read-only.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElement" /> object is read-only; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
            <summary>Adds the invalid-property errors in this <see cref="T:System.Configuration.ConfigurationElement" /> object, and in all subelements, to the passed list.</summary>
            <param name="errorList">An object that implements the <see cref="T:System.Collections.IList" /> interface.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Gets a value indicating whether an unknown attribute is encountered during deserialization.</summary>
            <param name="name">The name of the unrecognized attribute.</param>
            <param name="value">The value of the unrecognized attribute.</param>
            <returns>
                <see langword="true" /> when an unknown attribute is encountered while deserializing; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Gets a value indicating whether an unknown element is encountered during deserialization.</summary>
            <param name="elementName">The name of the unknown subelement.</param>
            <param name="reader">The <see cref="T:System.Xml.XmlReader" /> being used for deserialization.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The element identified by <paramref name="elementName" /> is locked.  
  
-or-
  
 One or more of the element's attributes is locked.  
  
-or-
  
 <paramref name="elementName" /> is unrecognized, or the element has an unrecognized attribute.  
  
-or-
  
 The element has a Boolean attribute with an invalid value.  
  
-or-
  
 An attempt was made to deserialize a property more than once.  
  
-or-
  
 An attempt was made to deserialize a property that is not a valid member of the element.  
  
-or-
  
 The element cannot contain a CDATA or text element.</exception>
            <returns>
                <see langword="true" /> when an unknown element is encountered while deserializing; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Throws an exception when a required property is not found.</summary>
            <param name="name">The name of the required attribute that was not found.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">In all cases.</exception>
            <returns>None.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.PostDeserialize">
            <summary>Called after deserialization.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Called before serialization.</summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> that will be used to serialize the <see cref="T:System.Configuration.ConfigurationElement" />.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Resets the internal state of the <see cref="T:System.Configuration.ConfigurationElement" /> object, including the locks and the properties collections.</summary>
            <param name="parentElement">The parent node of the configuration element.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.ResetModified">
            <summary>Resets the value of the <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> method to <see langword="false" /> when implemented in a derived class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Writes the contents of this configuration element to the configuration file when implemented in a derived class.</summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> that writes to the configuration file.</param>
            <param name="serializeCollectionKey">
                <see langword="true" /> to serialize only the collection key properties; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The current attribute is locked at a higher configuration level.</exception>
            <returns>
                <see langword="true" /> if any data was actually serialized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Writes the outer tags of this configuration element to the configuration file when implemented in a derived class.</summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> that writes to the configuration file.</param>
            <param name="elementName">The name of the <see cref="T:System.Configuration.ConfigurationElement" /> to be written.</param>
            <exception cref="T:System.Exception">The element has multiple child elements.</exception>
            <returns>
                <see langword="true" /> if writing was successful; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
            <summary>Sets a property to the specified value.</summary>
            <param name="prop">The element property to set.</param>
            <param name="value">The value to assign to the property.</param>
            <param name="ignoreLocks">
                <see langword="true" /> if the locks on the property should be ignored; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Occurs if the element is read-only or <paramref name="ignoreLocks" /> is <see langword="true" /> but the locks cannot be ignored.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.SetReadOnly">
            <summary>Sets the <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly" /> property for the <see cref="T:System.Configuration.ConfigurationElement" /> object and all subelements.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Modifies the <see cref="T:System.Configuration.ConfigurationElement" /> object to remove all values that should not be saved.</summary>
            <param name="sourceElement">A <see cref="T:System.Configuration.ConfigurationElement" /> at the current level containing a merged view of the properties.</param>
            <param name="parentElement">The parent <see cref="T:System.Configuration.ConfigurationElement" />, or <see langword="null" /> if this is the top level.</param>
            <param name="saveMode">One of the enumeration values that determines which property values to include.</param>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
            <summary>Gets a reference to the top-level <see cref="T:System.Configuration.Configuration" /> instance that represents the configuration hierarchy that the current <see cref="T:System.Configuration.ConfigurationElement" /> instance belongs to.</summary>
            <returns>The top-level <see cref="T:System.Configuration.Configuration" /> instance that the current <see cref="T:System.Configuration.ConfigurationElement" /> instance belongs to.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.ElementInformation">
            <summary>Gets an <see cref="T:System.Configuration.ElementInformation" /> object that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
            <returns>An <see cref="T:System.Configuration.ElementInformation" /> that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.ElementProperty">
            <summary>Gets the <see cref="T:System.Configuration.ConfigurationElementProperty" /> object that represents the <see cref="T:System.Configuration.ConfigurationElement" /> object itself.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationElementProperty" /> that represents the <see cref="T:System.Configuration.ConfigurationElement" /> itself.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.EvaluationContext">
            <summary>Gets the <see cref="T:System.Configuration.ContextInformation" /> object for the <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The current element is not associated with a context.</exception>
            <returns>The <see cref="T:System.Configuration.ContextInformation" /> for the <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.HasContext">
            <summary>Gets a value that indicates whether the <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> property is <see langword="null" />.</summary>
            <returns>false if the <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> property is <see langword="null" />; otherwise, <see langword="true" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
            <summary>Gets or sets a property or attribute of this configuration element.</summary>
            <param name="prop">The property to access.</param>
            <exception cref="T:System.Configuration.ConfigurationException">
                <paramref name="prop" /> is <see langword="null" /> or does not exist within the element.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
                <paramref name="prop" /> is read only or locked.</exception>
            <returns>The specified property, attribute, or child element.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.Item(System.String)">
            <summary>Gets or sets a property, attribute, or child element of this configuration element.</summary>
            <param name="propertyName">The name of the <see cref="T:System.Configuration.ConfigurationProperty" /> to access.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
                <paramref name="prop" /> is read-only or locked.</exception>
            <returns>The specified property, attribute, or child element</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
            <summary>Gets the collection of locked attributes.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationLockCollection" /> of locked attributes (properties) for the element.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
            <summary>Gets the collection of locked elements.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationLockCollection" /> of locked elements.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.LockAttributes">
            <summary>Gets the collection of locked attributes.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationLockCollection" /> of locked attributes (properties) for the element.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.LockElements">
            <summary>Gets the collection of locked elements.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationLockCollection" /> of locked elements.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.LockItem">
            <summary>Gets or sets a value indicating whether the element is locked.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The element has already been locked at a higher configuration level.</exception>
            <returns>
                <see langword="true" /> if the element is locked; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElement.Properties">
            <summary>Gets the collection of properties.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> of properties for the element.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationElementCollection">
            <summary>Represents a configuration element containing a collection of child elements.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
            <summary>Creates a new instance of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> class.</summary>
            <param name="comparer">The <see cref="T:System.Collections.IComparer" /> comparer to use.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="comparer" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>Adds a configuration element to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
            <summary>Adds a configuration element to the configuration element collection.</summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</param>
            <param name="throwIfExists">
                <see langword="true" /> to throw an exception if the <see cref="T:System.Configuration.ConfigurationElement" /> specified is already contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.Exception">The <see cref="T:System.Configuration.ConfigurationElement" /> to add already exists in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> and the <paramref name="throwIfExists" /> parameter is <see langword="true" />.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>Adds a configuration element to the configuration element collection.</summary>
            <param name="index">The index location at which to add the specified <see cref="T:System.Configuration.ConfigurationElement" />.</param>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to add.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.BaseClear">
            <summary>Removes all configuration element objects from the collection.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration is read-only.  
  
-or-
  
 A collection item has been locked in a higher-level configuration.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
            <summary>Gets the configuration element at the specified index location.</summary>
            <param name="index">The index location of the <see cref="T:System.Configuration.ConfigurationElement" /> to return.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
                <paramref name="index" /> is less than <see langword="0" />.  
  
-or-
  
 There is no <see cref="T:System.Configuration.ConfigurationElement" /> at the specified <paramref name="index" />.</exception>
            <returns>The <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
            <summary>Returns the configuration element with the specified key.</summary>
            <param name="key">The key of the element to return.</param>
            <returns>The <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key; otherwise, <see langword="null" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
            <summary>Returns an array of the keys for all of the configuration elements contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
            <returns>An array that contains the keys for all of the <see cref="T:System.Configuration.ConfigurationElement" /> objects contained in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
            <summary>Gets the key for the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</summary>
            <param name="index">The index location for the <see cref="T:System.Configuration.ConfigurationElement" />.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
                <paramref name="index" /> is less than <see langword="0" />.  
  
-or-
  
 There is no <see cref="T:System.Configuration.ConfigurationElement" /> at the specified <paramref name="index" />.</exception>
            <returns>The key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
            <summary>Indicates the index of the specified <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> for the specified index location.</param>
            <returns>The index of the specified <see cref="T:System.Configuration.ConfigurationElement" />; otherwise, -1.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
            <summary>Indicates whether the <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key has been removed from the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
            <param name="key">The key of the element to check.</param>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key has been removed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
            <summary>Removes a <see cref="T:System.Configuration.ConfigurationElement" /> from the collection.</summary>
            <param name="key">The key of the <see cref="T:System.Configuration.ConfigurationElement" /> to remove.</param>
            <exception cref="T:System.Exception">No <see cref="T:System.Configuration.ConfigurationElement" /> with the specified key exists in the collection, the element has already been removed, or the element cannot be removed because the value of its <see cref="P:System.Configuration.ConfigurationProperty.Type" /> is not <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
            <summary>Removes the <see cref="T:System.Configuration.ConfigurationElement" /> at the specified index location.</summary>
            <param name="index">The index location of the <see cref="T:System.Configuration.ConfigurationElement" /> to remove.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration is read-only.  
  
-or-
  
 <paramref name="index" /> is less than <see langword="0" /> or greater than the number of <see cref="T:System.Configuration.ConfigurationElement" /> objects in the collection.  
  
-or-
  
 The <see cref="T:System.Configuration.ConfigurationElement" /> object has already been removed.  
  
-or-
  
 The value of the <see cref="T:System.Configuration.ConfigurationElement" /> object has been locked at a higher level.  
  
-or-
  
 The <see cref="T:System.Configuration.ConfigurationElement" /> object was inherited.  
  
-or-
  
 The value of the <see cref="T:System.Configuration.ConfigurationElement" /> object's <see cref="P:System.Configuration.ConfigurationProperty.Type" /> is not <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> or <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
            <summary>Copies the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to an array.</summary>
            <param name="array">Array to which to copy the contents of the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
            <param name="index">Index location at which to begin copying.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
            <summary>When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
            <returns>A newly created <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
            <summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement" /> when overridden in a derived class.</summary>
            <param name="elementName">The name of the <see cref="T:System.Configuration.ConfigurationElement" /> to create.</param>
            <returns>A new <see cref="T:System.Configuration.ConfigurationElement" /> with a specified name.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
            <summary>Compares the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to the specified object.</summary>
            <param name="compareTo">The object to compare.</param>
            <returns>
                <see langword="true" /> if the object to compare with is equal to the current <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>Gets the element key for a specified configuration element when overridden in a derived class.</summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> to return the key for.</param>
            <returns>An <see cref="T:System.Object" /> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
            <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> which is used to iterate through the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
            <summary>Gets a unique value representing the <see cref="T:System.Configuration.ConfigurationElementCollection" /> instance.</summary>
            <returns>A unique value representing the <see cref="T:System.Configuration.ConfigurationElementCollection" /> current instance.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
            <summary>Indicates whether the specified <see cref="T:System.Configuration.ConfigurationElement" /> exists in the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
            <param name="elementName">The name of the element to verify.</param>
            <returns>
                <see langword="true" /> if the element exists in the collection; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
            <summary>Indicates whether the specified <see cref="T:System.Configuration.ConfigurationElement" /> can be removed from the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
            <param name="element">The element to check.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Configuration.ConfigurationElement" /> can be removed from this <see cref="T:System.Configuration.ConfigurationElementCollection" />; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.IsModified">
            <summary>Indicates whether this <see cref="T:System.Configuration.ConfigurationElementCollection" /> has been modified since it was last saved or loaded when overridden in a derived class.</summary>
            <returns>
                <see langword="true" /> if any contained element has been modified; otherwise, <see langword="false" /></returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
            <summary>Indicates whether the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object is read only.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object is read only; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Causes the configuration system to throw an exception.</summary>
            <param name="elementName">The name of the unrecognized element.</param>
            <param name="reader">An input stream that reads XML from the configuration file.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The element specified in <paramref name="elementName" /> is the <see langword="&lt;clear&gt;" /> element.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="elementName" /> starts with the reserved prefix "config" or "lock".</exception>
            <returns>
                <see langword="true" /> if the unrecognized element was deserialized successfully; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
            <summary>Resets the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to its unmodified state when overridden in a derived class.</summary>
            <param name="parentElement">The <see cref="T:System.Configuration.ConfigurationElement" /> representing the collection parent element, if any; otherwise, <see langword="null" />.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.ResetModified">
            <summary>Resets the value of the <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> property to <see langword="false" /> when overridden in a derived class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Writes the configuration data to an XML element in the configuration file when overridden in a derived class.</summary>
            <param name="writer">Output stream that writes XML to the configuration file.</param>
            <param name="serializeCollectionKey">
                <see langword="true" /> to serialize the collection key; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.ArgumentException">One of the elements in the collection was added or replaced and starts with the reserved prefix "config" or "lock".</exception>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationElementCollection" /> was written to the configuration file successfully.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
            <summary>Sets the <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> property for the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object and for all sub-elements.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Copies the <see cref="T:System.Configuration.ConfigurationElementCollection" /> to an array.</summary>
            <param name="arr">Array to which to copy this <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
            <param name="index">Index location at which to begin copying.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Reverses the effect of merging configuration information from different levels of the configuration hierarchy.</summary>
            <param name="sourceElement">A <see cref="T:System.Configuration.ConfigurationElement" /> object at the current level containing a merged view of the properties.</param>
            <param name="parentElement">The parent <see cref="T:System.Configuration.ConfigurationElement" /> object of the current element, or <see langword="null" /> if this is the top level.</param>
            <param name="saveMode">One of the enumeration value that determines which property values to include.</param>
        </member>
        <member name="P:System.Configuration.ConfigurationElementCollection.AddElementName">
            <summary>Gets or sets the name of the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the add operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class.</summary>
            <exception cref="T:System.ArgumentException">The selected value starts with the reserved prefix "config" or "lock".</exception>
            <returns>The name of the element.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
            <summary>Gets or sets the name for the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the clear operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class.</summary>
            <exception cref="T:System.ArgumentException">The selected value starts with the reserved prefix "config" or "lock".</exception>
            <returns>The name of the element.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElementCollection.CollectionType">
            <summary>Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> of this collection.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElementCollection.Count">
            <summary>Gets the number of elements in the collection.</summary>
            <returns>The number of elements in the collection.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElementCollection.ElementName">
            <summary>Gets the name used to identify this collection of elements in the configuration file when overridden in a derived class.</summary>
            <returns>The name of the collection; otherwise, an empty string. The default is an empty string.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElementCollection.EmitClear">
            <summary>Gets or sets a value that specifies whether the collection has been cleared.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration is read-only.</exception>
            <returns>
                <see langword="true" /> if the collection has been cleared; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
            <summary>Gets a value indicating whether access to the collection is synchronized.</summary>
            <returns>
                <see langword="true" /> if access to the <see cref="T:System.Configuration.ConfigurationElementCollection" /> is synchronized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
            <summary>Gets or sets the name of the <see cref="T:System.Configuration.ConfigurationElement" /> to associate with the remove operation in the <see cref="T:System.Configuration.ConfigurationElementCollection" /> when overridden in a derived class.</summary>
            <exception cref="T:System.ArgumentException">The selected value starts with the reserved prefix "config" or "lock".</exception>
            <returns>The name of the element.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
            <summary>Gets an object used to synchronize access to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
            <returns>An object used to synchronize access to the <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
            <summary>Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to the <see cref="T:System.Configuration.ConfigurationElementCollection" /> will cause an exception to be thrown.</summary>
            <returns>
                <see langword="true" /> if an attempt to add a duplicate <see cref="T:System.Configuration.ConfigurationElement" /> to this <see cref="T:System.Configuration.ConfigurationElementCollection" /> will cause an exception to be thrown; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationElementCollectionType">
            <summary>Specifies the type of a <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> object.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
            <summary>The default type of <see cref="T:System.Configuration.ConfigurationElementCollection" />. Collections of this type contain elements that can be merged across a hierarchy of configuration files. At any particular level within such a hierarchy, <see langword="add" />, <see langword="remove" />, and <see langword="clear" /> directives are used to modify any inherited properties and specify new ones.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
            <summary>Same as <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />, except that this type causes the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object to sort its contents such that inherited elements are listed last.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
            <summary>Collections of this type contain elements that apply to the level at which they are specified, and to all child levels. A child level cannot modify the properties specified by a parent element of this type.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
            <summary>Same as <see cref="F:System.Configuration.ConfigurationElementCollectionType.BasicMap" />, except that this type causes the <see cref="T:System.Configuration.ConfigurationElementCollection" /> object to sort its contents such that inherited elements are listed last.</summary>
        </member>
        <member name="T:System.Configuration.ConfigurationElementProperty">
            <summary>Specifies the property of a configuration element. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationElementProperty" /> class, based on a supplied parameter.</summary>
            <param name="validator">A <see cref="T:System.Configuration.ConfigurationValidatorBase" /> object.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="validator" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:System.Configuration.ConfigurationElementProperty.Validator">
            <summary>Gets a <see cref="T:System.Configuration.ConfigurationValidatorBase" /> object used to validate the <see cref="T:System.Configuration.ConfigurationElementProperty" /> object.</summary>
            <returns>A <see cref="T:System.Configuration.ConfigurationValidatorBase" /> object.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationErrorsException">
            <summary>The exception that is thrown when a configuration error has occurred.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
            <param name="info">The object that holds the information to deserialize.</param>
            <param name="context">Contextual information about the source or destination.</param>
            <exception cref="T:System.InvalidOperationException">The current type is not a <see cref="T:System.Configuration.ConfigurationException" /> or a <see cref="T:System.Configuration.ConfigurationErrorsException" />.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
            <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
            <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
            <param name="inner">The exception that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
            <summary>Initializes a new instance of a <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
            <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
            <param name="inner">The inner exception that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
            <param name="filename">The path to the configuration file that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
            <param name="line">The line number within the configuration file at which this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
            <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
            <param name="inner">The inner exception that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
            <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
            <param name="inner">The inner exception that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
            <param name="reader">The <see cref="T:System.Xml.XmlReader" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
            <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
            <param name="filename">The path to the configuration file that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
            <param name="line">The line number within the configuration file at which this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
            <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationErrorsException" /> class.</summary>
            <param name="message">A message that describes why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</param>
            <param name="reader">The <see cref="T:System.Xml.XmlReader" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
            <summary>Gets the path to the configuration file from which the internal <see cref="T:System.Xml.XmlNode" /> object was loaded when this configuration exception was thrown.</summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
            <returns>The path to the configuration file from which the internal <see cref="T:System.Xml.XmlNode" /> object was loaded when this configuration exception was thrown.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
            <summary>Gets the path to the configuration file that the internal <see cref="T:System.Xml.XmlReader" /> was reading when this configuration exception was thrown.</summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
            <returns>The path of the configuration file the internal <see cref="T:System.Xml.XmlReader" /> object was accessing when the exception occurred.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
            <summary>Gets the line number within the configuration file that the internal <see cref="T:System.Xml.XmlNode" /> object represented when this configuration exception was thrown.</summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
            <returns>The line number within the configuration file that contains the <see cref="T:System.Xml.XmlNode" /> object being parsed when this configuration exception was thrown.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
            <summary>Gets the line number within the configuration file that the internal <see cref="T:System.Xml.XmlReader" /> object was processing when this configuration exception was thrown.</summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader" /> object that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception to be thrown.</param>
            <returns>The line number within the configuration file that the <see cref="T:System.Xml.XmlReader" /> object was accessing when the exception occurred.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the file name and line number at which this configuration exception occurred.</summary>
            <param name="info">The object that holds the information to be serialized.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="P:System.Configuration.ConfigurationErrorsException.BareMessage">
            <summary>Gets a description of why this configuration exception was thrown.</summary>
            <returns>A description of why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> was thrown.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationErrorsException.Errors">
            <summary>Gets a collection of errors that detail the reasons this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</summary>
            <returns>An <see cref="T:System.Collections.ICollection" /> object that contains errors that identify the reasons this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationErrorsException.Filename">
            <summary>Gets the path to the configuration file that caused this configuration exception to be thrown.</summary>
            <returns>The path to the configuration file that caused this <see cref="T:System.Configuration.ConfigurationErrorsException" /> to be thrown.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationErrorsException.Line">
            <summary>Gets the line number within the configuration file at which this configuration exception was thrown.</summary>
            <returns>The line number within the configuration file at which this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationErrorsException.Message">
            <summary>Gets an extended description of why this configuration exception was thrown.</summary>
            <returns>An extended description of why this <see cref="T:System.Configuration.ConfigurationErrorsException" /> exception was thrown.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationException">
            <summary>The exception that is thrown when a configuration system error has occurred.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationException" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationException" /> class.</summary>
            <param name="info">The object that holds the information to deserialize.</param>
            <param name="context">Contextual information about the source or destination.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationException" /> class.</summary>
            <param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationException" /> exception was thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationException" /> class.</summary>
            <param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationException" /> exception was thrown.</param>
            <param name="inner">The inner exception that caused this <see cref="T:System.Configuration.ConfigurationException" /> to be thrown, if any.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationException" /> class.</summary>
            <param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationException" /> exception was thrown.</param>
            <param name="inner">The inner exception that caused this <see cref="T:System.Configuration.ConfigurationException" /> to be thrown, if any.</param>
            <param name="filename">The path to the configuration file that caused this <see cref="T:System.Configuration.ConfigurationException" /> to be thrown.</param>
            <param name="line">The line number within the configuration file at which this <see cref="T:System.Configuration.ConfigurationException" /> was thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationException" /> class.</summary>
            <param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationException" /> exception was thrown.</param>
            <param name="inner">The inner exception that caused this <see cref="T:System.Configuration.ConfigurationException" /> to be thrown, if any.</param>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> that caused this <see cref="T:System.Configuration.ConfigurationException" /> to be thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationException" /> class.</summary>
            <param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationException" /> exception was thrown.</param>
            <param name="filename">The path to the configuration file that caused this <see cref="T:System.Configuration.ConfigurationException" /> to be thrown.</param>
            <param name="line">The line number within the configuration file at which this <see cref="T:System.Configuration.ConfigurationException" /> was thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationException" /> class.</summary>
            <param name="message">A message describing why this <see cref="T:System.Configuration.ConfigurationException" /> exception was thrown.</param>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> that caused this <see cref="T:System.Configuration.ConfigurationException" /> to be thrown.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the file name and line number at which this configuration exception occurred.</summary>
            <param name="info">The object that holds the information to be serialized.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)">
            <summary>Gets the path to the configuration file from which the internal <see cref="T:System.Xml.XmlNode" /> object was loaded when this configuration exception was thrown.</summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> that caused this <see cref="T:System.Configuration.ConfigurationException" /> exception to be thrown.</param>
            <returns>A <see langword="string" /> representing the node file name.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)">
            <summary>Gets the line number within the configuration file that the internal <see cref="T:System.Xml.XmlNode" /> object represented when this configuration exception was thrown.</summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> that caused this <see cref="T:System.Configuration.ConfigurationException" /> exception to be thrown.</param>
            <returns>An <see langword="int" /> representing the node line number.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationException.BareMessage">
            <summary>Gets a description of why this configuration exception was thrown.</summary>
            <returns>A description of why this <see cref="T:System.Configuration.ConfigurationException" /> exception was thrown.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationException.Filename">
            <summary>Gets the path to the configuration file that caused this configuration exception to be thrown.</summary>
            <returns>The path to the configuration file that caused this <see cref="T:System.Configuration.ConfigurationException" /> exception to be thrown.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationException.Line">
            <summary>Gets the line number within the configuration file at which this configuration exception was thrown.</summary>
            <returns>The line number within the configuration file at which this <see cref="T:System.Configuration.ConfigurationException" /> exception was thrown.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationException.Message">
            <summary>Gets an extended description of why this configuration exception was thrown.</summary>
            <returns>An extended description of why this <see cref="T:System.Configuration.ConfigurationException" /> exception was thrown.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationFileMap">
            <summary>Defines the configuration file mapping for the machine configuration file.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationFileMap.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationFileMap" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationFileMap" /> class based on the supplied parameter.</summary>
            <param name="machineConfigFilename">The name of the machine configuration file.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationFileMap.Clone">
            <summary>Creates a copy of the existing <see cref="T:System.Configuration.ConfigurationFileMap" /> object.</summary>
            <returns>A <see cref="T:System.Configuration.ConfigurationFileMap" /> object.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
            <summary>Gets or sets the name of the machine configuration file name.</summary>
            <returns>The machine configuration file name.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationLocation">
            <summary>Represents a <see langword="location" /> element within a configuration file.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
            <summary>Creates an instance of a Configuration object.</summary>
            <returns>A Configuration object.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationLocation.Path">
            <summary>Gets the relative path to the resource whose configuration settings are represented by this <see cref="T:System.Configuration.ConfigurationLocation" /> object.</summary>
            <returns>The relative path to the resource whose configuration settings are represented by this <see cref="T:System.Configuration.ConfigurationLocation" />.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationLocationCollection">
            <summary>Contains a collection of <see cref="T:System.Configuration.ConfigurationLocationCollection" /> objects.</summary>
        </member>
        <member name="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
            <summary>Gets the <see cref="T:System.Configuration.ConfigurationLocationCollection" /> object at the specified index.</summary>
            <param name="index">The index location of the <see cref="T:System.Configuration.ConfigurationLocationCollection" /> to return.</param>
            <returns>The <see cref="T:System.Configuration.ConfigurationLocationCollection" /> at the specified index.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationLockCollection">
            <summary>Contains a collection of locked configuration objects. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
            <summary>Locks a configuration object by adding it to the collection.</summary>
            <param name="name">The name of the configuration object.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Occurs when the <paramref name="name" /> does not match an existing configuration object within the collection.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationLockCollection.Clear">
            <summary>Clears all configuration objects from the collection.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
            <summary>Verifies whether a specific configuration object is locked.</summary>
            <param name="name">The name of the configuration object to verify.</param>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationLockCollection" /> contains the specified configuration object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
            <summary>Copies the entire <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
            <param name="array">A one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Configuration.ConfigurationLockCollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
            <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> object, which is used to iterate through this <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
            <summary>Verifies whether a specific configuration object is read-only.</summary>
            <param name="name">The name of the configuration object to verify.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The specified configuration object is not in the collection.</exception>
            <returns>
                <see langword="true" /> if the specified configuration object in the <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection is read-only; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
            <summary>Removes a configuration object from the collection.</summary>
            <param name="name">The name of the configuration object.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Occurs when the <paramref name="name" /> does not match an existing configuration object within the collection.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
            <summary>Locks a set of configuration objects based on the supplied list.</summary>
            <param name="attributeList">A comma-delimited string.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Occurs when an item in the <paramref name="attributeList" /> parameter is not a valid lockable configuration attribute.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Copies the entire <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
            <param name="array">A one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="P:System.Configuration.ConfigurationLockCollection.AttributeList">
            <summary>Gets a list of configuration objects contained in the collection.</summary>
            <returns>A comma-delimited string that lists the lock configuration objects in the collection.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationLockCollection.Count">
            <summary>Gets the number of locked configuration objects contained in the collection.</summary>
            <returns>The number of locked configuration objects contained in the collection.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
            <summary>Gets a value specifying whether the collection of locked objects has parent elements.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection has parent elements; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationLockCollection.IsModified">
            <summary>Gets a value specifying whether the collection has been modified.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection has been modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
            <summary>Gets a value specifying whether the collection is synchronized.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection is synchronized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
            <summary>Gets an object used to synchronize access to this <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection.</summary>
            <returns>An object used to synchronize access to this <see cref="T:System.Configuration.ConfigurationLockCollection" /> collection.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationManager">
            <summary>Provides access to configuration files for client applications. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
            <summary>Retrieves a specified configuration section for the current application's default configuration.</summary>
            <param name="sectionName">The configuration section path and name. Node names are separated by forward slashes, for example "system.net/mailSettings/smtp".</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
            <returns>The specified <see cref="T:System.Configuration.ConfigurationSection" /> object, or <see langword="null" /> if the section does not exist.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
            <summary>Opens the configuration file for the current application as a <see cref="T:System.Configuration.Configuration" /> object.</summary>
            <param name="userLevel">One of the enumeration values that specifies the user level for which you are opening the configuration.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
            <returns>The configuration file for the current application.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
            <summary>Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object.</summary>
            <param name="exePath">The path of the executable (exe) file.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
            <returns>The specified configuration file.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
            <summary>Opens the machine configuration file on the current computer as a <see cref="T:System.Configuration.Configuration" /> object.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
            <returns>The machine configuration file.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
            <summary>Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping and user level.</summary>
            <param name="fileMap">The configuration file to use instead of the application default configuration file.</param>
            <param name="userLevel">One of the enumeration values that specifies the user level for which you are opening the configuration.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)">
            <summary>Opens the specified client configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping, user level, and preload option.</summary>
            <param name="fileMap">The configuration file to use instead of the default application configuration file.</param>
            <param name="userLevel">One of the enumeration values that specifies the user level for which you are opening the configuration.</param>
            <param name="preLoad">
                <see langword="true" /> to preload all section groups and sections; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
            <returns>The configuration object.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
            <summary>Opens the machine configuration file as a <see cref="T:System.Configuration.Configuration" /> object that uses the specified file mapping.</summary>
            <param name="fileMap">The configuration file to use instead of the application default configuration file.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">A configuration file could not be loaded.</exception>
            <returns>The machine configuration file.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
            <summary>Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</summary>
            <param name="sectionName">The configuration section name or the configuration path and section name of the section to refresh.</param>
        </member>
        <member name="P:System.Configuration.ConfigurationManager.AppSettings">
            <summary>Gets the <see cref="T:System.Configuration.AppSettingsSection" /> data for the current application's default configuration.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Could not retrieve a <see cref="T:System.Collections.Specialized.NameValueCollection" /> object with the application settings data.</exception>
            <returns>The contents of the <see cref="T:System.Configuration.AppSettingsSection" /> object for the current application's default configuration.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationManager.ConnectionStrings">
            <summary>Gets the <see cref="T:System.Configuration.ConnectionStringsSection" /> data for the current application's default configuration.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Could not retrieve a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</exception>
            <returns>The contents of the <see cref="T:System.Configuration.ConnectionStringsSection" /> object for the current application's default configuration.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationProperty">
            <summary>Represents an attribute or a child of a configuration element. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationProperty" /> class.</summary>
            <param name="name">The name of the configuration entity.</param>
            <param name="type">The type of the configuration entity.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationProperty" /> class.</summary>
            <param name="name">The name of the configuration entity.</param>
            <param name="type">The type of the configuration entity.</param>
            <param name="defaultValue">The default value of the configuration entity.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationProperty" /> class.</summary>
            <param name="name">The name of the configuration entity.</param>
            <param name="type">The type of the configuration entity.</param>
            <param name="defaultValue">The default value of the configuration entity.</param>
            <param name="typeConverter">The type of the converter to apply.</param>
            <param name="validator">The validator to use.</param>
            <param name="options">One of the <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> enumeration values.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationProperty" /> class.</summary>
            <param name="name">The name of the configuration entity.</param>
            <param name="type">The type of the configuration entity.</param>
            <param name="defaultValue">The default value of the configuration entity.</param>
            <param name="typeConverter">The type of the converter to apply.</param>
            <param name="validator">The validator to use.</param>
            <param name="options">One of the <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> enumeration values.</param>
            <param name="description">The description of the configuration entity.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationProperty" /> class.</summary>
            <param name="name">The name of the configuration entity.</param>
            <param name="type">The type of the configuration entity.</param>
            <param name="defaultValue">The default value of the configuration entity.</param>
            <param name="options">One of the <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> enumeration values.</param>
        </member>
        <member name="P:System.Configuration.ConfigurationProperty.Converter">
            <summary>Gets the <see cref="T:System.ComponentModel.TypeConverter" /> used to convert this <see cref="T:System.Configuration.ConfigurationProperty" /> into an XML representation for writing to the configuration file.</summary>
            <exception cref="T:System.Exception">This <see cref="T:System.Configuration.ConfigurationProperty" /> cannot be converted.</exception>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> used to convert this <see cref="T:System.Configuration.ConfigurationProperty" /> into an XML representation for writing to the configuration file.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationProperty.DefaultValue">
            <summary>Gets the default value for this <see cref="T:System.Configuration.ConfigurationProperty" /> property.</summary>
            <returns>An <see cref="T:System.Object" /> that can be cast to the type specified by the <see cref="P:System.Configuration.ConfigurationProperty.Type" /> property.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationProperty.Description">
            <summary>Gets the description associated with the <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
            <returns>A <see langword="string" /> value that describes the property.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
            <summary>Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.</summary>
            <returns>
                <see langword="true" /> if the property requires assembly name transformation; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
            <summary>Gets a value that indicates whether the property is the default collection of an element.</summary>
            <returns>
                <see langword="true" /> if the property is the default collection of an element; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationProperty.IsKey">
            <summary>Gets a value indicating whether this <see cref="T:System.Configuration.ConfigurationProperty" /> is the key for the containing <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
            <returns>
                <see langword="true" /> if this <see cref="T:System.Configuration.ConfigurationProperty" /> object is the key for the containing element; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationProperty.IsRequired">
            <summary>Gets a value indicating whether this <see cref="T:System.Configuration.ConfigurationProperty" /> is required.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationProperty" /> is required; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
            <summary>Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.</summary>
            <returns>
                <see langword="true" /> if the property requires type-name transformation; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
            <summary>Indicates whether the configuration property's parent configuration section is queried at serialization time to determine whether the configuration property should be serialized into XML.</summary>
            <returns>
                <see langword="true" /> if the parent configuration section should be queried; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationProperty.Name">
            <summary>Gets the name of this <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
            <returns>The name of the <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationProperty.Type">
            <summary>Gets the type of this <see cref="T:System.Configuration.ConfigurationProperty" /> object.</summary>
            <returns>A <see cref="T:System.Type" /> representing the type of this <see cref="T:System.Configuration.ConfigurationProperty" /> object.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationProperty.Validator">
            <summary>Gets the <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />, which is used to validate this <see cref="T:System.Configuration.ConfigurationProperty" /> object.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator, which is used to validate this <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationPropertyAttribute">
            <summary>Declaratively instructs the .NET Framework to instantiate a configuration property. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of <see cref="T:System.Configuration.ConfigurationPropertyAttribute" /> class.</summary>
            <param name="name">Name of the <see cref="T:System.Configuration.ConfigurationProperty" /> object defined.</param>
        </member>
        <member name="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
            <summary>Gets or sets the default value for the decorated property.</summary>
            <returns>The object representing the default value of the decorated configuration-element property.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
            <summary>Gets or sets a value indicating whether this is the default property collection for the decorated configuration property.</summary>
            <returns>
                <see langword="true" /> if the property represents the default collection of an element; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
            <summary>Gets or sets a value indicating whether this is a key property for the decorated element property.</summary>
            <returns>
                <see langword="true" /> if the property is a key property for an element of the collection; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
            <summary>Gets or sets a value indicating whether the decorated element property is required.</summary>
            <returns>
                <see langword="true" /> if the property is required; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationPropertyAttribute.Name">
            <summary>Gets the name of the decorated configuration-element property.</summary>
            <returns>The name of the decorated configuration-element property.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationPropertyAttribute.Options">
            <summary>Gets or sets the <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> for the decorated configuration-element property.</summary>
            <returns>One of the <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> enumeration values associated with the property.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationPropertyCollection">
            <summary>Represents a collection of configuration-element properties.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
            <summary>Adds a configuration property to the collection.</summary>
            <param name="property">The <see cref="T:System.Configuration.ConfigurationProperty" /> to add.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationPropertyCollection.Clear">
            <summary>Removes all configuration property objects from the collection.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
            <summary>Specifies whether the configuration property is contained in this collection.</summary>
            <param name="name">An identifier for the <see cref="T:System.Configuration.ConfigurationProperty" /> to verify.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Configuration.ConfigurationProperty" /> is contained in the collection; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
            <summary>Copies this ConfigurationPropertyCollection to an array.</summary>
            <param name="array">Array to which to copy.</param>
            <param name="index">Index at which to begin copying.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
            <summary>Gets the <see cref="T:System.Collections.IEnumerator" /> object as it applies to the collection.</summary>
            <returns>The <see cref="T:System.Collections.IEnumerator" /> object as it applies to the collection</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
            <summary>Removes a configuration property from the collection.</summary>
            <param name="name">The <see cref="T:System.Configuration.ConfigurationProperty" /> to remove.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Configuration.ConfigurationProperty" /> was removed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Copies this collection to an array.</summary>
            <param name="array">The array to which to copy.</param>
            <param name="index">The index location at which to begin copying.</param>
        </member>
        <member name="P:System.Configuration.ConfigurationPropertyCollection.Count">
            <summary>Gets the number of properties in the collection.</summary>
            <returns>The number of properties in the collection.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
            <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
            <returns>
                <see langword="true" /> if access to the <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> is synchronized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
            <summary>Gets the collection item with the specified name.</summary>
            <param name="name">The <see cref="T:System.Configuration.ConfigurationProperty" /> to return.</param>
            <returns>The <see cref="T:System.Configuration.ConfigurationProperty" /> with the specified <paramref name="name" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
            <summary>Gets the object to synchronize access to the collection.</summary>
            <returns>The object to synchronize access to the collection.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationPropertyOptions">
            <summary>Specifies the options to apply to a property.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired">
            <summary>Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
            <summary>Indicates that the property is a default collection.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
            <summary>Indicates that the property is a collection key.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
            <summary>Indicates that the property is required.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired">
            <summary>Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired">
            <summary>Indicates whether the configuration property's parent configuration section should be queried at serialization time to determine whether the configuration property should be serialized into XML.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationPropertyOptions.None">
            <summary>Indicates that no option applies to the property.</summary>
        </member>
        <member name="T:System.Configuration.ConfigurationSaveMode">
            <summary>Determines which properties are written out to a configuration file.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationSaveMode.Full">
            <summary>Causes all properties to be written to the configuration file. This is useful mostly for creating information configuration files or moving configuration values from one machine to another.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationSaveMode.Minimal">
            <summary>Causes only properties that differ from inherited values to be written to the configuration file.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationSaveMode.Modified">
            <summary>Causes only modified properties to be written to the configuration file, even when the value is the same as the inherited value.</summary>
        </member>
        <member name="T:System.Configuration.ConfigurationSection">
            <summary>Represents a section within a configuration file.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationSection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationSection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
            <summary>Reads XML from the configuration file.</summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader" /> object, which reads from the configuration file.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
                <paramref name="reader" /> found no elements in the configuration file.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
            <summary>Returns a custom object when overridden in a derived class.</summary>
            <returns>The object representing the section.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSection.IsModified">
            <summary>Indicates whether this configuration element has been modified since it was last saved or loaded when implemented in a derived class.</summary>
            <returns>
                <see langword="true" /> if the element has been modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSection.ResetModified">
            <summary>Resets the value of the <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> method to <see langword="false" /> when implemented in a derived class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>Creates an XML string containing an unmerged view of the <see cref="T:System.Configuration.ConfigurationSection" /> object as a single section to write to a file.</summary>
            <param name="parentElement">The <see cref="T:System.Configuration.ConfigurationElement" /> instance to use as the parent when performing the un-merge.</param>
            <param name="name">The name of the section to create.</param>
            <param name="saveMode">The <see cref="T:System.Configuration.ConfigurationSaveMode" /> instance to use when writing to a string.</param>
            <returns>An XML string containing an unmerged view of the <see cref="T:System.Configuration.ConfigurationSection" /> object.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
            <summary>Indicates whether the specified element should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.</summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> object that is a candidate for serialization.</param>
            <param name="elementName">The name of the <see cref="T:System.Configuration.ConfigurationElement" /> object as it occurs in XML.</param>
            <param name="targetFramework">The target version of the .NET Framework.</param>
            <returns>
                <see langword="true" /> if the <paramref name="element" /> should be serialized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
            <summary>Indicates whether the specified property should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.</summary>
            <param name="property">The <see cref="T:System.Configuration.ConfigurationProperty" /> object that is a candidate for serialization.</param>
            <param name="propertyName">The name of the <see cref="T:System.Configuration.ConfigurationProperty" /> object as it occurs in XML.</param>
            <param name="targetFramework">The target version of the .NET Framework.</param>
            <param name="parentConfigurationElement">The parent element of the property.</param>
            <returns>
                <see langword="true" /> if the <paramref name="property" /> should be serialized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>Indicates whether the current <see cref="T:System.Configuration.ConfigurationSection" /> instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.</summary>
            <param name="targetFramework">The target version of the .NET Framework.</param>
            <returns>
                <see langword="true" /> if the current section should be serialized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSection.SectionInformation">
            <summary>Gets a <see cref="T:System.Configuration.SectionInformation" /> object that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationSection" /> object.</summary>
            <returns>A <see cref="T:System.Configuration.SectionInformation" /> that contains the non-customizable information and functionality of the <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationSectionCollection">
            <summary>Represents a collection of related sections within a configuration file.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
            <summary>Adds a <see cref="T:System.Configuration.ConfigurationSection" /> object to the <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
            <param name="name">The name of the section to be added.</param>
            <param name="section">The section to be added.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionCollection.Clear">
            <summary>Clears this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
            <summary>Copies this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object to an array.</summary>
            <param name="array">The array to copy the <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object to.</param>
            <param name="index">The index location at which to begin copying.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="array" /> is less than the value of <see cref="P:System.Configuration.ConfigurationSectionCollection.Count" /> plus <paramref name="index" />.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
            <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSection" /> object contained in this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
            <param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSection" /> object to be returned.</param>
            <returns>The <see cref="T:System.Configuration.ConfigurationSection" /> object at the specified index.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
            <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSection" /> object contained in this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSection" /> object to be returned.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="name" /> is null or an empty string ("").</exception>
            <returns>The <see cref="T:System.Configuration.ConfigurationSection" /> object with the specified name.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
            <summary>Gets an enumerator that can iterate through this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
            <summary>Gets the key of the specified <see cref="T:System.Configuration.ConfigurationSection" /> object contained in this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
            <param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSection" /> object whose key is to be returned.</param>
            <returns>The key of the <see cref="T:System.Configuration.ConfigurationSection" /> object at the specified index.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Used by the system during serialization.</summary>
            <param name="info">The applicable <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
            <param name="context">The applicable <see cref="T:System.Runtime.Serialization.StreamingContext" /> object.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
            <summary>Removes the specified <see cref="T:System.Configuration.ConfigurationSection" /> object from this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
            <param name="name">The name of the section to be removed.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
            <summary>Removes the specified <see cref="T:System.Configuration.ConfigurationSection" /> object from this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
            <param name="index">The index of the section to be removed.</param>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionCollection.Count">
            <summary>Gets the number of sections in this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
            <returns>An integer that represents the number of sections in the collection.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
            <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSection" /> object.</summary>
            <param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSection" /> object to be returned.</param>
            <returns>The <see cref="T:System.Configuration.ConfigurationSection" /> object at the specified index.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
            <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSection" /> object.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSection" /> object to be returned.</param>
            <returns>The <see cref="T:System.Configuration.ConfigurationSection" /> object with the specified name.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionCollection.Keys">
            <summary>Gets the keys to all <see cref="T:System.Configuration.ConfigurationSection" /> objects contained in this <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object.</summary>
            <returns>A <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> object that contains the keys of all sections in this collection.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationSectionGroup">
            <summary>Represents a group of related sections within a configuration file.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroup.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
            <summary>Forces the declaration for this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
            <summary>Forces the declaration for this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
            <param name="force">
                <see langword="true" /> if the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object must be written to the file; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object is the root section group.  
  
-or-
  
 The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object has a location.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>Indicates whether the current <see cref="T:System.Configuration.ConfigurationSectionGroup" /> instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.</summary>
            <param name="targetFramework">The target version of the .NET Framework.</param>
            <returns>
                <see langword="true" /> if the current section group should be serialized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
            <summary>Gets a value that indicates whether this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object declaration is required.</summary>
            <returns>
                <see langword="true" /> if this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> declaration is required; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
            <summary>Gets a value that indicates whether this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object is declared.</summary>
            <returns>
                <see langword="true" /> if this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> is declared; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionGroup.Name">
            <summary>Gets the name property of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
            <returns>The name property of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
            <summary>Gets the section group name associated with this <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
            <returns>The section group name of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
            <summary>Gets a <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object that contains all the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> objects that are children of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
            <returns>A <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object that contains all the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> objects that are children of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionGroup.Sections">
            <summary>Gets a <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object that contains all of <see cref="T:System.Configuration.ConfigurationSection" /> objects within this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
            <returns>A <see cref="T:System.Configuration.ConfigurationSectionCollection" /> object that contains all the <see cref="T:System.Configuration.ConfigurationSection" /> objects within this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionGroup.Type">
            <summary>Gets or sets the type for this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</summary>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object is the root section group.  
  
-or-
  
 The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object has a location.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The section or group is already defined at another level.</exception>
            <returns>The type of this <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationSectionGroupCollection">
            <summary>Represents a collection of <see cref="T:System.Configuration.ConfigurationSectionGroup" /> objects.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
            <summary>Adds a <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to be added.</param>
            <param name="sectionGroup">The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to be added.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
            <summary>Clears the collection.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
            <summary>Copies this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object to an array.</summary>
            <param name="array">The array to copy the object to.</param>
            <param name="index">The index location at which to begin copying.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The length of <paramref name="array" /> is less than the value of <see cref="P:System.Configuration.ConfigurationSectionGroupCollection.Count" /> plus <paramref name="index" />.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
            <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object contained in the collection.</summary>
            <param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to be returned.</param>
            <returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object at the specified index.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
            <summary>Gets the specified <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object from the collection.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to be returned.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="name" /> is null or an empty string ("").</exception>
            <returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object with the specified name.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
            <summary>Gets an enumerator that can iterate through the <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
            <summary>Gets the key of the specified <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object contained in this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</summary>
            <param name="index">The index of the section group whose key is to be returned.</param>
            <returns>The key of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object at the specified index.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Used by the system during serialization.</summary>
            <param name="info">The applicable <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
            <param name="context">The applicable <see cref="T:System.Runtime.Serialization.StreamingContext" /> object.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
            <summary>Removes the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object whose name is specified from this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</summary>
            <param name="name">The name of the section group to be removed.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
            <summary>Removes the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object whose index is specified from this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</summary>
            <param name="index">The index of the section group to be removed.</param>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
            <summary>Gets the number of section groups in the collection.</summary>
            <returns>An integer that represents the number of section groups in the collection.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
            <summary>Gets the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object whose index is specified from the collection.</summary>
            <param name="index">The index of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to be returned.</param>
            <returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object at the specified index.  
  
 In C#, this property is the indexer for the <see cref="T:System.Configuration.ConfigurationSectionCollection" /> class.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
            <summary>Gets the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object whose name is specified from the collection.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object to be returned.</param>
            <returns>The <see cref="T:System.Configuration.ConfigurationSectionGroup" /> object with the specified name.  
  
 In C#, this property is the indexer for the <see cref="T:System.Configuration.ConfigurationSectionCollection" /> class.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
            <summary>Gets the keys to all <see cref="T:System.Configuration.ConfigurationSectionGroup" /> objects contained in this <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> object.</summary>
            <returns>A <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> object that contains the names of all section groups in this collection.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationSettings">
            <summary>Provides runtime versions 1.0 and 1.1 support for reading configuration sections and common configuration settings.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)">
            <summary>Returns the <see cref="T:System.Configuration.ConfigurationSection" /> object for the passed configuration section name and path.</summary>
            <param name="sectionName">A configuration name and path, such as "system.net/settings".</param>
            <exception cref="T:System.Configuration.ConfigurationException">Unable to retrieve the requested section.</exception>
            <returns>The <see cref="T:System.Configuration.ConfigurationSection" /> object for the passed configuration section name and path.  
  
 <block subset="none" type="note"><para>  
 The <see cref="T:System.Configuration.ConfigurationSettings" /> class provides backward compatibility only. Use the <see cref="T:System.Configuration.ConfigurationManager" /> class or <see cref="T:System.Web.Configuration.WebConfigurationManager" /> class instead.</para></block></returns>
        </member>
        <member name="P:System.Configuration.ConfigurationSettings.AppSettings">
            <summary>Gets a read-only collection of the application settings from the configuration file.</summary>
            <returns>A read-only collection of the application settings from the configuration file.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationUserLevel">
            <summary>Used to specify which configuration file is to be represented by the Configuration object.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationUserLevel.None">
            <summary>Gets the <see cref="T:System.Configuration.Configuration" /> that applies to all users.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
            <summary>Gets the roaming <see cref="T:System.Configuration.Configuration" /> that applies to the current user.</summary>
        </member>
        <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
            <summary>Gets the local <see cref="T:System.Configuration.Configuration" /> that applies to the current user.</summary>
        </member>
        <member name="T:System.Configuration.ConfigurationValidatorAttribute">
            <summary>Serves as the base class for the <see cref="N:System.Configuration" /> validator attribute types.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> class using the specified validator type.</summary>
            <param name="validator">The validator type to use when creating an instance of <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="validator" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="validator" /> is not derived from <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</exception>
        </member>
        <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
            <summary>Gets the validator attribute instance.</summary>
            <returns>The current <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
        </member>
        <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
            <summary>Gets the type of the validator attribute.</summary>
            <returns>The <see cref="T:System.Type" /> of the current validator attribute instance.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationValidatorBase">
            <summary>Acts as a base class for deriving a validation class so that a value of an object can be verified.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationValidatorBase.#ctor">
            <summary>Initializes an instance of the <see cref="T:System.Configuration.ConfigurationValidatorBase" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
            <summary>Determines whether an object can be validated based on type.</summary>
            <param name="type">The object type.</param>
            <returns>
                <see langword="true" /> if the <paramref name="type" /> parameter value matches the expected <see langword="type" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
            <summary>Determines whether the value of an object is valid.</summary>
            <param name="value">The object value.</param>
        </member>
        <member name="T:System.Configuration.ConfigXmlDocument">
            <summary>Wraps the corresponding <see cref="T:System.Xml.XmlDocument" /> type and also carries the necessary information for reporting file-name and line numbers.</summary>
        </member>
        <member name="M:System.Configuration.ConfigXmlDocument.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigXmlDocument" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)">
            <summary>Creates a configuration element attribute.</summary>
            <param name="prefix">The prefix definition.</param>
            <param name="localName">The name that is used locally.</param>
            <param name="namespaceUri">The URL that is assigned to the namespace.</param>
            <returns>The <see cref="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" /> attribute.</returns>
        </member>
        <member name="M:System.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)">
            <summary>Creates an XML CData section.</summary>
            <param name="data">The data to use.</param>
            <returns>The <see cref="T:System.Xml.XmlCDataSection" /> value.</returns>
        </member>
        <member name="M:System.Configuration.ConfigXmlDocument.CreateComment(System.String)">
            <summary>Create an XML comment.</summary>
            <param name="data">The comment data.</param>
            <returns>The <see cref="T:System.Xml.XmlComment" /> value.</returns>
        </member>
        <member name="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)">
            <summary>Creates a configuration element.</summary>
            <param name="prefix">The prefix definition.</param>
            <param name="localName">The name used locally.</param>
            <param name="namespaceUri">The namespace for the URL.</param>
            <returns>The <see cref="T:System.Xml.XmlElement" /> value.</returns>
        </member>
        <member name="M:System.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)">
            <summary>Creates white spaces.</summary>
            <param name="data">The data to use.</param>
            <returns>The <see cref="T:System.Xml.XmlSignificantWhitespace" /> value.</returns>
        </member>
        <member name="M:System.Configuration.ConfigXmlDocument.CreateTextNode(System.String)">
            <summary>Create a text node.</summary>
            <param name="text">The text to use.</param>
            <returns>The <see cref="T:System.Xml.XmlText" /> value.</returns>
        </member>
        <member name="M:System.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)">
            <summary>Creates white space.</summary>
            <param name="data">The data to use.</param>
            <returns>The <see cref="T:System.Xml.XmlWhitespace" /> value.</returns>
        </member>
        <member name="M:System.Configuration.ConfigXmlDocument.Load(System.String)">
            <summary>Loads the configuration file.</summary>
            <param name="filename">The name of the file.</param>
        </member>
        <member name="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)">
            <summary>Loads a single configuration element.</summary>
            <param name="filename">The name of the file.</param>
            <param name="sourceReader">The source for the reader.</param>
        </member>
        <member name="P:System.Configuration.ConfigXmlDocument.Filename">
            <summary>Gets the configuration file name.</summary>
            <returns>The configuration file name.</returns>
        </member>
        <member name="P:System.Configuration.ConfigXmlDocument.LineNumber">
            <summary>Gets the current node line number.</summary>
            <returns>The line number for the current node.</returns>
        </member>
        <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#Filename">
            <summary>Gets the configuration file name.</summary>
            <returns>The file name.</returns>
        </member>
        <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#LineNumber">
            <summary>Gets the configuration line number.</summary>
            <returns>The line number.</returns>
        </member>
        <member name="T:System.Configuration.ConnectionStringSettings">
            <summary>Represents a single, named connection string in the connection strings configuration file section.</summary>
        </member>
        <member name="M:System.Configuration.ConnectionStringSettings.#ctor">
            <summary>Initializes a new instance of a <see cref="T:System.Configuration.ConnectionStringSettings" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of a <see cref="T:System.Configuration.ConnectionStringSettings" /> class.</summary>
            <param name="name">The name of the connection string.</param>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance of a <see cref="T:System.Configuration.ConnectionStringSettings" /> object.</summary>
            <param name="name">The name of the connection string.</param>
            <param name="connectionString">The connection string.</param>
            <param name="providerName">The name of the provider to use with the connection string.</param>
        </member>
        <member name="M:System.Configuration.ConnectionStringSettings.ToString">
            <summary>Returns a string representation of the object.</summary>
            <returns>A string representation of the object.</returns>
        </member>
        <member name="P:System.Configuration.ConnectionStringSettings.ConnectionString">
            <summary>Gets or sets the connection string.</summary>
            <returns>The string value assigned to the <see cref="P:System.Configuration.ConnectionStringSettings.ConnectionString" /> property.</returns>
        </member>
        <member name="P:System.Configuration.ConnectionStringSettings.Name">
            <summary>Gets or sets the <see cref="T:System.Configuration.ConnectionStringSettings" /> name.</summary>
            <returns>The string value assigned to the <see cref="P:System.Configuration.ConnectionStringSettings.Name" /> property.</returns>
        </member>
        <member name="P:System.Configuration.ConnectionStringSettings.ProviderName">
            <summary>Gets or sets the provider name property.</summary>
            <returns>The <see cref="P:System.Configuration.ConnectionStringSettings.ProviderName" /> property.</returns>
        </member>
        <member name="T:System.Configuration.ConnectionStringSettingsCollection">
            <summary>Contains a collection of <see cref="T:System.Configuration.ConnectionStringSettings" /> objects.</summary>
        </member>
        <member name="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
            <summary>Adds a <see cref="T:System.Configuration.ConnectionStringSettings" /> object to the collection.</summary>
            <param name="settings">A <see cref="T:System.Configuration.ConnectionStringSettings" /> object to add to the collection.</param>
        </member>
        <member name="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
            <summary>Removes all the <see cref="T:System.Configuration.ConnectionStringSettings" /> objects from the collection.</summary>
        </member>
        <member name="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
            <summary>Returns the collection index of the passed <see cref="T:System.Configuration.ConnectionStringSettings" /> object.</summary>
            <param name="settings">A <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
            <returns>The collection index of the specified <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> object.</returns>
        </member>
        <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
            <summary>Removes the specified <see cref="T:System.Configuration.ConnectionStringSettings" /> object from the collection.</summary>
            <param name="settings">A <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
        </member>
        <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
            <summary>Removes the specified <see cref="T:System.Configuration.ConnectionStringSettings" /> object from the collection.</summary>
            <param name="name">The name of a <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
        </member>
        <member name="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
            <summary>Removes the <see cref="T:System.Configuration.ConnectionStringSettings" /> object at the specified index in the collection.</summary>
            <param name="index">The index of a <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
        </member>
        <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
            <summary>Gets or sets the connection string at the specified index in the collection.</summary>
            <param name="index">The index of a <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
            <returns>The <see cref="T:System.Configuration.ConnectionStringSettings" /> object at the specified index.</returns>
        </member>
        <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
            <summary>Gets or sets the <see cref="T:System.Configuration.ConnectionStringSettings" /> object with the specified name in the collection.</summary>
            <param name="name">The name of a <see cref="T:System.Configuration.ConnectionStringSettings" /> object in the collection.</param>
            <returns>The <see cref="T:System.Configuration.ConnectionStringSettings" /> object with the specified name; otherwise, <see langword="null" />.</returns>
        </member>
        <member name="T:System.Configuration.ConnectionStringsSection">
            <summary>Provides programmatic access to the connection strings configuration-file section.</summary>
        </member>
        <member name="M:System.Configuration.ConnectionStringsSection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConnectionStringsSection" /> class.</summary>
        </member>
        <member name="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
            <summary>Gets a <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> collection of <see cref="T:System.Configuration.ConnectionStringSettings" /> objects.</summary>
            <returns>A <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> collection of <see cref="T:System.Configuration.ConnectionStringSettings" /> objects.</returns>
        </member>
        <member name="T:System.Configuration.ContextInformation">
            <summary>Encapsulates the context information that is associated with a <see cref="T:System.Configuration.ConfigurationElement" /> object. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.ContextInformation.GetSection(System.String)">
            <summary>Provides an object containing configuration-section information based on the specified section name.</summary>
            <param name="sectionName">The name of the configuration section.</param>
            <returns>An object containing the specified section within the configuration.</returns>
        </member>
        <member name="P:System.Configuration.ContextInformation.HostingContext">
            <summary>Gets the context of the environment where the configuration property is being evaluated.</summary>
            <returns>An object specifying the environment where the configuration property is being evaluated.</returns>
        </member>
        <member name="P:System.Configuration.ContextInformation.IsMachineLevel">
            <summary>Gets a value specifying whether the configuration property is being evaluated at the machine configuration level.</summary>
            <returns>
                <see langword="true" /> if the configuration property is being evaluated at the machine configuration level; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Configuration.DefaultSection">
            <summary>Represents a basic configuration-section handler that exposes the configuration section's XML for both read and write access.</summary>
        </member>
        <member name="M:System.Configuration.DefaultSection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.DefaultSection" /> class.</summary>
        </member>
        <member name="T:System.Configuration.DefaultSettingValueAttribute">
            <summary>Specifies the default value for an application settings property.</summary>
        </member>
        <member name="M:System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)">
            <summary>Initializes an instance of the <see cref="T:System.Configuration.DefaultSettingValueAttribute" /> class.</summary>
            <param name="value">A <see cref="T:System.String" /> that represents the default value for the property.</param>
        </member>
        <member name="P:System.Configuration.DefaultSettingValueAttribute.Value">
            <summary>Gets the default value for the application settings property.</summary>
            <returns>A <see cref="T:System.String" /> that represents the default value for the property.</returns>
        </member>
        <member name="T:System.Configuration.DefaultValidator">
            <summary>Provides validation of an object. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.DefaultValidator.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.DefaultValidator" /> class.</summary>
        </member>
        <member name="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
            <summary>Determines whether an object can be validated, based on type.</summary>
            <param name="type">The object type.</param>
            <returns>
                <see langword="true" /> for all types being validated.</returns>
        </member>
        <member name="M:System.Configuration.DefaultValidator.Validate(System.Object)">
            <summary>Determines whether the value of an object is valid.</summary>
            <param name="value">The object value.</param>
        </member>
        <member name="T:System.Configuration.DictionarySectionHandler">
            <summary>Provides key/value pair configuration information from a configuration section.</summary>
        </member>
        <member name="M:System.Configuration.DictionarySectionHandler.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.DictionarySectionHandler" /> class.</summary>
        </member>
        <member name="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>Creates a new configuration handler and adds it to the section-handler collection based on the specified parameters.</summary>
            <param name="parent">Parent object.</param>
            <param name="context">Configuration context object.</param>
            <param name="section">Section XML node.</param>
            <returns>A configuration object.</returns>
        </member>
        <member name="P:System.Configuration.DictionarySectionHandler.KeyAttributeName">
            <summary>Gets the XML attribute name to use as the key in a key/value pair.</summary>
            <returns>A string value containing the name of the key attribute.</returns>
        </member>
        <member name="P:System.Configuration.DictionarySectionHandler.ValueAttributeName">
            <summary>Gets the XML attribute name to use as the value in a key/value pair.</summary>
            <returns>A string value containing the name of the value attribute.</returns>
        </member>
        <member name="T:System.Configuration.DpapiProtectedConfigurationProvider">
            <summary>Provides a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object that uses the Windows data protection API (DPAPI) to encrypt and decrypt configuration data.</summary>
        </member>
        <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> class using default settings.</summary>
        </member>
        <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
            <summary>Decrypts the passed <see cref="T:System.Xml.XmlNode" /> object.</summary>
            <param name="encryptedNode">The <see cref="T:System.Xml.XmlNode" /> object to decrypt.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
                <paramref name="encryptedNode" /> does not have <see cref="P:System.Xml.XmlNode.Name" /> set to "EncryptedData" and <see cref="T:System.Xml.XmlNodeType" /> set to <see cref="F:System.Xml.XmlNodeType.Element" />.  
  
-or-
  
 <paramref name="encryptedNode" /> does not have a child node named "CipherData" with a child node named "CipherValue".  
  
-or-
  
 The child node named "CipherData" is an empty node.</exception>
            <returns>A decrypted <see cref="T:System.Xml.XmlNode" /> object.</returns>
        </member>
        <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
            <summary>Encrypts the passed <see cref="T:System.Xml.XmlNode" /> object.</summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> object to encrypt.</param>
            <returns>An encrypted <see cref="T:System.Xml.XmlNode" /> object.</returns>
        </member>
        <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>Initializes the provider with default settings.</summary>
            <param name="name">The provider name to use for the object.</param>
            <param name="configurationValues">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> collection of values to use when initializing the object.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
                <paramref name="configurationValues" /> contains an unrecognized configuration setting.</exception>
        </member>
        <member name="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
            <summary>Gets a value that indicates whether the <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> object is using machine-specific or user-account-specific protection.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> is using machine-specific protection; <see langword="false" /> if it is using user-account-specific protection.</returns>
        </member>
        <member name="T:System.Configuration.ElementInformation">
            <summary>Contains meta-information about an individual element within the configuration. This class cannot be inherited.</summary>
        </member>
        <member name="P:System.Configuration.ElementInformation.Errors">
            <summary>Gets the errors for the associated element and subelements.</summary>
            <returns>The collection containing the errors for the associated element and subelements</returns>
        </member>
        <member name="P:System.Configuration.ElementInformation.IsCollection">
            <summary>Gets a value indicating whether the associated <see cref="T:System.Configuration.ConfigurationElement" /> object is a <see cref="T:System.Configuration.ConfigurationElementCollection" /> collection.</summary>
            <returns>
                <see langword="true" /> if the associated <see cref="T:System.Configuration.ConfigurationElement" /> object is a <see cref="T:System.Configuration.ConfigurationElementCollection" /> collection; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ElementInformation.IsLocked">
            <summary>Gets a value that indicates whether the associated <see cref="T:System.Configuration.ConfigurationElement" /> object cannot be modified.</summary>
            <returns>
                <see langword="true" /> if the associated <see cref="T:System.Configuration.ConfigurationElement" /> object cannot be modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ElementInformation.IsPresent">
            <summary>Gets a value indicating whether the associated <see cref="T:System.Configuration.ConfigurationElement" /> object is in the configuration file.</summary>
            <returns>
                <see langword="true" /> if the associated <see cref="T:System.Configuration.ConfigurationElement" /> object is in the configuration file; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.ElementInformation.LineNumber">
            <summary>Gets the line number in the configuration file where the associated <see cref="T:System.Configuration.ConfigurationElement" /> object is defined.</summary>
            <returns>The line number in the configuration file where the associated <see cref="T:System.Configuration.ConfigurationElement" /> object is defined.</returns>
        </member>
        <member name="P:System.Configuration.ElementInformation.Properties">
            <summary>Gets a <see cref="T:System.Configuration.PropertyInformationCollection" /> collection of the properties in the associated <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
            <returns>A <see cref="T:System.Configuration.PropertyInformationCollection" /> collection of the properties in the associated <see cref="T:System.Configuration.ConfigurationElement" /> object.</returns>
        </member>
        <member name="P:System.Configuration.ElementInformation.Source">
            <summary>Gets the source file where the associated <see cref="T:System.Configuration.ConfigurationElement" /> object originated.</summary>
            <returns>The source file where the associated <see cref="T:System.Configuration.ConfigurationElement" /> object originated.</returns>
        </member>
        <member name="P:System.Configuration.ElementInformation.Type">
            <summary>Gets the type of the associated <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
            <returns>The type of the associated <see cref="T:System.Configuration.ConfigurationElement" /> object.</returns>
        </member>
        <member name="P:System.Configuration.ElementInformation.Validator">
            <summary>Gets the object used to validate the associated <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
            <returns>The object used to validate the associated <see cref="T:System.Configuration.ConfigurationElement" /> object.</returns>
        </member>
        <member name="T:System.Configuration.ExeConfigurationFileMap">
            <summary>Defines the configuration file mapping for an .exe application. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ExeConfigurationFileMap" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ExeConfigurationFileMap" /> class by using the specified machine configuration file name.</summary>
            <param name="machineConfigFileName">The name of the machine configuration file that includes the complete physical path (for example, <c>c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config</c>).</param>
        </member>
        <member name="M:System.Configuration.ExeConfigurationFileMap.Clone">
            <summary>Creates a copy of the existing <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object.</summary>
            <returns>An <see cref="T:System.Configuration.ExeConfigurationFileMap" /> object.</returns>
        </member>
        <member name="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
            <summary>Gets or sets the name of the configuration file.</summary>
            <returns>The configuration file name.</returns>
        </member>
        <member name="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
            <summary>Gets or sets the name of the configuration file for the local user.</summary>
            <returns>The configuration file name.</returns>
        </member>
        <member name="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
            <summary>Gets or sets the name of the configuration file for the roaming user.</summary>
            <returns>The configuration file name.</returns>
        </member>
        <member name="T:System.Configuration.ExeContext">
            <summary>Manages the path context for the current application. This class cannot be inherited.</summary>
        </member>
        <member name="P:System.Configuration.ExeContext.ExePath">
            <summary>Gets the current path for the application.</summary>
            <returns>A string value containing the current path.</returns>
        </member>
        <member name="P:System.Configuration.ExeContext.UserLevel">
            <summary>Gets an object representing the path level of the current application.</summary>
            <returns>A <see cref="T:System.Configuration.ConfigurationUserLevel" /> object representing the path level of the current application.</returns>
        </member>
        <member name="T:System.Configuration.GenericEnumConverter">
            <summary>Converts between a string and an enumeration type.</summary>
        </member>
        <member name="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.GenericEnumConverter" /> class.</summary>
            <param name="typeEnum">The enumeration type to convert.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="typeEnum" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts a <see cref="T:System.String" /> to an <see cref="T:System.Enum" /> type.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="data">The <see cref="T:System.String" /> object to convert.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="data" /> is null or an empty string ("").  
  
-or-
  
 <paramref name="data" /> starts with a numeric character.  
  
-or-
  
 <paramref name="data" /> includes white space.</exception>
            <returns>The <see cref="T:System.Enum" /> type that represents the <paramref name="data" /> parameter.</returns>
        </member>
        <member name="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts an <see cref="T:System.Enum" /> type to a <see cref="T:System.String" /> value.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="value">The value to convert to.</param>
            <param name="type">The type to convert to.</param>
            <returns>The <see cref="T:System.String" /> that represents the <paramref name="value" /> parameter.</returns>
        </member>
        <member name="T:System.Configuration.IApplicationSettingsProvider">
            <summary>Defines extended capabilities for client-based application settings providers.</summary>
        </member>
        <member name="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
            <summary>Returns the value of the specified settings property for the previous version of the same application.</summary>
            <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
            <param name="property">The <see cref="T:System.Configuration.SettingsProperty" /> whose value is to be returned.</param>
            <returns>A <see cref="T:System.Configuration.SettingsPropertyValue" /> containing the value of the specified property setting as it was last set in the previous version of the application; or <see langword="null" /> if the setting cannot be found.</returns>
        </member>
        <member name="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
            <summary>Resets the application settings associated with the specified application to their default values.</summary>
            <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
        </member>
        <member name="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>Indicates to the provider that the application has been upgraded. This offers the provider an opportunity to upgrade its stored settings as appropriate.</summary>
            <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
            <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</param>
        </member>
        <member name="T:System.Configuration.IConfigurationSectionHandler">
            <summary>Handles the access to certain configuration sections.</summary>
        </member>
        <member name="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>Creates a configuration section handler.</summary>
            <param name="parent">Parent object.</param>
            <param name="configContext">Configuration context object.</param>
            <param name="section">Section XML node.</param>
            <returns>The created section handler object.</returns>
        </member>
        <member name="T:System.Configuration.IConfigurationSystem">
            <summary>Provides standard configuration methods.</summary>
        </member>
        <member name="M:System.Configuration.IConfigurationSystem.GetConfig(System.String)">
            <summary>Gets the specified configuration.</summary>
            <param name="configKey">The configuration key.</param>
            <returns>The object representing the configuration.</returns>
        </member>
        <member name="M:System.Configuration.IConfigurationSystem.Init">
            <summary>Used for initialization.</summary>
        </member>
        <member name="T:System.Configuration.IdnElement">
            <summary>Provides the configuration setting for International Domain Name (IDN) processing in the <see cref="T:System.Uri" /> class.</summary>
        </member>
        <member name="M:System.Configuration.IdnElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.IdnElement" /> class.</summary>
        </member>
        <member name="P:System.Configuration.IdnElement.Enabled">
            <summary>Gets or sets the value of the <see cref="T:System.Configuration.IdnElement" /> configuration setting.</summary>
            <returns>A <see cref="T:System.UriIdnScope" /> that contains the current configuration setting for IDN processing.</returns>
        </member>
        <member name="T:System.Configuration.IgnoreSection">
            <summary>Provides a wrapper type definition for configuration sections that are not handled by the <see cref="N:System.Configuration" /> types.</summary>
        </member>
        <member name="M:System.Configuration.IgnoreSection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.IgnoreSection" /> class.</summary>
        </member>
        <member name="T:System.Configuration.IgnoreSectionHandler">
            <summary>Provides a legacy section-handler definition for configuration sections that are not handled by the <see cref="N:System.Configuration" /> types.</summary>
        </member>
        <member name="M:System.Configuration.IgnoreSectionHandler.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.IgnoreSectionHandler" /> class.</summary>
        </member>
        <member name="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>Creates a new configuration handler and adds the specified configuration object to the section-handler collection.</summary>
            <param name="parent">The configuration settings in a corresponding parent configuration section.</param>
            <param name="configContext">The virtual path for which the configuration section handler computes configuration values. Normally this parameter is reserved and is <see langword="null" />.</param>
            <param name="section">An <see cref="T:System.Xml.XmlNode" /> that contains the configuration information to be handled. Provides direct access to the XML contents of the configuration section.</param>
            <returns>The created configuration handler object.</returns>
        </member>
        <member name="T:System.Configuration.InfiniteIntConverter">
            <summary>Converts between a string and the standard infinite or integer value.</summary>
        </member>
        <member name="M:System.Configuration.InfiniteIntConverter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.InfiniteIntConverter" /> class.</summary>
        </member>
        <member name="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts a <see cref="T:System.String" /> to an <see cref="T:System.Int32" />.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="data">The <see cref="T:System.String" /> object to convert.</param>
            <returns>The <see cref="F:System.Int32.MaxValue" />, if the <paramref name="data" /> parameter is the <see cref="T:System.String" /> "infinite"; otherwise, the <see cref="T:System.Int32" /> representing the <paramref name="data" /> parameter integer value.</returns>
        </member>
        <member name="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts an <see cref="T:System.Int32" />.to a <see cref="T:System.String" />.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="value">The value to convert to.</param>
            <param name="type">The type to convert to.</param>
            <returns>The <see cref="T:System.String" /> "infinite" if the <paramref name="value" /> is <see cref="F:System.Int32.MaxValue" />; otherwise, the <see cref="T:System.String" /> representing the <paramref name="value" /> parameter.</returns>
        </member>
        <member name="T:System.Configuration.InfiniteTimeSpanConverter">
            <summary>Converts between a string and the standard infinite <see cref="T:System.TimeSpan" /> value.</summary>
        </member>
        <member name="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.InfiniteTimeSpanConverter" /> class.</summary>
        </member>
        <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="data">The <see cref="T:System.String" /> object to convert.</param>
            <returns>The <see cref="F:System.TimeSpan.MaxValue" />, if the <paramref name="data" /> parameter is the <see cref="T:System.String" /> infinite; otherwise, the <see cref="T:System.TimeSpan" /> representing the <paramref name="data" /> parameter in minutes.</returns>
        </member>
        <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> used during object conversion.</param>
            <param name="value">The value to convert.</param>
            <param name="type">The conversion type.</param>
            <returns>The <see cref="T:System.String" /> "infinite", if the <paramref name="value" /> parameter is <see cref="F:System.TimeSpan.MaxValue" />; otherwise, the <see cref="T:System.String" /> representing the <paramref name="value" /> parameter in minutes.</returns>
        </member>
        <member name="T:System.Configuration.IntegerValidator">
            <summary>Provides validation of an <see cref="T:System.Int32" /> value.</summary>
        </member>
        <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</summary>
            <param name="minValue">An <see cref="T:System.Int32" /> object that specifies the minimum value.</param>
            <param name="maxValue">An <see cref="T:System.Int32" /> object that specifies the maximum value.</param>
        </member>
        <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</summary>
            <param name="minValue">An <see cref="T:System.Int32" /> object that specifies the minimum value.</param>
            <param name="maxValue">An <see cref="T:System.Int32" /> object that specifies the maximum value.</param>
            <param name="rangeIsExclusive">
                <see langword="true" /> to specify that the validation range is exclusive. Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.</param>
        </member>
        <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</summary>
            <param name="minValue">An <see cref="T:System.Int32" /> object that specifies the minimum length of the integer value.</param>
            <param name="maxValue">An <see cref="T:System.Int32" /> object that specifies the maximum length of the integer value.</param>
            <param name="rangeIsExclusive">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</param>
            <param name="resolution">An <see cref="T:System.Int32" /> object that specifies a value that must be matched.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="resolution" /> is less than <see langword="0" />.  
  
-or-
  
 <paramref name="minValue" /> is greater than <paramref name="maxValue" />.</exception>
        </member>
        <member name="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
            <summary>Determines whether the type of the object can be validated.</summary>
            <param name="type">The type of the object.</param>
            <returns>
                <see langword="true" /> if the <paramref name="type" /> parameter matches an <see cref="T:System.Int32" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.IntegerValidator.Validate(System.Object)">
            <summary>Determines whether the value of an object is valid.</summary>
            <param name="value">The value to be validated.</param>
        </member>
        <member name="T:System.Configuration.IntegerValidatorAttribute">
            <summary>Declaratively instructs the .NET Framework to perform integer validation on a configuration property. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.IntegerValidatorAttribute.#ctor">
            <summary>Creates a new instance of the <see cref="T:System.Configuration.IntegerValidatorAttribute" /> class.</summary>
        </member>
        <member name="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
            <summary>Gets or sets a value that indicates whether to include or exclude the integers in the range defined by the <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> and <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" /> property values.</summary>
            <returns>
                <see langword="true" /> if the value must be excluded; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
            <summary>Gets or sets the maximum value allowed for the property.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The selected value is less than <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" />.</exception>
            <returns>An integer that indicates the allowed maximum value.</returns>
        </member>
        <member name="P:System.Configuration.IntegerValidatorAttribute.MinValue">
            <summary>Gets or sets the minimum value allowed for the property.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The selected value is greater than <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />.</exception>
            <returns>An integer that indicates the allowed minimum value.</returns>
        </member>
        <member name="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
            <summary>Gets an instance of the <see cref="T:System.Configuration.IntegerValidator" /> class.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance.</returns>
        </member>
        <member name="T:System.Configuration.Internal.DelegatingConfigHost">
            <summary>Delegates all members of the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> interface to another instance of a host.</summary>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.Internal.DelegatingConfigHost" /> class.</summary>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
            <summary>Creates a new configuration context.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <param name="locationSubPath">A string representing a location subpath.</param>
            <returns>A <see cref="T:System.Object" /> representing a new configuration context.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
            <summary>Creates a deprecated configuration context.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <returns>A <see cref="T:System.Object" /> representing a deprecated configuration context.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
            <summary>Decrypts an encrypted configuration section.</summary>
            <param name="encryptedXml">An encrypted section of a configuration file.</param>
            <param name="protectionProvider">An object containing the providers that encrypt and decrypt protected configuration data.</param>
            <param name="protectedConfigSection">An object that provides programatic access to the <c>configProtectedData</c> configuration section.</param>
            <returns>A string representing a decrypted configuration section.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)">
            <summary>Deletes the <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</summary>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
            <summary>Encrypts a section of a configuration object.</summary>
            <param name="clearTextXml">A section of the configuration that is not encrypted.</param>
            <param name="protectionProvider">An object containing the providers that encrypt and decrypt protected configuration data</param>
            <param name="protectedConfigSection">An object that provides programatic access to the <c>configProtectedData</c> configuration section.</param>
            <returns>A string representing an encrypted section of the configuration object.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
            <summary>Returns a configuration path based on a location subpath.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <param name="locationSubPath">A string representing a location subpath.</param>
            <returns>A string representing a configuration path.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
            <summary>Returns a <see cref="T:System.Type" /> representing the type of the configuration.</summary>
            <param name="typeName">A string representing the configuration type.</param>
            <param name="throwOnError">
                <see langword="true" /> if an exception should be thrown if an error is encountered; <see langword="false" /> if an exception should not be thrown if an error is encountered.</param>
            <returns>A <see cref="T:System.Type" /> representing the type of the configuration.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigTypeName(System.Type)">
            <summary>Returns a string representing the type name of the configuration object.</summary>
            <param name="t">A <see cref="T:System.Type" /> object.</param>
            <returns>A string representing the type name of the configuration object.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
            <summary>Sets the specified permission set if available within the host object.</summary>
            <param name="configRecord">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
            <param name="permissionSet">A <see cref="T:System.Security.PermissionSet" /> object.</param>
            <param name="isHostReady">
                <see langword="true" /> if the host has finished initialization; otherwise, <see langword="false" />.</param>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)">
            <summary>Returns the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <returns>A string representing the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
            <summary>Returns the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration source.</summary>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
            <param name="configSource">A string representing the configuration source.</param>
            <returns>A string representing the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration source.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)">
            <summary>Returns a <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> object representing the version of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</summary>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
            <returns>A <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> object representing the version of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.Impersonate">
            <summary>Instructs the host to impersonate and returns an <see cref="T:System.IDisposable" /> object required internally by the .NET Framework.</summary>
            <returns>An <see cref="T:System.IDisposable" /> value.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
            <summary>Initializes the configuration host.</summary>
            <param name="configRoot">An <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</param>
            <param name="hostInitParams">A parameter object containing the values used for initializing the configuration host.</param>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
            <summary>Initializes the host for configuration.</summary>
            <param name="locationSubPath">A string representing a location subpath (passed by reference).</param>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <param name="locationConfigPath">The location configuration path.</param>
            <param name="configRoot">The configuration root element.</param>
            <param name="hostInitConfigurationParams">A parameter object representing the parameters used to initialize the host.</param>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)">
            <summary>Returns a value indicating whether the configuration is above the application configuration in the configuration hierarchy.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <returns>
                <see langword="true" /> if the configuration is above the application configuration in the configuration hierarchy; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsConfigRecordRequired(System.String)">
            <summary>Returns a value indicating whether a configuration record is required for the host configuration initialization.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <returns>
                <see langword="true" /> if a configuration record is required for the host configuration initialization; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
            <summary>Restricts or allows definitions in the host configuration.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <param name="allowDefinition">The <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> object.</param>
            <param name="allowExeDefinition">The <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object.</param>
            <returns>
                <see langword="true" /> if the grant or restriction of definitions in the host configuration was successful; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFile(System.String)">
            <summary>Returns a value indicating whether the file path used by a <see cref="T:System.IO.Stream" /> object to read a configuration file is a valid path.</summary>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
            <returns>
                <see langword="true" /> if the path used by a <see cref="T:System.IO.Stream" /> object to read a configuration file is a valid path; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
            <summary>Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> attribute to disable implicit link demands.</summary>
            <param name="configRecord">The <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
            <returns>
                <see langword="true" /> if the configuration section requires a fully trusted code access security level and does not allow the <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> attribute to disable implicit link demands; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
            <summary>Returns a value indicating whether the initialization of a configuration object is considered delayed.</summary>
            <param name="configRecord">The <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
            <returns>
                <see langword="true" /> if the initialization of a configuration object is considered delayed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)">
            <summary>Returns a value indicating whether the configuration object supports a location tag.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <returns>
                <see langword="true" /> if the configuration object supports a location tag; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsSecondaryRoot(System.String)">
            <summary>Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <returns>
                <see langword="true" /> if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)">
            <summary>Returns a value indicating whether the configuration path is trusted.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <returns>
                <see langword="true" /> if the configuration path is trusted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)">
            <summary>Opens a <see cref="T:System.IO.Stream" /> object to read a configuration file.</summary>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
            <returns>The object specified by <paramref name="streamName" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)">
            <summary>Opens a <see cref="T:System.IO.Stream" /> object to read a configuration file.</summary>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
            <param name="assertPermissions">
                <see langword="true" /> to assert permissions; otherwise, <see langword="false" />.</param>
            <returns>The object specified by <paramref name="streamName" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
            <summary>Opens a <see cref="T:System.IO.Stream" /> object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a <see cref="T:System.IO.Stream" /> object to be designated as a template for copying file attributes.</summary>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
            <param name="templateStreamName">The name of a <see cref="T:System.IO.Stream" /> object from which file attributes are to be copied as a template.</param>
            <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object (passed by reference).</param>
            <returns>A <see cref="T:System.IO.Stream" /> object.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
            <summary>Opens a <see cref="T:System.IO.Stream" /> object for writing to a configuration file. Allows a <see cref="T:System.IO.Stream" /> object to be designated as a template for copying file attributes.</summary>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
            <param name="templateStreamName">The name of a <see cref="T:System.IO.Stream" /> object from which file attributes are to be copied as a template.</param>
            <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file (passed by reference).</param>
            <param name="assertPermissions">
                <see langword="true" /> to assert permissions; otherwise, <see langword="false" />.</param>
            <returns>The object specified by the <paramref name="streamName" /> parameter.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)">
            <summary>Returns a value indicating whether the entire configuration file could be read by a designated <see cref="T:System.IO.Stream" /> object.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
            <returns>
                <see langword="true" /> if the entire configuration file could be read by the <see cref="T:System.IO.Stream" /> object designated by <paramref name="streamName" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)">
            <summary>Instructs the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object to read a designated section of its associated configuration file.</summary>
            <param name="sectionGroupName">A string representing the name of a section group in the configuration file.</param>
            <param name="sectionName">A string representing the name of a section in the configuration file.</param>
            <returns>
                <see langword="true" /> if a section of the configuration file designated by the <paramref name="sectionGroupName" /> and <paramref name="sectionName" /> parameters can be read by a <see cref="T:System.IO.Stream" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.RefreshConfigPaths">
            <summary>Invokes the delegated host's method that refreshes configuration paths.</summary>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
            <summary>Indicates that a new configuration record requires a complete initialization.</summary>
            <param name="configRecord">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
            <summary>Instructs the host to monitor an associated <see cref="T:System.IO.Stream" /> object for changes in a configuration file.</summary>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
            <param name="callback">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object to receive the returned data representing the changes in the configuration file.</param>
            <returns>An <see cref="T:System.Object" /> instance containing changed configuration settings.</returns>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
            <summary>Instructs the host object to stop monitoring an associated <see cref="T:System.IO.Stream" /> object for changes in a configuration file.</summary>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
            <param name="callback">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object.</param>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
            <summary>Verifies that a configuration definition is allowed for a configuration record.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <param name="allowDefinition">An <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> object.</param>
            <param name="allowExeDefinition">A <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object</param>
            <param name="errorInfo">An <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> object.</param>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
            <summary>Indicates that all writing to the configuration file has completed.</summary>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
            <param name="success">
                <see langword="true" /> if writing to the configuration file completed successfully; otherwise, <see langword="false" />.</param>
            <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
        </member>
        <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
            <summary>Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.</summary>
            <param name="streamName">The name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on a configuration file.</param>
            <param name="success">
                <see langword="true" /> to indicate that writing was completed successfully; otherwise, <see langword="false" />.</param>
            <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <param name="assertPermissions">
                <see langword="true" /> to assert permissions; otherwise, <see langword="false" />.</param>
        </member>
        <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasLocalConfig">
            <summary>Determines if the delegated host has a local configuration.</summary>
            <returns>
                <see langword="true" /> if the current instance has a local configuration; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasRoamingConfig">
            <summary>Determines if the delegated host has a roaming configuration.</summary>
            <returns>
                <see langword="true" /> if the current instance has a roaming configuration; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.DelegatingConfigHost.Host">
            <summary>Gets or sets the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object.</summary>
            <returns>A <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object.</returns>
        </member>
        <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsAppConfigHttp">
            <summary>Determines if the application configuration file comes from a non-local URI (that is, <c>http://</c>) or is a local file.</summary>
            <returns>
                <see langword="true" /> if the delegated host's sections belong to <c>System.Net</c> and the configuration file for the application is downloaded via HTTP using <see cref="T:System.Net.WebClient" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsRemote">
            <summary>Gets a value indicating whether the configuration is remote.</summary>
            <returns>
                <see langword="true" /> if the configuration is remote; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications">
            <summary>Gets a value indicating whether the host configuration supports change notifications.</summary>
            <returns>
                <see langword="true" /> if the host supports change notifications; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation">
            <summary>Gets a value indicating whether the host configuration supports location tags.</summary>
            <returns>
                <see langword="true" /> if the host supports location tags; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath">
            <summary>Gets a value indicating whether the host configuration has path support.</summary>
            <returns>
                <see langword="true" /> if the host configuration has path support; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh">
            <summary>Gets a value indicating whether the host configuration supports refresh.</summary>
            <returns>
                <see langword="true" /> if the host configuration supports refresh; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Configuration.Internal.IConfigErrorInfo">
            <summary>Defines an interface used by the .NET Framework to support creating error configuration records.</summary>
        </member>
        <member name="P:System.Configuration.Internal.IConfigErrorInfo.Filename">
            <summary>Gets a string specifying the file name related to the configuration details.</summary>
            <returns>A string specifying a filename.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IConfigErrorInfo.LineNumber">
            <summary>Gets an integer specifying the line number related to the configuration details.</summary>
            <returns>An integer specifying a line number.</returns>
        </member>
        <member name="T:System.Configuration.Internal.IConfigSystem">
            <summary>Defines an interface used by the .NET Framework to support the initialization of configuration properties.</summary>
        </member>
        <member name="M:System.Configuration.Internal.IConfigSystem.Init(System.Type,System.Object[])">
            <summary>Initializes a configuration object.</summary>
            <param name="typeConfigHost">The type of configuration host.</param>
            <param name="hostInitParams">An array of configuration host parameters.</param>
        </member>
        <member name="P:System.Configuration.Internal.IConfigSystem.Host">
            <summary>Gets the configuration host.</summary>
            <returns>An <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object that is used by the .NET Framework to initialize application configuration properties.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IConfigSystem.Root">
            <summary>Gets the root of the configuration hierarchy.</summary>
            <returns>An <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</returns>
        </member>
        <member name="T:System.Configuration.Internal.IConfigurationManagerHelper">
            <summary>Defines an interface used by the .NET Framework to support configuration management.</summary>
        </member>
        <member name="M:System.Configuration.Internal.IConfigurationManagerHelper.EnsureNetConfigLoaded">
            <summary>Ensures that the networking configuration is loaded.</summary>
        </member>
        <member name="T:System.Configuration.Internal.IConfigurationManagerInternal">
            <summary>Defines an interface used by the .NET Framework to initialize configuration properties.</summary>
        </member>
        <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ApplicationConfigUri">
            <summary>Gets the configuration file name related to the application path.</summary>
            <returns>A string value representing a configuration file name.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigDirectory">
            <summary>Gets the local configuration directory of the application based on the entry assembly.</summary>
            <returns>A string representing the local configuration directory.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigPath">
            <summary>Gets the local configuration path of the application based on the entry assembly.</summary>
            <returns>A string value representing the local configuration path of the application.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductName">
            <summary>Gets the product name of the application based on the entry assembly.</summary>
            <returns>A string value representing the product name of the application.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductVersion">
            <summary>Gets the product version of the application based on the entry assembly.</summary>
            <returns>A string value representing the product version of the application.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigDirectory">
            <summary>Gets the roaming configuration directory of the application based on the entry assembly.</summary>
            <returns>A string value representing the roaming configuration directory of the application.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigPath">
            <summary>Gets the roaming user's configuration path based on the application's entry assembly.</summary>
            <returns>A string value representing the roaming user's configuration path.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.MachineConfigPath">
            <summary>Gets the configuration path for the Machine.config file.</summary>
            <returns>A string value representing the path of the Machine.config file.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SetConfigurationSystemInProgress">
            <summary>Gets a value representing the configuration system's status.</summary>
            <returns>
                <see langword="true" /> if the configuration system is in the process of being initialized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SupportsUserConfig">
            <summary>Gets a value that specifies whether user configuration settings are supported.</summary>
            <returns>
                <see langword="true" /> if the configuration system supports user configuration settings; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.UserConfigFilename">
            <summary>Gets the name of the file used to store user configuration settings.</summary>
            <returns>A string specifying the name of the file used to store user configuration.</returns>
        </member>
        <member name="T:System.Configuration.Internal.IInternalConfigClientHost">
            <summary>Defines interfaces that allow the internal .NET Framework infrastructure to customize configuration.</summary>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath">
            <summary>Returns the path to the application configuration file.</summary>
            <returns>A string representing the path to the application configuration file.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath">
            <summary>Returns a string representing the path to the known local user configuration file.</summary>
            <returns>A string representing the path to the known local user configuration file.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath">
            <summary>Returns a string representing the path to the known roaming user configuration file.</summary>
            <returns>A string representing the path to the known roaming user configuration file.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)">
            <summary>Returns a value indicating whether a configuration file path is the same as a currently known application configuration file path.</summary>
            <param name="configPath">A string representing the path to the application configuration file.</param>
            <returns>
                <see langword="true" /> if a string representing a configuration path is the same as a path to the application configuration file; <see langword="false" /> if a string representing a configuration path is not the same as a path to the application configuration file.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)">
            <summary>Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known local user.</summary>
            <param name="configPath">A string representing the path to the application configuration file.</param>
            <returns>
                <see langword="true" /> if a string representing a configuration path is the same as a path to a known local user configuration file; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)">
            <summary>Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known roaming user.</summary>
            <param name="configPath">A string representing the path to an application configuration file.</param>
            <returns>
                <see langword="true" /> if a string representing a configuration path is the same as a path to a known roaming user configuration file; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Configuration.Internal.IInternalConfigConfigurationFactory">
            <summary>Defines the interfaces used by the internal design time API to create a <see cref="T:System.Configuration.Configuration" /> object.</summary>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.Create(System.Type,System.Object[])">
            <summary>Creates and initializes a <see cref="T:System.Configuration.Configuration" /> object.</summary>
            <param name="typeConfigHost">The <see cref="T:System.Type" /> of the <see cref="T:System.Configuration.Configuration" /> object to be created.</param>
            <param name="hostInitConfigurationParams">A parameter array of <see cref="T:System.Object" /> that contains the parameters to be applied to the created <see cref="T:System.Configuration.Configuration" /> object.</param>
            <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.NormalizeLocationSubPath(System.String,System.Configuration.Internal.IConfigErrorInfo)">
            <summary>Normalizes a location subpath of a path to a configuration file.</summary>
            <param name="subPath">A string representing the path to the configuration file.</param>
            <param name="errorInfo">An instance of <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> or <see langword="null" />.</param>
            <returns>A normalized subpath string.</returns>
        </member>
        <member name="T:System.Configuration.Internal.IInternalConfigHost">
            <summary>Defines interfaces used by internal .NET structures to initialize application configuration properties.</summary>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)">
            <summary>Creates and returns a context object for a <see cref="T:System.Configuration.ConfigurationElement" /> of an application configuration.</summary>
            <param name="configPath">A string representing the path of the application configuration file.</param>
            <param name="locationSubPath">A string representing a subpath location of the configuration element.</param>
            <returns>A context object for a <see cref="T:System.Configuration.ConfigurationElement" /> object of an application configuration.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)">
            <summary>Creates and returns a deprecated context object of the application configuration.</summary>
            <param name="configPath">A string representing a path to an application configuration file.</param>
            <returns>A deprecated context object of the application configuration.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
            <summary>Decrypts an encrypted configuration section and returns it as a string.</summary>
            <param name="encryptedXml">An encrypted XML string representing a configuration section.</param>
            <param name="protectionProvider">The <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object.</param>
            <param name="protectedConfigSection">The <see cref="T:System.Configuration.ProtectedConfigurationSection" /> object.</param>
            <returns>A decrypted configuration section as a string.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)">
            <summary>Deletes the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the application configuration file.</summary>
            <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
            <summary>Encrypts a configuration section and returns it as a string.</summary>
            <param name="clearTextXml">An XML string representing a configuration section to encrypt.</param>
            <param name="protectionProvider">The <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object.</param>
            <param name="protectedConfigSection">The <see cref="T:System.Configuration.ProtectedConfigurationSection" /> object.</param>
            <returns>An encrypted configuration section represented as a string.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
            <summary>Returns the complete path to an application configuration file based on the location subpath.</summary>
            <param name="configPath">A string representing the path of the application configuration file.</param>
            <param name="locationSubPath">The subpath location of the configuration file.</param>
            <returns>A string representing the complete path to an application configuration file.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)">
            <summary>Returns a <see cref="T:System.Type" /> object representing the type of the configuration object.</summary>
            <param name="typeName">The type name</param>
            <param name="throwOnError">
                <see langword="true" /> to throw an exception if an error occurs; otherwise, <see langword="false" /></param>
            <returns>A <see cref="T:System.Type" /> object representing the type of the configuration object.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)">
            <summary>Returns a string representing a type name from the <see cref="T:System.Type" /> object representing the type of the configuration.</summary>
            <param name="t">A <see cref="T:System.Type" /> object.</param>
            <returns>A string representing the type name from a <see cref="T:System.Type" /> object representing the type of the configuration.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
            <summary>Associates the configuration with a <see cref="T:System.Security.PermissionSet" /> object.</summary>
            <param name="configRecord">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
            <param name="permissionSet">The <see cref="T:System.Security.PermissionSet" /> object to associate with the configuration.</param>
            <param name="isHostReady">
                <see langword="true" /> to indicate the configuration host is has completed building associated permissions; otherwise, <see langword="false" />.</param>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)">
            <summary>Returns a string representing the configuration file name associated with the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</summary>
            <param name="configPath">A string representing the path of the application configuration file.</param>
            <returns>A string representing the configuration file name associated with the <see cref="T:System.IO.Stream" /> I/O tasks on the configuration file.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
            <summary>Returns a string representing the configuration file name associated with the <see cref="T:System.IO.Stream" /> object performing I/O tasks on a remote configuration file.</summary>
            <param name="streamName">A string representing the configuration file name associated with the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <param name="configSource">A string representing a path to a remote configuration file.</param>
            <returns>A string representing the configuration file name associated with the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)">
            <summary>Returns the version of the <see cref="T:System.IO.Stream" /> object associated with configuration file.</summary>
            <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <returns>The version of the <see cref="T:System.IO.Stream" /> object associated with configuration file.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.Impersonate">
            <summary>Instructs the host to impersonate and returns an <see cref="T:System.IDisposable" /> object required by the internal .NET structure.</summary>
            <returns>An <see cref="T:System.IDisposable" /> value.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
            <summary>Initializes a configuration host.</summary>
            <param name="configRoot">The configuration root object.</param>
            <param name="hostInitParams">The parameter object containing the values used for initializing the configuration host.</param>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
            <summary>Initializes a configuration object.</summary>
            <param name="locationSubPath">The subpath location of the configuration file.</param>
            <param name="configPath">A string representing the path of the application configuration file.</param>
            <param name="locationConfigPath">A string representing the location of a configuration path.</param>
            <param name="configRoot">The <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</param>
            <param name="hostInitConfigurationParams">The parameter object containing the values used for initializing the configuration host.</param>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)">
            <summary>Returns a value indicating whether the configuration file is located at a higher level in the configuration hierarchy than the application configuration.</summary>
            <param name="configPath">A string representing the path of the application configuration file.</param>
            <returns>
                <see langword="true" /> the configuration file is located at a higher level in the configuration hierarchy than the application configuration; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)">
            <summary>Returns a value indicating whether a child record is required for a child configuration path.</summary>
            <param name="configPath">A string representing the path of the application configuration file.</param>
            <returns>
                <see langword="true" /> if child record is required for a child configuration path; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
            <summary>Determines if a different <see cref="T:System.Type" /> definition is allowable for an application configuration object.</summary>
            <param name="configPath">A string representing the path of the application configuration file.</param>
            <param name="allowDefinition">A <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> object.</param>
            <param name="allowExeDefinition">A <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object.</param>
            <returns>
                <see langword="true" /> if a different <see cref="T:System.Type" /> definition is allowable for an application configuration object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)">
            <summary>Returns a value indicating whether the file path used by a <see cref="T:System.IO.Stream" /> object to read a configuration file is a valid path.</summary>
            <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <returns>
                <see langword="true" /> if the path used by a <see cref="T:System.IO.Stream" /> object to read a configuration file is a valid path; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
            <summary>Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> attribute to disable implicit link demands.</summary>
            <param name="configRecord">The <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
            <returns>
                <see langword="true" /> if the configuration section requires a fully trusted code access security level and does not allow the <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> attribute to disable implicit link demands; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
            <summary>Returns a value indicating whether the initialization of a configuration object is considered delayed.</summary>
            <param name="configRecord">The <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
            <returns>
                <see langword="true" /> if the initialization of a configuration object is considered delayed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)">
            <summary>Returns a value indicating whether the configuration object supports a location tag.</summary>
            <param name="configPath">A string representing the path of the application configuration file.</param>
            <returns>
                <see langword="true" /> if the configuration object supports a location tag; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)">
            <summary>Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.</summary>
            <param name="configPath">A string representing the path of the application configuration file.</param>
            <returns>
                <see langword="true" /> if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)">
            <summary>Returns a value indicating whether the configuration path is trusted.</summary>
            <param name="configPath">A string representing the path of the application configuration file.</param>
            <returns>
                <see langword="true" /> if the configuration path is trusted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)">
            <summary>Opens a <see cref="T:System.IO.Stream" /> to read a configuration file.</summary>
            <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <returns>A <see cref="T:System.IO.Stream" /> object.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)">
            <summary>Opens a <see cref="T:System.IO.Stream" /> object to read a configuration file.</summary>
            <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <param name="assertPermissions">
                <see langword="true" /> to assert permissions; otherwise, <see langword="false" />.</param>
            <returns>The object specified by <paramref name="streamName" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
            <summary>Opens a <see cref="T:System.IO.Stream" /> object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a <see cref="T:System.IO.Stream" /> object to be designated as a template for copying file attributes.</summary>
            <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <param name="templateStreamName">The name of a <see cref="T:System.IO.Stream" /> object from which file attributes are to be copied as a template.</param>
            <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object.</param>
            <returns>A <see cref="T:System.IO.Stream" /> object.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
            <summary>Opens a <see cref="T:System.IO.Stream" /> object for writing to a configuration file. Allows a <see cref="T:System.IO.Stream" /> object to be designated as a template for copying file attributes.</summary>
            <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <param name="templateStreamName">The name of a <see cref="T:System.IO.Stream" /> from which file attributes are to be copied as a template.</param>
            <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <param name="assertPermissions">
                <see langword="true" /> to assert permissions; otherwise, <see langword="false" />.</param>
            <returns>The object specified by <paramref name="streamName" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)">
            <summary>Returns a value that indicates whether the entire configuration file could be read by a designated <see cref="T:System.IO.Stream" /> object.</summary>
            <param name="configPath">A string representing the path of the application configuration file.</param>
            <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <returns>
                <see langword="true" /> if the entire configuration file could be read by the <see cref="T:System.IO.Stream" /> object designated by <paramref name="streamName" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)">
            <summary>Instructs the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object to read a designated section of its associated configuration file.</summary>
            <param name="sectionGroupName">A string representing the identifying name of a configuration file section group.</param>
            <param name="sectionName">A string representing the identifying name of a configuration file section.</param>
            <returns>
                <see langword="true" /> if a section of the configuration file designated by <paramref name="sectionGroupName" /> and <paramref name="sectionName" /> could be read by a <see cref="T:System.IO.Stream" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
            <summary>Indicates a new configuration record requires a complete initialization.</summary>
            <param name="configRecord">An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object.</param>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
            <summary>Instructs the <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object to monitor an associated <see cref="T:System.IO.Stream" /> object for changes in a configuration file.</summary>
            <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <param name="callback">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object to receive the returned data representing the changes in the configuration file.</param>
            <returns>An <see cref="T:System.Object" /> containing changed configuration settings.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
            <summary>Instructs the  <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object to stop monitoring an associated <see cref="T:System.IO.Stream" /> object for changes in a configuration file.</summary>
            <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <param name="callback">A <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> object.</param>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
            <summary>Verifies that a configuration definition is allowed for a configuration record.</summary>
            <param name="configPath">A string representing the path of the application configuration file.</param>
            <param name="allowDefinition">A <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> object.</param>
            <param name="allowExeDefinition">A <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> object</param>
            <param name="errorInfo">An <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> object.</param>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
            <summary>Indicates that all writing to the configuration file has completed.</summary>
            <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <param name="success">
                <see langword="true" /> if the write to the configuration file was completed successfully; otherwise, <see langword="false" />.</param>
            <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
            <summary>Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.</summary>
            <param name="streamName">A string representing the name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <param name="success">
                <see langword="true" /> to indicate the write was completed successfully; otherwise, <see langword="false" />.</param>
            <param name="writeContext">The write context of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
            <param name="assertPermissions">
                <see langword="true" /> to assert permissions; otherwise, <see langword="false" />.</param>
        </member>
        <member name="P:System.Configuration.Internal.IInternalConfigHost.IsRemote">
            <summary>Returns a value indicating whether the configuration is remote.</summary>
            <returns>
                <see langword="true" /> if the configuration is remote; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications">
            <summary>Returns a value indicating whether the host configuration supports change notification.</summary>
            <returns>
                <see langword="true" /> if the configuration supports change notification; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation">
            <summary>Returns a value indicating whether the host configuration supports location tags.</summary>
            <returns>
                <see langword="true" /> if the configuration supports location tags; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsPath">
            <summary>Returns a value indicating whether the host configuration supports path tags.</summary>
            <returns>
                <see langword="true" /> if the configuration supports path tags; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh">
            <summary>Returns a value indicating whether the host configuration supports configuration refresh.</summary>
            <returns>
                <see langword="true" /> if the configuration supports configuration refresh; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Configuration.Internal.IInternalConfigRecord">
            <summary>Defines interfaces used by internal .NET structures to support creation of new configuration records.</summary>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetLkgSection(System.String)">
            <summary>Returns an object representing a section of a configuration from the last-known-good (LKG) configuration.</summary>
            <param name="configKey">A string representing a key to a configuration section.</param>
            <returns>An <see cref="T:System.Object" /> instance representing the section of the last-known-good configuration specified by <paramref name="configKey" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetSection(System.String)">
            <summary>Returns an <see cref="T:System.Object" /> instance representing a section of a configuration file.</summary>
            <param name="configKey">A string representing a key to a configuration section.</param>
            <returns>An <see cref="T:System.Object" /> instance representing a section of a configuration file.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigRecord.RefreshSection(System.String)">
            <summary>Causes a specified section of the configuration object to be reinitialized.</summary>
            <param name="configKey">A string representing a key to a configuration section that is to be refreshed.</param>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigRecord.Remove">
            <summary>Removes a configuration record.</summary>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigRecord.ThrowIfInitErrors">
            <summary>Grants the configuration object the permission to throw an exception if an error occurs during initialization.</summary>
        </member>
        <member name="P:System.Configuration.Internal.IInternalConfigRecord.ConfigPath">
            <summary>Gets a string representing a configuration file path.</summary>
            <returns>A string representing a configuration file path.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IInternalConfigRecord.HasInitErrors">
            <summary>Returns a value indicating whether an error occurred during initialization of a configuration object.</summary>
            <returns>
                <see langword="true" /> if an error occurred during initialization of a configuration object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.Internal.IInternalConfigRecord.StreamName">
            <summary>Returns the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</summary>
            <returns>A string representing the name of a <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</returns>
        </member>
        <member name="T:System.Configuration.Internal.IInternalConfigRoot">
            <summary>Defines interfaces used by internal .NET structures to support a configuration root object.</summary>
        </member>
        <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged">
            <summary>Represents the method that handles the <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged" /> event of an <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</summary>
        </member>
        <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved">
            <summary>Represents the method that handles the <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved" /> event of a <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> object.</summary>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetConfigRecord(System.String)">
            <summary>Returns an <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object representing a configuration specified by a configuration path.</summary>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <returns>An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object representing a configuration specified by <paramref name="configPath" />.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetSection(System.String,System.String)">
            <summary>Returns an <see cref="T:System.Object" /> representing the data in a section of a configuration file.</summary>
            <param name="section">A string representing a section of a configuration file.</param>
            <param name="configPath">A string representing the path to a configuration file.</param>
            <returns>An <see cref="T:System.Object" /> representing the data in a section of a configuration file.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigPath(System.String)">
            <summary>Returns a value representing the file path of the nearest configuration ancestor that has configuration data.</summary>
            <param name="configPath">The path of configuration file.</param>
            <returns>A string representing the file path of the nearest configuration ancestor that has configuration data.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigRecord(System.String)">
            <summary>Returns an <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object representing a unique configuration record for given configuration path.</summary>
            <param name="configPath">The path of the configuration file.</param>
            <returns>An <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> object representing a unique configuration record for a given configuration path.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigRoot.Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
            <summary>Initializes a configuration object.</summary>
            <param name="host">An <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> object.</param>
            <param name="isDesignTime">
                <see langword="true" /> if design time; <see langword="false" /> if run time.</param>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigRoot.RemoveConfig(System.String)">
            <summary>Finds and removes a configuration record and all its children for a given configuration path.</summary>
            <param name="configPath">The path of the configuration file.</param>
        </member>
        <member name="P:System.Configuration.Internal.IInternalConfigRoot.IsDesignTime">
            <summary>Returns a value indicating whether the configuration is a design-time configuration.</summary>
            <returns>
                <see langword="true" /> if the configuration is a design-time configuration; <see langword="false" /> if the configuration is not a design-time configuration.</returns>
        </member>
        <member name="T:System.Configuration.Internal.IInternalConfigSettingsFactory">
            <summary>Defines an interface used by the configuration system to set the <see cref="T:System.Configuration.ConfigurationSettings" /> class.</summary>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.CompleteInit">
            <summary>Indicates that initialization of the configuration system has completed.</summary>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
            <summary>Provides hierarchical configuration settings and extensions specific to ASP.NET to the configuration system.</summary>
            <param name="internalConfigSystem">An <see cref="T:System.Configuration.Internal.IInternalConfigSystem" /> object used by the <see cref="T:System.Configuration.ConfigurationSettings" /> class.</param>
            <param name="initComplete">
                <see langword="true" /> if the initialization process of the configuration system is complete; otherwise, <see langword="false" />.</param>
        </member>
        <member name="T:System.Configuration.Internal.IInternalConfigSystem">
            <summary>Defines an interface used by the .NET Framework to initialize application configuration properties.</summary>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigSystem.GetSection(System.String)">
            <summary>Returns the configuration object based on the specified key.</summary>
            <param name="configKey">The configuration key value.</param>
            <returns>A configuration object.</returns>
        </member>
        <member name="M:System.Configuration.Internal.IInternalConfigSystem.RefreshConfig(System.String)">
            <summary>Refreshes the configuration system based on the specified section name.</summary>
            <param name="sectionName">The name of the configuration section.</param>
        </member>
        <member name="P:System.Configuration.Internal.IInternalConfigSystem.SupportsUserConfig">
            <summary>Gets a value indicating whether the user configuration is supported.</summary>
            <returns>
                <see langword="true" /> if the user configuration is supported; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Configuration.Internal.InternalConfigEventArgs">
            <summary>Defines a class that allows the .NET Framework infrastructure to specify event arguments for configuration events.</summary>
        </member>
        <member name="M:System.Configuration.Internal.InternalConfigEventArgs.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> class.</summary>
            <param name="configPath">A configuration path.</param>
        </member>
        <member name="P:System.Configuration.Internal.InternalConfigEventArgs.ConfigPath">
            <summary>Gets or sets the configuration path related to the <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> object.</summary>
            <returns>A string value specifying the configuration path.</returns>
        </member>
        <member name="T:System.Configuration.Internal.InternalConfigEventHandler">
            <summary>Defines a class used by the .NET Framework infrastructure to support configuration events.</summary>
            <param name="sender">The source object of the event.</param>
            <param name="e">A configuration event argument.</param>
        </member>
        <member name="T:System.Configuration.Internal.StreamChangeCallback">
            <summary>Represents a method for hosts to call when a monitored stream has changed.</summary>
            <param name="streamName">The name of the <see cref="T:System.IO.Stream" /> object performing I/O tasks on the configuration file.</param>
        </member>
        <member name="T:System.Configuration.IPersistComponentSettings">
            <summary>Defines standard functionality for controls or libraries that store and retrieve application settings.</summary>
        </member>
        <member name="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
            <summary>Reads the control's application settings into their corresponding properties and updates the control's state.</summary>
        </member>
        <member name="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
            <summary>Resets the control's application settings properties to their default values.</summary>
        </member>
        <member name="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
            <summary>Persists the control's application settings properties.</summary>
        </member>
        <member name="P:System.Configuration.IPersistComponentSettings.SaveSettings">
            <summary>Gets or sets a value indicating whether the control should automatically persist its application settings properties.</summary>
            <returns>
                <see langword="true" /> if the control should automatically persist its state; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.IPersistComponentSettings.SettingsKey">
            <summary>Gets or sets the value of the application settings key for the current instance of the control.</summary>
            <returns>A <see cref="T:System.String" /> containing the settings key for the current instance of the control.</returns>
        </member>
        <member name="T:System.Configuration.IriParsingElement">
            <summary>Provides the configuration setting for International Resource Identifier (IRI) processing in the <see cref="T:System.Uri" /> class.</summary>
        </member>
        <member name="M:System.Configuration.IriParsingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.IriParsingElement" /> class.</summary>
        </member>
        <member name="P:System.Configuration.IriParsingElement.Enabled">
            <summary>Gets or sets the value of the <see cref="T:System.Configuration.IriParsingElement" /> configuration setting.</summary>
            <returns>A Boolean that indicates if International Resource Identifier (IRI) processing is enabled.</returns>
        </member>
        <member name="T:System.Configuration.ISettingsProviderService">
            <summary>Provides an interface for defining an alternate application settings provider.</summary>
        </member>
        <member name="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)">
            <summary>Returns the settings provider compatible with the specified settings property.</summary>
            <param name="property">The <see cref="T:System.Configuration.SettingsProperty" /> that requires serialization.</param>
            <returns>If found, the <see cref="T:System.Configuration.SettingsProvider" /> that can persist the specified settings property; otherwise, <see langword="null" />.</returns>
        </member>
        <member name="T:System.Configuration.KeyValueConfigurationCollection">
            <summary>Contains a collection of <see cref="T:System.Configuration.KeyValueConfigurationElement" /> objects.</summary>
        </member>
        <member name="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
            <summary>Adds a <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object to the collection based on the supplied parameters.</summary>
            <param name="keyValue">A <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
        </member>
        <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
            <summary>Adds a <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object to the collection based on the supplied parameters.</summary>
            <param name="key">A string specifying the key.</param>
            <param name="value">A string specifying the value.</param>
        </member>
        <member name="M:System.Configuration.KeyValueConfigurationCollection.Clear">
            <summary>Clears the <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> collection.</summary>
        </member>
        <member name="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
            <summary>When overridden in a derived class, the <see cref="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" /> method creates a new <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object.</summary>
            <returns>A newly created <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
        </member>
        <member name="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>Gets the element key for a specified configuration element when overridden in a derived class.</summary>
            <param name="element">The <see cref="T:System.Configuration.KeyValueConfigurationElement" /> to which the key should be returned.</param>
            <returns>An object that acts as the key for the specified <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
        </member>
        <member name="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
            <summary>Removes a <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object from the collection.</summary>
            <param name="key">A string specifying the <paramref name="key" />.</param>
        </member>
        <member name="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
            <summary>Gets the keys to all items contained in the <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> collection.</summary>
            <returns>A string array.</returns>
        </member>
        <member name="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
            <summary>Gets the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object based on the supplied parameter.</summary>
            <param name="key">The key of the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> contained in the collection.</param>
            <returns>A configuration element, or <see langword="null" /> if the key does not exist in the collection.</returns>
        </member>
        <member name="P:System.Configuration.KeyValueConfigurationCollection.Properties">
            <summary>Gets a collection of configuration properties.</summary>
            <returns>A collection of configuration properties.</returns>
        </member>
        <member name="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
            <summary>Gets a value indicating whether an attempt to add a duplicate <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object to the <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> collection will cause an exception to be thrown.</summary>
            <returns>
                <see langword="true" /> if an attempt to add a duplicate <see cref="T:System.Configuration.KeyValueConfigurationElement" /> to the <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> will cause an exception to be thrown; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Configuration.KeyValueConfigurationElement">
            <summary>Represents a configuration element that contains a key/value pair.</summary>
        </member>
        <member name="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> class based on the supplied parameters.</summary>
            <param name="key">The key of the <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
            <param name="value">The value of the <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
        </member>
        <member name="M:System.Configuration.KeyValueConfigurationElement.Init">
            <summary>Sets the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object to its initial state.</summary>
        </member>
        <member name="P:System.Configuration.KeyValueConfigurationElement.Key">
            <summary>Gets the key of the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object.</summary>
            <returns>The key of the <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
        </member>
        <member name="P:System.Configuration.KeyValueConfigurationElement.Properties">
            <summary>Gets the collection of properties.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> of properties for the element.</returns>
        </member>
        <member name="P:System.Configuration.KeyValueConfigurationElement.Value">
            <summary>Gets or sets the value of the <see cref="T:System.Configuration.KeyValueConfigurationElement" /> object.</summary>
            <returns>The value of the <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
        </member>
        <member name="T:System.Configuration.LocalFileSettingsProvider">
            <summary>Provides persistence for application settings classes.</summary>
        </member>
        <member name="M:System.Configuration.LocalFileSettingsProvider.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.LocalFileSettingsProvider" /> class.</summary>
        </member>
        <member name="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
            <summary>Returns the value of the named settings property for the previous version of the same application.</summary>
            <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> that describes where the application settings property is used.</param>
            <param name="property">The <see cref="T:System.Configuration.SettingsProperty" /> whose value is to be returned.</param>
            <returns>A <see cref="T:System.Configuration.SettingsPropertyValue" /> representing the application setting if found; otherwise, <see langword="null" />.</returns>
        </member>
        <member name="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>Returns the collection of setting property values for the specified application instance and settings property group.</summary>
            <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
            <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</exception>
            <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</returns>
        </member>
        <member name="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>Initializes the provider.</summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="values">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
        </member>
        <member name="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)">
            <summary>Resets all application settings properties associated with the specified application to their default values.</summary>
            <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</exception>
        </member>
        <member name="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
            <summary>Sets the values of the specified group of property settings.</summary>
            <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
            <param name="values">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> representing the group of property settings to set.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  
  
 -or-  
  
 There was a general failure saving the settings to the configuration file.</exception>
        </member>
        <member name="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>Attempts to migrate previous user-scoped settings from a previous version of the same application.</summary>
            <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
            <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  
  
 -or-  
  
 The previous version of the configuration file could not be accessed.</exception>
        </member>
        <member name="P:System.Configuration.LocalFileSettingsProvider.ApplicationName">
            <summary>Gets or sets the name of the currently running application.</summary>
            <returns>A string that contains the application's display name.</returns>
        </member>
        <member name="T:System.Configuration.LongValidator">
            <summary>Provides validation of an <see cref="T:System.Int64" /> value.</summary>
        </member>
        <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.LongValidator" /> class.</summary>
            <param name="minValue">An <see cref="T:System.Int64" /> value that specifies the minimum length of the <see langword="long" /> value.</param>
            <param name="maxValue">An <see cref="T:System.Int64" /> value that specifies the maximum length of the <see langword="long" /> value.</param>
        </member>
        <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.LongValidator" /> class.</summary>
            <param name="minValue">An <see cref="T:System.Int64" /> value that specifies the minimum length of the <see langword="long" /> value.</param>
            <param name="maxValue">An <see cref="T:System.Int64" /> value that specifies the maximum length of the <see langword="long" /> value.</param>
            <param name="rangeIsExclusive">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</param>
        </member>
        <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.LongValidator" /> class.</summary>
            <param name="minValue">An <see cref="T:System.Int64" /> value that specifies the minimum length of the <see langword="long" /> value.</param>
            <param name="maxValue">An <see cref="T:System.Int64" /> value that specifies the maximum length of the <see langword="long" /> value.</param>
            <param name="rangeIsExclusive">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</param>
            <param name="resolution">An <see cref="T:System.Int64" /> value that specifies a specific value that must be matched.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="resolution" /> is equal to or less than <see langword="0" />.  
  
-or-
  
 <paramref name="maxValue" /> is less than <paramref name="minValue" />.</exception>
        </member>
        <member name="M:System.Configuration.LongValidator.CanValidate(System.Type)">
            <summary>Determines whether the type of the object can be validated.</summary>
            <param name="type">The type of object.</param>
            <returns>
                <see langword="true" /> if the <paramref name="type" /> parameter matches an <see cref="T:System.Int64" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.LongValidator.Validate(System.Object)">
            <summary>Determines whether the value of an object is valid.</summary>
            <param name="value">The value of an object.</param>
        </member>
        <member name="T:System.Configuration.LongValidatorAttribute">
            <summary>Declaratively instructs the .NET Framework to perform long-integer validation on a configuration property. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.LongValidatorAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.LongValidatorAttribute" /> class.</summary>
        </member>
        <member name="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
            <summary>Gets or sets a value that indicates whether to include or exclude the integers in the range defined by the <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> and <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" /> property values.</summary>
            <returns>
                <see langword="true" /> if the value must be excluded; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.LongValidatorAttribute.MaxValue">
            <summary>Gets or sets the maximum value allowed for the property.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The selected value is less than <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" />.</exception>
            <returns>A long integer that indicates the allowed maximum value.</returns>
        </member>
        <member name="P:System.Configuration.LongValidatorAttribute.MinValue">
            <summary>Gets or sets the minimum value allowed for the property.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The selected value is greater than <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />.</exception>
            <returns>An integer that indicates the allowed minimum value.</returns>
        </member>
        <member name="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
            <summary>Gets an instance of the <see cref="T:System.Configuration.LongValidator" /> class.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance.</returns>
        </member>
        <member name="T:System.Configuration.NameValueConfigurationCollection">
            <summary>Contains a collection of <see cref="T:System.Configuration.NameValueConfigurationElement" /> objects. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.NameValueConfigurationCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.NameValueConfigurationCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
            <summary>Adds a <see cref="T:System.Configuration.NameValueConfigurationElement" /> object to the collection.</summary>
            <param name="nameValue">A  <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</param>
        </member>
        <member name="M:System.Configuration.NameValueConfigurationCollection.Clear">
            <summary>Clears the <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
        </member>
        <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
            <summary>Removes a <see cref="T:System.Configuration.NameValueConfigurationElement" /> object from the collection based on the provided parameter.</summary>
            <param name="nameValue">A <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</param>
        </member>
        <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
            <summary>Removes a <see cref="T:System.Configuration.NameValueConfigurationElement" /> object from the collection based on the provided parameter.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</param>
        </member>
        <member name="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
            <summary>Gets the keys to all items contained in the <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
            <returns>A string array.</returns>
        </member>
        <member name="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
            <summary>Gets or sets the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object based on the supplied parameter.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> contained in the collection.</param>
            <returns>A <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</returns>
        </member>
        <member name="T:System.Configuration.NameValueConfigurationElement">
            <summary>A configuration element that contains a <see cref="T:System.String" /> name and <see cref="T:System.String" /> value. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> class based on supplied parameters.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</param>
            <param name="value">The value of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</param>
        </member>
        <member name="P:System.Configuration.NameValueConfigurationElement.Name">
            <summary>Gets the name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</summary>
            <returns>The name of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</returns>
        </member>
        <member name="P:System.Configuration.NameValueConfigurationElement.Value">
            <summary>Gets or sets the value of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</summary>
            <returns>The value of the <see cref="T:System.Configuration.NameValueConfigurationElement" /> object.</returns>
        </member>
        <member name="T:System.Configuration.NameValueFileSectionHandler">
            <summary>Provides access to a configuration file. This type supports the .NET Framework configuration infrastructure and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:System.Configuration.NameValueFileSectionHandler.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.NameValueFileSectionHandler" /> class.</summary>
        </member>
        <member name="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>Creates a new configuration handler and adds it to the section-handler collection based on the specified parameters.</summary>
            <param name="parent">The parent object.</param>
            <param name="configContext">The configuration context object.</param>
            <param name="section">The section XML node.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The file specified in the <see langword="file" /> attribute of <paramref name="section" /> exists but cannot be loaded.  
  
-or-
  
 The <see langword="name" /> attribute of <paramref name="section" /> does not match the root element of the file specified in the <see langword="file" /> attribute.</exception>
            <returns>A configuration object.</returns>
        </member>
        <member name="T:System.Configuration.NameValueSectionHandler">
            <summary>Provides name/value-pair configuration information from a configuration section.</summary>
        </member>
        <member name="M:System.Configuration.NameValueSectionHandler.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.NameValueSectionHandler" /> class.</summary>
        </member>
        <member name="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>Creates a new configuration handler and adds it to the section-handler collection based on the specified parameters.</summary>
            <param name="parent">Parent object.</param>
            <param name="context">Configuration context object.</param>
            <param name="section">Section XML node.</param>
            <returns>A configuration object.</returns>
        </member>
        <member name="P:System.Configuration.NameValueSectionHandler.KeyAttributeName">
            <summary>Gets the XML attribute name to use as the key in a key/value pair.</summary>
            <returns>A <see cref="T:System.String" /> value containing the name of the key attribute.</returns>
        </member>
        <member name="P:System.Configuration.NameValueSectionHandler.ValueAttributeName">
            <summary>Gets the XML attribute name to use as the value in a key/value pair.</summary>
            <returns>A <see cref="T:System.String" /> value containing the name of the value attribute.</returns>
        </member>
        <member name="T:System.Configuration.NoSettingsVersionUpgradeAttribute">
            <summary>Specifies that a settings provider should disable any logic that gets invoked when an application upgrade is detected. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" /> class.</summary>
        </member>
        <member name="T:System.Configuration.OverrideMode">
            <summary>Specifies the override behavior of a configuration element for configuration elements in child directories.</summary>
        </member>
        <member name="F:System.Configuration.OverrideMode.Allow">
            <summary>The configuration setting of the element or group can be overridden by configuration settings that are in child directories.</summary>
        </member>
        <member name="F:System.Configuration.OverrideMode.Deny">
            <summary>The configuration setting of the element or group cannot be overridden by configuration settings that are in child directories.</summary>
        </member>
        <member name="F:System.Configuration.OverrideMode.Inherit">
            <summary>The configuration setting of the element or group will be overridden by configuration settings that are in child directories if explicitly allowed by a parent element of the current configuration element or group. Permission to override is specified by using the <see langword="OverrideMode" /> attribute.</summary>
        </member>
        <member name="T:System.Configuration.PositiveTimeSpanValidator">
            <summary>Provides validation of a <see cref="T:System.TimeSpan" /> object. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.PositiveTimeSpanValidator" /> class.</summary>
        </member>
        <member name="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
            <summary>Determines whether the object type can be validated.</summary>
            <param name="type">The object type.</param>
            <returns>
                <see langword="true" /> if the <paramref name="type" /> parameter matches a <see cref="T:System.TimeSpan" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
            <summary>Determines whether the value of an object is valid.</summary>
            <param name="value">The value of an object.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="value" /> cannot be resolved as a positive <see cref="T:System.TimeSpan" /> value.</exception>
        </member>
        <member name="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
            <summary>Declaratively instructs the .NET Framework to perform time validation on a configuration property. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.PositiveTimeSpanValidatorAttribute" /> class.</summary>
        </member>
        <member name="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
            <summary>Gets an instance of the <see cref="T:System.Configuration.PositiveTimeSpanValidator" /> class.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance.</returns>
        </member>
        <member name="T:System.Configuration.PropertyInformation">
            <summary>Contains meta-information on an individual property within the configuration. This type cannot be inherited.</summary>
        </member>
        <member name="P:System.Configuration.PropertyInformation.Converter">
            <summary>Gets the <see cref="T:System.ComponentModel.TypeConverter" /> object related to the configuration attribute.</summary>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter" /> object.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.DefaultValue">
            <summary>Gets an object containing the default value related to a configuration attribute.</summary>
            <returns>An object containing the default value of the configuration attribute.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.Description">
            <summary>Gets the description of the object that corresponds to a configuration attribute.</summary>
            <returns>The description of the configuration attribute.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.IsKey">
            <summary>Gets a value specifying whether the configuration attribute is a key.</summary>
            <returns>
                <see langword="true" /> if the configuration attribute is a key; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.IsLocked">
            <summary>Gets a value specifying whether the configuration attribute is locked.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.PropertyInformation" /> object is locked; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.IsModified">
            <summary>Gets a value specifying whether the configuration attribute has been modified.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.PropertyInformation" /> object has been modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.IsRequired">
            <summary>Gets a value specifying whether the configuration attribute is required.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.PropertyInformation" /> object is required; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.LineNumber">
            <summary>Gets the line number in the configuration file related to the configuration attribute.</summary>
            <returns>A line number of the configuration file.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.Name">
            <summary>Gets the name of the object that corresponds to a configuration attribute.</summary>
            <returns>The name of the <see cref="T:System.Configuration.PropertyInformation" /> object.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.Source">
            <summary>Gets the source file that corresponds to a configuration attribute.</summary>
            <returns>The source file of the <see cref="T:System.Configuration.PropertyInformation" /> object.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.Type">
            <summary>Gets the <see cref="T:System.Type" /> of the object that corresponds to a configuration attribute.</summary>
            <returns>The <see cref="T:System.Type" /> of the <see cref="T:System.Configuration.PropertyInformation" /> object.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.Validator">
            <summary>Gets a <see cref="T:System.Configuration.ConfigurationValidatorBase" /> object related to the configuration attribute.</summary>
            <returns>A <see cref="T:System.Configuration.ConfigurationValidatorBase" /> object.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.Value">
            <summary>Gets or sets an object containing the value related to a configuration attribute.</summary>
            <returns>An object containing the value for the <see cref="T:System.Configuration.PropertyInformation" /> object.</returns>
        </member>
        <member name="P:System.Configuration.PropertyInformation.ValueOrigin">
            <summary>Gets a <see cref="T:System.Configuration.PropertyValueOrigin" /> object related to the configuration attribute.</summary>
            <returns>A <see cref="T:System.Configuration.PropertyValueOrigin" /> object.</returns>
        </member>
        <member name="T:System.Configuration.PropertyInformationCollection">
            <summary>Contains a collection of <see cref="T:System.Configuration.PropertyInformation" /> objects. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
            <summary>Copies the entire <see cref="T:System.Configuration.PropertyInformationCollection" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
            <param name="array">A one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Configuration.PropertyInformationCollection" /> collection. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Array.Length" /> property of <paramref name="array" /> is less than <see cref="P:System.Collections.Specialized.NameObjectCollectionBase.Count" /> + <paramref name="index" />.</exception>
        </member>
        <member name="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
            <summary>Gets an <see cref="T:System.Collections.IEnumerator" /> object, which is used to iterate through this <see cref="T:System.Configuration.PropertyInformationCollection" /> collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object, which is used to iterate through this <see cref="T:System.Configuration.PropertyInformationCollection" />.</returns>
        </member>
        <member name="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the <see cref="T:System.Configuration.PropertyInformationCollection" /> instance.</summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Configuration.PropertyInformationCollection" /> instance.</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Configuration.PropertyInformationCollection" /> instance.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
            <summary>Gets the <see cref="T:System.Configuration.PropertyInformation" /> object in the collection, based on the specified property name.</summary>
            <param name="propertyName">The name of the configuration attribute contained in the <see cref="T:System.Configuration.PropertyInformationCollection" /> object.</param>
            <returns>A <see cref="T:System.Configuration.PropertyInformation" /> object.</returns>
        </member>
        <member name="T:System.Configuration.PropertyValueOrigin">
            <summary>Specifies the level in the configuration hierarchy where a configuration property value originated.</summary>
        </member>
        <member name="F:System.Configuration.PropertyValueOrigin.Default">
            <summary>The configuration property value originates from the <see cref="P:System.Configuration.ConfigurationProperty.DefaultValue" /> property.</summary>
        </member>
        <member name="F:System.Configuration.PropertyValueOrigin.Inherited">
            <summary>The configuration property value is inherited from a parent level in the configuration.</summary>
        </member>
        <member name="F:System.Configuration.PropertyValueOrigin.SetHere">
            <summary>The configuration property value is defined at the current level of the hierarchy.</summary>
        </member>
        <member name="T:System.Configuration.ProtectedConfiguration">
            <summary>Provides access to the protected-configuration providers for the current application's configuration file.</summary>
        </member>
        <member name="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
            <summary>The name of the data protection provider.</summary>
        </member>
        <member name="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
            <summary>The name of the protected data section.</summary>
        </member>
        <member name="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
            <summary>The name of the RSA provider.</summary>
        </member>
        <member name="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
            <summary>Gets the name of the default protected-configuration provider.</summary>
            <returns>The name of the default protected-configuration provider.</returns>
        </member>
        <member name="P:System.Configuration.ProtectedConfiguration.Providers">
            <summary>Gets a collection of the installed protected-configuration providers.</summary>
            <returns>A <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> collection of installed <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> objects.</returns>
        </member>
        <member name="T:System.Configuration.ProtectedConfigurationProvider">
            <summary>The base class to create providers for encrypting and decrypting protected configuration data.</summary>
        </member>
        <member name="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> class using default settings.</summary>
        </member>
        <member name="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
            <summary>Decrypts the passed <see cref="T:System.Xml.XmlNode" /> object from a configuration file.</summary>
            <param name="encryptedNode">The <see cref="T:System.Xml.XmlNode" /> object to decrypt.</param>
            <returns>The <see cref="T:System.Xml.XmlNode" /> object containing decrypted data.</returns>
        </member>
        <member name="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
            <summary>Encrypts the passed <see cref="T:System.Xml.XmlNode" /> object from a configuration file.</summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> object to encrypt.</param>
            <returns>The <see cref="T:System.Xml.XmlNode" /> object containing encrypted data.</returns>
        </member>
        <member name="T:System.Configuration.ProtectedConfigurationProviderCollection">
            <summary>Provides a collection of <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> objects.</summary>
        </member>
        <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> class using default settings.</summary>
        </member>
        <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
            <summary>Adds a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object to the collection.</summary>
            <param name="provider">A <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="provider" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="provider" /> is not a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object.</exception>
            <exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object to add already exists in the collection.  
  
-or-
  
 The collection is read-only.</exception>
        </member>
        <member name="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
            <summary>Gets a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object in the collection with the specified name.</summary>
            <param name="name">The name of a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object in the collection.</param>
            <returns>The <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object with the specified name, or <see langword="null" /> if there is no object with that name.</returns>
        </member>
        <member name="T:System.Configuration.ProtectedConfigurationSection">
            <summary>Provides programmatic access to the <see langword="configProtectedData" /> configuration section. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.ProtectedConfigurationSection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedConfigurationSection" /> class using default settings.</summary>
        </member>
        <member name="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
            <summary>Gets or sets the name of the default <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object in the <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" /> collection property.</summary>
            <returns>The name of the default <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> object in the <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" /> collection property.</returns>
        </member>
        <member name="P:System.Configuration.ProtectedConfigurationSection.Providers">
            <summary>Gets a <see cref="T:System.Configuration.ProviderSettingsCollection" /> collection of all the <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> objects in all participating configuration files.</summary>
            <returns>A <see cref="T:System.Configuration.ProviderSettingsCollection" /> collection of all the <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> objects in all participating configuration files.</returns>
        </member>
        <member name="T:System.Configuration.ProtectedProviderSettings">
            <summary>Represents a group of configuration elements that configure the providers for the <see langword="&lt;configProtectedData&gt;" /> configuration section.</summary>
        </member>
        <member name="M:System.Configuration.ProtectedProviderSettings.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProtectedProviderSettings" /> class.</summary>
        </member>
        <member name="P:System.Configuration.ProtectedProviderSettings.Properties">
            <summary>Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> collection that represents the properties of the providers for the protected configuration data.</summary>
            <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> that represents the properties of the providers for the protected configuration data.</returns>
        </member>
        <member name="P:System.Configuration.ProtectedProviderSettings.Providers">
            <summary>Gets a collection of <see cref="T:System.Configuration.ProviderSettings" /> objects that represent the properties of the providers for the protected configuration data.</summary>
            <returns>A collection of <see cref="T:System.Configuration.ProviderSettings" /> objects that represent the properties of the providers for the protected configuration data.</returns>
        </member>
        <member name="T:System.Configuration.Provider.ProviderBase">
            <summary>Provides a base implementation for the extensible provider model.</summary>
        </member>
        <member name="M:System.Configuration.Provider.ProviderBase.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.Provider.ProviderBase" /> class.</summary>
        </member>
        <member name="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>Initializes the configuration builder.</summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> on a provider after the provider has already been initialized.</exception>
        </member>
        <member name="P:System.Configuration.Provider.ProviderBase.Description">
            <summary>Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).</summary>
            <returns>A brief, friendly description suitable for display in administrative tools or other UIs.</returns>
        </member>
        <member name="P:System.Configuration.Provider.ProviderBase.Name">
            <summary>Gets the friendly name used to refer to the provider during configuration.</summary>
            <returns>The friendly name used to refer to the provider during configuration.</returns>
        </member>
        <member name="T:System.Configuration.Provider.ProviderCollection">
            <summary>Represents a collection of provider objects that inherit from <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
        </member>
        <member name="M:System.Configuration.Provider.ProviderCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.Provider.ProviderCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
            <summary>Adds a provider to the collection.</summary>
            <param name="provider">The provider to be added.</param>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="provider" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> of <paramref name="provider" /> is <see langword="null" />.  
  
-or-
  
 The length of the <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> of <paramref name="provider" /> is less than 1.</exception>
        </member>
        <member name="M:System.Configuration.Provider.ProviderCollection.Clear">
            <summary>Removes all items from the collection.</summary>
            <exception cref="T:System.NotSupportedException">The collection is set to read-only.</exception>
        </member>
        <member name="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)">
            <summary>Copies the contents of the collection to the given array starting at the specified index.</summary>
            <param name="array">The array to copy the elements of the collection to.</param>
            <param name="index">The index of the collection item at which to start the copying process.</param>
        </member>
        <member name="M:System.Configuration.Provider.ProviderCollection.GetEnumerator">
            <summary>Returns an object that implements the <see cref="T:System.Collections.IEnumerator" /> interface to iterate through the collection.</summary>
            <returns>An object that implements <see cref="T:System.Collections.IEnumerator" /> to iterate through the collection.</returns>
        </member>
        <member name="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)">
            <summary>Removes a provider from the collection.</summary>
            <param name="name">The name of the provider to be removed.</param>
            <exception cref="T:System.NotSupportedException">The collection has been set to read-only.</exception>
        </member>
        <member name="M:System.Configuration.Provider.ProviderCollection.SetReadOnly">
            <summary>Sets the collection to be read-only.</summary>
        </member>
        <member name="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Configuration.Provider.ProviderCollection" /> to an array, starting at a particular array index.</summary>
            <param name="array">The array to copy the elements of the collection to.</param>
            <param name="index">The index of the array at which to start copying provider instances from the collection.</param>
        </member>
        <member name="P:System.Configuration.Provider.ProviderCollection.Count">
            <summary>Gets the number of providers in the collection.</summary>
            <returns>The number of providers in the collection.</returns>
        </member>
        <member name="P:System.Configuration.Provider.ProviderCollection.IsSynchronized">
            <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
            <returns>
                <see langword="false" /> in all cases.</returns>
        </member>
        <member name="P:System.Configuration.Provider.ProviderCollection.Item(System.String)">
            <summary>Gets the provider with the specified name.</summary>
            <param name="name">The key by which the provider is identified.</param>
            <returns>The provider with the specified name.</returns>
        </member>
        <member name="P:System.Configuration.Provider.ProviderCollection.SyncRoot">
            <summary>Gets the current object.</summary>
            <returns>The current object.</returns>
        </member>
        <member name="T:System.Configuration.Provider.ProviderException">
            <summary>The exception that is thrown when a configuration provider error has occurred. This exception class is also used by providers to throw exceptions when internal errors occur within the provider that do not map to other pre-existing exception classes.</summary>
        </member>
        <member name="M:System.Configuration.Provider.ProviderException.#ctor">
            <summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException" /> class.</summary>
        </member>
        <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException" /> class.</summary>
            <param name="info">The object that holds the information to deserialize.</param>
            <param name="context">Contextual information about the source or destination.</param>
        </member>
        <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String)">
            <summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException" /> class.</summary>
            <param name="message">A message describing why this <see cref="T:System.Configuration.Provider.ProviderException" /> was thrown.</param>
        </member>
        <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String,System.Exception)">
            <summary>Creates a new instance of the <see cref="T:System.Configuration.Provider.ProviderException" /> class.</summary>
            <param name="message">A message describing why this <see cref="T:System.Configuration.Provider.ProviderException" /> was thrown.</param>
            <param name="innerException">The exception that caused this <see cref="T:System.Configuration.Provider.ProviderException" /> to be thrown.</param>
        </member>
        <member name="T:System.Configuration.ProviderSettings">
            <summary>Represents the configuration elements associated with a provider.</summary>
        </member>
        <member name="M:System.Configuration.ProviderSettings.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProviderSettings" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProviderSettings" /> class.</summary>
            <param name="name">The name of the provider to configure settings for.</param>
            <param name="type">The type of the provider to configure settings for.</param>
        </member>
        <member name="P:System.Configuration.ProviderSettings.Name">
            <summary>Gets or sets the name of the provider configured by this class.</summary>
            <returns>The name of the provider.</returns>
        </member>
        <member name="P:System.Configuration.ProviderSettings.Parameters">
            <summary>Gets a collection of user-defined parameters for the provider.</summary>
            <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of parameters for the provider.</returns>
        </member>
        <member name="P:System.Configuration.ProviderSettings.Type">
            <summary>Gets or sets the type of the provider configured by this class.</summary>
            <returns>The fully qualified namespace and class name for the type of provider configured by this <see cref="T:System.Configuration.ProviderSettings" /> instance.</returns>
        </member>
        <member name="T:System.Configuration.ProviderSettingsCollection">
            <summary>Represents a collection of <see cref="T:System.Configuration.ProviderSettings" /> objects.</summary>
        </member>
        <member name="M:System.Configuration.ProviderSettingsCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ProviderSettingsCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
            <summary>Adds a <see cref="T:System.Configuration.ProviderSettings" /> object to the collection.</summary>
            <param name="provider">The <see cref="T:System.Configuration.ProviderSettings" /> object to add.</param>
        </member>
        <member name="M:System.Configuration.ProviderSettingsCollection.Clear">
            <summary>Clears the collection.</summary>
        </member>
        <member name="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
            <summary>Removes an element from the collection.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.ProviderSettings" /> object to remove.</param>
        </member>
        <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
            <summary>Gets or sets a value at the specified index in the <see cref="T:System.Configuration.ProviderSettingsCollection" /> collection.</summary>
            <param name="index">The index of the <see cref="T:System.Configuration.ProviderSettings" /> to return.</param>
            <returns>The specified <see cref="T:System.Configuration.ProviderSettings" />.</returns>
        </member>
        <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
            <summary>Gets an item from the collection.</summary>
            <param name="key">A string reference to the <see cref="T:System.Configuration.ProviderSettings" /> object within the collection.</param>
            <returns>A <see cref="T:System.Configuration.ProviderSettings" /> object contained in the collection.</returns>
        </member>
        <member name="T:System.Configuration.RegexStringValidator">
            <summary>Provides validation of a string based on the rules provided by a regular expression.</summary>
        </member>
        <member name="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.RegexStringValidator" /> class.</summary>
            <param name="regex">A string that specifies a regular expression.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="regex" /> is null or an empty string ("").</exception>
        </member>
        <member name="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
            <summary>Determines whether the type of the object can be validated.</summary>
            <param name="type">The type of object.</param>
            <returns>
                <see langword="true" /> if the <paramref name="type" /> parameter matches a string; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
            <summary>Determines whether the value of an object is valid.</summary>
            <param name="value">The value of an object.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="value" /> does not conform to the parameters of the <see cref="T:System.Text.RegularExpressions.Regex" /> class.</exception>
        </member>
        <member name="T:System.Configuration.RegexStringValidatorAttribute">
            <summary>Declaratively instructs the .NET Framework to perform string validation on a configuration property using a regular expression. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.RegexStringValidatorAttribute" /> object.</summary>
            <param name="regex">The string to use for regular expression validation.</param>
        </member>
        <member name="P:System.Configuration.RegexStringValidatorAttribute.Regex">
            <summary>Gets the string used to perform regular-expression validation.</summary>
            <returns>The string containing the regular expression used to filter the string assigned to the decorated configuration-element property.</returns>
        </member>
        <member name="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
            <summary>Gets an instance of the <see cref="T:System.Configuration.RegexStringValidator" /> class.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance.</returns>
        </member>
        <member name="T:System.Configuration.RsaProtectedConfigurationProvider">
            <summary>Provides a <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> instance that uses RSA encryption to encrypt and decrypt configuration data.</summary>
        </member>
        <member name="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> class.</summary>
        </member>
        <member name="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
            <summary>Adds a key to the RSA key container.</summary>
            <param name="keySize">The size of the key to add.</param>
            <param name="exportable">
                <see langword="true" /> to indicate that the key is exportable; otherwise, <see langword="false" />.</param>
        </member>
        <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
            <summary>Decrypts the XML node passed to it.</summary>
            <param name="encryptedNode">The <see cref="T:System.Xml.XmlNode" /> to decrypt.</param>
            <returns>The decrypted XML node.</returns>
        </member>
        <member name="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
            <summary>Removes a key from the RSA key container.</summary>
        </member>
        <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
            <summary>Encrypts the XML node passed to it.</summary>
            <param name="node">The <see cref="T:System.Xml.XmlNode" /> to encrypt.</param>
            <returns>An encrypted <see cref="T:System.Xml.XmlNode" /> object.</returns>
        </member>
        <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
            <summary>Exports an RSA key from the key container.</summary>
            <param name="xmlFileName">The file name and path to export the key to.</param>
            <param name="includePrivateParameters">
                <see langword="true" /> to indicate that private parameters are exported; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="path" /> is <see langword="null" />.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive.</exception>
            <exception cref="T:System.IO.IOException">An error occurred while opening the file.</exception>
            <exception cref="T:System.UnauthorizedAccessException">
                <paramref name="path" /> specified a file that is read-only.  
  
 -or-  
  
 This operation is not supported on the current platform.  
  
 -or-  
  
 <paramref name="path" /> specified a directory.  
  
 -or-  
  
 The caller does not have the required permission.</exception>
            <exception cref="T:System.IO.FileNotFoundException">The file specified in <paramref name="path" /> was not found.</exception>
            <exception cref="T:System.NotSupportedException">
                <paramref name="path" /> is in an invalid format.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
        </member>
        <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
            <summary>Imports an RSA key into the key container.</summary>
            <param name="xmlFileName">The file name and path to import the key from.</param>
            <param name="exportable">
                <see langword="true" /> to indicate that the key is exportable; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="path" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="path" /> is <see langword="null" />.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive.</exception>
            <exception cref="T:System.IO.IOException">An error occurred while opening the file.</exception>
            <exception cref="T:System.UnauthorizedAccessException">
                <paramref name="path" /> specified a file that is write-only.  
  
 -or-  
  
 This operation is not supported on the current platform.  
  
 -or-  
  
 <paramref name="path" /> specified a directory.  
  
 -or-  
  
 The caller does not have the required permission.</exception>
            <exception cref="T:System.IO.FileNotFoundException">The file specified in <paramref name="path" /> was not found.</exception>
            <exception cref="T:System.NotSupportedException">
                <paramref name="path" /> is in an invalid format.</exception>
        </member>
        <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>Initializes the provider with default settings.</summary>
            <param name="name">The provider name to use for the object.</param>
            <param name="configurationValues">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> collection of values to use when initializing the object.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
                <paramref name="configurationValues" /> includes one or more unrecognized values.</exception>
        </member>
        <member name="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
            <summary>Gets the name of the Windows cryptography API (crypto API) cryptographic service provider (CSP).</summary>
            <returns>The name of the CryptoAPI cryptographic service provider.</returns>
        </member>
        <member name="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
            <summary>Gets the name of the key container.</summary>
            <returns>The name of the key container.</returns>
        </member>
        <member name="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
            <summary>Gets the public key used by the provider.</summary>
            <returns>An <see cref="T:System.Security.Cryptography.RSAParameters" /> object that contains the public key used by the provider.</returns>
        </member>
        <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseFIPS">
            <summary>Gets a value indicating whether the provider uses FIPS.</summary>
            <returns>
                <see langword="true" /> if the provider uses FIPS; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
            <summary>Gets a value that indicates whether the <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> object is using the machine key container.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> object is using the machine key container; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
            <summary>Gets a value that indicates whether the provider is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> object is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Configuration.SchemeSettingElement">
            <summary>Represents an element in a <see cref="T:System.Configuration.SchemeSettingElementCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SchemeSettingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SchemeSettingElement" /> class.</summary>
        </member>
        <member name="P:System.Configuration.SchemeSettingElement.GenericUriParserOptions">
            <summary>Gets the value of the GenericUriParserOptions entry from a <see cref="T:System.Configuration.SchemeSettingElement" /> instance.</summary>
            <returns>The value of GenericUriParserOptions entry.</returns>
        </member>
        <member name="P:System.Configuration.SchemeSettingElement.Name">
            <summary>Gets the value of the Name entry from a <see cref="T:System.Configuration.SchemeSettingElement" /> instance.</summary>
            <returns>The protocol used by this schema setting.</returns>
        </member>
        <member name="T:System.Configuration.SchemeSettingElementCollection">
            <summary>Represents a collection of <see cref="T:System.Configuration.SchemeSettingElement" /> objects.</summary>
        </member>
        <member name="M:System.Configuration.SchemeSettingElementCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SchemeSettingElementCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)">
            <summary>The index of the specified <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
            <param name="element">The <see cref="T:System.Configuration.SchemeSettingElement" /> for the specified index location.</param>
            <returns>The index of the specified <see cref="T:System.Configuration.SchemeSettingElement" />; otherwise, -1.</returns>
        </member>
        <member name="P:System.Configuration.SchemeSettingElementCollection.CollectionType">
            <summary>Gets the default collection type of <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
            <returns>The default collection type of <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</returns>
        </member>
        <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)">
            <summary>Gets an item at the specified index in the <see cref="T:System.Configuration.SchemeSettingElementCollection" /> collection.</summary>
            <param name="index">The index of the <see cref="T:System.Configuration.SchemeSettingElement" /> to return.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The <paramref name="index" /> parameter is less than zero.  
  
 -or-  
  
 The item specified by the parameter is <see langword="null" /> or has been removed.</exception>
            <returns>The specified <see cref="T:System.Configuration.SchemeSettingElement" />.</returns>
        </member>
        <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)">
            <summary>Gets an item from the <see cref="T:System.Configuration.SchemeSettingElementCollection" /> collection.</summary>
            <param name="name">A string reference to the <see cref="T:System.Configuration.SchemeSettingElement" /> object within the collection.</param>
            <returns>A <see cref="T:System.Configuration.SchemeSettingElement" /> object contained in the collection.</returns>
        </member>
        <member name="T:System.Configuration.SectionInformation">
            <summary>Contains metadata about an individual section within the configuration hierarchy. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.SectionInformation.ForceDeclaration">
            <summary>Forces the associated configuration section to appear in the configuration file.</summary>
        </member>
        <member name="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
            <summary>Forces the associated configuration section to appear in the configuration file, or removes an existing section from the configuration file.</summary>
            <param name="force">
                <see langword="true" /> if the associated section should be written in the configuration file; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
                <paramref name="force" /> is <see langword="true" /> and the associated section cannot be exported to the child configuration file, or it is undeclared.</exception>
        </member>
        <member name="M:System.Configuration.SectionInformation.GetParentSection">
            <summary>Gets the configuration section that contains the configuration section associated with this object.</summary>
            <exception cref="T:System.InvalidOperationException">The method is invoked from a parent section.</exception>
            <returns>The configuration section that contains the <see cref="T:System.Configuration.ConfigurationSection" /> that is associated with this <see cref="T:System.Configuration.SectionInformation" /> object.</returns>
        </member>
        <member name="M:System.Configuration.SectionInformation.GetRawXml">
            <summary>Returns an XML node object that represents the associated configuration-section object.</summary>
            <exception cref="T:System.InvalidOperationException">This configuration object is locked and cannot be edited.</exception>
            <returns>The XML representation for this configuration section.</returns>
        </member>
        <member name="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
            <summary>Marks a configuration section for protection.</summary>
            <param name="protectionProvider">The name of the protection provider to use.</param>
            <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> property is set to <see langword="false" />.  
  
-or-
  
 The target section is already a protected data section.</exception>
        </member>
        <member name="M:System.Configuration.SectionInformation.RevertToParent">
            <summary>Causes the associated configuration section to inherit all its values from the parent section.</summary>
            <exception cref="T:System.InvalidOperationException">This method cannot be called outside editing mode.</exception>
        </member>
        <member name="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
            <summary>Sets the object to an XML representation of the associated configuration section within the configuration file.</summary>
            <param name="rawXml">The XML to use.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="rawXml" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Configuration.SectionInformation.UnprotectSection">
            <summary>Removes the protected configuration encryption from the associated configuration section.</summary>
        </member>
        <member name="P:System.Configuration.SectionInformation.AllowDefinition">
            <summary>Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be defined.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
            <returns>A value that indicates where in the configuration file hierarchy the associated <see cref="T:System.Configuration.ConfigurationSection" /> object can be declared.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.AllowExeDefinition">
            <summary>Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be declared.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
            <returns>A value that indicates where in the configuration file hierarchy the associated <see cref="T:System.Configuration.ConfigurationSection" /> object can be declared for .exe files.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.AllowLocation">
            <summary>Gets or sets a value that indicates whether the configuration section allows the <see langword="location" /> attribute.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
            <returns>
                <see langword="true" /> if the <see langword="location" /> attribute is allowed; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.AllowOverride">
            <summary>Gets or sets a value that indicates whether the associated configuration section can be overridden by lower-level configuration files.</summary>
            <returns>
                <see langword="true" /> if the section can be overridden; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.ConfigSource">
            <summary>Gets or sets the name of the include file in which the associated configuration section is defined, if such a file exists.</summary>
            <returns>The name of the include file in which the associated <see cref="T:System.Configuration.ConfigurationSection" /> is defined, if such a file exists; otherwise, an empty string ("").</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.ForceSave">
            <summary>Gets or sets a value that indicates whether the associated configuration section will be saved even if it has not been modified.</summary>
            <returns>
                <see langword="true" /> if the associated <see cref="T:System.Configuration.ConfigurationSection" /> object will be saved even if it has not been modified; otherwise, <see langword="false" />. The default is <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 If the configuration file is saved (even if there are no modifications), ASP.NET restarts the application.</para></block></returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.InheritInChildApplications">
            <summary>Gets or sets a value that indicates whether the settings that are specified in the associated configuration section are inherited by applications that reside in a subdirectory of the relevant application.</summary>
            <returns>
                <see langword="true" /> if the settings specified in this <see cref="T:System.Configuration.ConfigurationSection" /> object are inherited by child applications; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.IsDeclarationRequired">
            <summary>Gets a value that indicates whether the configuration section must be declared in the configuration file.</summary>
            <returns>
                <see langword="true" /> if the associated <see cref="T:System.Configuration.ConfigurationSection" /> object must be declared in the configuration file; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.IsDeclared">
            <summary>Gets a value that indicates whether the associated configuration section is declared in the configuration file.</summary>
            <returns>
                <see langword="true" /> if this <see cref="T:System.Configuration.ConfigurationSection" /> is declared in the configuration file; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.IsLocked">
            <summary>Gets a value that indicates whether the associated configuration section is locked.</summary>
            <returns>
                <see langword="true" /> if the section is locked; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.IsProtected">
            <summary>Gets a value that indicates whether the associated configuration section is protected.</summary>
            <returns>
                <see langword="true" /> if this <see cref="T:System.Configuration.ConfigurationSection" /> is protected; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.Name">
            <summary>Gets the name of the associated configuration section.</summary>
            <returns>The complete name of the configuration section.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.OverrideMode">
            <summary>Gets or sets the <see cref="T:System.Configuration.OverrideMode" /> enumeration value that specifies whether the associated configuration section can be overridden by child configuration files.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">An attempt was made to change both the <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> and <see cref="P:System.Configuration.SectionInformation.OverrideMode" /> properties, which is not supported for compatibility reasons.</exception>
            <returns>One of the <see cref="T:System.Configuration.OverrideMode" /> enumeration values.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.OverrideModeDefault">
            <summary>Gets or sets a value that specifies the default override behavior of a configuration section by child configuration files.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The override behavior is specified in a parent configuration section.</exception>
            <returns>One of the <see cref="T:System.Configuration.OverrideMode" /> enumeration values.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.OverrideModeEffective">
            <summary>Gets the override behavior of a configuration section that is in turn based on whether child configuration files can lock the configuration section.</summary>
            <returns>One of the <see cref="T:System.Configuration.OverrideMode" /> enumeration values.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.ProtectionProvider">
            <summary>Gets the protected configuration provider for the associated configuration section.</summary>
            <returns>The protected configuration provider for this <see cref="T:System.Configuration.ConfigurationSection" /> object.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.RequirePermission">
            <summary>Gets a value that indicates whether the associated configuration section requires access permissions.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
            <returns>
                <see langword="true" /> if the <see langword="requirePermission" /> attribute is set to <see langword="true" />; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
            <summary>Gets or sets a value that specifies whether a change in an external configuration include file requires an application restart.</summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
            <returns>
                <see langword="true" /> if a change in an external configuration include file requires an application restart; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.SectionName">
            <summary>Gets the name of the associated configuration section.</summary>
            <returns>The name of the associated <see cref="T:System.Configuration.ConfigurationSection" /> object.</returns>
        </member>
        <member name="P:System.Configuration.SectionInformation.Type">
            <summary>Gets or sets the section class name.</summary>
            <exception cref="T:System.ArgumentException">The selected value is <see langword="null" /> or an empty string ("").</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
            <returns>The name of the class that is associated with this <see cref="T:System.Configuration.ConfigurationSection" /> section.</returns>
        </member>
        <member name="T:System.Configuration.SettingAttribute">
            <summary>Represents a custom settings attribute used to associate settings information with a settings property.</summary>
        </member>
        <member name="M:System.Configuration.SettingAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingAttribute" /> class.</summary>
        </member>
        <member name="T:System.Configuration.SettingChangingEventArgs">
            <summary>Provides data for the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> event.</summary>
        </member>
        <member name="M:System.Configuration.SettingChangingEventArgs.#ctor(System.String,System.String,System.String,System.Object,System.Boolean)">
            <summary>Initializes an instance of the <see cref="T:System.Configuration.SettingChangingEventArgs" /> class.</summary>
            <param name="settingName">A <see cref="T:System.String" /> containing the name of the application setting.</param>
            <param name="settingClass">A <see cref="T:System.String" /> containing a category description of the setting. Often this parameter is set to the application settings group name.</param>
            <param name="settingKey">A <see cref="T:System.String" /> containing the application settings key.</param>
            <param name="newValue">An <see cref="T:System.Object" /> that contains the new value to be assigned to the application settings property.</param>
            <param name="cancel">
                <see langword="true" /> to cancel the event; otherwise, <see langword="false" />.</param>
        </member>
        <member name="P:System.Configuration.SettingChangingEventArgs.NewValue">
            <summary>Gets the new value being assigned to the application settings property.</summary>
            <returns>An <see cref="T:System.Object" /> that contains the new value to be assigned to the application settings property.</returns>
        </member>
        <member name="P:System.Configuration.SettingChangingEventArgs.SettingClass">
            <summary>Gets the application settings property category.</summary>
            <returns>A <see cref="T:System.String" /> containing a category description of the setting. Typically, this parameter is set to the application settings group name.</returns>
        </member>
        <member name="P:System.Configuration.SettingChangingEventArgs.SettingKey">
            <summary>Gets the application settings key associated with the property.</summary>
            <returns>A <see cref="T:System.String" /> containing the application settings key.</returns>
        </member>
        <member name="P:System.Configuration.SettingChangingEventArgs.SettingName">
            <summary>Gets the name of the application setting associated with the application settings property.</summary>
            <returns>A <see cref="T:System.String" /> containing the name of the application setting.</returns>
        </member>
        <member name="T:System.Configuration.SettingChangingEventHandler">
            <summary>Represents the method that will handle the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> event.</summary>
            <param name="sender">The source of the event, typically an application settings wrapper class derived from the <see cref="T:System.Configuration.ApplicationSettingsBase" /> class.</param>
            <param name="e">A <see cref="T:System.Configuration.SettingChangingEventArgs" /> containing the data for the event.</param>
        </member>
        <member name="T:System.Configuration.SettingElement">
            <summary>Represents a simplified configuration element used for updating elements in the configuration. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.SettingElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingElement" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SettingElement.#ctor(System.String,System.Configuration.SettingsSerializeAs)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingElement" /> class based on supplied parameters.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.SettingElement" /> object.</param>
            <param name="serializeAs">A <see cref="T:System.Configuration.SettingsSerializeAs" /> object. This object is an enumeration used as the serialization scheme to store configuration settings.</param>
        </member>
        <member name="M:System.Configuration.SettingElement.Equals(System.Object)">
            <summary>Compares the current <see cref="T:System.Configuration.SettingElement" /> instance to the specified object.</summary>
            <param name="settings">The object to compare with.</param>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.SettingElement" /> instance is equal to the specified object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.SettingElement.GetHashCode">
            <summary>Gets a unique value representing the <see cref="T:System.Configuration.SettingElement" /> current instance.</summary>
            <returns>A unique value representing the <see cref="T:System.Configuration.SettingElement" /> current instance.</returns>
        </member>
        <member name="P:System.Configuration.SettingElement.Name">
            <summary>Gets or sets the name of the <see cref="T:System.Configuration.SettingElement" /> object.</summary>
            <returns>The name of the <see cref="T:System.Configuration.SettingElement" /> object.</returns>
        </member>
        <member name="P:System.Configuration.SettingElement.SerializeAs">
            <summary>Gets or sets the serialization mechanism used to persist the values of the <see cref="T:System.Configuration.SettingElement" /> object.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsSerializeAs" /> object.</returns>
        </member>
        <member name="P:System.Configuration.SettingElement.Value">
            <summary>Gets or sets the value of a <see cref="T:System.Configuration.SettingElement" /> object by using a <see cref="T:System.Configuration.SettingValueElement" /> object.</summary>
            <returns>A <see cref="T:System.Configuration.SettingValueElement" /> object containing the value of the <see cref="T:System.Configuration.SettingElement" /> object.</returns>
        </member>
        <member name="T:System.Configuration.SettingElementCollection">
            <summary>Contains a collection of <see cref="T:System.Configuration.SettingElement" /> objects. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.SettingElementCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingElementCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)">
            <summary>Adds a <see cref="T:System.Configuration.SettingElement" /> object to the collection.</summary>
            <param name="element">The <see cref="T:System.Configuration.SettingElement" /> object to add to the collection.</param>
        </member>
        <member name="M:System.Configuration.SettingElementCollection.Clear">
            <summary>Removes all <see cref="T:System.Configuration.SettingElement" /> objects from the collection.</summary>
        </member>
        <member name="M:System.Configuration.SettingElementCollection.Get(System.String)">
            <summary>Gets a <see cref="T:System.Configuration.SettingElement" /> object from the collection.</summary>
            <param name="elementKey">A string value representing the <see cref="T:System.Configuration.SettingElement" /> object in the collection.</param>
            <returns>A <see cref="T:System.Configuration.SettingElement" /> object.</returns>
        </member>
        <member name="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)">
            <summary>Removes a <see cref="T:System.Configuration.SettingElement" /> object from the collection.</summary>
            <param name="element">A <see cref="T:System.Configuration.SettingElement" /> object.</param>
        </member>
        <member name="P:System.Configuration.SettingElementCollection.CollectionType">
            <summary>Gets the type of the configuration collection.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> object of the collection.</returns>
        </member>
        <member name="T:System.Configuration.SettingsAttributeDictionary">
            <summary>Represents a collection of key/value pairs used to describe a configuration object as well as a <see cref="T:System.Configuration.SettingsProperty" /> object.</summary>
        </member>
        <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsAttributeDictionary" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsAttributeDictionary" /> class.</summary>
            <param name="attributes">A collection of key/value pairs that are related to configuration settings.</param>
        </member>
        <member name="T:System.Configuration.SettingsBase">
            <summary>Provides the base class used to support user property settings.</summary>
        </member>
        <member name="M:System.Configuration.SettingsBase.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsBase" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)">
            <summary>Initializes internal properties used by <see cref="T:System.Configuration.SettingsBase" /> object.</summary>
            <param name="context">The settings context related to the settings properties.</param>
            <param name="properties">The settings properties that will be accessible from the <see cref="T:System.Configuration.SettingsBase" /> instance.</param>
            <param name="providers">The initialized providers that should be used when loading and saving property values.</param>
        </member>
        <member name="M:System.Configuration.SettingsBase.Save">
            <summary>Stores the current values of the settings properties.</summary>
        </member>
        <member name="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)">
            <summary>Provides a <see cref="T:System.Configuration.SettingsBase" /> class that is synchronized (thread safe).</summary>
            <param name="settingsBase">The class used to support user property settings.</param>
            <returns>A <see cref="T:System.Configuration.SettingsBase" /> class that is synchronized.</returns>
        </member>
        <member name="P:System.Configuration.SettingsBase.Context">
            <summary>Gets the associated settings context.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsContext" /> associated with the settings instance.</returns>
        </member>
        <member name="P:System.Configuration.SettingsBase.IsSynchronized">
            <summary>Gets a value indicating whether access to the object is synchronized (thread safe).</summary>
            <returns>
                <see langword="true" /> if access to the <see cref="T:System.Configuration.SettingsBase" /> is synchronized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.SettingsBase.Item(System.String)">
            <summary>Gets or sets the value of the specified settings property.</summary>
            <param name="propertyName">A <see cref="T:System.String" /> containing the name of the property to access.</param>
            <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">There are no properties associated with the current object, or the specified property could not be found.</exception>
            <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">An attempt was made to set a read-only property.</exception>
            <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">The value supplied is of a type incompatible with the settings property, during a set operation.</exception>
            <returns>If found, the value of the named settings property.</returns>
        </member>
        <member name="P:System.Configuration.SettingsBase.Properties">
            <summary>Gets the collection of settings properties.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsPropertyCollection" /> collection containing all the <see cref="T:System.Configuration.SettingsProperty" /> objects.</returns>
        </member>
        <member name="P:System.Configuration.SettingsBase.PropertyValues">
            <summary>Gets a collection of settings property values.</summary>
            <returns>A collection of <see cref="T:System.Configuration.SettingsPropertyValue" /> objects representing the actual data values for the properties managed by the <see cref="T:System.Configuration.SettingsBase" /> instance.</returns>
        </member>
        <member name="P:System.Configuration.SettingsBase.Providers">
            <summary>Gets a collection of settings providers.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsProviderCollection" /> containing <see cref="T:System.Configuration.SettingsProvider" /> objects.</returns>
        </member>
        <member name="T:System.Configuration.SettingsContext">
            <summary>Provides contextual information that the provider can use when persisting settings.</summary>
        </member>
        <member name="M:System.Configuration.SettingsContext.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsContext" /> class.</summary>
        </member>
        <member name="T:System.Configuration.SettingsDescriptionAttribute">
            <summary>Provides a string that describes an individual configuration property. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.SettingsDescriptionAttribute.#ctor(System.String)">
            <summary>Initializes an instance of the <see cref="T:System.Configuration.SettingsDescriptionAttribute" /> class.</summary>
            <param name="description">The <see cref="T:System.String" /> used as descriptive text.</param>
        </member>
        <member name="P:System.Configuration.SettingsDescriptionAttribute.Description">
            <summary>Gets the descriptive text for the associated configuration property.</summary>
            <returns>A <see cref="T:System.String" /> containing the descriptive text for the associated configuration property.</returns>
        </member>
        <member name="T:System.Configuration.SettingsGroupDescriptionAttribute">
            <summary>Provides a string that describes an application settings property group. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.SettingsGroupDescriptionAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsGroupDescriptionAttribute" /> class.</summary>
            <param name="description">A <see cref="T:System.String" /> containing the descriptive text for the application settings group.</param>
        </member>
        <member name="P:System.Configuration.SettingsGroupDescriptionAttribute.Description">
            <summary>The descriptive text for the application settings properties group.</summary>
            <returns>A <see cref="T:System.String" /> containing the descriptive text for the application settings group.</returns>
        </member>
        <member name="T:System.Configuration.SettingsGroupNameAttribute">
            <summary>Specifies a name for application settings property group. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.SettingsGroupNameAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsGroupNameAttribute" /> class.</summary>
            <param name="groupName">A <see cref="T:System.String" /> containing the name of the application settings property group.</param>
        </member>
        <member name="P:System.Configuration.SettingsGroupNameAttribute.GroupName">
            <summary>Gets the name of the application settings property group.</summary>
            <returns>A <see cref="T:System.String" /> containing the name of the application settings property group.</returns>
        </member>
        <member name="T:System.Configuration.SettingsLoadedEventArgs">
            <summary>Provides data for the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> event.</summary>
        </member>
        <member name="M:System.Configuration.SettingsLoadedEventArgs.#ctor(System.Configuration.SettingsProvider)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> class.</summary>
            <param name="provider">A <see cref="T:System.Configuration.SettingsProvider" /> object from which settings are loaded.</param>
        </member>
        <member name="P:System.Configuration.SettingsLoadedEventArgs.Provider">
            <summary>Gets the settings provider used to store configuration settings.</summary>
            <returns>A settings provider.</returns>
        </member>
        <member name="T:System.Configuration.SettingsLoadedEventHandler">
            <summary>Represents the method that will handle the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> event.</summary>
            <param name="sender">The source of the event, typically the settings class.</param>
            <param name="e">A <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> object that contains the event data.</param>
        </member>
        <member name="T:System.Configuration.SettingsManageability">
            <summary>Provides values to indicate which services should be made available to application settings.</summary>
        </member>
        <member name="F:System.Configuration.SettingsManageability.Roaming">
            <summary>Enables application settings to be stored in roaming user profiles. For more information about roaming user profiles, see Isolated Storage and Roaming.</summary>
        </member>
        <member name="T:System.Configuration.SettingsManageabilityAttribute">
            <summary>Specifies special services for application settings properties. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.SettingsManageabilityAttribute.#ctor(System.Configuration.SettingsManageability)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsManageabilityAttribute" /> class.</summary>
            <param name="manageability">A <see cref="T:System.Configuration.SettingsManageability" /> value that enumerates the services being requested.</param>
        </member>
        <member name="P:System.Configuration.SettingsManageabilityAttribute.Manageability">
            <summary>Gets the set of special services that have been requested.</summary>
            <returns>A value that results from using the logical <see langword="OR" /> operator to combine all the <see cref="T:System.Configuration.SettingsManageability" /> enumeration values corresponding to the requested services.</returns>
        </member>
        <member name="T:System.Configuration.SettingsProperty">
            <summary>Used internally as the class that represents metadata about an individual configuration property.</summary>
        </member>
        <member name="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsProperty" /> class, based on the supplied parameter.</summary>
            <param name="propertyToCopy">Specifies a copy of an existing <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
        </member>
        <member name="M:System.Configuration.SettingsProperty.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsProperty" /> class. based on the supplied parameter.</summary>
            <param name="name">Specifies the name of an existing <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
        </member>
        <member name="M:System.Configuration.SettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)">
            <summary>Creates a new instance of the <see cref="T:System.Configuration.SettingsProperty" /> class based on the supplied parameters.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
            <param name="propertyType">The type of <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
            <param name="provider">A <see cref="T:System.Configuration.SettingsProvider" /> object to use for persistence.</param>
            <param name="isReadOnly">A <see cref="T:System.Boolean" /> value specifying whether the <see cref="T:System.Configuration.SettingsProperty" /> object is read-only.</param>
            <param name="defaultValue">The default value of the <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
            <param name="serializeAs">A <see cref="T:System.Configuration.SettingsSerializeAs" /> object. This object is an enumeration used to set the serialization scheme for storing application settings.</param>
            <param name="attributes">A <see cref="T:System.Configuration.SettingsAttributeDictionary" /> object.</param>
            <param name="throwOnErrorDeserializing">A Boolean value specifying whether an error will be thrown when the property is unsuccessfully deserialized.</param>
            <param name="throwOnErrorSerializing">A Boolean value specifying whether an error will be thrown when the property is unsuccessfully serialized.</param>
        </member>
        <member name="P:System.Configuration.SettingsProperty.Attributes">
            <summary>Gets a <see cref="T:System.Configuration.SettingsAttributeDictionary" /> object containing the attributes of the <see cref="T:System.Configuration.SettingsProperty" /> object.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsAttributeDictionary" /> object.</returns>
        </member>
        <member name="P:System.Configuration.SettingsProperty.DefaultValue">
            <summary>Gets or sets the default value of the <see cref="T:System.Configuration.SettingsProperty" /> object.</summary>
            <returns>An object containing the default value of the <see cref="T:System.Configuration.SettingsProperty" /> object.</returns>
        </member>
        <member name="P:System.Configuration.SettingsProperty.IsReadOnly">
            <summary>Gets or sets a value specifying whether a <see cref="T:System.Configuration.SettingsProperty" /> object is read-only.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.SettingsProperty" /> is read-only; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.SettingsProperty.Name">
            <summary>Gets or sets the name of the <see cref="T:System.Configuration.SettingsProperty" />.</summary>
            <returns>The name of the <see cref="T:System.Configuration.SettingsProperty" />.</returns>
        </member>
        <member name="P:System.Configuration.SettingsProperty.PropertyType">
            <summary>Gets or sets the type for the <see cref="T:System.Configuration.SettingsProperty" />.</summary>
            <returns>The type for the <see cref="T:System.Configuration.SettingsProperty" />.</returns>
        </member>
        <member name="P:System.Configuration.SettingsProperty.Provider">
            <summary>Gets or sets the provider for the <see cref="T:System.Configuration.SettingsProperty" />.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsProvider" /> object.</returns>
        </member>
        <member name="P:System.Configuration.SettingsProperty.SerializeAs">
            <summary>Gets or sets a <see cref="T:System.Configuration.SettingsSerializeAs" /> object for the <see cref="T:System.Configuration.SettingsProperty" />.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsSerializeAs" /> object.</returns>
        </member>
        <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorDeserializing">
            <summary>Gets or sets a value specifying whether an error will be thrown when the property is unsuccessfully deserialized.</summary>
            <returns>
                <see langword="true" /> if the error will be thrown when the property is unsuccessfully deserialized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorSerializing">
            <summary>Gets or sets a value specifying whether an error will be thrown when the property is unsuccessfully serialized.</summary>
            <returns>
                <see langword="true" /> if the error will be thrown when the property is unsuccessfully serialized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Configuration.SettingsPropertyCollection">
            <summary>Contains a collection of <see cref="T:System.Configuration.SettingsProperty" /> objects.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)">
            <summary>Adds a <see cref="T:System.Configuration.SettingsProperty" /> object to the collection.</summary>
            <param name="property">A <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.Clear">
            <summary>Removes all <see cref="T:System.Configuration.SettingsProperty" /> objects from the collection.</summary>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.Clone">
            <summary>Creates a copy of the existing collection.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsPropertyCollection" /> class.</returns>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)">
            <summary>Copies this <see cref="T:System.Configuration.SettingsPropertyCollection" /> object to an array.</summary>
            <param name="array">The array to copy the object to.</param>
            <param name="index">The index at which to begin copying.</param>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.GetEnumerator">
            <summary>Gets the <see cref="T:System.Collections.IEnumerator" /> object as it applies to the collection.</summary>
            <returns>The <see cref="T:System.Collections.IEnumerator" /> object as it applies to the collection.</returns>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)">
            <summary>Performs additional, custom processing when adding to the contents of the <see cref="T:System.Configuration.SettingsPropertyCollection" /> instance.</summary>
            <param name="property">A <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)">
            <summary>Performs additional, custom processing after adding to the contents of the <see cref="T:System.Configuration.SettingsPropertyCollection" /> instance.</summary>
            <param name="property">A <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.OnClear">
            <summary>Performs additional, custom processing when clearing the contents of the <see cref="T:System.Configuration.SettingsPropertyCollection" /> instance.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.OnClearComplete">
            <summary>Performs additional, custom processing after clearing the contents of the <see cref="T:System.Configuration.SettingsPropertyCollection" /> instance.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)">
            <summary>Performs additional, custom processing when removing the contents of the <see cref="T:System.Configuration.SettingsPropertyCollection" /> instance.</summary>
            <param name="property">A <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)">
            <summary>Performs additional, custom processing after removing the contents of the <see cref="T:System.Configuration.SettingsPropertyCollection" /> instance.</summary>
            <param name="property">A <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)">
            <summary>Removes a <see cref="T:System.Configuration.SettingsProperty" /> object from the collection.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
        </member>
        <member name="M:System.Configuration.SettingsPropertyCollection.SetReadOnly">
            <summary>Sets the collection to be read-only.</summary>
        </member>
        <member name="P:System.Configuration.SettingsPropertyCollection.Count">
            <summary>Gets a value that specifies the number of <see cref="T:System.Configuration.SettingsProperty" /> objects in the collection.</summary>
            <returns>The number of <see cref="T:System.Configuration.SettingsProperty" /> objects in the collection.</returns>
        </member>
        <member name="P:System.Configuration.SettingsPropertyCollection.IsSynchronized">
            <summary>Gets a value that indicates whether access to the collection is synchronized (thread safe).</summary>
            <returns>
                <see langword="true" /> if access to the <see cref="T:System.Configuration.SettingsPropertyCollection" /> is synchronized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.SettingsPropertyCollection.Item(System.String)">
            <summary>Gets the collection item with the specified name.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
            <returns>The <see cref="T:System.Configuration.SettingsProperty" /> object with the specified <paramref name="name" />.</returns>
        </member>
        <member name="P:System.Configuration.SettingsPropertyCollection.SyncRoot">
            <summary>Gets the object to synchronize access to the collection.</summary>
            <returns>The object to synchronize access to the collection.</returns>
        </member>
        <member name="T:System.Configuration.SettingsPropertyIsReadOnlyException">
            <summary>Provides an exception for read-only <see cref="T:System.Configuration.SettingsProperty" /> objects.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> class based on the supplied parameters.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination of the serialized stream.</param>
        </member>
        <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> class based on a supplied parameter.</summary>
            <param name="message">A string containing an exception message.</param>
        </member>
        <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> class based on supplied parameters.</summary>
            <param name="message">A string containing an exception message.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:System.Configuration.SettingsPropertyNotFoundException">
            <summary>Provides an exception for <see cref="T:System.Configuration.SettingsProperty" /> objects that are not found.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> class, based on supplied parameters.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination of the serialized stream.</param>
        </member>
        <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> class, based on a supplied parameter.</summary>
            <param name="message">A string containing an exception message.</param>
        </member>
        <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> class, based on supplied parameters.</summary>
            <param name="message">A string containing an exception message.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:System.Configuration.SettingsPropertyValue">
            <summary>Contains the value of a settings property that can be loaded and stored by an instance of <see cref="T:System.Configuration.SettingsBase" />.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyValue" /> class, based on supplied parameters.</summary>
            <param name="property">Specifies a <see cref="T:System.Configuration.SettingsProperty" /> object.</param>
        </member>
        <member name="P:System.Configuration.SettingsPropertyValue.Deserialized">
            <summary>Gets or sets whether the value of a <see cref="T:System.Configuration.SettingsProperty" /> object has been deserialized.</summary>
            <returns>
                <see langword="true" /> if the value of a <see cref="T:System.Configuration.SettingsProperty" /> object has been deserialized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.SettingsPropertyValue.IsDirty">
            <summary>Gets or sets whether the value of a <see cref="T:System.Configuration.SettingsProperty" /> object has changed.</summary>
            <returns>
                <see langword="true" /> if the value of a <see cref="T:System.Configuration.SettingsProperty" /> object has changed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.SettingsPropertyValue.Name">
            <summary>Gets the name of the property from the associated <see cref="T:System.Configuration.SettingsProperty" /> object.</summary>
            <returns>The name of the <see cref="T:System.Configuration.SettingsProperty" /> object.</returns>
        </member>
        <member name="P:System.Configuration.SettingsPropertyValue.Property">
            <summary>Gets the <see cref="T:System.Configuration.SettingsProperty" /> object.</summary>
            <returns>The <see cref="T:System.Configuration.SettingsProperty" /> object that describes the <see cref="T:System.Configuration.SettingsPropertyValue" /> object.</returns>
        </member>
        <member name="P:System.Configuration.SettingsPropertyValue.PropertyValue">
            <summary>Gets or sets the value of the <see cref="T:System.Configuration.SettingsProperty" /> object.</summary>
            <exception cref="T:System.ArgumentException">While attempting to use the default value from the <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> property, an error occurred.  Either the attempt to convert <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> property to a valid type failed, or the resulting value was not compatible with the type defined by <see cref="P:System.Configuration.SettingsProperty.PropertyType" />.</exception>
            <returns>The value of the <see cref="T:System.Configuration.SettingsProperty" /> object. When this value is set, the <see cref="P:System.Configuration.SettingsPropertyValue.IsDirty" /> property is set to <see langword="true" /> and <see cref="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue" /> is set to <see langword="false" />.  
  
 When a value is first accessed from the <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> property, and if the value was initially stored into the <see cref="T:System.Configuration.SettingsPropertyValue" /> object as a serialized representation using the <see cref="P:System.Configuration.SettingsPropertyValue.SerializedValue" /> property, the <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> property will trigger deserialization of the underlying value.  As a side effect, the <see cref="P:System.Configuration.SettingsPropertyValue.Deserialized" /> property will be set to <see langword="true" />.  
  
 If this chain of events occurs in ASP.NET, and if an error occurs during the deserialization process, the error is logged using the health-monitoring feature of ASP.NET. By default, this means that deserialization errors will show up in the Application Event Log when running under ASP.NET. If this process occurs outside of ASP.NET, and if an error occurs during deserialization, the error is suppressed, and the remainder of the logic during deserialization occurs. If there is no serialized value to deserialize when the deserialization is attempted, then <see cref="T:System.Configuration.SettingsPropertyValue" /> object will instead attempt to return a default value if one was configured as defined on the associated <see cref="T:System.Configuration.SettingsProperty" /> instance. In this case, if the <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> property was set to either <see langword="null" />, or to the string "[null]", then the <see cref="T:System.Configuration.SettingsPropertyValue" /> object will initialize the <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> property to either <see langword="null" /> for reference types, or to the default value for the associated value type.  On the other hand, if <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> property holds a valid object reference or string value (other than "[null]"), then the <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> property is returned instead.  
  
 If there is no serialized value to deserialize when the deserialization is attempted, and no default value was specified, then an empty string will be returned for string types. For all other types, a default instance will be returned by calling <see cref="M:System.Activator.CreateInstance(System.Type)" /> - for reference types this means an attempt will be made to create an object instance using the parameterless constructor.  If this attempt fails, then <see langword="null" /> is returned.</returns>
        </member>
        <member name="P:System.Configuration.SettingsPropertyValue.SerializedValue">
            <summary>Gets or sets the serialized value of the <see cref="T:System.Configuration.SettingsProperty" /> object.</summary>
            <exception cref="T:System.ArgumentException">The serialization options for the property indicated the use of a string type converter, but a type converter was not available.</exception>
            <returns>The serialized value of a <see cref="T:System.Configuration.SettingsProperty" /> object.</returns>
        </member>
        <member name="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue">
            <summary>Gets a Boolean value specifying whether the value of the <see cref="T:System.Configuration.SettingsPropertyValue" /> object is the default value as defined by the <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> property value on the associated <see cref="T:System.Configuration.SettingsProperty" /> object.</summary>
            <returns>
                <see langword="true" /> if the value of the <see cref="T:System.Configuration.SettingsProperty" /> object is the default value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Configuration.SettingsPropertyValueCollection">
            <summary>Contains a collection of settings property values that map <see cref="T:System.Configuration.SettingsProperty" /> objects to <see cref="T:System.Configuration.SettingsPropertyValue" /> objects.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyValueCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)">
            <summary>Adds a <see cref="T:System.Configuration.SettingsPropertyValue" /> object to the collection.</summary>
            <param name="property">A <see cref="T:System.Configuration.SettingsPropertyValue" /> object.</param>
            <exception cref="T:System.NotSupportedException">An attempt was made to add an item to the collection, but the collection was marked as read-only.</exception>
        </member>
        <member name="M:System.Configuration.SettingsPropertyValueCollection.Clear">
            <summary>Removes all <see cref="T:System.Configuration.SettingsPropertyValue" /> objects from the collection.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyValueCollection.Clone">
            <summary>Creates a copy of the existing collection.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> class.</returns>
        </member>
        <member name="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)">
            <summary>Copies this <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> collection to an array.</summary>
            <param name="array">The array to copy the collection to.</param>
            <param name="index">The index at which to begin copying.</param>
        </member>
        <member name="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator">
            <summary>Gets the <see cref="T:System.Collections.IEnumerator" /> object as it applies to the collection.</summary>
            <returns>The <see cref="T:System.Collections.IEnumerator" /> object as it applies to the collection.</returns>
        </member>
        <member name="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)">
            <summary>Removes a <see cref="T:System.Configuration.SettingsPropertyValue" /> object from the collection.</summary>
            <param name="name">The name of the <see cref="T:System.Configuration.SettingsPropertyValue" /> object.</param>
            <exception cref="T:System.NotSupportedException">An attempt was made to remove an item from the collection, but the collection was marked as read-only.</exception>
        </member>
        <member name="M:System.Configuration.SettingsPropertyValueCollection.SetReadOnly">
            <summary>Sets the collection to be read-only.</summary>
        </member>
        <member name="P:System.Configuration.SettingsPropertyValueCollection.Count">
            <summary>Gets a value that specifies the number of <see cref="T:System.Configuration.SettingsPropertyValue" /> objects in the collection.</summary>
            <returns>The number of <see cref="T:System.Configuration.SettingsPropertyValue" /> objects in the collection.</returns>
        </member>
        <member name="P:System.Configuration.SettingsPropertyValueCollection.IsSynchronized">
            <summary>Gets a value that indicates whether access to the collection is synchronized (thread safe).</summary>
            <returns>
                <see langword="true" /> if access to the <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> collection is synchronized; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)">
            <summary>Gets an item from the collection.</summary>
            <param name="name">A <see cref="T:System.Configuration.SettingsPropertyValue" /> object.</param>
            <returns>The <see cref="T:System.Configuration.SettingsPropertyValue" /> object with the specified <paramref name="name" />.</returns>
        </member>
        <member name="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot">
            <summary>Gets the object to synchronize access to the collection.</summary>
            <returns>The object to synchronize access to the collection.</returns>
        </member>
        <member name="T:System.Configuration.SettingsPropertyWrongTypeException">
            <summary>Provides an exception that is thrown when an invalid type is used with a <see cref="T:System.Configuration.SettingsProperty" /> object.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> class based on the supplied parameters.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination of the serialized stream.</param>
        </member>
        <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> class based on the supplied parameter.</summary>
            <param name="message">A string containing an exception message.</param>
        </member>
        <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> class based on the supplied parameters.</summary>
            <param name="message">A string containing an exception message.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:System.Configuration.SettingsProvider">
            <summary>Acts as a base class for deriving custom settings providers in the application settings architecture.</summary>
        </member>
        <member name="M:System.Configuration.SettingsProvider.#ctor">
            <summary>Initializes an instance of the <see cref="T:System.Configuration.SettingsProvider" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>Returns the collection of settings property values for the specified application instance and settings property group.</summary>
            <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application use.</param>
            <param name="collection">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</param>
            <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</returns>
        </member>
        <member name="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
            <summary>Sets the values of the specified group of property settings.</summary>
            <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
            <param name="collection">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> representing the group of property settings to set.</param>
        </member>
        <member name="P:System.Configuration.SettingsProvider.ApplicationName">
            <summary>Gets or sets the name of the currently running application.</summary>
            <returns>A <see cref="T:System.String" /> that contains the application's shortened name, which does not contain a full path or extension, for example, <c>SimpleAppSettings</c>.</returns>
        </member>
        <member name="T:System.Configuration.SettingsProviderAttribute">
            <summary>Specifies the settings provider used to provide storage for the current application settings class or property. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)">
            <summary>Initializes an instance of the <see cref="T:System.Configuration.SettingsProviderAttribute" /> class.</summary>
            <param name="providerTypeName">A <see cref="T:System.String" /> containing the name of the settings provider.</param>
        </member>
        <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsProviderAttribute" /> class.</summary>
            <param name="providerType">A <see cref="T:System.Type" /> containing the settings provider type.</param>
        </member>
        <member name="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName">
            <summary>Gets the type name of the settings provider.</summary>
            <returns>A <see cref="T:System.String" /> containing the name of the settings provider.</returns>
        </member>
        <member name="T:System.Configuration.SettingsProviderCollection">
            <summary>Represents a collection of application settings providers.</summary>
        </member>
        <member name="M:System.Configuration.SettingsProviderCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingsProviderCollection" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
            <summary>Adds a new settings provider to the collection.</summary>
            <param name="provider">A <see cref="T:System.Configuration.Provider.ProviderBase" /> to add to the collection.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="provider" /> parameter is not of type <see cref="T:System.Configuration.SettingsProvider" />.  
  
 -or-  
  
 The <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> property of the provider parameter is null or an empty string.  
  
 -or-  
  
 A settings provider with the same <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> already exists in the collection.</exception>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="provider" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="P:System.Configuration.SettingsProviderCollection.Item(System.String)">
            <summary>Gets the settings provider in the collection that matches the specified name.</summary>
            <param name="name">A <see cref="T:System.String" /> containing the friendly name of the settings provider.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.NotSupportedException">The collection is read-only when setting this value.</exception>
            <returns>If found, the <see cref="T:System.Configuration.SettingsProvider" /> whose name matches that specified by the name parameter; otherwise, <see langword="null" />.</returns>
        </member>
        <member name="T:System.Configuration.SettingsSavingEventHandler">
            <summary>Represents the method that will handle the <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> event.</summary>
            <param name="sender">The source of the event, typically a data container or data-bound collection.</param>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
        </member>
        <member name="T:System.Configuration.SettingsSerializeAs">
            <summary>Determines the serialization scheme used to store application settings.</summary>
        </member>
        <member name="F:System.Configuration.SettingsSerializeAs.Binary">
            <summary>The settings property is serialized using binary object serialization.</summary>
        </member>
        <member name="F:System.Configuration.SettingsSerializeAs.ProviderSpecific">
            <summary>The settings provider has implicit knowledge of the property or its type and picks an appropriate serialization mechanism. Often used for custom serialization.</summary>
        </member>
        <member name="F:System.Configuration.SettingsSerializeAs.String">
            <summary>The settings property is serialized as plain text.</summary>
        </member>
        <member name="F:System.Configuration.SettingsSerializeAs.Xml">
            <summary>The settings property is serialized as XML using XML serialization.</summary>
        </member>
        <member name="T:System.Configuration.SettingsSerializeAsAttribute">
            <summary>Specifies the serialization mechanism that the settings provider should use. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)">
            <summary>Initializes an instance of the <see cref="T:System.Configuration.SettingsSerializeAsAttribute" /> class.</summary>
            <param name="serializeAs">A <see cref="T:System.Configuration.SettingsSerializeAs" /> enumerated value that specifies the serialization scheme.</param>
        </member>
        <member name="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs">
            <summary>Gets the <see cref="T:System.Configuration.SettingsSerializeAs" /> enumeration value that specifies the serialization scheme.</summary>
            <returns>A <see cref="T:System.Configuration.SettingsSerializeAs" /> enumerated value that specifies the serialization scheme.</returns>
        </member>
        <member name="T:System.Configuration.SettingValueElement">
            <summary>Contains the XML representing the serialized value of the setting. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.SettingValueElement.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SettingValueElement" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SettingValueElement.Equals(System.Object)">
            <summary>Compares the current <see cref="T:System.Configuration.SettingValueElement" /> instance to the specified object.</summary>
            <param name="settingValue">The object to compare.</param>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Configuration.SettingValueElement" /> instance is equal to the specified object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.SettingValueElement.GetHashCode">
            <summary>Gets a unique value representing the <see cref="T:System.Configuration.SettingValueElement" /> current instance.</summary>
            <returns>A unique value representing the <see cref="T:System.Configuration.SettingValueElement" /> current instance.</returns>
        </member>
        <member name="P:System.Configuration.SettingValueElement.ValueXml">
            <summary>Gets or sets the value of a <see cref="T:System.Configuration.SettingValueElement" /> object by using an <see cref="T:System.Xml.XmlNode" /> object.</summary>
            <returns>An <see cref="T:System.Xml.XmlNode" /> object containing the value of a <see cref="T:System.Configuration.SettingElement" />.</returns>
        </member>
        <member name="T:System.Configuration.SingleTagSectionHandler">
            <summary>Handles configuration sections that are represented by a single XML tag in the .config file.</summary>
        </member>
        <member name="M:System.Configuration.SingleTagSectionHandler.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SingleTagSectionHandler" /> class.</summary>
        </member>
        <member name="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>Used internally to create a new instance of this object.</summary>
            <param name="parent">The parent of this object.</param>
            <param name="context">The context of this object.</param>
            <param name="section">The <see cref="T:System.Xml.XmlNode" /> object in the configuration.</param>
            <returns>The created object handler.</returns>
        </member>
        <member name="T:System.Configuration.SpecialSetting">
            <summary>Specifies the special setting category of a application settings property.</summary>
        </member>
        <member name="F:System.Configuration.SpecialSetting.ConnectionString">
            <summary>The configuration property represents a connection string, typically for a data store or network resource.</summary>
        </member>
        <member name="F:System.Configuration.SpecialSetting.WebServiceUrl">
            <summary>The configuration property represents a Uniform Resource Locator (URL) to a Web service.</summary>
        </member>
        <member name="T:System.Configuration.SpecialSettingAttribute">
            <summary>Indicates that an application settings property has a special significance. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.SpecialSettingAttribute.#ctor(System.Configuration.SpecialSetting)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SpecialSettingAttribute" /> class.</summary>
            <param name="specialSetting">A <see cref="T:System.Configuration.SpecialSetting" /> enumeration value defining the category of the application settings property.</param>
        </member>
        <member name="P:System.Configuration.SpecialSettingAttribute.SpecialSetting">
            <summary>Gets the value describing the special setting category of the application settings property.</summary>
            <returns>A <see cref="T:System.Configuration.SpecialSetting" /> enumeration value defining the category of the application settings property.</returns>
        </member>
        <member name="T:System.Configuration.StringValidator">
            <summary>Provides validation of a string.</summary>
        </member>
        <member name="M:System.Configuration.StringValidator.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on a supplied parameter.</summary>
            <param name="minLength">An integer that specifies the minimum length of the string value.</param>
        </member>
        <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</summary>
            <param name="minLength">An integer that specifies the minimum length of the string value.</param>
            <param name="maxLength">An integer that specifies the maximum length of the string value.</param>
        </member>
        <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.StringValidator" /> class, based on supplied parameters.</summary>
            <param name="minLength">An integer that specifies the minimum length of the string value.</param>
            <param name="maxLength">An integer that specifies the maximum length of the string value.</param>
            <param name="invalidCharacters">A string that represents invalid characters.</param>
        </member>
        <member name="M:System.Configuration.StringValidator.CanValidate(System.Type)">
            <summary>Determines whether an object can be validated based on type.</summary>
            <param name="type">The object type.</param>
            <returns>
                <see langword="true" /> if the <paramref name="type" /> parameter matches a string; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.StringValidator.Validate(System.Object)">
            <summary>Determines whether the value of an object is valid.</summary>
            <param name="value">The object value.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="value" /> is less than <paramref name="minValue" /> or greater than <paramref name="maxValue" /> as defined in the constructor.  
  
-or-
  
 <paramref name="value" /> contains invalid characters.</exception>
        </member>
        <member name="T:System.Configuration.StringValidatorAttribute">
            <summary>Declaratively instructs the .NET Framework to perform string validation on a configuration property. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.StringValidatorAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.StringValidatorAttribute" /> class.</summary>
        </member>
        <member name="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
            <summary>Gets or sets the invalid characters for the property.</summary>
            <returns>The string that contains the set of characters that are not allowed for the property.</returns>
        </member>
        <member name="P:System.Configuration.StringValidatorAttribute.MaxLength">
            <summary>Gets or sets the maximum length allowed for the string to assign to the property.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The selected value is less than <see cref="P:System.Configuration.StringValidatorAttribute.MinLength" />.</exception>
            <returns>An integer that indicates the maximum allowed length for the string to assign to the property.</returns>
        </member>
        <member name="P:System.Configuration.StringValidatorAttribute.MinLength">
            <summary>Gets or sets the minimum allowed value for the string to assign to the property.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The selected value is greater than <see cref="P:System.Configuration.StringValidatorAttribute.MaxLength" />.</exception>
            <returns>An integer that indicates the allowed minimum length for the string to assign to the property.</returns>
        </member>
        <member name="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
            <summary>Gets an instance of the <see cref="T:System.Configuration.StringValidator" /> class.</summary>
            <returns>A current <see cref="T:System.Configuration.StringValidator" /> settings in a <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance.</returns>
        </member>
        <member name="T:System.Configuration.SubclassTypeValidator">
            <summary>Validates that an object is a derived class of a specified type.</summary>
        </member>
        <member name="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SubclassTypeValidator" /> class.</summary>
            <param name="baseClass">The base class to validate against.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="baseClass" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
            <summary>Determines whether an object can be validated based on type.</summary>
            <param name="type">The object type.</param>
            <returns>
                <see langword="true" /> if the <paramref name="type" /> parameter matches a type that can be validated; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
            <summary>Determines whether the value of an object is valid.</summary>
            <param name="value">The object value.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="value" /> is not of a <see cref="T:System.Type" /> that can be derived from <paramref name="baseClass" /> as defined in the constructor.</exception>
        </member>
        <member name="T:System.Configuration.SubclassTypeValidatorAttribute">
            <summary>Declaratively instructs the .NET Framework to perform validation on a configuration property. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.SubclassTypeValidatorAttribute" /> class.</summary>
            <param name="baseClass">The base class type.</param>
        </member>
        <member name="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
            <summary>Gets the base type of the object being validated.</summary>
            <returns>The base type of the object being validated.</returns>
        </member>
        <member name="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
            <summary>Gets the validator attribute instance.</summary>
            <returns>The current <see cref="T:System.Configuration.ConfigurationValidatorBase" /> instance.</returns>
        </member>
        <member name="T:System.Configuration.TimeSpanMinutesConverter">
            <summary>Converts a time span expressed in minutes.</summary>
        </member>
        <member name="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanMinutesConverter" /> class.</summary>
        </member>
        <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="data">The <see cref="T:System.String" /> object to convert.</param>
            <returns>The <see cref="T:System.TimeSpan" /> representing the <paramref name="data" /> parameter in minutes.</returns>
        </member>
        <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="value">The value to convert to.</param>
            <param name="type">The type to convert to.</param>
            <returns>The <see cref="T:System.String" /> representing the <paramref name="value" /> parameter in minutes.</returns>
        </member>
        <member name="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
            <summary>Converts a <see cref="T:System.TimeSpan" /> expressed in minutes or as a standard infinite time span.</summary>
        </member>
        <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" /> class.</summary>
        </member>
        <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="data">The <see cref="T:System.String" /> object to convert.</param>
            <returns>The <see cref="F:System.TimeSpan.MaxValue" />, if the <paramref name="data" /> parameter is the <see cref="T:System.String" /> "infinite"; otherwise, the <see cref="T:System.TimeSpan" /> representing the <paramref name="data" /> parameter in minutes.</returns>
        </member>
        <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="value">The value to convert.</param>
            <param name="type">The conversion type.</param>
            <returns>The <see cref="T:System.String" /> "infinite", if the <paramref name="value" /> parameter is <see cref="F:System.TimeSpan.MaxValue" />; otherwise, the <see cref="T:System.String" /> representing the <paramref name="value" /> parameter in minutes.</returns>
        </member>
        <member name="T:System.Configuration.TimeSpanSecondsConverter">
            <summary>Converts a time span expressed in seconds.</summary>
        </member>
        <member name="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanSecondsConverter" /> class.</summary>
        </member>
        <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="data">The <see cref="T:System.String" /> object to convert.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="data" /> cannot be parsed as an integer value.</exception>
            <returns>The <see cref="T:System.TimeSpan" /> representing the <paramref name="data" /> parameter in seconds.</returns>
        </member>
        <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts a <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="value">The value to convert to.</param>
            <param name="type">The type to convert to.</param>
            <returns>The <see cref="T:System.String" /> that represents the <paramref name="value" /> parameter in minutes.</returns>
        </member>
        <member name="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
            <summary>Converts a <see cref="T:System.TimeSpan" /> expressed in seconds or as a standard infinite time span.</summary>
        </member>
        <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" /> class.</summary>
        </member>
        <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts a <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" />.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="data">The <see cref="T:System.String" /> object to convert.</param>
            <returns>The <see cref="F:System.TimeSpan.MaxValue" />, if the <paramref name="data" /> parameter is the <see cref="T:System.String" /> "infinite"; otherwise, the <see cref="T:System.TimeSpan" /> representing the <paramref name="data" /> parameter in seconds.</returns>
        </member>
        <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts a <see cref="T:System.TimeSpan" /> to a. <see cref="T:System.String" />.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="value">The value to convert.</param>
            <param name="type">The conversion type.</param>
            <returns>The <see cref="T:System.String" /> "infinite", if the <paramref name="value" /> parameter is <see cref="F:System.TimeSpan.MaxValue" />; otherwise, the <see cref="T:System.String" /> representing the <paramref name="value" /> parameter in seconds.</returns>
        </member>
        <member name="T:System.Configuration.TimeSpanValidator">
            <summary>Provides validation of a <see cref="T:System.TimeSpan" /> object.</summary>
        </member>
        <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanValidator" /> class, based on supplied parameters.</summary>
            <param name="minValue">A <see cref="T:System.TimeSpan" /> object that specifies the minimum time allowed to pass validation.</param>
            <param name="maxValue">A <see cref="T:System.TimeSpan" /> object that specifies the maximum time allowed to pass validation.</param>
        </member>
        <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanValidator" /> class, based on supplied parameters.</summary>
            <param name="minValue">A <see cref="T:System.TimeSpan" /> object that specifies the minimum time allowed to pass validation.</param>
            <param name="maxValue">A <see cref="T:System.TimeSpan" /> object that specifies the maximum time allowed to pass validation.</param>
            <param name="rangeIsExclusive">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</param>
        </member>
        <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanValidator" /> class, based on supplied parameters.</summary>
            <param name="minValue">A <see cref="T:System.TimeSpan" /> object that specifies the minimum time allowed to pass validation.</param>
            <param name="maxValue">A <see cref="T:System.TimeSpan" /> object that specifies the maximum time allowed to pass validation.</param>
            <param name="rangeIsExclusive">A <see cref="T:System.Boolean" /> value that specifies whether the validation range is exclusive.</param>
            <param name="resolutionInSeconds">An <see cref="T:System.Int64" /> value that specifies a number of seconds.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="resolutionInSeconds" /> is less than <see langword="0" />.  
  
-or-
  
 <paramref name="minValue" /> is greater than <paramref name="maxValue" />.</exception>
        </member>
        <member name="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
            <summary>Determines whether the type of the object can be validated.</summary>
            <param name="type">The type of the object.</param>
            <returns>
                <see langword="true" /> if the <paramref name="type" /> parameter matches a <see cref="T:System.TimeSpan" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
            <summary>Determines whether the value of an object is valid.</summary>
            <param name="value">The value of an object.</param>
        </member>
        <member name="T:System.Configuration.TimeSpanValidatorAttribute">
            <summary>Declaratively instructs the .NET Framework to perform time validation on a configuration property. This class cannot be inherited.</summary>
        </member>
        <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
            <summary>Gets the absolute maximum value allowed.</summary>
        </member>
        <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
            <summary>Gets the absolute minimum value allowed.</summary>
        </member>
        <member name="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.TimeSpanValidatorAttribute" /> class.</summary>
        </member>
        <member name="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
            <summary>Gets or sets a value that indicates whether to include or exclude the integers in the range as defined by <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" /> and <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" />.</summary>
            <returns>
                <see langword="true" /> if the value must be excluded; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
            <summary>Gets the absolute maximum <see cref="T:System.TimeSpan" /> value.</summary>
            <returns>The allowed maximum <see cref="T:System.TimeSpan" /> value.</returns>
        </member>
        <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
            <summary>Gets or sets the relative maximum <see cref="T:System.TimeSpan" /> value.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The selected value represents less than <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" />.</exception>
            <returns>The allowed maximum <see cref="T:System.TimeSpan" /> value.</returns>
        </member>
        <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
            <summary>Gets the absolute minimum <see cref="T:System.TimeSpan" /> value.</summary>
            <returns>The allowed minimum <see cref="T:System.TimeSpan" /> value.</returns>
        </member>
        <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
            <summary>Gets or sets the relative minimum <see cref="T:System.TimeSpan" /> value.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The selected value represents more than <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" />.</exception>
            <returns>The minimum allowed <see cref="T:System.TimeSpan" /> value.</returns>
        </member>
        <member name="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
            <summary>Gets an instance of the <see cref="T:System.Configuration.TimeSpanValidator" /> class.</summary>
            <returns>The <see cref="T:System.Configuration.ConfigurationValidatorBase" /> validator instance.</returns>
        </member>
        <member name="T:System.Configuration.TypeNameConverter">
            <summary>Converts between type and string values. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.TypeNameConverter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.TypeNameConverter" /> class.</summary>
        </member>
        <member name="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts a <see cref="T:System.String" /> object to a <see cref="T:System.Type" /> object.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="data">The <see cref="T:System.String" /> object to convert.</param>
            <exception cref="T:System.ArgumentException">The <see cref="T:System.Type" /> value cannot be resolved.</exception>
            <returns>The <see cref="T:System.Type" /> that represents the <paramref name="data" /> parameter.</returns>
        </member>
        <member name="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts a <see cref="T:System.Type" /> object to a <see cref="T:System.String" /> object.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="value">The value to convert to.</param>
            <param name="type">The type to convert to.</param>
            <returns>The <see cref="T:System.String" /> that represents the <paramref name="value" /> parameter.</returns>
        </member>
        <member name="T:System.Configuration.UriSection">
            <summary>Represents the Uri section within a configuration file.</summary>
        </member>
        <member name="M:System.Configuration.UriSection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.UriSection" /> class.</summary>
        </member>
        <member name="P:System.Configuration.UriSection.Idn">
            <summary>Gets an <see cref="T:System.Configuration.IdnElement" /> object that contains the configuration setting for International Domain Name (IDN) processing in the <see cref="T:System.Uri" /> class.</summary>
            <returns>The configuration setting for International Domain Name (IDN) processing in the <see cref="T:System.Uri" /> class.</returns>
        </member>
        <member name="P:System.Configuration.UriSection.IriParsing">
            <summary>Gets an <see cref="T:System.Configuration.IriParsingElement" /> object that contains the configuration setting for International Resource Identifiers (IRI) parsing in the <see cref="T:System.Uri" /> class.</summary>
            <returns>The configuration setting for International Resource Identifiers (IRI) parsing in the <see cref="T:System.Uri" /> class.</returns>
        </member>
        <member name="P:System.Configuration.UriSection.SchemeSettings">
            <summary>Gets a <see cref="T:System.Configuration.SchemeSettingElementCollection" /> object that contains the configuration settings for scheme parsing in the <see cref="T:System.Uri" /> class.</summary>
            <returns>The configuration settings for scheme parsing in the <see cref="T:System.Uri" /> class</returns>
        </member>
        <member name="T:System.Configuration.UserScopedSettingAttribute">
            <summary>Specifies that an application settings group or property contains distinct values for each user of an application. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.UserScopedSettingAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.UserScopedSettingAttribute" /> class.</summary>
        </member>
        <member name="T:System.Configuration.UserSettingsGroup">
            <summary>Represents a grouping of related user settings sections within a configuration file. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Configuration.UserSettingsGroup.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.UserSettingsGroup" /> class.</summary>
        </member>
        <member name="T:System.Configuration.ValidatorCallback">
            <summary>Represents a method to be called after the validation of an object.</summary>
            <param name="value">The callback method.</param>
        </member>
        <member name="T:System.Configuration.WhiteSpaceTrimStringConverter">
            <summary>Converts a string to its canonical format.</summary>
        </member>
        <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.WhiteSpaceTrimStringConverter" /> class.</summary>
        </member>
        <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts a <see cref="T:System.String" /> to canonical form.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="data">The <see cref="T:System.String" /> object to convert.</param>
            <returns>An object representing the converted value.</returns>
        </member>
        <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts a <see cref="T:System.String" /> to canonical form.</summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used for type conversions.</param>
            <param name="ci">The <see cref="T:System.Globalization.CultureInfo" /> object used during conversion.</param>
            <param name="value">The value to convert to.</param>
            <param name="type">The type to convert to.</param>
            <returns>An object representing the converted value.</returns>
        </member>
        <member name="T:System.Drawing.Configuration.SystemDrawingSection">
            <summary>Represents the configuration section used by classes in the <see cref="N:System.Drawing" /> namespace.</summary>
        </member>
        <member name="M:System.Drawing.Configuration.SystemDrawingSection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Drawing.Configuration.SystemDrawingSection" /> class.</summary>
        </member>
        <member name="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix">
            <summary>Gets or sets the suffix to append to a file name indicated by a <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> when an assembly is declared with a <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> or a <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" />.</summary>
            <returns>The bitmap suffix.</returns>
        </member>
        <member name="T:System.UriIdnScope">
            <summary>Provides the possible values for the configuration setting of the <see cref="T:System.Configuration.IdnElement" /> in the <see cref="N:System.Configuration" /> namespace.</summary>
        </member>
        <member name="F:System.UriIdnScope.All">
            <summary>This value will convert any Unicode domain names to their Punycode equivalents (IDN names).</summary>
        </member>
        <member name="F:System.UriIdnScope.AllExceptIntranet">
            <summary>This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names). In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.</summary>
        </member>
        <member name="F:System.UriIdnScope.None">
            <summary>This value will not convert any Unicode domain names to use Punycode. This is the default value which is consistent with the .NET Framework 2.0 behavior.</summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.Unsafe">
            <summary>Contains generic, low-level functionality for manipulating pointers.</summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.Int32)">
            <summary>Adds an element offset to the given reference.</summary>
            <param name="source">The reference to add the offset to.</param>
            <param name="elementOffset">The offset to add.</param>
            <typeparam name="T">The type of reference.</typeparam>
            <returns>A new reference that reflects the addition of offset to pointer.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.Add``1(``0@,System.IntPtr)">
            <summary>Adds an element offset to the given reference.</summary>
            <param name="source">The reference to add the offset to.</param>
            <param name="elementOffset">The offset to add.</param>
            <typeparam name="T">The type of reference.</typeparam>
            <returns>A new reference that reflects the addition of offset to pointer.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.Add``1(System.Void*,System.Int32)">
            <summary>Adds an element offset to the given void pointer.</summary>
            <param name="source">The void pointer to add the offset to.</param>
            <param name="elementOffset">The offset to add.</param>
            <typeparam name="T">The type of void pointer.</typeparam>
            <returns>A new void pointer that reflects the addition of offset to the specified pointer.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.AddByteOffset``1(``0@,System.IntPtr)">
            <summary>Adds a byte offset to the given reference.</summary>
            <param name="source">The reference to add the offset to.</param>
            <param name="byteOffset">The offset to add.</param>
            <typeparam name="T">The type of reference.</typeparam>
            <returns>A new reference that reflects the addition of byte offset to pointer.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.AreSame``1(``0@,``0@)">
            <summary>Determines whether the specified references point to the same location.</summary>
            <param name="left">The first reference to compare.</param>
            <param name="right">The second reference to compare.</param>
            <typeparam name="T">The type of reference.</typeparam>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> point to the same location; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.As``1(System.Object)">
            <summary>Casts the given object to the specified type.</summary>
            <param name="o">The object to cast.</param>
            <typeparam name="T">The type which the object will be cast to.</typeparam>
            <returns>The original object, casted to the given type.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.As``2(``0@)">
            <summary>Reinterprets the given reference as a reference to a value of type <typeparamref name="TTo" />.</summary>
            <param name="source">The reference to reinterpret.</param>
            <typeparam name="TFrom">The type of reference to reinterpret.</typeparam>
            <typeparam name="TTo">The desired type of the reference.</typeparam>
            <returns>A reference to a value of type <typeparamref name="TTo" />.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.AsPointer``1(``0@)">
            <summary>Returns a pointer to the given by-ref parameter.</summary>
            <param name="value">The object whose pointer is obtained.</param>
            <typeparam name="T">The type of object.</typeparam>
            <returns>A pointer to the given value.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(``0@)">
            <summary>Reinterprets the given read-only reference as a reference.</summary>
            <param name="source">The read-only reference to reinterpret.</param>
            <typeparam name="T">The type of reference.</typeparam>
            <returns>A reference to a value of type <typeparamref name="T" />.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.AsRef``1(System.Void*)">
            <summary>Reinterprets the given location as a reference to a value of type <typeparamref name="T" />.</summary>
            <param name="source">The location of the value to reference.</param>
            <typeparam name="T">The type of the interpreted location.</typeparam>
            <returns>A reference to a value of type <typeparamref name="T" />.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.ByteOffset``1(``0@,``0@)">
            <summary>Determines the byte offset from origin to target from the given references.</summary>
            <param name="origin">The reference to origin.</param>
            <param name="target">The reference to target.</param>
            <typeparam name="T">The type of reference.</typeparam>
            <returns>Byte offset from origin to target i.e. <paramref name="target" /> - <paramref name="origin" />.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.Copy``1(``0@,System.Void*)">
            <summary>Copies a value of type <typeparamref name="T" /> to the given location.</summary>
            <param name="destination">The location to copy to.</param>
            <param name="source">A pointer to the value to copy.</param>
            <typeparam name="T">The type of value to copy.</typeparam>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.Copy``1(System.Void*,``0@)">
            <summary>Copies a value of type <typeparamref name="T" /> to the given location.</summary>
            <param name="destination">The location to copy to.</param>
            <param name="source">A reference to the value to copy.</param>
            <typeparam name="T">The type of value to copy.</typeparam>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Byte@,System.Byte@,System.UInt32)">
            <summary>Copies bytes from the source address to the destination address.</summary>
            <param name="destination">The destination address to copy to.</param>
            <param name="source">The source address to copy from.</param>
            <param name="byteCount">The number of bytes to copy.</param>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.CopyBlock(System.Void*,System.Void*,System.UInt32)">
            <summary>Copies bytes from the source address to the destination address.</summary>
            <param name="destination">The destination address to copy to.</param>
            <param name="source">The source address to copy from.</param>
            <param name="byteCount">The number of bytes to copy.</param>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Byte@,System.Byte@,System.UInt32)">
            <summary>Copies bytes from the source address to the destination address without assuming architecture dependent alignment of the addresses.</summary>
            <param name="destination">The destination address to copy to.</param>
            <param name="source">The source address to copy from.</param>
            <param name="byteCount">The number of bytes to copy.</param>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.CopyBlockUnaligned(System.Void*,System.Void*,System.UInt32)">
            <summary>Copies bytes from the source address to the destination address without assuming architecture dependent alignment of the addresses.</summary>
            <param name="destination">The destination address to copy to.</param>
            <param name="source">The source address to copy from.</param>
            <param name="byteCount">The number of bytes to copy.</param>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Byte@,System.Byte,System.UInt32)">
            <summary>Initializes a block of memory at the given location with a given initial value.</summary>
            <param name="startAddress">The address of the start of the memory block to initialize.</param>
            <param name="value">The value to initialize the block to.</param>
            <param name="byteCount">The number of bytes to initialize.</param>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.InitBlock(System.Void*,System.Byte,System.UInt32)">
            <summary>Initializes a block of memory at the given location with a given initial value.</summary>
            <param name="startAddress">The address of the start of the memory block to initialize.</param>
            <param name="value">The value to initialize the block to.</param>
            <param name="byteCount">The number of bytes to initialize.</param>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Byte@,System.Byte,System.UInt32)">
            <summary>Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</summary>
            <param name="startAddress">The address of the start of the memory block to initialize.</param>
            <param name="value">The value to initialize the block to.</param>
            <param name="byteCount">The number of bytes to initialize.</param>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.InitBlockUnaligned(System.Void*,System.Byte,System.UInt32)">
            <summary>Initializes a block of memory at the given location with a given initial value without assuming architecture dependent alignment of the address.</summary>
            <param name="startAddress">The address of the start of the memory block to initialize.</param>
            <param name="value">The value to initialize the block to.</param>
            <param name="byteCount">The number of bytes to initialize.</param>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.IsAddressGreaterThan``1(``0@,``0@)">
            <summary>Returns a value that indicates whether a specified reference is greater than another specified reference.</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <typeparam name="T">The type of the reference.</typeparam>
            <returns>
                <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.IsAddressLessThan``1(``0@,``0@)">
            <summary>Returns a value that indicates whether a specified reference is less than another specified reference.</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <typeparam name="T">The type of the reference.</typeparam>
            <returns>
                <see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.IsNullRef``1(``0@)">
            <param name="source" />
            <typeparam name="T" />
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.NullRef``1">
            <typeparam name="T" />
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.Read``1(System.Void*)">
            <summary>Reads a value of type <typeparamref name="T" /> from the given location.</summary>
            <param name="source">The location to read from.</param>
            <typeparam name="T">The type to read.</typeparam>
            <returns>An object of type <typeparamref name="T" /> read from the given location.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Byte@)">
            <summary>Reads a value of type <typeparamref name="T" /> from the given location without assuming architecture dependent alignment of the addresses.</summary>
            <param name="source">The location to read from.</param>
            <typeparam name="T">The type to read.</typeparam>
            <returns>An object of type <typeparamref name="T" /> read from the given location.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.ReadUnaligned``1(System.Void*)">
            <summary>Reads a value of type <typeparamref name="T" /> from the given location without assuming architecture dependent alignment of the addresses.</summary>
            <param name="source">The location to read from.</param>
            <typeparam name="T">The type to read.</typeparam>
            <returns>An object of type <typeparamref name="T" /> read from the given location.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.SizeOf``1">
            <summary>Returns the size of an object of the given type parameter.</summary>
            <typeparam name="T">The type of object whose size is retrieved.</typeparam>
            <returns>The size of an object of type <typeparamref name="T" />.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.SkipInit``1(``0@)">
            <summary>Bypasses definite assignment rules for a given value.</summary>
            <param name="value">The uninitialized object.</param>
            <typeparam name="T">The type of the uninitialized object.</typeparam>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.Int32)">
            <summary>Subtracts an element offset from the given reference.</summary>
            <param name="source">The reference to subtract the offset from.</param>
            <param name="elementOffset">The offset to subtract.</param>
            <typeparam name="T">The type of reference.</typeparam>
            <returns>A new reference that reflects the subtraction of offset from pointer.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(``0@,System.IntPtr)">
            <summary>Subtracts an element offset from the given reference.</summary>
            <param name="source">The reference to subtract the offset from.</param>
            <param name="elementOffset">The offset to subtract.</param>
            <typeparam name="T">The type of reference.</typeparam>
            <returns>A new reference that reflects the subtraction of offset from pointer.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.Subtract``1(System.Void*,System.Int32)">
            <summary>Subtracts an element offset from the given void pointer.</summary>
            <param name="source">The void pointer to subtract the offset from.</param>
            <param name="elementOffset">The offset to subtract.</param>
            <typeparam name="T">The type of the void pointer.</typeparam>
            <returns>A new void pointer that reflects the subtraction of offset from the specified pointer.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.SubtractByteOffset``1(``0@,System.IntPtr)">
            <summary>Subtracts a byte offset from the given reference.</summary>
            <param name="source">The reference to subtract the offset from.</param>
            <param name="byteOffset">The offset to subtract.</param>
            <typeparam name="T">The type of reference.</typeparam>
            <returns>A new reference that reflects the subtraction of byte offset from pointer.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.Unbox``1(System.Object)">
            <summary>Returns a <see langword="mutable ref" /> to a boxed value.</summary>
            <param name="box">The value to unbox.</param>
            <typeparam name="T">The type to be unboxed.</typeparam>
            <exception cref="T:System.NullReferenceException">
                <paramref name="box" /> is <see langword="null" />, and <typeparamref name="T" /> is a non-nullable value type.</exception>
            <exception cref="T:System.InvalidCastException">
                <paramref name="box" /> is not a boxed value type.
         
-or-

<paramref name="box" /> is not a boxed <typeparamref name="T" />.</exception>
            <exception cref="T:System.TypeLoadException">
                <typeparamref name="T" /> cannot be found.</exception>
            <returns>A <see langword="mutable ref" /> to the boxed value <paramref name="box" />.</returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.Write``1(System.Void*,``0)">
            <summary>Writes a value of type <typeparamref name="T" /> to the given location.</summary>
            <param name="destination">The location to write to.</param>
            <param name="value">The value to write.</param>
            <typeparam name="T">The type of value to write.</typeparam>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Byte@,``0)">
            <summary>Writes a value of type <typeparamref name="T" /> to the given location without assuming architecture dependent alignment of the addresses.</summary>
            <param name="destination">The location to write to.</param>
            <param name="value">The value to write.</param>
            <typeparam name="T">The type of value to write.</typeparam>
        </member>
        <member name="M:System.Runtime.CompilerServices.Unsafe.WriteUnaligned``1(System.Void*,``0)">
            <summary>Writes a value of type <typeparamref name="T" /> to the given location without assuming architecture dependent alignment of the addresses.</summary>
            <param name="destination">The location to write to.</param>
            <param name="value">The value to write.</param>
            <typeparam name="T">The type of value to write.</typeparam>
        </member>
        <member name="T:System.Security.AccessControl.AccessControlActions">
            <summary>Specifies the actions that are permitted for securable objects.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlActions.Change">
            <summary>Specifies write-only access.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlActions.None">
            <summary>Specifies no access.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlActions.View">
            <summary>Specifies read-only access.</summary>
        </member>
        <member name="T:System.Security.AccessControl.AccessControlModification">
            <summary>Specifies the type of access control modification to perform. This enumeration is used by methods of the <see cref="T:System.Security.AccessControl.ObjectSecurity" /> class and its descendents.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlModification.Add">
            <summary>Add the specified authorization rule to the access control list (ACL).</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlModification.Remove">
            <summary>Remove authorization rules that contain the same security identifier (SID) and access mask as the specified authorization rule from the ACL.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlModification.RemoveAll">
            <summary>Remove authorization rules that contain the same SID as the specified authorization rule from the ACL.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlModification.RemoveSpecific">
            <summary>Remove authorization rules that exactly match the specified authorization rule from the ACL.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlModification.Reset">
            <summary>Remove authorization rules that contain the same SID as the specified authorization rule from the ACL, and then add the specified authorization rule to the ACL.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlModification.Set">
            <summary>Remove all authorization rules from the ACL, then add the specified authorization rule to the ACL.</summary>
        </member>
        <member name="T:System.Security.AccessControl.AccessControlSections">
            <summary>Specifies which sections of a security descriptor to save or load.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlSections.Access">
            <summary>The discretionary access control list (DACL).</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlSections.All">
            <summary>The entire security descriptor.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlSections.Audit">
            <summary>The system access control list (SACL).</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlSections.Group">
            <summary>The primary group.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlSections.None">
            <summary>No sections.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlSections.Owner">
            <summary>The owner.</summary>
        </member>
        <member name="T:System.Security.AccessControl.AccessControlType">
            <summary>Specifies whether an <see cref="T:System.Security.AccessControl.AccessRule" /> object is used to allow or deny access. These values are not flags, and they cannot be combined.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlType.Allow">
            <summary>The <see cref="T:System.Security.AccessControl.AccessRule" /> object is used to allow access to a secured object.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AccessControlType.Deny">
            <summary>The <see cref="T:System.Security.AccessControl.AccessRule" /> object is used to deny access to a secured object.</summary>
        </member>
        <member name="T:System.Security.AccessControl.AccessRule">
            <summary>Represents a combination of a user's identity, an access mask, and an access control type (allow or deny). An <see cref="T:System.Security.AccessControl.AccessRule" /> object also contains information about the how the rule is inherited by child objects and how that inheritance is propagated.</summary>
        </member>
        <member name="M:System.Security.AccessControl.AccessRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.AccessRule" /> class by using the specified values.</summary>
            <param name="identity">The identity to which the access rule applies. This parameter must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
            <param name="accessMask">The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</param>
            <param name="isInherited">
                <see langword="true" /> if this rule is inherited from a parent container.</param>
            <param name="inheritanceFlags">The inheritance properties of the access rule.</param>
            <param name="propagationFlags">Whether inherited access rules are automatically propagated. The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
            <param name="type">The valid access control type.</param>
            <exception cref="T:System.ArgumentException">The value of the <paramref name="identity" /> parameter cannot be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />, or the <paramref name="type" /> parameter contains an invalid value.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The value of the <paramref name="accessMask" /> parameter is zero, or the <paramref name="inheritanceFlags" /> or <paramref name="propagationFlags" /> parameters contain unrecognized flag values.</exception>
        </member>
        <member name="P:System.Security.AccessControl.AccessRule.AccessControlType">
            <summary>Gets the <see cref="T:System.Security.AccessControl.AccessControlType" /> value associated with this <see cref="T:System.Security.AccessControl.AccessRule" /> object.</summary>
            <returns>The <see cref="T:System.Security.AccessControl.AccessControlType" /> value associated with this <see cref="T:System.Security.AccessControl.AccessRule" /> object.</returns>
        </member>
        <member name="T:System.Security.AccessControl.AccessRule`1">
            <summary>Represents a combination of a user's identity, an access mask, and an access control type (allow or deny). An AccessRule`1 object also contains information about the how the rule is inherited by child objects and how that inheritance is propagated.</summary>
            <typeparam name="T">The access rights type for the access rule.</typeparam>
        </member>
        <member name="M:System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance of the AccessRule'1 class by using the specified values.</summary>
            <param name="identity">The identity to which the access rule applies.</param>
            <param name="rights">The rights of the access rule.</param>
            <param name="type">The valid access control type.</param>
        </member>
        <member name="M:System.Security.AccessControl.AccessRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance of the AccessRule'1 class by using the specified values.</summary>
            <param name="identity">The identity to which the access rule applies.</param>
            <param name="rights">The rights of the access rule.</param>
            <param name="inheritanceFlags">The inheritance properties of the access rule.</param>
            <param name="propagationFlags">Whether inherited access rules are automatically propagated. The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
            <param name="type">The valid access control type.</param>
        </member>
        <member name="M:System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance of the AccessRule'1 class by using the specified values.</summary>
            <param name="identity">The identity to which the access rule applies.</param>
            <param name="rights">The rights of the access rule.</param>
            <param name="type">The valid access control type.</param>
        </member>
        <member name="M:System.Security.AccessControl.AccessRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance of the AccessRule'1 class by using the specified values.</summary>
            <param name="identity">The identity to which the access rule applies.</param>
            <param name="rights">The rights of the access rule.</param>
            <param name="inheritanceFlags">The inheritance properties of the access rule.</param>
            <param name="propagationFlags">Whether inherited access rules are automatically propagated. The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
            <param name="type">The valid access control type.</param>
        </member>
        <member name="P:System.Security.AccessControl.AccessRule`1.Rights">
            <summary>Gets the rights of the current instance.</summary>
            <returns>The rights, cast as type &lt;T&gt;, of the current instance.</returns>
        </member>
        <member name="T:System.Security.AccessControl.AceEnumerator">
            <summary>Provides the ability to iterate through the access control entries (ACEs) in an access control list (ACL).</summary>
        </member>
        <member name="M:System.Security.AccessControl.AceEnumerator.MoveNext">
            <summary>Advances the enumerator to the next element of the <see cref="T:System.Security.AccessControl.GenericAce" /> collection.</summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
            <returns>
                <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:System.Security.AccessControl.AceEnumerator.Reset">
            <summary>Sets the enumerator to its initial position, which is before the first element in the <see cref="T:System.Security.AccessControl.GenericAce" /> collection.</summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="P:System.Security.AccessControl.AceEnumerator.Current">
            <summary>Gets the current element in the <see cref="T:System.Security.AccessControl.GenericAce" /> collection. This property gets the type-friendly version of the object.</summary>
            <returns>The current element in the <see cref="T:System.Security.AccessControl.GenericAce" /> collection.</returns>
        </member>
        <member name="P:System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current">
            <summary>Gets the current element in the collection.</summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
            <returns>The current element in the collection.</returns>
        </member>
        <member name="T:System.Security.AccessControl.AceFlags">
            <summary>Specifies the inheritance and auditing behavior of an access control entry (ACE).</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceFlags.AuditFlags">
            <summary>All access attempts are audited.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceFlags.ContainerInherit">
            <summary>The access mask is propagated to child container objects.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceFlags.FailedAccess">
            <summary>Failed access attempts are audited.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceFlags.InheritanceFlags">
            <summary>A logical <see langword="OR" /> of <see cref="F:System.Security.AccessControl.AceFlags.ObjectInherit" />, <see cref="F:System.Security.AccessControl.AceFlags.ContainerInherit" />, <see cref="F:System.Security.AccessControl.AceFlags.NoPropagateInherit" />, and <see cref="F:System.Security.AccessControl.AceFlags.InheritOnly" />.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceFlags.Inherited">
            <summary>An ACE is inherited from a parent container rather than being explicitly set for an object.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceFlags.InheritOnly">
            <summary>The access mask is propagated only to child objects. This includes both container and leaf child objects.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceFlags.None">
            <summary>No ACE flags are set.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceFlags.NoPropagateInherit">
            <summary>The access checks do not apply to the object; they only apply to its children.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceFlags.ObjectInherit">
            <summary>The access mask is propagated onto child leaf objects.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceFlags.SuccessfulAccess">
            <summary>Successful access attempts are audited.</summary>
        </member>
        <member name="T:System.Security.AccessControl.AceQualifier">
            <summary>Specifies the function of an access control entry (ACE).</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceQualifier.AccessAllowed">
            <summary>Allow access.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceQualifier.AccessDenied">
            <summary>Deny access.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceQualifier.SystemAlarm">
            <summary>Cause a system alarm.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceQualifier.SystemAudit">
            <summary>Cause a system audit.</summary>
        </member>
        <member name="T:System.Security.AccessControl.AceType">
            <summary>Defines the available access control entry (ACE) types.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.AccessAllowed">
            <summary>Allows access to an object for a specific trustee identified by an <see cref="T:System.Security.Principal.IdentityReference" /> object.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.AccessAllowedCallback">
            <summary>Allows access to an object for a specific trustee identified by an <see cref="T:System.Security.Principal.IdentityReference" /> object. This ACE type may contain optional callback data. The callback data is a resource manager-specific BLOB that is not interpreted.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.AccessAllowedCallbackObject">
            <summary>Allows access to an object, property set, or property. The ACE contains a set of access rights, a GUID that identifies the type of object, and an <see cref="T:System.Security.Principal.IdentityReference" /> object that identifies the trustee to whom the system will grant access. The ACE also contains a GUID and a set of flags that control inheritance of the ACE by child objects. This ACE type may contain optional callback data. The callback data is a resource manager-specific BLOB that is not interpreted.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.AccessAllowedCompound">
            <summary>Defined but never used. Included here for completeness.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.AccessAllowedObject">
            <summary>Allows access to an object, property set, or property. The ACE contains a set of access rights, a GUID that identifies the type of object, and an <see cref="T:System.Security.Principal.IdentityReference" /> object that identifies the trustee to whom the system will grant access. The ACE also contains a GUID and a set of flags that control inheritance of the ACE by child objects.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.AccessDenied">
            <summary>Denies access to an object for a specific trustee identified by an <see cref="T:System.Security.Principal.IdentityReference" /> object.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.AccessDeniedCallback">
            <summary>Denies access to an object for a specific trustee identified by an <see cref="T:System.Security.Principal.IdentityReference" /> object. This ACE type can contain optional callback data. The callback data is a resource manager-specific BLOB that is not interpreted.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.AccessDeniedCallbackObject">
            <summary>Denies access to an object, property set, or property. The ACE contains a set of access rights, a GUID that identifies the type of object, and an <see cref="T:System.Security.Principal.IdentityReference" /> object that identifies the trustee to whom the system will grant access. The ACE also contains a GUID and a set of flags that control inheritance of the ACE by child objects. This ACE type can contain optional callback data. The callback data is a resource manager-specific BLOB that is not interpreted.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.AccessDeniedObject">
            <summary>Denies access to an object, property set, or property. The ACE contains a set of access rights, a GUID that identifies the type of object, and an <see cref="T:System.Security.Principal.IdentityReference" /> object that identifies the trustee to whom the system will grant access. The ACE also contains a GUID and a set of flags that control inheritance of the ACE by child objects.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.MaxDefinedAceType">
            <summary>Tracks the maximum defined ACE type in the enumeration.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.SystemAlarm">
            <summary>Reserved for future use.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.SystemAlarmCallback">
            <summary>Reserved for future use.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.SystemAlarmCallbackObject">
            <summary>Reserved for future use.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.SystemAlarmObject">
            <summary>Reserved for future use.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.SystemAudit">
            <summary>Causes an audit message to be logged when a specified trustee attempts to gain access to an object. The trustee is identified by an <see cref="T:System.Security.Principal.IdentityReference" /> object.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.SystemAuditCallback">
            <summary>Causes an audit message to be logged when a specified trustee attempts to gain access to an object. The trustee is identified by an <see cref="T:System.Security.Principal.IdentityReference" /> object. This ACE type can contain optional callback data. The callback data is a resource manager-specific BLOB that is not interpreted.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.SystemAuditCallbackObject">
            <summary>Causes an audit message to be logged when a specified trustee attempts to gain access to an object or subobjects such as property sets or properties. The ACE contains a set of access rights, a GUID that identifies the type of object or subobject, and an <see cref="T:System.Security.Principal.IdentityReference" /> object that identifies the trustee for whom the system will audit access. The ACE also contains a GUID and a set of flags that control inheritance of the ACE by child objects. This ACE type can contain optional callback data. The callback data is a resource manager-specific BLOB that is not interpreted.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AceType.SystemAuditObject">
            <summary>Causes an audit message to be logged when a specified trustee attempts to gain access to an object or subobjects such as property sets or properties. The ACE contains a set of access rights, a GUID that identifies the type of object or subobject, and an <see cref="T:System.Security.Principal.IdentityReference" /> object that identifies the trustee for whom the system will audit access. The ACE also contains a GUID and a set of flags that control inheritance of the ACE by child objects.</summary>
        </member>
        <member name="T:System.Security.AccessControl.AuditFlags">
            <summary>Specifies the conditions for auditing attempts to access a securable object.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AuditFlags.Failure">
            <summary>Failed access attempts are to be audited.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AuditFlags.None">
            <summary>No access attempts are to be audited.</summary>
        </member>
        <member name="F:System.Security.AccessControl.AuditFlags.Success">
            <summary>Successful access attempts are to be audited.</summary>
        </member>
        <member name="T:System.Security.AccessControl.AuditRule">
            <summary>Represents a combination of a user's identity and an access mask. An <see cref="T:System.Security.AccessControl.AuditRule" /> object also contains information about how the rule is inherited by child objects, how that inheritance is propagated, and for what conditions it is audited.</summary>
        </member>
        <member name="M:System.Security.AccessControl.AuditRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.AuditRule" /> class by using the specified values.</summary>
            <param name="identity">The identity to which the audit rule applies. It must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
            <param name="accessMask">The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</param>
            <param name="isInherited">
                <see langword="true" /> to inherit this rule from a parent container.</param>
            <param name="inheritanceFlags">The inheritance properties of the audit rule.</param>
            <param name="propagationFlags">Whether inherited audit rules are automatically propagated. The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
            <param name="auditFlags">The conditions for which the rule is audited.</param>
            <exception cref="T:System.ArgumentException">The value of the <paramref name="identity" /> parameter cannot be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />, or the <paramref name="auditFlags" /> parameter contains an invalid value.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The value of the <paramref name="accessMask" /> parameter is zero, or the <paramref name="inheritanceFlags" /> or <paramref name="propagationFlags" /> parameters contain unrecognized flag values.</exception>
        </member>
        <member name="P:System.Security.AccessControl.AuditRule.AuditFlags">
            <summary>Gets the audit flags for this audit rule.</summary>
            <returns>A bitwise combination of the enumeration values. This combination specifies the audit conditions for this audit rule.</returns>
        </member>
        <member name="T:System.Security.AccessControl.AuditRule`1">
            <summary>Represents a combination of a user's identity and an access mask.</summary>
            <typeparam name="T">The type of the audit rule.</typeparam>
        </member>
        <member name="M:System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.AuditFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.AuditRule`1" /> class by using the specified values.</summary>
            <param name="identity">The identity to which this audit rule applies.</param>
            <param name="rights">The rights of the audit rule.</param>
            <param name="flags">The conditions for which the rule is audited.</param>
        </member>
        <member name="M:System.Security.AccessControl.AuditRule`1.#ctor(System.Security.Principal.IdentityReference,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.AuditRule`1" /> class by using the specified values.</summary>
            <param name="identity">The identity to which the audit rule applies.</param>
            <param name="rights">The rights of the audit rule.</param>
            <param name="inheritanceFlags">The inheritance properties of the audit rule.</param>
            <param name="propagationFlags">Whether inherited audit rules are automatically propagated.</param>
            <param name="flags">The conditions for which the rule is audited.</param>
        </member>
        <member name="M:System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.AuditFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.AuditRule`1" /> class by using the specified values.</summary>
            <param name="identity">The identity to which the audit rule applies.</param>
            <param name="rights">The rights of the audit rule.</param>
            <param name="flags">The properties of the audit rule.</param>
        </member>
        <member name="M:System.Security.AccessControl.AuditRule`1.#ctor(System.String,`0,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.AuditRule`1" /> class by using the specified values.</summary>
            <param name="identity">The identity to which the audit rule applies.</param>
            <param name="rights">The rights of the audit rule.</param>
            <param name="inheritanceFlags">The inheritance properties of the audit rule.</param>
            <param name="propagationFlags">Whether inherited audit rules are automatically propagated.</param>
            <param name="flags">The conditions for which the rule is audited.</param>
        </member>
        <member name="P:System.Security.AccessControl.AuditRule`1.Rights">
            <summary>Gets the rights of the audit rule.</summary>
            <returns>The rights of the audit rule.</returns>
        </member>
        <member name="T:System.Security.AccessControl.AuthorizationRule">
            <summary>Determines access to securable objects. The derived classes <see cref="T:System.Security.AccessControl.AccessRule" /> and <see cref="T:System.Security.AccessControl.AuditRule" /> offer specializations for access and audit functionality.</summary>
        </member>
        <member name="M:System.Security.AccessControl.AuthorizationRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.AccessRule" /> class by using the specified values.</summary>
            <param name="identity">The identity to which the access rule applies. This parameter must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
            <param name="accessMask">The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</param>
            <param name="isInherited">
                <see langword="true" /> to inherit this rule from a parent container.</param>
            <param name="inheritanceFlags">The inheritance properties of the access rule.</param>
            <param name="propagationFlags">Whether inherited access rules are automatically propagated. The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
            <exception cref="T:System.ArgumentException">The value of the <paramref name="identity" /> parameter cannot be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The value of the <paramref name="accessMask" /> parameter is zero, or the <paramref name="inheritanceFlags" /> or <paramref name="propagationFlags" /> parameters contain unrecognized flag values.</exception>
        </member>
        <member name="P:System.Security.AccessControl.AuthorizationRule.AccessMask">
            <summary>Gets the access mask for this rule.</summary>
            <returns>The access mask for this rule.</returns>
        </member>
        <member name="P:System.Security.AccessControl.AuthorizationRule.IdentityReference">
            <summary>Gets the <see cref="T:System.Security.Principal.IdentityReference" /> to which this rule applies.</summary>
            <returns>The <see cref="T:System.Security.Principal.IdentityReference" /> to which this rule applies.</returns>
        </member>
        <member name="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags">
            <summary>Gets the value of flags that determine how this rule is inherited by child objects.</summary>
            <returns>A bitwise combination of the enumeration values.</returns>
        </member>
        <member name="P:System.Security.AccessControl.AuthorizationRule.IsInherited">
            <summary>Gets a value indicating whether this rule is explicitly set or is inherited from a parent container object.</summary>
            <returns>
                <see langword="true" /> if this rule is not explicitly set but is instead inherited from a parent container.</returns>
        </member>
        <member name="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags">
            <summary>Gets the value of the propagation flags, which determine how inheritance of this rule is propagated to child objects. This property is significant only when the value of the <see cref="T:System.Security.AccessControl.InheritanceFlags" /> enumeration is not <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</summary>
            <returns>A bitwise combination of the enumeration values.</returns>
        </member>
        <member name="T:System.Security.AccessControl.AuthorizationRuleCollection">
            <summary>Represents a collection of <see cref="T:System.Security.AccessControl.AuthorizationRule" /> objects.</summary>
        </member>
        <member name="M:System.Security.AccessControl.AuthorizationRuleCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.AuthorizationRuleCollection" /> class.</summary>
        </member>
        <member name="M:System.Security.AccessControl.AuthorizationRuleCollection.AddRule(System.Security.AccessControl.AuthorizationRule)">
            <summary>Adds an <see cref="T:System.Security.AccessControl.AuthorizationRule" /> object to the collection.</summary>
            <param name="rule">The <see cref="T:System.Security.AccessControl.AuthorizationRule" /> object to add to the collection.</param>
        </member>
        <member name="M:System.Security.AccessControl.AuthorizationRuleCollection.CopyTo(System.Security.AccessControl.AuthorizationRule[],System.Int32)">
            <summary>Copies the contents of the collection to an array.</summary>
            <param name="rules">An array to which to copy the contents of the collection.</param>
            <param name="index">The zero-based index from which to begin copying.</param>
        </member>
        <member name="P:System.Security.AccessControl.AuthorizationRuleCollection.Item(System.Int32)">
            <summary>Gets the <see cref="T:System.Security.AccessControl.AuthorizationRule" /> object at the specified index of the collection.</summary>
            <param name="index">The zero-based index of the <see cref="T:System.Security.AccessControl.AuthorizationRule" /> object to get.</param>
            <returns>The <see cref="T:System.Security.AccessControl.AuthorizationRule" /> object at the specified index.</returns>
        </member>
        <member name="T:System.Security.AccessControl.CommonAce">
            <summary>Represents an access control entry (ACE).</summary>
        </member>
        <member name="M:System.Security.AccessControl.CommonAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Boolean,System.Byte[])">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.CommonAce" /> class.</summary>
            <param name="flags">Flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new access control entry (ACE).</param>
            <param name="qualifier">The use of the new ACE.</param>
            <param name="accessMask">The access mask for the ACE.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> associated with the new ACE.</param>
            <param name="isCallback">
                <see langword="true" /> to specify that the new ACE is a callback type ACE.</param>
            <param name="opaque">Opaque data associated with the new ACE. Opaque data is allowed only for callback ACE types. The length of this array must not be greater than the return value of the <see cref="M:System.Security.AccessControl.CommonAce.MaxOpaqueLength(System.Boolean)" /> method.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonAce.GetBinaryForm(System.Byte[],System.Int32)">
            <summary>Marshals the contents of the <see cref="T:System.Security.AccessControl.CommonAce" /> object into the specified byte array beginning at the specified offset.</summary>
            <param name="binaryForm">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.CommonAce" /> object is marshaled.</param>
            <param name="offset">The offset at which to start marshaling.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> is negative or too high to allow the entire <see cref="T:System.Security.AccessControl.CommonAce" /> to be copied into the <paramref name="binaryForm" /> array.</exception>
        </member>
        <member name="M:System.Security.AccessControl.CommonAce.MaxOpaqueLength(System.Boolean)">
            <summary>Gets the maximum allowed length of an opaque data BLOB for callback access control entries (ACEs).</summary>
            <param name="isCallback">
                <see langword="true" /> to specify that the <see cref="T:System.Security.AccessControl.CommonAce" /> object is a callback ACE type.</param>
            <returns>The allowed length of an opaque data BLOB.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonAce.BinaryLength">
            <summary>Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAce" /> object. Use this length with the <see cref="M:System.Security.AccessControl.CommonAce.GetBinaryForm(System.Byte[],System.Int32)" /> method before marshaling the ACL into a binary array.</summary>
            <returns>The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAce" /> object.</returns>
        </member>
        <member name="T:System.Security.AccessControl.CommonAcl">
            <summary>Represents an access control list (ACL) and is the base class for the <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> and <see cref="T:System.Security.AccessControl.SystemAcl" /> classes.</summary>
        </member>
        <member name="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)">
            <summary>Marshals the contents of the <see cref="T:System.Security.AccessControl.CommonAcl" /> object into the specified byte array beginning at the specified offset.</summary>
            <param name="binaryForm">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.CommonAcl" /> is marshaled.</param>
            <param name="offset">The offset at which to start marshaling.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)">
            <summary>Removes all access control entries (ACEs) contained by this <see cref="T:System.Security.AccessControl.CommonAcl" /> object that are associated with the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> object to check for.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonAcl.RemoveInheritedAces">
            <summary>Removes all inherited access control entries (ACEs) from this <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</summary>
        </member>
        <member name="P:System.Security.AccessControl.CommonAcl.BinaryLength">
            <summary>Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object. This length should be used before marshaling the access control list (ACL) into a binary array by using the <see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" /> method.</summary>
            <returns>The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonAcl.Count">
            <summary>Gets the number of access control entries (ACEs) in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</summary>
            <returns>The number of ACEs in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonAcl.IsCanonical">
            <summary>Gets a Boolean value that specifies whether the access control entries (ACEs) in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object are in canonical order.</summary>
            <returns>
                <see langword="true" /> if the ACEs in the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object are in canonical order; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonAcl.IsContainer">
            <summary>Sets whether the <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a container.</summary>
            <returns>
                <see langword="true" /> if the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a container.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonAcl.IsDS">
            <summary>Sets whether the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a directory object access control list (ACL).</summary>
            <returns>
                <see langword="true" /> if the current <see cref="T:System.Security.AccessControl.CommonAcl" /> object is a directory object ACL.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonAcl.Item(System.Int32)">
            <summary>Gets or sets the <see cref="T:System.Security.AccessControl.CommonAce" /> at the specified index.</summary>
            <param name="index">The zero-based index of the <see cref="T:System.Security.AccessControl.CommonAce" /> to get or set.</param>
            <returns>The <see cref="T:System.Security.AccessControl.CommonAce" /> at the specified index.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonAcl.Revision">
            <summary>Gets the revision level of the <see cref="T:System.Security.AccessControl.CommonAcl" />.</summary>
            <returns>A byte value that specifies the revision level of the <see cref="T:System.Security.AccessControl.CommonAcl" />.</returns>
        </member>
        <member name="T:System.Security.AccessControl.CommonObjectSecurity">
            <summary>Controls access to objects without direct manipulation of access control lists (ACLs). This class is the abstract base class for the <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> class.</summary>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> class.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new object is a container object.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)">
            <summary>Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
            <param name="rule">The access rule to add.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)">
            <summary>Adds the specified audit rule to the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
            <param name="rule">The audit rule to add.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)">
            <summary>Gets a collection of the access rules associated with the specified security identifier.</summary>
            <param name="includeExplicit">
                <see langword="true" /> to include access rules explicitly set for the object.</param>
            <param name="includeInherited">
                <see langword="true" /> to include inherited access rules.</param>
            <param name="targetType">Specifies whether the security identifier for which to retrieve access rules is of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or type <see cref="T:System.Security.Principal.NTAccount" />. The value of this parameter must be a type that can be translated to  the <see cref="T:System.Security.Principal.SecurityIdentifier" /> type.</param>
            <returns>The collection of access rules associated with the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</returns>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)">
            <summary>Gets a collection of the audit rules associated with the specified security identifier.</summary>
            <param name="includeExplicit">
                <see langword="true" /> to include audit rules explicitly set for the object.</param>
            <param name="includeInherited">
                <see langword="true" /> to include inherited audit rules.</param>
            <param name="targetType">The security identifier for which to retrieve audit rules. This must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</param>
            <returns>The collection of audit rules associated with the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</returns>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
            <summary>Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
            <param name="modification">The modification to apply to the DACL.</param>
            <param name="rule">The access rule to modify.</param>
            <param name="modified">
                <see langword="true" /> if the DACL is successfully modified; otherwise, <see langword="false" />.</param>
            <returns>
                <see langword="true" /> if the DACL is successfully modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
            <summary>Applies the specified modification to the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
            <param name="modification">The modification to apply to the SACL.</param>
            <param name="rule">The audit rule to modify.</param>
            <param name="modified">
                <see langword="true" /> if the SACL is successfully modified; otherwise, <see langword="false" />.</param>
            <returns>
                <see langword="true" /> if the SACL is successfully modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)">
            <summary>Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
            <param name="rule">The access rule to remove.</param>
            <returns>
                <see langword="true" /> if the access rule was successfully removed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)">
            <summary>Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
            <param name="rule">The access rule to remove.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)">
            <summary>Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
            <param name="rule">The access rule to remove.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)">
            <summary>Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
            <param name="rule">The audit rule to remove.</param>
            <returns>
                <see langword="true" /> if the audit rule was successfully removed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)">
            <summary>Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
            <param name="rule">The audit rule to remove.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)">
            <summary>Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
            <param name="rule">The audit rule to remove.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)">
            <summary>Removes all access rules in the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object and then adds the specified access rule.</summary>
            <param name="rule">The access rule to reset.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)">
            <summary>Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object and then adds the specified access rule.</summary>
            <param name="rule">The access rule to set.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)">
            <summary>Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object and then adds the specified audit rule.</summary>
            <param name="rule">The audit rule to set.</param>
        </member>
        <member name="T:System.Security.AccessControl.CommonSecurityDescriptor">
            <summary>Represents a security descriptor. A security descriptor includes an owner, a primary group, a Discretionary Access Control List (DACL), and a System Access Control List (SACL).</summary>
        </member>
        <member name="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> class from the specified array of byte values.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new security descriptor is associated with a container object.</param>
            <param name="isDS">
                <see langword="true" /> if the new security descriptor is associated with a directory object.</param>
            <param name="binaryForm">The array of byte values from which to create the new <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</param>
            <param name="offset">The offset in the <paramref name="binaryForm" /> array at which to begin copying.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> class from the specified information.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new security descriptor is associated with a container object.</param>
            <param name="isDS">
                <see langword="true" /> if the new security descriptor is associated with a directory object.</param>
            <param name="flags">Flags that specify behavior of the new <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</param>
            <param name="owner">The owner for the new <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</param>
            <param name="group">The primary group for the new <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</param>
            <param name="systemAcl">The System Access Control List (SACL) for the new <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</param>
            <param name="discretionaryAcl">The Discretionary Access Control List (DACL) for the new <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> class from the specified <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new security descriptor is associated with a container object.</param>
            <param name="isDS">
                <see langword="true" /> if the new security descriptor is associated with a directory object.</param>
            <param name="rawSecurityDescriptor">The <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object from which to create the new <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> class from the specified Security Descriptor Definition Language (SDDL) string.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new security descriptor is associated with a container object.</param>
            <param name="isDS">
                <see langword="true" /> if the new security descriptor is associated with a directory object.</param>
            <param name="sddlForm">The SDDL string from which to create the new <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)">
            <summary>Sets the <see cref="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl" /> property for this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> instance and sets the <see cref="F:System.Security.AccessControl.ControlFlags.DiscretionaryAclPresent" /> flag.</summary>
            <param name="revision">The revision level of the new <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object.</param>
            <param name="trusted">The number of Access Control Entries (ACEs) this <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object can contain. This number is to be used only as a hint.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)">
            <summary>Sets the <see cref="P:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl" /> property for this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> instance and sets the <see cref="F:System.Security.AccessControl.ControlFlags.SystemAclPresent" /> flag.</summary>
            <param name="revision">The revision level of the new <see cref="T:System.Security.AccessControl.SystemAcl" /> object.</param>
            <param name="trusted">The number of Access Control Entries (ACEs) this <see cref="T:System.Security.AccessControl.SystemAcl" /> object can contain. This number should only be used as a hint.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)">
            <summary>Removes all access rules for the specified security identifier from the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</summary>
            <param name="sid">The security identifier for which to remove access rules.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)">
            <summary>Removes all audit rules for the specified security identifier from the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</summary>
            <param name="sid">The security identifier for which to remove audit rules.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)">
            <summary>Sets the inheritance protection for the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object. DACLs that are protected do not inherit access rules from parent containers.</summary>
            <param name="isProtected">
                <see langword="true" /> to protect the DACL from inheritance.</param>
            <param name="preserveInheritance">
                <see langword="true" /> to keep inherited access rules in the DACL; <see langword="false" /> to remove inherited access rules from the DACL.</param>
        </member>
        <member name="M:System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)">
            <summary>Sets the inheritance protection for the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object. SACLs that are protected do not inherit audit rules from parent containers.</summary>
            <param name="isProtected">
                <see langword="true" /> to protect the SACL from inheritance.</param>
            <param name="preserveInheritance">
                <see langword="true" /> to keep inherited audit rules in the SACL; <see langword="false" /> to remove inherited audit rules from the SACL.</param>
        </member>
        <member name="P:System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags">
            <summary>Gets values that specify behavior of the <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</summary>
            <returns>One or more values of the <see cref="T:System.Security.AccessControl.ControlFlags" /> enumeration combined with a logical OR operation.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
            <summary>Gets or sets the discretionary access control list (DACL) for this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object. The DACL contains access rules.</summary>
            <returns>The DACL for this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonSecurityDescriptor.Group">
            <summary>Gets or sets the primary group for this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</summary>
            <returns>The primary group for this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer">
            <summary>Gets a Boolean value that specifies whether the object associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object is a container object.</summary>
            <returns>
                <see langword="true" /> if the object associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object is a container object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical">
            <summary>Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object is in canonical order.</summary>
            <returns>
                <see langword="true" /> if the DACL associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object is in canonical order; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonSecurityDescriptor.IsDS">
            <summary>Gets a Boolean value that specifies whether the object associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object is a directory object.</summary>
            <returns>
                <see langword="true" /> if the object associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object is a directory object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical">
            <summary>Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object is in canonical order.</summary>
            <returns>
                <see langword="true" /> if the SACL associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object is in canonical order; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonSecurityDescriptor.Owner">
            <summary>Gets or sets the owner of the object associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</summary>
            <returns>The owner of the object associated with this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl">
            <summary>Gets or sets the System Access Control List (SACL) for this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object. The SACL contains audit rules.</summary>
            <returns>The SACL for this <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> object.</returns>
        </member>
        <member name="T:System.Security.AccessControl.CompoundAce">
            <summary>Represents a compound Access Control Entry (ACE).</summary>
        </member>
        <member name="M:System.Security.AccessControl.CompoundAce.#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.CompoundAce" /> class.</summary>
            <param name="flags">Contains flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE).</param>
            <param name="accessMask">The access mask for the ACE.</param>
            <param name="compoundAceType">A value from the <see cref="T:System.Security.AccessControl.CompoundAceType" /> enumeration.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> associated with the new ACE.</param>
        </member>
        <member name="M:System.Security.AccessControl.CompoundAce.GetBinaryForm(System.Byte[],System.Int32)">
            <summary>Marshals the contents of the <see cref="T:System.Security.AccessControl.CompoundAce" /> object into the specified byte array beginning at the specified offset.</summary>
            <param name="binaryForm">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.CompoundAce" /> is marshaled.</param>
            <param name="offset">The offset at which to start marshaling.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> is negative or too high to allow the entire <see cref="T:System.Security.AccessControl.CompoundAce" /> to be copied into <paramref name="array" />.</exception>
        </member>
        <member name="P:System.Security.AccessControl.CompoundAce.BinaryLength">
            <summary>Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CompoundAce" /> object. This length should be used before marshaling the ACL into a binary array with the <see cref="M:System.Security.AccessControl.CompoundAce.GetBinaryForm(System.Byte[],System.Int32)" /> method.</summary>
            <returns>The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CompoundAce" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CompoundAce.CompoundAceType">
            <summary>Gets or sets the type of this <see cref="T:System.Security.AccessControl.CompoundAce" /> object.</summary>
            <returns>The type of this <see cref="T:System.Security.AccessControl.CompoundAce" /> object.</returns>
        </member>
        <member name="T:System.Security.AccessControl.CompoundAceType">
            <summary>Specifies the type of a <see cref="T:System.Security.AccessControl.CompoundAce" /> object.</summary>
        </member>
        <member name="F:System.Security.AccessControl.CompoundAceType.Impersonation">
            <summary>The <see cref="T:System.Security.AccessControl.CompoundAce" /> object is used for impersonation.</summary>
        </member>
        <member name="T:System.Security.AccessControl.ControlFlags">
            <summary>These flags affect the security descriptor behavior.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.DiscretionaryAclAutoInherited">
            <summary>Specifies that the Discretionary Access Control List (DACL) has been automatically inherited from the parent. Set by resource managers only.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.DiscretionaryAclAutoInheritRequired">
            <summary>Ignored.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.DiscretionaryAclDefaulted">
            <summary>Specifies that the DACL was obtained by a defaulting mechanism. Set by resource managers only.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.DiscretionaryAclPresent">
            <summary>Specifies that the DACL is not <see langword="null" />. Set by resource managers or users.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.DiscretionaryAclProtected">
            <summary>Specifies that the resource manager prevents auto-inheritance. Set by resource managers or users.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.DiscretionaryAclUntrusted">
            <summary>Ignored.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.GroupDefaulted">
            <summary>Specifies that the group <see cref="T:System.Security.Principal.SecurityIdentifier" /> was obtained by a defaulting mechanism. Set by resource managers only; should not be set by callers.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.None">
            <summary>No control flags.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.OwnerDefaulted">
            <summary>Specifies that the owner <see cref="T:System.Security.Principal.SecurityIdentifier" /> was obtained by a defaulting mechanism. Set by resource managers only; should not be set by callers.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.RMControlValid">
            <summary>Specifies that the contents of the Reserved field are valid.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.SelfRelative">
            <summary>Specifies that the security descriptor binary representation is in the self-relative format.  This flag is always set.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.ServerSecurity">
            <summary>Ignored.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.SystemAclAutoInherited">
            <summary>Specifies that the System Access Control List (SACL) has been automatically inherited from the parent. Set by resource managers only.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.SystemAclAutoInheritRequired">
            <summary>Ignored.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.SystemAclDefaulted">
            <summary>Specifies that the SACL was obtained by a defaulting mechanism. Set by resource managers only.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.SystemAclPresent">
            <summary>Specifies that the SACL is not <see langword="null" />. Set by resource managers or users.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ControlFlags.SystemAclProtected">
            <summary>Specifies that the resource manager prevents auto-inheritance. Set by resource managers or users.</summary>
        </member>
        <member name="T:System.Security.AccessControl.CustomAce">
            <summary>Represents an Access Control Entry (ACE) that is not defined by one of the members of the <see cref="T:System.Security.AccessControl.AceType" /> enumeration.</summary>
        </member>
        <member name="F:System.Security.AccessControl.CustomAce.MaxOpaqueLength">
            <summary>Returns the maximum allowed length of an opaque data blob for this <see cref="T:System.Security.AccessControl.CustomAce" /> object.</summary>
        </member>
        <member name="M:System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.CustomAce" /> class.</summary>
            <param name="type">Type of the new Access Control Entry (ACE). This value must be greater than <see cref="F:System.Security.AccessControl.AceType.MaxDefinedAceType" />.</param>
            <param name="flags">Flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new ACE.</param>
            <param name="opaque">An array of byte values that contains the data for the new ACE. This value can be <see langword="null" />. The length of this array must not be greater than the value of the <see cref="F:System.Security.AccessControl.CustomAce.MaxOpaqueLength" /> field, and must be a multiple of four.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The value of the <paramref name="type" /> parameter is not greater than <see cref="F:System.Security.AccessControl.AceType.MaxDefinedAceType" /> or the length of the <paramref name="opaque" /> array is either greater than the value of the <see cref="F:System.Security.AccessControl.CustomAce.MaxOpaqueLength" /> field or not a multiple of four.</exception>
        </member>
        <member name="M:System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)">
            <summary>Marshals the contents of the <see cref="T:System.Security.AccessControl.CustomAce" /> object into the specified byte array beginning at the specified offset.</summary>
            <param name="binaryForm">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.CustomAce" /> is marshaled.</param>
            <param name="offset">The offset at which to start marshaling.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> is negative or too high to allow the entire <see cref="T:System.Security.AccessControl.CustomAce" /> to be copied into <paramref name="array" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.CustomAce.GetOpaque">
            <summary>Returns the opaque data associated with this <see cref="T:System.Security.AccessControl.CustomAce" /> object.</summary>
            <returns>An array of byte values that represents the opaque data associated with this <see cref="T:System.Security.AccessControl.CustomAce" /> object.</returns>
        </member>
        <member name="M:System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])">
            <summary>Sets the opaque callback data associated with this <see cref="T:System.Security.AccessControl.CustomAce" /> object.</summary>
            <param name="opaque">An array of byte values that represents the opaque callback data for this <see cref="T:System.Security.AccessControl.CustomAce" /> object.</param>
        </member>
        <member name="P:System.Security.AccessControl.CustomAce.BinaryLength">
            <summary>Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CustomAce" /> object. This length should be used before marshaling the ACL into a binary array with the <see cref="M:System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)" /> method.</summary>
            <returns>The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.CustomAce" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.CustomAce.OpaqueLength">
            <summary>Gets the length of the opaque data associated with this <see cref="T:System.Security.AccessControl.CustomAce" /> object.</summary>
            <returns>The length of the opaque callback data.</returns>
        </member>
        <member name="T:System.Security.AccessControl.DiscretionaryAcl">
            <summary>Represents a Discretionary Access Control List (DACL).</summary>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> class with the specified values.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object is a container.</param>
            <param name="isDS">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object is a directory object Access Control List (ACL).</param>
            <param name="revision">The revision level of the new <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object.</param>
            <param name="capacity">The number of Access Control Entries (ACEs) this <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object can contain. This number is to be used only as a hint.</param>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> class with the specified values.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object is a container.</param>
            <param name="isDS">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object is a directory object Access Control List (ACL).</param>
            <param name="capacity">The number of Access Control Entries (ACEs) this <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object can contain. This number is to be used only as a hint.</param>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> class with the specified values from the specified <see cref="T:System.Security.AccessControl.RawAcl" /> object.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object is a container.</param>
            <param name="isDS">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object is a directory object Access Control List (ACL).</param>
            <param name="rawAcl">The underlying <see cref="T:System.Security.AccessControl.RawAcl" /> object for the new <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object. Specify <see langword="null" /> to create an empty ACL.</param>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)">
            <summary>Adds an Access Control Entry (ACE) with the specified settings to the current <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object.</summary>
            <param name="accessType">The type of access control (allow or deny) to add.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to add an ACE.</param>
            <param name="accessMask">The access rule for the new ACE.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the new ACE.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the new ACE.</param>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)">
            <summary>Adds an Access Control Entry (ACE) with the specified settings to the current <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the new ACE.</summary>
            <param name="accessType">The type of access control (allow or deny) to add.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to add an ACE.</param>
            <param name="accessMask">The access rule for the new ACE.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the new ACE.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the new ACE.</param>
            <param name="objectFlags">Flags that specify if the <paramref name="objectType" /> and <paramref name="inheritedObjectType" /> parameters contain non-<see langword="null" /> values.</param>
            <param name="objectType">The identity of the class of objects to which the new ACE applies.</param>
            <param name="inheritedObjectType">The identity of the class of child objects which can inherit the new ACE.</param>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.AddAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)">
            <summary>Adds an Access Control Entry (ACE) with the specified settings to the current <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object.</summary>
            <param name="accessType">The type of access control (allow or deny) to add.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to add an ACE.</param>
            <param name="rule">The <see cref="T:System.Security.AccessControl.ObjectAccessRule" /> for the new access.</param>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)">
            <summary>Removes the specified access control rule from the current <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object.</summary>
            <param name="accessType">The type of access control (allow or deny) to remove.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to remove an access control rule.</param>
            <param name="accessMask">The access mask for the rule to be removed.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the rule to be removed.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the rule to be removed.</param>
            <returns>
                <see langword="true" /> if this method successfully removes the specified access; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)">
            <summary>Removes the specified access control rule from the current <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</summary>
            <param name="accessType">The type of access control (allow or deny) to remove.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to remove an access control rule.</param>
            <param name="accessMask">The access mask for the access control rule to be removed.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the access control rule to be removed.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the access control rule to be removed.</param>
            <param name="objectFlags">Flags that specify if the <paramref name="objectType" /> and <paramref name="inheritedObjectType" /> parameters contain non-<see langword="null" /> values.</param>
            <param name="objectType">The identity of the class of objects to which the removed access control rule applies.</param>
            <param name="inheritedObjectType">The identity of the class of child objects which can inherit the removed access control rule.</param>
            <returns>
                <see langword="true" /> if this method successfully removes the specified access; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)">
            <summary>Removes the specified access control rule from the current <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object.</summary>
            <param name="accessType">The type of access control (allow or deny) to remove.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to remove an access control rule.</param>
            <param name="rule">The <see cref="T:System.Security.AccessControl.ObjectAccessRule" /> for which to remove access.</param>
            <returns>Returns <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)">
            <summary>Removes the specified Access Control Entry (ACE) from the current <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object.</summary>
            <param name="accessType">The type of access control (allow or deny) to remove.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to remove an ACE.</param>
            <param name="accessMask">The access mask for the ACE to be removed.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the ACE to be removed.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the ACE to be removed.</param>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)">
            <summary>Removes the specified Access Control Entry (ACE) from the current <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the ACE to be removed.</summary>
            <param name="accessType">The type of access control (allow or deny) to remove.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to remove an ACE.</param>
            <param name="accessMask">The access mask for the ACE to be removed.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the ACE to be removed.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the ACE to be removed.</param>
            <param name="objectFlags">Flags that specify if the <paramref name="objectType" /> and <paramref name="inheritedObjectType" /> parameters contain non-<see langword="null" /> values.</param>
            <param name="objectType">The identity of the class of objects to which the removed ACE applies.</param>
            <param name="inheritedObjectType">The identity of the class of child objects which can inherit the removed ACE.</param>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.RemoveAccessSpecific(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)">
            <summary>Removes the specified Access Control Entry (ACE) from the current <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object.</summary>
            <param name="accessType">The type of access control (allow or deny) to remove.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to remove an ACE.</param>
            <param name="rule">The <see cref="T:System.Security.AccessControl.ObjectAccessRule" /> for which to remove access.</param>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)">
            <summary>Sets the specified access control for the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
            <param name="accessType">The type of access control (allow or deny) to set.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to set an ACE.</param>
            <param name="accessMask">The access rule for the new ACE.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the new ACE.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the new ACE.</param>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)">
            <summary>Sets the specified access control for the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
            <param name="accessType">The type of access control (allow or deny) to set.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to set an ACE.</param>
            <param name="accessMask">The access rule for the new ACE.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the new ACE.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the new ACE.</param>
            <param name="objectFlags">Flags that specify if the <paramref name="objectType" /> and <paramref name="inheritedObjectType" /> parameters contain non-<see langword="null" /> values.</param>
            <param name="objectType">The identity of the class of objects to which the new ACE applies.</param>
            <param name="inheritedObjectType">The identity of the class of child objects which can inherit the new ACE.</param>
        </member>
        <member name="M:System.Security.AccessControl.DiscretionaryAcl.SetAccess(System.Security.AccessControl.AccessControlType,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAccessRule)">
            <summary>Sets the specified access control for the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
            <param name="accessType">The type of access control (allow or deny) to set.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to set an ACE.</param>
            <param name="rule">The <see cref="T:System.Security.AccessControl.ObjectAccessRule" /> for which to set access.</param>
        </member>
        <member name="T:System.Security.AccessControl.GenericAce">
            <summary>Represents an Access Control Entry (ACE), and is the base class for all other ACE classes.</summary>
        </member>
        <member name="M:System.Security.AccessControl.GenericAce.Copy">
            <summary>Creates a deep copy of this Access Control Entry (ACE).</summary>
            <returns>The <see cref="T:System.Security.AccessControl.GenericAce" /> object that this method creates.</returns>
        </member>
        <member name="M:System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)">
            <summary>Creates a <see cref="T:System.Security.AccessControl.GenericAce" /> object from the specified binary data.</summary>
            <param name="binaryForm">The binary data from which to create the new <see cref="T:System.Security.AccessControl.GenericAce" /> object.</param>
            <param name="offset">The offset at which to begin unmarshaling.</param>
            <returns>The <see cref="T:System.Security.AccessControl.GenericAce" /> object this method creates.</returns>
        </member>
        <member name="M:System.Security.AccessControl.GenericAce.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Security.AccessControl.GenericAce" /> object is equal to the current <see cref="T:System.Security.AccessControl.GenericAce" /> object.</summary>
            <param name="o">The <see cref="T:System.Security.AccessControl.GenericAce" /> object to compare to the current <see cref="T:System.Security.AccessControl.GenericAce" /> object.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Security.AccessControl.GenericAce" /> object is equal to the current <see cref="T:System.Security.AccessControl.GenericAce" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)">
            <summary>Marshals the contents of the <see cref="T:System.Security.AccessControl.GenericAce" /> object into the specified byte array beginning at the specified offset.</summary>
            <param name="binaryForm">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.GenericAce" /> is marshaled.</param>
            <param name="offset">The offset at which to start marshaling.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> is negative or too high to allow the entire <see cref="T:System.Security.AccessControl.GenericAcl" /> to be copied into <paramref name="array" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.GenericAce.GetHashCode">
            <summary>Serves as a hash function for the <see cref="T:System.Security.AccessControl.GenericAce" /> class. The  <see cref="M:System.Security.AccessControl.GenericAce.GetHashCode" /> method is suitable for use in hashing algorithms and data structures like a hash table.</summary>
            <returns>A hash code for the current <see cref="T:System.Security.AccessControl.GenericAce" /> object.</returns>
        </member>
        <member name="M:System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)">
            <summary>Determines whether the specified <see cref="T:System.Security.AccessControl.GenericAce" /> objects are considered equal.</summary>
            <param name="left">The first <see cref="T:System.Security.AccessControl.GenericAce" /> object to compare.</param>
            <param name="right">The second <see cref="T:System.Security.AccessControl.GenericAce" /> to compare.</param>
            <returns>
                <see langword="true" /> if the two <see cref="T:System.Security.AccessControl.GenericAce" /> objects are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)">
            <summary>Determines whether the specified <see cref="T:System.Security.AccessControl.GenericAce" /> objects are considered unequal.</summary>
            <param name="left">The first <see cref="T:System.Security.AccessControl.GenericAce" /> object to compare.</param>
            <param name="right">The second <see cref="T:System.Security.AccessControl.GenericAce" /> to compare.</param>
            <returns>
                <see langword="true" /> if the two <see cref="T:System.Security.AccessControl.GenericAce" /> objects are unequal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAce.AceFlags">
            <summary>Gets or sets the <see cref="T:System.Security.AccessControl.AceFlags" /> associated with this <see cref="T:System.Security.AccessControl.GenericAce" /> object.</summary>
            <returns>The <see cref="T:System.Security.AccessControl.AceFlags" /> associated with this <see cref="T:System.Security.AccessControl.GenericAce" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAce.AceType">
            <summary>Gets the type of this Access Control Entry (ACE).</summary>
            <returns>The type of this ACE.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAce.AuditFlags">
            <summary>Gets the audit information associated with this Access Control Entry (ACE).</summary>
            <returns>The audit information associated with this Access Control Entry (ACE).</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAce.BinaryLength">
            <summary>Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.GenericAce" /> object. This length should be used before marshaling the ACL into a binary array with the <see cref="M:System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)" /> method.</summary>
            <returns>The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.GenericAce" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAce.InheritanceFlags">
            <summary>Gets flags that specify the inheritance properties of this Access Control Entry (ACE).</summary>
            <returns>Flags that specify the inheritance properties of this ACE.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAce.IsInherited">
            <summary>Gets a Boolean value that specifies whether this Access Control Entry (ACE) is inherited or is set explicitly.</summary>
            <returns>
                <see langword="true" /> if this ACE is inherited; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAce.PropagationFlags">
            <summary>Gets flags that specify the inheritance propagation properties of this Access Control Entry (ACE).</summary>
            <returns>Flags that specify the inheritance propagation properties of this ACE.</returns>
        </member>
        <member name="T:System.Security.AccessControl.GenericAcl">
            <summary>Represents an access control list (ACL) and is the base class for the <see cref="T:System.Security.AccessControl.CommonAcl" />, <see cref="T:System.Security.AccessControl.DiscretionaryAcl" />, <see cref="T:System.Security.AccessControl.RawAcl" />, and <see cref="T:System.Security.AccessControl.SystemAcl" /> classes.</summary>
        </member>
        <member name="F:System.Security.AccessControl.GenericAcl.AclRevision">
            <summary>The revision level of the current <see cref="T:System.Security.AccessControl.GenericAcl" />. This value is returned by the <see cref="P:System.Security.AccessControl.GenericAcl.Revision" /> property for Access Control Lists (ACLs) that are not associated with Directory Services objects.</summary>
        </member>
        <member name="F:System.Security.AccessControl.GenericAcl.AclRevisionDS">
            <summary>The revision level of the current <see cref="T:System.Security.AccessControl.GenericAcl" />. This value is returned by the <see cref="P:System.Security.AccessControl.GenericAcl.Revision" /> property for Access Control Lists (ACLs) that are associated with Directory Services objects.</summary>
        </member>
        <member name="F:System.Security.AccessControl.GenericAcl.MaxBinaryLength">
            <summary>The maximum allowed binary length of a <see cref="T:System.Security.AccessControl.GenericAcl" /> object.</summary>
        </member>
        <member name="M:System.Security.AccessControl.GenericAcl.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.GenericAcl" /> class.</summary>
        </member>
        <member name="M:System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)">
            <summary>Copies each <see cref="T:System.Security.AccessControl.GenericAce" /> of the current <see cref="T:System.Security.AccessControl.GenericAcl" /> into the specified array.</summary>
            <param name="array">The array into which copies of the <see cref="T:System.Security.AccessControl.GenericAce" /> objects contained by the current <see cref="T:System.Security.AccessControl.GenericAcl" /> are placed.</param>
            <param name="index">The zero-based index of <paramref name="array" /> where the copying begins.</param>
        </member>
        <member name="M:System.Security.AccessControl.GenericAcl.GetBinaryForm(System.Byte[],System.Int32)">
            <summary>Marshals the contents of the <see cref="T:System.Security.AccessControl.GenericAcl" /> object into the specified byte array beginning at the specified offset.</summary>
            <param name="binaryForm">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.GenericAcl" /> is marshaled.</param>
            <param name="offset">The offset at which to start marshaling.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> is negative or too high to allow the entire <see cref="T:System.Security.AccessControl.GenericAcl" /> to be copied into <paramref name="array" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.GenericAcl.GetEnumerator">
            <summary>Retrieves an object that you can use to iterate through the access control entries (ACEs) in an access control list (ACL).</summary>
            <returns>An enumerator object.</returns>
        </member>
        <member name="M:System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Copies each <see cref="T:System.Security.AccessControl.GenericAce" /> of the current <see cref="T:System.Security.AccessControl.GenericAcl" /> into the specified array.</summary>
            <param name="array">The array into which copies of the <see cref="T:System.Security.AccessControl.GenericAce" /> objects contained by the current <see cref="T:System.Security.AccessControl.GenericAcl" /> are placed.</param>
            <param name="index">The zero-based index of <paramref name="array" /> where the copying begins.</param>
        </member>
        <member name="M:System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns a new instance of the <see cref="T:System.Security.AccessControl.AceEnumerator" /> class cast as an instance of the <see cref="T:System.Collections.IEnumerator" /> interface.</summary>
            <returns>A new <see cref="T:System.Security.AccessControl.AceEnumerator" /> object, cast as an instance of the <see cref="T:System.Collections.IEnumerator" /> interface.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAcl.BinaryLength">
            <summary>Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.GenericAcl" /> object. This length should be used before marshaling the ACL into a binary array with the <see cref="M:System.Security.AccessControl.GenericAcl.GetBinaryForm(System.Byte[],System.Int32)" /> method.</summary>
            <returns>The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.GenericAcl" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAcl.Count">
            <summary>Gets the number of access control entries (ACEs) in the current <see cref="T:System.Security.AccessControl.GenericAcl" /> object.</summary>
            <returns>The number of ACEs in the current <see cref="T:System.Security.AccessControl.GenericAcl" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAcl.IsSynchronized">
            <summary>This property is always set to <see langword="false" />. It is implemented only because it is required for the implementation of the <see cref="T:System.Collections.ICollection" /> interface.</summary>
            <returns>Always <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAcl.Item(System.Int32)">
            <summary>Gets or sets the <see cref="T:System.Security.AccessControl.GenericAce" /> at the specified index.</summary>
            <param name="index">The zero-based index of the <see cref="T:System.Security.AccessControl.GenericAce" /> to get or set.</param>
            <returns>The <see cref="T:System.Security.AccessControl.GenericAce" /> at the specified index.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAcl.Revision">
            <summary>Gets the revision level of the <see cref="T:System.Security.AccessControl.GenericAcl" />.</summary>
            <returns>A byte value that specifies the revision level of the <see cref="T:System.Security.AccessControl.GenericAcl" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericAcl.SyncRoot">
            <summary>This property always returns <see langword="null" />. It is implemented only because it is required for the implementation of the <see cref="T:System.Collections.ICollection" /> interface.</summary>
            <returns>Always returns <see langword="null" />.</returns>
        </member>
        <member name="T:System.Security.AccessControl.GenericSecurityDescriptor">
            <summary>Represents a security descriptor. A security descriptor includes an owner, a primary group, a Discretionary Access Control List (DACL), and a System Access Control List (SACL).</summary>
        </member>
        <member name="M:System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)">
            <summary>Returns an array of byte values that represents the information contained in this <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object.</summary>
            <param name="binaryForm">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> is marshaled.</param>
            <param name="offset">The offset at which to start marshaling.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> is negative or too high to allow the entire <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> to be copied into <paramref name="array" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.GenericSecurityDescriptor.GetSddlForm(System.Security.AccessControl.AccessControlSections)">
            <summary>Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor that this <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object represents.</summary>
            <param name="includeSections">Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.</param>
            <returns>The SDDL representation of the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object.</returns>
        </member>
        <member name="M:System.Security.AccessControl.GenericSecurityDescriptor.IsSddlConversionSupported">
            <summary>Returns a boolean value that specifies whether the security descriptor associated with this  <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object can be converted to the Security Descriptor Definition Language (SDDL) format.</summary>
            <returns>
                <see langword="true" /> if the security descriptor associated with this  <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericSecurityDescriptor.BinaryLength">
            <summary>Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object. This length should be used before marshaling the ACL into a binary array with the <see cref="M:System.Security.AccessControl.GenericSecurityDescriptor.GetBinaryForm(System.Byte[],System.Int32)" /> method.</summary>
            <returns>The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericSecurityDescriptor.ControlFlags">
            <summary>Gets values that specify behavior of the <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object.</summary>
            <returns>One or more values of the <see cref="T:System.Security.AccessControl.ControlFlags" /> enumeration combined with a logical OR operation.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericSecurityDescriptor.Group">
            <summary>Gets or sets the primary group for this <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object.</summary>
            <returns>The primary group for this <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericSecurityDescriptor.Owner">
            <summary>Gets or sets the owner of the object associated with this <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object.</summary>
            <returns>The owner of the object associated with this <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.GenericSecurityDescriptor.Revision">
            <summary>Gets the revision level of the <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" /> object.</summary>
            <returns>A byte value that specifies the revision level of the <see cref="T:System.Security.AccessControl.GenericSecurityDescriptor" />.</returns>
        </member>
        <member name="T:System.Security.AccessControl.InheritanceFlags">
            <summary>Inheritance flags specify the semantics of inheritance for access control entries (ACEs).</summary>
        </member>
        <member name="F:System.Security.AccessControl.InheritanceFlags.ContainerInherit">
            <summary>The ACE is inherited by child container objects.</summary>
        </member>
        <member name="F:System.Security.AccessControl.InheritanceFlags.None">
            <summary>The ACE is not inherited by child objects.</summary>
        </member>
        <member name="F:System.Security.AccessControl.InheritanceFlags.ObjectInherit">
            <summary>The ACE is inherited by child leaf objects.</summary>
        </member>
        <member name="T:System.Security.AccessControl.KnownAce">
            <summary>Encapsulates all Access Control Entry (ACE) types currently defined by Microsoft Corporation. All <see cref="T:System.Security.AccessControl.KnownAce" /> objects contain a 32-bit access mask and a <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
        </member>
        <member name="P:System.Security.AccessControl.KnownAce.AccessMask">
            <summary>Gets or sets the access mask for this <see cref="T:System.Security.AccessControl.KnownAce" /> object.</summary>
            <returns>The access mask for this <see cref="T:System.Security.AccessControl.KnownAce" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.KnownAce.SecurityIdentifier">
            <summary>Gets or sets the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object associated with this <see cref="T:System.Security.AccessControl.KnownAce" /> object.</summary>
            <returns>The <see cref="T:System.Security.Principal.SecurityIdentifier" /> object associated with this <see cref="T:System.Security.AccessControl.KnownAce" /> object.</returns>
        </member>
        <member name="T:System.Security.AccessControl.NativeObjectSecurity">
            <summary>Provides the ability to control access to native objects without direct manipulation of Access Control Lists (ACLs). Native object types are defined by the <see cref="T:System.Security.AccessControl.ResourceType" /> enumeration.</summary>
        </member>
        <member name="M:System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> class with the specified values.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is a container object.</param>
            <param name="resourceType">The type of securable object with which the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
        </member>
        <member name="M:System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> class with the specified values. We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is a container object.</param>
            <param name="resourceType">The type of securable object with which the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="handle">The handle of the securable object with which the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to include in this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object.</param>
        </member>
        <member name="M:System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> class with the specified values. We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is a container object.</param>
            <param name="resourceType">The type of securable object with which the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="handle">The handle of the securable object with which the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to include in this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object.</param>
            <param name="exceptionFromErrorCode">A delegate implemented by integrators that provides custom exceptions.</param>
            <param name="exceptionContext">An object that contains contextual information about the source or destination of the exception.</param>
        </member>
        <member name="M:System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> class by using the specified values.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is a container object.</param>
            <param name="resourceType">The type of securable object with which the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="exceptionFromErrorCode">A delegate implemented by integrators that provides custom exceptions.</param>
            <param name="exceptionContext">An object that contains contextual information about the source or destination of the exception.</param>
        </member>
        <member name="M:System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> class with the specified values. We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is a container object.</param>
            <param name="resourceType">The type of securable object with which the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="name">The name of the securable object with which the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to include in this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object.</param>
        </member>
        <member name="M:System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> class with the specified values. We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is a container object.</param>
            <param name="resourceType">The type of securable object with which the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="name">The name of the securable object with which the new <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to include in this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object.</param>
            <param name="exceptionFromErrorCode">A delegate implemented by integrators that provides custom exceptions.</param>
            <param name="exceptionContext">An object that contains contextual information about the source or destination of the exception.</param>
        </member>
        <member name="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
            <summary>Saves the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object to permanent storage. We recommend.persist that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</summary>
            <param name="handle">The handle of the securable object with which this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</param>
            <exception cref="T:System.IO.FileNotFoundException">The securable object with which this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated is either a directory or a file, and that directory or file could not be found.</exception>
        </member>
        <member name="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)">
            <summary>Saves the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object to permanent storage. We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</summary>
            <param name="handle">The handle of the securable object with which this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</param>
            <param name="exceptionContext">An object that contains contextual information about the source or destination of the exception.</param>
            <exception cref="T:System.IO.FileNotFoundException">The securable object with which this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated is either a directory or a file, and that directory or file could not be found.</exception>
        </member>
        <member name="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>Saves the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object to permanent storage. We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</summary>
            <param name="name">The name of the securable object with which this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</param>
            <exception cref="T:System.IO.FileNotFoundException">The securable object with which this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated is either a directory or a file, and that directory or file could not be found.</exception>
        </member>
        <member name="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)">
            <summary>Saves the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object to permanent storage. We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</summary>
            <param name="name">The name of the securable object with which this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</param>
            <param name="exceptionContext">An object that contains contextual information about the source or destination of the exception.</param>
            <exception cref="T:System.IO.FileNotFoundException">The securable object with which this <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated is either a directory or a file, and that directory or file could not be found.</exception>
        </member>
        <member name="T:System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode">
            <summary>Provides a way for integrators to map numeric error codes to specific exceptions that they create.</summary>
            <param name="errorCode">The numeric error code.</param>
            <param name="name">The name of the securable object with which the <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="handle">The handle of the securable object with which the <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> object is associated.</param>
            <param name="context">An object that contains contextual information about the source or destination of the exception.</param>
            <returns>The <see cref="T:System.Exception" /> this delegate creates.</returns>
        </member>
        <member name="T:System.Security.AccessControl.ObjectAccessRule">
            <summary>Represents a combination of a user's identity, an access mask, and an access control type (allow or deny). An <see cref="T:System.Security.AccessControl.ObjectAccessRule" /> object also contains information about the type of object to which the rule applies, the type of child object that can inherit the rule, how the rule is inherited by child objects, and how that inheritance is propagated.</summary>
        </member>
        <member name="M:System.Security.AccessControl.ObjectAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Guid,System.Guid,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.ObjectAccessRule" /> class with the specified values.</summary>
            <param name="identity">The identity to which the access rule applies.  It must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
            <param name="accessMask">The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</param>
            <param name="isInherited">
                <see langword="true" /> if this rule is inherited from a parent container.</param>
            <param name="inheritanceFlags">Specifies the inheritance properties of the access rule.</param>
            <param name="propagationFlags">Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
            <param name="objectType">The type of object to which the rule applies.</param>
            <param name="inheritedObjectType">The type of child object that can inherit the rule.</param>
            <param name="type">Specifies whether this rule allows or denies access.</param>
            <exception cref="T:System.ArgumentException">The value of the <paramref name="identity" /> parameter cannot be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />, or the <paramref name="type" /> parameter contains an invalid value.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The value of the <paramref name="accessMask" /> parameter is 0, or the <paramref name="inheritanceFlags" /> or <paramref name="propagationFlags" /> parameters contain unrecognized flag values.</exception>
        </member>
        <member name="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType">
            <summary>Gets the type of child object that can inherit the <see cref="T:System.Security.AccessControl.ObjectAccessRule" /> object.</summary>
            <returns>The type of child object that can inherit the <see cref="T:System.Security.AccessControl.ObjectAccessRule" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags">
            <summary>Gets flags that specify if the <see cref="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" /> and <see cref="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" /> properties of the <see cref="T:System.Security.AccessControl.ObjectAccessRule" /> object contain valid values.</summary>
            <returns>
                <see cref="F:System.Security.AccessControl.ObjectAceFlags.ObjectAceTypePresent" /> specifies that the <see cref="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" /> property contains a valid value. <see cref="F:System.Security.AccessControl.ObjectAceFlags.InheritedObjectAceTypePresent" /> specifies that the <see cref="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" /> property contains a valid value. These values can be combined with a logical OR.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectAccessRule.ObjectType">
            <summary>Gets the type of object to which the <see cref="T:System.Security.AccessControl.ObjectAccessRule" /> applies.</summary>
            <returns>The type of object to which the <see cref="T:System.Security.AccessControl.ObjectAccessRule" /> applies.</returns>
        </member>
        <member name="T:System.Security.AccessControl.ObjectAce">
            <summary>Controls access to Directory Services objects. This class represents an Access Control Entry (ACE) associated with a directory object.</summary>
        </member>
        <member name="M:System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])">
            <summary>Initiates a new instance of the <see cref="T:System.Security.AccessControl.ObjectAce" /> class.</summary>
            <param name="aceFlags">The inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE).</param>
            <param name="qualifier">The use of the new ACE.</param>
            <param name="accessMask">The access mask for the ACE.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> associated with the new ACE.</param>
            <param name="flags">Whether the <paramref name="type" /> and <paramref name="inheritedType" /> parameters contain valid object GUIDs.</param>
            <param name="type">A GUID that identifies the object type to which the new ACE applies.</param>
            <param name="inheritedType">A GUID that identifies the object type that can inherit the new ACE.</param>
            <param name="isCallback">
                <see langword="true" /> if the new ACE is a callback type ACE.</param>
            <param name="opaque">Opaque data associated with the new ACE. This is allowed only for callback ACE types. The length of this array must not be greater than the return value of the <see cref="M:System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)" /> method.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The qualifier parameter contains an invalid value or the length of the value of the opaque parameter is greater than the return value of the <see cref="M:System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)" /> method.</exception>
        </member>
        <member name="M:System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)">
            <summary>Marshals the contents of the <see cref="T:System.Security.AccessControl.ObjectAce" /> object into the specified byte array beginning at the specified offset.</summary>
            <param name="binaryForm">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.ObjectAce" /> is marshaled.</param>
            <param name="offset">The offset at which to start marshaling.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> is negative or too high to allow the entire <see cref="T:System.Security.AccessControl.ObjectAce" /> to be copied into <paramref name="array" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)">
            <summary>Returns the maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).</summary>
            <param name="isCallback">True if the <see cref="T:System.Security.AccessControl.ObjectAce" /> is a callback ACE type.</param>
            <returns>The maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectAce.BinaryLength">
            <summary>Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.ObjectAce" /> object. This length should be used before marshaling the ACL into a binary array with the <see cref="M:System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)" /> method.</summary>
            <returns>The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.ObjectAce" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectAce.InheritedObjectAceType">
            <summary>Gets or sets the GUID of the object type that can inherit the Access Control Entry (ACE) that this <see cref="T:System.Security.AccessControl.ObjectAce" /> object represents.</summary>
            <returns>The GUID of the object type that can inherit the Access Control Entry (ACE) that this <see cref="T:System.Security.AccessControl.ObjectAce" /> object represents.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectAce.ObjectAceFlags">
            <summary>Gets or sets flags that specify whether the <see cref="P:System.Security.AccessControl.ObjectAce.ObjectAceType" /> and <see cref="P:System.Security.AccessControl.ObjectAce.InheritedObjectAceType" /> properties contain values that identify valid object types.</summary>
            <returns>On or more members of the <see cref="T:System.Security.AccessControl.ObjectAceFlags" /> enumeration combined with a logical OR operation.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectAce.ObjectAceType">
            <summary>Gets or sets the GUID of the object type associated with this <see cref="T:System.Security.AccessControl.ObjectAce" /> object.</summary>
            <returns>The GUID of the object type associated with this <see cref="T:System.Security.AccessControl.ObjectAce" /> object.</returns>
        </member>
        <member name="T:System.Security.AccessControl.ObjectAceFlags">
            <summary>Specifies the presence of object types for Access Control Entries (ACEs).</summary>
        </member>
        <member name="F:System.Security.AccessControl.ObjectAceFlags.InheritedObjectAceTypePresent">
            <summary>The type of object that can inherit the ACE.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ObjectAceFlags.None">
            <summary>No object types are present.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ObjectAceFlags.ObjectAceTypePresent">
            <summary>The type of object that is associated with the ACE is present.</summary>
        </member>
        <member name="T:System.Security.AccessControl.ObjectAuditRule">
            <summary>Represents a combination of a user's identity, an access mask, and audit conditions. An <see cref="T:System.Security.AccessControl.ObjectAuditRule" /> object also contains information about the type of object to which the rule applies, the type of child object that can inherit the rule, how the rule is inherited by child objects, and how that inheritance is propagated.</summary>
        </member>
        <member name="M:System.Security.AccessControl.ObjectAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Guid,System.Guid,System.Security.AccessControl.AuditFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.ObjectAuditRule" /> class.</summary>
            <param name="identity">The identity to which the access rule applies.  It must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
            <param name="accessMask">The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</param>
            <param name="isInherited">
                <see langword="true" /> if this rule is inherited from a parent container.</param>
            <param name="inheritanceFlags">Specifies the inheritance properties of the access rule.</param>
            <param name="propagationFlags">Whether inherited access rules are automatically propagated. The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
            <param name="objectType">The type of object to which the rule applies.</param>
            <param name="inheritedObjectType">The type of child object that can inherit the rule.</param>
            <param name="auditFlags">The audit conditions.</param>
            <exception cref="T:System.ArgumentException">The value of the <paramref name="identity" /> parameter cannot be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />, or the <paramref name="type" /> parameter contains an invalid value.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The value of the <paramref name="accessMask" /> parameter is 0, or the <paramref name="inheritanceFlags" /> or <paramref name="propagationFlags" /> parameters contain unrecognized flag values.</exception>
        </member>
        <member name="P:System.Security.AccessControl.ObjectAuditRule.InheritedObjectType">
            <summary>Gets the type of child object that can inherit the <see cref="T:System.Security.AccessControl.ObjectAuditRule" /> object.</summary>
            <returns>The type of child object that can inherit the <see cref="T:System.Security.AccessControl.ObjectAuditRule" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectAuditRule.ObjectFlags">
            <summary>
                <see cref="P:System.Security.AccessControl.ObjectAuditRule.ObjectType" /> and <see cref="P:System.Security.AccessControl.ObjectAuditRule.InheritedObjectType" /> properties of the <see cref="T:System.Security.AccessControl.ObjectAuditRule" /> object contain valid values.</summary>
            <returns>
                <see cref="F:System.Security.AccessControl.ObjectAceFlags.ObjectAceTypePresent" /> specifies that the <see cref="P:System.Security.AccessControl.ObjectAuditRule.ObjectType" /> property contains a valid value. <see cref="F:System.Security.AccessControl.ObjectAceFlags.InheritedObjectAceTypePresent" /> specifies that the <see cref="P:System.Security.AccessControl.ObjectAuditRule.InheritedObjectType" /> property contains a valid value. These values can be combined with a logical OR.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectAuditRule.ObjectType">
            <summary>Gets the type of object to which the <see cref="T:System.Security.AccessControl.ObjectAuditRule" /> applies.</summary>
            <returns>The type of object to which the <see cref="T:System.Security.AccessControl.ObjectAuditRule" /> applies.</returns>
        </member>
        <member name="T:System.Security.AccessControl.ObjectSecurity">
            <summary>Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs). This class is the abstract base class for the <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> and <see cref="T:System.Security.AccessControl.DirectoryObjectSecurity" /> classes.</summary>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.ObjectSecurity" /> class.</summary>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.ObjectSecurity" /> class.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is a container object.</param>
            <param name="isDS">True if the new <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is a directory object.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.ObjectSecurity" /> class.</summary>
            <param name="securityDescriptor">The <see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /> of the new <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> instance.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.AccessRule" /> class with the specified values.</summary>
            <param name="identityReference">The identity to which the access rule applies.  It must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
            <param name="accessMask">The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</param>
            <param name="isInherited">true if this rule is inherited from a parent container.</param>
            <param name="inheritanceFlags">Specifies the inheritance properties of the access rule.</param>
            <param name="propagationFlags">Specifies whether inherited access rules are automatically propagated. The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
            <param name="type">Specifies the valid access control type.</param>
            <returns>The <see cref="T:System.Security.AccessControl.AccessRule" /> object that this method creates.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.AuditRule" /> class with the specified values.</summary>
            <param name="identityReference">The identity to which the audit rule applies.  It must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
            <param name="accessMask">The access mask of this rule. The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</param>
            <param name="isInherited">
                <see langword="true" /> if this rule is inherited from a parent container.</param>
            <param name="inheritanceFlags">Specifies the inheritance properties of the audit rule.</param>
            <param name="propagationFlags">Specifies whether inherited audit rules are automatically propagated. The propagation flags are ignored if <paramref name="inheritanceFlags" /> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</param>
            <param name="flags">Specifies the conditions for which the rule is audited.</param>
            <returns>The <see cref="T:System.Security.AccessControl.AuditRule" /> object that this method creates.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)">
            <summary>Gets the primary group associated with the specified owner.</summary>
            <param name="targetType">The owner for which to get the primary group.</param>
            <returns>The primary group associated with the specified owner.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
            <summary>Gets the owner associated with the specified primary group.</summary>
            <param name="targetType">The primary group for which to get the owner.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="targetType" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="targetType" /> is not an <see cref="T:System.Security.Principal.IdentityReference" /> type.</exception>
            <exception cref="T:System.Security.Principal.IdentityNotMappedException">Some or all identity references could not be translated.</exception>
            <exception cref="T:System.SystemException">A Win32 error code was returned.</exception>
            <returns>The owner associated with the specified group.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
            <summary>Returns an array of byte values that represents the security descriptor information for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</summary>
            <returns>An array of byte values that represents the security descriptor for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object. This method returns <see langword="null" /> if there is no security information in this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)">
            <summary>Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</summary>
            <param name="includeSections">Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.</param>
            <returns>The SDDL representation of the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported">
            <summary>Returns a Boolean value that specifies whether the security descriptor associated with this  <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object can be converted to the Security Descriptor Definition Language (SDDL) format.</summary>
            <returns>
                <see langword="true" /> if the security descriptor associated with this  <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
            <summary>Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</summary>
            <param name="modification">The modification to apply to the DACL.</param>
            <param name="rule">The access rule to modify.</param>
            <param name="modified">
                <see langword="true" /> if the DACL is successfully modified; otherwise, <see langword="false" />.</param>
            <returns>
                <see langword="true" /> if the DACL is successfully modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
            <summary>Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</summary>
            <param name="modification">The modification to apply to the DACL.</param>
            <param name="rule">The access rule to modify.</param>
            <param name="modified">
                <see langword="true" /> if the DACL is actually modified; otherwise, <see langword="false" />.</param>
            <returns>
                <see langword="true" /> if the DACL is successfully modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
            <summary>Applies the specified modification to the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</summary>
            <param name="modification">The modification to apply to the SACL.</param>
            <param name="rule">The audit rule to modify.</param>
            <param name="modified">
                <see langword="true" /> if the SACL is actually modified; otherwise, <see langword="false" />.</param>
            <returns>
                <see langword="true" /> if the SACL is successfully modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
            <summary>Applies the specified modification to the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</summary>
            <param name="modification">The modification to apply to the SACL.</param>
            <param name="rule">The audit rule to modify.</param>
            <param name="modified">
                <see langword="true" /> if the SACL is successfully modified; otherwise, <see langword="false" />.</param>
            <returns>
                <see langword="true" /> if the SACL is successfully modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>Saves the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object to permanent storage. We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</summary>
            <param name="enableOwnershipPrivilege">
                <see langword="true" /> to enable the privilege that allows the caller to take ownership of the object.</param>
            <param name="name">The name used to retrieve the persisted information.</param>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
            <summary>Saves the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object to permanent storage. We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</summary>
            <param name="handle">The handle used to retrieve the persisted information.</param>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>Saves the specified sections of the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object to permanent storage. We recommend that the values of the <paramref name="includeSections" /> parameters passed to the constructor and persist methods be identical.</summary>
            <param name="name">The name used to retrieve the persisted information.</param>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections" /> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
            <summary>Removes all access rules associated with the specified <see cref="T:System.Security.Principal.IdentityReference" />.</summary>
            <param name="identity">The <see cref="T:System.Security.Principal.IdentityReference" /> for which to remove all access rules.</param>
            <exception cref="T:System.InvalidOperationException">All access rules are not in canonical order.</exception>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
            <summary>Removes all audit rules associated with the specified <see cref="T:System.Security.Principal.IdentityReference" />.</summary>
            <param name="identity">The <see cref="T:System.Security.Principal.IdentityReference" /> for which to remove all audit rules.</param>
            <exception cref="T:System.InvalidOperationException">All audit rules are not in canonical order.</exception>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.ReadLock">
            <summary>Locks this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object for read access.</summary>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock">
            <summary>Unlocks this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object for read access.</summary>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
            <summary>Sets or removes protection of the access rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object. Protected access rules cannot be modified by parent objects through inheritance.</summary>
            <param name="isProtected">
                <see langword="true" /> to protect the access rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from inheritance; <see langword="false" /> to allow inheritance.</param>
            <param name="preserveInheritance">
                <see langword="true" /> to preserve inherited access rules; <see langword="false" /> to remove inherited access rules. This parameter is ignored if <paramref name="isProtected" /> is <see langword="false" />.</param>
            <exception cref="T:System.InvalidOperationException">This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).</exception>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
            <summary>Sets or removes protection of the audit rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object. Protected audit rules cannot be modified by parent objects through inheritance.</summary>
            <param name="isProtected">
                <see langword="true" /> to protect the audit rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from inheritance; <see langword="false" /> to allow inheritance.</param>
            <param name="preserveInheritance">
                <see langword="true" /> to preserve inherited audit rules; <see langword="false" /> to remove inherited audit rules. This parameter is ignored if <paramref name="isProtected" /> is <see langword="false" />.</param>
            <exception cref="T:System.InvalidOperationException">This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).</exception>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)">
            <summary>Sets the primary group for the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</summary>
            <param name="identity">The primary group to set.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)">
            <summary>Sets the owner for the security descriptor associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</summary>
            <param name="identity">The owner to set.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
            <summary>Sets the security descriptor for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from the specified array of byte values.</summary>
            <param name="binaryForm">The array of bytes from which to set the security descriptor.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
            <summary>Sets the specified sections of the security descriptor for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from the specified array of byte values.</summary>
            <param name="binaryForm">The array of bytes from which to set the security descriptor.</param>
            <param name="includeSections">The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
            <summary>Sets the security descriptor for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from the specified Security Descriptor Definition Language (SDDL) string.</summary>
            <param name="sddlForm">The SDDL string from which to set the security descriptor.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>Sets the specified sections of the security descriptor for this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object from the specified Security Descriptor Definition Language (SDDL) string.</summary>
            <param name="sddlForm">The SDDL string from which to set the security descriptor.</param>
            <param name="includeSections">The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.WriteLock">
            <summary>Locks this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object for write access.</summary>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock">
            <summary>Unlocks this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object for write access.</summary>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
            <summary>Gets the <see cref="T:System.Type" /> of the securable object associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</summary>
            <returns>The type of the securable object associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified">
            <summary>Gets or sets a Boolean value that specifies whether the access rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object have been modified.</summary>
            <returns>
                <see langword="true" /> if the access rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object have been modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
            <summary>Gets the <see cref="T:System.Type" /> of the object associated with the access rules of this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object. The <see cref="T:System.Type" /> object must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
            <returns>The type of the object associated with the access rules of this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical">
            <summary>Gets a Boolean value that specifies whether the access rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object are in canonical order.</summary>
            <returns>
                <see langword="true" /> if the access rules are in canonical order; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected">
            <summary>Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is protected.</summary>
            <returns>
                <see langword="true" /> if the DACL is protected; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical">
            <summary>Gets a Boolean value that specifies whether the audit rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object are in canonical order.</summary>
            <returns>
                <see langword="true" /> if the audit rules are in canonical order; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected">
            <summary>Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is protected.</summary>
            <returns>
                <see langword="true" /> if the SACL is protected; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified">
            <summary>Gets or sets a Boolean value that specifies whether the audit rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object have been modified.</summary>
            <returns>
                <see langword="true" /> if the audit rules associated with this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object have been modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
            <summary>Gets the <see cref="T:System.Type" /> object associated with the audit rules of this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object. The <see cref="T:System.Type" /> object must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
            <returns>The type of the object associated with the audit rules of this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.GroupModified">
            <summary>Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.</summary>
            <returns>
                <see langword="true" /> if the group associated with the securable object has been modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.IsContainer">
            <summary>Gets a Boolean value that specifies whether this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is a container object.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is a container object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.IsDS">
            <summary>Gets a Boolean value that specifies whether this <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is a directory object.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Security.AccessControl.ObjectSecurity" /> object is a directory object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.OwnerModified">
            <summary>Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.</summary>
            <returns>
                <see langword="true" /> if the owner of the securable object has been modified; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity.SecurityDescriptor">
            <summary>Gets the security descriptor for this instance.</summary>
            <returns>The security descriptor for this instance.</returns>
        </member>
        <member name="T:System.Security.AccessControl.ObjectSecurity`1">
            <summary>Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs); also grants the ability to type-cast access rights.</summary>
            <typeparam name="T">The access rights for the object.</typeparam>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)">
            <summary>Initializes a new instance of the ObjectSecurity`1 class.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.ObjectSecurity`1" /> object is a container object.</param>
            <param name="resourceType">The type of resource.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
            <summary>Initializes a new instance of the ObjectSecurity`1 class.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.ObjectSecurity`1" /> object is a container object.</param>
            <param name="resourceType">The type of resource.</param>
            <param name="safeHandle">A handle.</param>
            <param name="includeSections">The sections to include.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)">
            <summary>Initializes a new instance of the ObjectSecurity`1 class.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.ObjectSecurity`1" /> object is a container object.</param>
            <param name="resourceType">The type of resource.</param>
            <param name="safeHandle">A handle.</param>
            <param name="includeSections">The sections to include.</param>
            <param name="exceptionFromErrorCode">A delegate implemented by integrators that provides custom exceptions.</param>
            <param name="exceptionContext">An object that contains contextual information about the source or destination of the exception.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>Initializes a new instance of the ObjectSecurity`1 class.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.ObjectSecurity`1" /> object is a container object.</param>
            <param name="resourceType">The type of resource.</param>
            <param name="name">The name of the securable object with which the new <see cref="T:System.Security.AccessControl.ObjectSecurity`1" /> object is associated.</param>
            <param name="includeSections">The sections to include.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)">
            <summary>Initializes a new instance of the ObjectSecurity`1 class.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.ObjectSecurity`1" /> object is a container object.</param>
            <param name="resourceType">The type of resource.</param>
            <param name="name">The name of the securable object with which the new <see cref="T:System.Security.AccessControl.ObjectSecurity`1" /> object is associated.</param>
            <param name="includeSections">The sections to include.</param>
            <param name="exceptionFromErrorCode">A delegate implemented by integrators that provides custom exceptions.</param>
            <param name="exceptionContext">An object that contains contextual information about the source or destination of the exception.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
            <summary>Initializes a new instance of the ObjectAccessRule class that represents a new access control rule for the associated security object.</summary>
            <param name="identityReference">Represents a user account.</param>
            <param name="accessMask">The access type.</param>
            <param name="isInherited">
                <see langword="true" /> if the access rule is inherited; otherwise, <see langword="false" />.</param>
            <param name="inheritanceFlags">Specifies how to propagate access masks to child objects.</param>
            <param name="propagationFlags">Specifies how to propagate Access Control Entries (ACEs) to child objects.</param>
            <param name="type">Specifies whether access is allowed or denied.</param>
            <returns>Represents a new access control rule for the specified user, with the specified access rights, access control, and flags.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.AddAccessRule(System.Security.AccessControl.AccessRule{`0})">
            <summary>Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.</summary>
            <param name="rule">The rule to add.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.AddAuditRule(System.Security.AccessControl.AuditRule{`0})">
            <summary>Adds the specified audit rule to the System Access Control List (SACL) associated with this ObjectSecurity`1 object.</summary>
            <param name="rule">The audit rule to add.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.AuditRule" /> class representing the specified audit rule for the specified user.</summary>
            <param name="identityReference">Represents a user account.</param>
            <param name="accessMask">An integer that specifies an access type.</param>
            <param name="isInherited">
                <see langword="true" /> if the access rule is inherited; otherwise, <see langword="false" />.</param>
            <param name="inheritanceFlags">Specifies how to propagate access masks to child objects.</param>
            <param name="propagationFlags">Specifies how to propagate Access Control Entries (ACEs) to child objects.</param>
            <param name="flags">Describes the type of auditing to perform.</param>
            <returns>The specified audit rule for the specified user.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.Persist(System.Runtime.InteropServices.SafeHandle)">
            <summary>Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified handle.</summary>
            <param name="handle">The handle of the securable object with which this ObjectSecurity`1 object is associated.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.Persist(System.String)">
            <summary>Saves the security descriptor associated with this ObjectSecurity`1 object to permanent storage, using the specified name.</summary>
            <param name="name">The name of the securable object with which this ObjectSecurity`1 object is associated.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRule(System.Security.AccessControl.AccessRule{`0})">
            <summary>Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.</summary>
            <param name="rule">The rule to remove.</param>
            <returns>
                <see langword="true" /> if the access rule was successfully removed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule{`0})">
            <summary>Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.</summary>
            <param name="rule">The access rule to remove.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule{`0})">
            <summary>Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object.</summary>
            <param name="rule">The access rule to remove.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRule(System.Security.AccessControl.AuditRule{`0})">
            <summary>Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.</summary>
            <param name="rule">The audit rule to remove</param>
            <returns>
                <see langword="true" /> if the object was removed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule{`0})">
            <summary>Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.</summary>
            <param name="rule">The audit rule to remove.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule{`0})">
            <summary>Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this ObjectSecurity`1 object.</summary>
            <param name="rule">The audit rule to remove.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.ResetAccessRule(System.Security.AccessControl.AccessRule{`0})">
            <summary>Removes all access rules in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.</summary>
            <param name="rule">The access rule to reset.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.SetAccessRule(System.Security.AccessControl.AccessRule{`0})">
            <summary>Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this ObjectSecurity`1 object and then adds the specified access rule.</summary>
            <param name="rule">The access rule to set.</param>
        </member>
        <member name="M:System.Security.AccessControl.ObjectSecurity`1.SetAuditRule(System.Security.AccessControl.AuditRule{`0})">
            <summary>Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this ObjectSecurity`1 object and then adds the specified audit rule.</summary>
            <param name="rule">The audit rule to set.</param>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity`1.AccessRightType">
            <summary>Gets the Type of the securable object associated with this ObjectSecurity`1 object.</summary>
            <returns>The type of the securable object associated with the current instance.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity`1.AccessRuleType">
            <summary>Gets the Type of the object associated with the access rules of this ObjectSecurity`1 object.</summary>
            <returns>The Type of the object associated with the access rules of the current instance.</returns>
        </member>
        <member name="P:System.Security.AccessControl.ObjectSecurity`1.AuditRuleType">
            <summary>Gets the Type object associated with the audit rules of this ObjectSecurity`1 object.</summary>
            <returns>The Type object associated with the audit rules of the current instance.</returns>
        </member>
        <member name="T:System.Security.AccessControl.PrivilegeNotHeldException">
            <summary>The exception that is thrown when a method in the <see cref="N:System.Security.AccessControl" /> namespace attempts to enable a privilege that it does not have.</summary>
        </member>
        <member name="M:System.Security.AccessControl.PrivilegeNotHeldException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.PrivilegeNotHeldException" /> class.</summary>
        </member>
        <member name="M:System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.PrivilegeNotHeldException" /> class by using the specified privilege.</summary>
            <param name="privilege">The privilege that is not enabled.</param>
        </member>
        <member name="M:System.Security.AccessControl.PrivilegeNotHeldException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.PrivilegeNotHeldException" /> class by using the specified exception.</summary>
            <param name="privilege">The privilege that is not enabled.</param>
            <param name="inner">The exception that is the cause of the current exception. If the <c>innerException</c> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</param>
        </member>
        <member name="M:System.Security.AccessControl.PrivilegeNotHeldException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <paramref name="info" /> parameter with information about the exception.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:System.Security.AccessControl.PrivilegeNotHeldException.PrivilegeName">
            <summary>Gets the name of the privilege that is not enabled.</summary>
            <returns>The name of the privilege that the method failed to enable.</returns>
        </member>
        <member name="T:System.Security.AccessControl.PropagationFlags">
            <summary>Specifies how Access Control Entries (ACEs) are propagated to child objects.  These flags are significant only if inheritance flags are present.</summary>
        </member>
        <member name="F:System.Security.AccessControl.PropagationFlags.InheritOnly">
            <summary>Specifies that the ACE is propagated only to child objects. This includes both container and leaf child objects.</summary>
        </member>
        <member name="F:System.Security.AccessControl.PropagationFlags.None">
            <summary>Specifies that no inheritance flags are set.</summary>
        </member>
        <member name="F:System.Security.AccessControl.PropagationFlags.NoPropagateInherit">
            <summary>Specifies that the ACE is not propagated to child objects.</summary>
        </member>
        <member name="T:System.Security.AccessControl.QualifiedAce">
            <summary>Represents an Access Control Entry (ACE) that contains a qualifier. The qualifier, represented by an <see cref="T:System.Security.AccessControl.AceQualifier" /> object, specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms. The <see cref="T:System.Security.AccessControl.QualifiedAce" /> class is the abstract base class for the <see cref="T:System.Security.AccessControl.CommonAce" /> and <see cref="T:System.Security.AccessControl.ObjectAce" /> classes.</summary>
        </member>
        <member name="M:System.Security.AccessControl.QualifiedAce.GetOpaque">
            <summary>Returns the opaque callback data associated with this <see cref="T:System.Security.AccessControl.QualifiedAce" /> object.</summary>
            <returns>An array of byte values that represents the opaque callback data associated with this <see cref="T:System.Security.AccessControl.QualifiedAce" /> object.</returns>
        </member>
        <member name="M:System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])">
            <summary>Sets the opaque callback data associated with this <see cref="T:System.Security.AccessControl.QualifiedAce" /> object.</summary>
            <param name="opaque">An array of byte values that represents the opaque callback data for this <see cref="T:System.Security.AccessControl.QualifiedAce" /> object.</param>
        </member>
        <member name="P:System.Security.AccessControl.QualifiedAce.AceQualifier">
            <summary>Gets a value that specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.</summary>
            <returns>A value that specifies whether the ACE allows access, denies access, causes system audits, or causes system alarms.</returns>
        </member>
        <member name="P:System.Security.AccessControl.QualifiedAce.IsCallback">
            <summary>Specifies whether this <see cref="T:System.Security.AccessControl.QualifiedAce" /> object contains callback data.</summary>
            <returns>
                <see langword="true" /> if this <see cref="T:System.Security.AccessControl.QualifiedAce" /> object contains callback data; otherwise, false.</returns>
        </member>
        <member name="P:System.Security.AccessControl.QualifiedAce.OpaqueLength">
            <summary>Gets the length of the opaque callback data associated with this <see cref="T:System.Security.AccessControl.QualifiedAce" /> object. This property is valid only for callback Access Control Entries (ACEs).</summary>
            <returns>The length of the opaque callback data.</returns>
        </member>
        <member name="T:System.Security.AccessControl.RawAcl">
            <summary>Represents an Access Control List (ACL).</summary>
        </member>
        <member name="M:System.Security.AccessControl.RawAcl.#ctor(System.Byte,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RawAcl" /> class with the specified revision level.</summary>
            <param name="revision">The revision level of the new Access Control List (ACL).</param>
            <param name="capacity">The number of Access Control Entries (ACEs) this <see cref="T:System.Security.AccessControl.RawAcl" /> object can contain. This number is to be used only as a hint.</param>
        </member>
        <member name="M:System.Security.AccessControl.RawAcl.#ctor(System.Byte[],System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RawAcl" /> class from the specified binary form.</summary>
            <param name="binaryForm">An array of byte values that represent an Access Control List (ACL).</param>
            <param name="offset">The offset in the <paramref name="binaryForm" /> parameter at which to begin unmarshaling data.</param>
        </member>
        <member name="M:System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)">
            <summary>Marshals the contents of the <see cref="T:System.Security.AccessControl.RawAcl" /> object into the specified byte array beginning at the specified offset.</summary>
            <param name="binaryForm">The byte array into which the contents of the <see cref="T:System.Security.AccessControl.RawAcl" /> is marshaled.</param>
            <param name="offset">The offset at which to start marshaling.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> is negative or too high to allow the entire <see cref="T:System.Security.AccessControl.RawAcl" /> to be copied into <paramref name="array" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RawAcl.InsertAce(System.Int32,System.Security.AccessControl.GenericAce)">
            <summary>Inserts the specified Access Control Entry (ACE) at the specified index.</summary>
            <param name="index">The position at which to add the new ACE. Specify the value of the <see cref="P:System.Security.AccessControl.RawAcl.Count" /> property to insert an ACE at the end of the <see cref="T:System.Security.AccessControl.RawAcl" /> object.</param>
            <param name="ace">The ACE to insert.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset" /> is negative or too high to allow the entire <see cref="T:System.Security.AccessControl.GenericAcl" /> to be copied into <paramref name="array" />.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RawAcl.RemoveAce(System.Int32)">
            <summary>Removes the Access Control Entry (ACE) at the specified location.</summary>
            <param name="index">The zero-based index of the ACE to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The value of the <paramref name="index" /> parameter is higher than the value of the <see cref="P:System.Security.AccessControl.RawAcl.Count" /> property minus one or is negative.</exception>
        </member>
        <member name="P:System.Security.AccessControl.RawAcl.BinaryLength">
            <summary>Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.RawAcl" /> object. This length should be used before marshaling the ACL into a binary array with the <see cref="M:System.Security.AccessControl.RawAcl.GetBinaryForm(System.Byte[],System.Int32)" /> method.</summary>
            <returns>The length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.RawAcl" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.RawAcl.Count">
            <summary>Gets the number of access control entries (ACEs) in the current <see cref="T:System.Security.AccessControl.RawAcl" /> object.</summary>
            <returns>The number of ACEs in the current <see cref="T:System.Security.AccessControl.RawAcl" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.RawAcl.Item(System.Int32)">
            <summary>Gets or sets the Access Control Entry (ACE) at the specified index.</summary>
            <param name="index">The zero-based index of the ACE to get or set.</param>
            <returns>The ACE at the specified index.</returns>
        </member>
        <member name="P:System.Security.AccessControl.RawAcl.Revision">
            <summary>Gets the revision level of the <see cref="T:System.Security.AccessControl.RawAcl" />.</summary>
            <returns>A byte value that specifies the revision level of the <see cref="T:System.Security.AccessControl.RawAcl" />.</returns>
        </member>
        <member name="T:System.Security.AccessControl.RawSecurityDescriptor">
            <summary>Represents a security descriptor. A security descriptor includes an owner, a primary group, a Discretionary Access Control List (DACL), and a System Access Control List (SACL).</summary>
        </member>
        <member name="M:System.Security.AccessControl.RawSecurityDescriptor.#ctor(System.Byte[],System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> class from the specified array of byte values.</summary>
            <param name="binaryForm">The array of byte values from which to create the new <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</param>
            <param name="offset">The offset in the  <paramref name="binaryForm" /> array at which to begin copying.</param>
        </member>
        <member name="M:System.Security.AccessControl.RawSecurityDescriptor.#ctor(System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.RawAcl,System.Security.AccessControl.RawAcl)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> class with the specified values.</summary>
            <param name="flags">Flags that specify behavior of the new <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</param>
            <param name="owner">The owner for the new <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</param>
            <param name="group">The primary group for the new <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</param>
            <param name="systemAcl">The System Access Control List (SACL) for the new <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</param>
            <param name="discretionaryAcl">The Discretionary Access Control List (DACL) for the new <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</param>
        </member>
        <member name="M:System.Security.AccessControl.RawSecurityDescriptor.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> class from the specified Security Descriptor Definition Language (SDDL) string.</summary>
            <param name="sddlForm">The SDDL string from which to create the new <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</param>
            <exception cref="T:System.ArgumentException">The SDDL form of a security descriptor object is invalid.</exception>
        </member>
        <member name="M:System.Security.AccessControl.RawSecurityDescriptor.SetFlags(System.Security.AccessControl.ControlFlags)">
            <summary>Sets the <see cref="P:System.Security.AccessControl.RawSecurityDescriptor.ControlFlags" /> property of this <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object to the specified value.</summary>
            <param name="flags">One or more values of the <see cref="T:System.Security.AccessControl.ControlFlags" /> enumeration combined with a logical OR operation.</param>
        </member>
        <member name="P:System.Security.AccessControl.RawSecurityDescriptor.ControlFlags">
            <summary>Gets values that specify behavior of the <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</summary>
            <returns>One or more values of the <see cref="T:System.Security.AccessControl.ControlFlags" /> enumeration combined with a logical OR operation.</returns>
        </member>
        <member name="P:System.Security.AccessControl.RawSecurityDescriptor.DiscretionaryAcl">
            <summary>Gets or sets the Discretionary Access Control List (DACL) for this <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object. The DACL contains access rules.</summary>
            <returns>The DACL for this <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.RawSecurityDescriptor.Group">
            <summary>Gets or sets the primary group for this <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</summary>
            <returns>The primary group for this <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.RawSecurityDescriptor.Owner">
            <summary>Gets or sets the owner of the object associated with this <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</summary>
            <returns>The owner of the object associated with this <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.RawSecurityDescriptor.ResourceManagerControl">
            <summary>Gets or sets a byte value that represents the resource manager control bits associated with this <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</summary>
            <returns>A byte value that represents the resource manager control bits associated with this <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</returns>
        </member>
        <member name="P:System.Security.AccessControl.RawSecurityDescriptor.SystemAcl">
            <summary>Gets or sets the System Access Control List (SACL) for this <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object. The SACL contains audit rules.</summary>
            <returns>The SACL for this <see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /> object.</returns>
        </member>
        <member name="T:System.Security.AccessControl.ResourceType">
            <summary>Specifies the defined native object types.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.DSObject">
            <summary>A directory service (DS) object or a property set or property of a directory service object.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.DSObjectAll">
            <summary>A directory service object and all of its property sets and properties.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.FileObject">
            <summary>A file or directory.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.KernelObject">
            <summary>A local kernel object.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.LMShare">
            <summary>A network share.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.Printer">
            <summary>A printer.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.ProviderDefined">
            <summary>An object defined by a provider.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.RegistryKey">
            <summary>A registry key.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.RegistryWow6432Key">
            <summary>An object for a registry entry under WOW64.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.Service">
            <summary>A Windows service.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.Unknown">
            <summary>An unknown object type.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.WindowObject">
            <summary>A window station or desktop object on the local computer.</summary>
        </member>
        <member name="F:System.Security.AccessControl.ResourceType.WmiGuidObject">
            <summary>A Windows Management Instrumentation (WMI) object.</summary>
        </member>
        <member name="T:System.Security.AccessControl.SecurityInfos">
            <summary>Specifies the section of a security descriptor to be queried or set.</summary>
        </member>
        <member name="F:System.Security.AccessControl.SecurityInfos.DiscretionaryAcl">
            <summary>Specifies the discretionary access control list (DACL).</summary>
        </member>
        <member name="F:System.Security.AccessControl.SecurityInfos.Group">
            <summary>Specifies the primary group identifier.</summary>
        </member>
        <member name="F:System.Security.AccessControl.SecurityInfos.Owner">
            <summary>Specifies the owner identifier.</summary>
        </member>
        <member name="F:System.Security.AccessControl.SecurityInfos.SystemAcl">
            <summary>Specifies the system access control list (SACL).</summary>
        </member>
        <member name="T:System.Security.AccessControl.SystemAcl">
            <summary>Represents a System Access Control List (SACL).</summary>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Byte,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SystemAcl" /> class with the specified values.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.SystemAcl" /> object is a container.</param>
            <param name="isDS">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.SystemAcl" /> object is a directory object Access Control List (ACL).</param>
            <param name="revision">The revision level of the new <see cref="T:System.Security.AccessControl.SystemAcl" /> object.</param>
            <param name="capacity">The number of Access Control Entries (ACEs) this <see cref="T:System.Security.AccessControl.SystemAcl" /> object can contain. This number is to be used only as a hint.</param>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SystemAcl" /> class with the specified values.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.SystemAcl" /> object is a container.</param>
            <param name="isDS">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.SystemAcl" /> object is a directory object Access Control List (ACL).</param>
            <param name="capacity">The number of Access Control Entries (ACEs) this <see cref="T:System.Security.AccessControl.SystemAcl" /> object can contain. This number is to be used only as a hint.</param>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawAcl)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.SystemAcl" /> class with the specified values from the specified <see cref="T:System.Security.AccessControl.RawAcl" /> object.</summary>
            <param name="isContainer">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.SystemAcl" /> object is a container.</param>
            <param name="isDS">
                <see langword="true" /> if the new <see cref="T:System.Security.AccessControl.SystemAcl" /> object is a directory object Access Control List (ACL).</param>
            <param name="rawAcl">The underlying <see cref="T:System.Security.AccessControl.RawAcl" /> object for the new <see cref="T:System.Security.AccessControl.SystemAcl" /> object. Specify <see langword="null" /> to create an empty ACL.</param>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)">
            <summary>Adds an audit rule to the current <see cref="T:System.Security.AccessControl.SystemAcl" /> object.</summary>
            <param name="auditFlags">The type of audit rule to add.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to add an audit rule.</param>
            <param name="accessMask">The access mask for the new audit rule.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the new audit rule.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the new audit rule.</param>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.AddAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)">
            <summary>Adds an audit rule with the specified settings to the current <see cref="T:System.Security.AccessControl.SystemAcl" /> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type for the new audit rule.</summary>
            <param name="auditFlags">The type of audit rule to add.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to add an audit rule.</param>
            <param name="accessMask">The access mask for the new audit rule.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the new audit rule.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the new audit rule.</param>
            <param name="objectFlags">Flags that specify if the <paramref name="objectType" /> and <paramref name="inheritedObjectType" /> parameters contain non-<see langword="null" /> values.</param>
            <param name="objectType">The identity of the class of objects to which the new audit rule applies.</param>
            <param name="inheritedObjectType">The identity of the class of child objects which can inherit the new audit rule.</param>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.AddAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)">
            <summary>Adds an audit rule to the current <see cref="T:System.Security.AccessControl.SystemAcl" /> object.</summary>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to add an audit rule.</param>
            <param name="rule">The <see cref="T:System.Security.AccessControl.ObjectAuditRule" /> for the new audit rule.</param>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)">
            <summary>Removes the specified audit rule from the current <see cref="T:System.Security.AccessControl.SystemAcl" /> object.</summary>
            <param name="auditFlags">The type of audit rule to remove.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to remove an audit rule.</param>
            <param name="accessMask">The access mask for the rule to be removed.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the rule to be removed.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the rule to be removed.</param>
            <returns>
                <see langword="true" /> if this method successfully removes the specified audit rule; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)">
            <summary>Removes the specified audit rule from the current <see cref="T:System.Security.AccessControl.SystemAcl" /> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</summary>
            <param name="auditFlags">The type of audit rule to remove.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to remove an audit rule.</param>
            <param name="accessMask">The access mask for the rule to be removed.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the rule to be removed.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the rule to be removed.</param>
            <param name="objectFlags">Flags that specify if the <paramref name="objectType" /> and <paramref name="inheritedObjectType" /> parameters contain non-<see langword="null" /> values.</param>
            <param name="objectType">The identity of the class of objects to which the removed audit control rule applies.</param>
            <param name="inheritedObjectType">The identity of the class of child objects which can inherit the removed audit rule.</param>
            <returns>
                <see langword="true" /> if this method successfully removes the specified audit rule; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.RemoveAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)">
            <summary>Removes the specified audit rule from the current <see cref="T:System.Security.AccessControl.SystemAcl" /> object.</summary>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to remove an audit rule.</param>
            <param name="rule">The <see cref="T:System.Security.AccessControl.ObjectAuditRule" /> for which to remove an audit rule.</param>
            <returns>
                <see langword="true" /> if this method successfully removes the specified audit rule; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)">
            <summary>Removes the specified audit rule from the current <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object.</summary>
            <param name="auditFlags">The type of audit rule to remove.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to remove an audit rule.</param>
            <param name="accessMask">The access mask for the rule to be removed.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the rule to be removed.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the rule to be removed.</param>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)">
            <summary>Removes the specified audit rule from the current <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</summary>
            <param name="auditFlags">The type of audit rule to remove.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to remove an audit rule.</param>
            <param name="accessMask">The access mask for the rule to be removed.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the rule to be removed.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the rule to be removed.</param>
            <param name="objectFlags">Flags that specify if the <paramref name="objectType" /> and <paramref name="inheritedObjectType" /> parameters contain non-<see langword="null" /> values.</param>
            <param name="objectType">The identity of the class of objects to which the removed audit control rule applies.</param>
            <param name="inheritedObjectType">The identity of the class of child objects which can inherit the removed audit rule.</param>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.RemoveAuditSpecific(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)">
            <summary>Removes the specified audit rule from the current <see cref="T:System.Security.AccessControl.DiscretionaryAcl" /> object.</summary>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to remove an audit rule.</param>
            <param name="rule">The <see cref="T:System.Security.AccessControl.ObjectAuditRule" /> for the rule to be removed.</param>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags)">
            <summary>Sets the specified audit rule for the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
            <param name="auditFlags">The audit condition to set.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to set an audit rule.</param>
            <param name="accessMask">The access mask for the new audit rule.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the new audit rule.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the new audit rule.</param>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.SetAudit(System.Security.AccessControl.AuditFlags,System.Security.Principal.SecurityIdentifier,System.Int32,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid)">
            <summary>Sets the specified audit rule for the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object. Use this method for directory object Access Control Lists (ACLs) when specifying the object type or the inherited object type.</summary>
            <param name="auditFlags">The audit condition to set.</param>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to set an audit rule.</param>
            <param name="accessMask">The access mask for the new audit rule.</param>
            <param name="inheritanceFlags">Flags that specify the inheritance properties of the new audit rule.</param>
            <param name="propagationFlags">Flags that specify the inheritance propagation properties for the new audit rule.</param>
            <param name="objectFlags">Flags that specify if the <paramref name="objectType" /> and <paramref name="inheritedObjectType" /> parameters contain non-<see langword="null" /> values.</param>
            <param name="objectType">The identity of the class of objects to which the new audit rule applies.</param>
            <param name="inheritedObjectType">The identity of the class of child objects which can inherit the new audit rule.</param>
        </member>
        <member name="M:System.Security.AccessControl.SystemAcl.SetAudit(System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAuditRule)">
            <summary>Sets the specified audit rule for the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
            <param name="sid">The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for which to set an audit rule.</param>
            <param name="rule">The <see cref="T:System.Security.AccessControl.ObjectAuditRule" /> for which to set an audit rule.</param>
        </member>
        <member name="T:System.Security.Cryptography.DataProtectionScope">
            <summary>Specifies the scope of the data protection to be applied by the <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> method.</summary>
        </member>
        <member name="F:System.Security.Cryptography.DataProtectionScope.CurrentUser">
            <summary>The protected data is associated with the current user. Only threads running under the current user context can unprotect the data.</summary>
        </member>
        <member name="F:System.Security.Cryptography.DataProtectionScope.LocalMachine">
            <summary>The protected data is associated with the machine context. Any process running on the computer can unprotect data. This enumeration value is usually used in server-specific applications that run on a server where untrusted users are not allowed access.</summary>
        </member>
        <member name="T:System.Security.Cryptography.ProtectedData">
            <summary>Provides methods for encrypting and decrypting data. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)">
            <summary>Encrypts the data in a specified byte array and returns a byte array that contains the encrypted data.</summary>
            <param name="userData">A byte array that contains data to encrypt.</param>
            <param name="optionalEntropy">An optional additional byte array used to increase the complexity of the encryption, or <see langword="null" /> for no additional complexity.</param>
            <param name="scope">One of the enumeration values that specifies the scope of encryption.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="userData" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The encryption failed.</exception>
            <exception cref="T:System.NotSupportedException">The operating system does not support this method.</exception>
            <exception cref="T:System.OutOfMemoryException">The system ran out of memory while encrypting the data.</exception>
            <exception cref="T:System.PlatformNotSupportedException">.NET Core only: Calls to the <c>Protect</c> method are supported on Windows operating systems only.</exception>
            <returns>A byte array representing the encrypted data.</returns>
        </member>
        <member name="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)">
            <summary>Decrypts the data in a specified byte array and returns a byte array that contains the decrypted data.</summary>
            <param name="encryptedData">A byte array containing data encrypted using the <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> method.</param>
            <param name="optionalEntropy">An optional additional byte array that was used to encrypt the data, or <see langword="null" /> if the additional byte array was not used.</param>
            <param name="scope">One of the enumeration values that specifies the scope of data protection that was used to encrypt the data.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="encryptedData" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException">The decryption failed.</exception>
            <exception cref="T:System.NotSupportedException">The operating system does not support this method.</exception>
            <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
            <exception cref="T:System.PlatformNotSupportedException">.NET Core only: Calls to the <c>Unprotect</c> method are supported on Windows operating systems only.</exception>
            <returns>A byte array representing the decrypted data.</returns>
        </member>
        <member name="T:System.ApplicationIdentity">
            <summary>Provides the ability to uniquely identify a manifest-activated application. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.ApplicationIdentity.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.ApplicationIdentity" /> class.</summary>
            <param name="applicationIdentityFullName">The full name of the application.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="applicationIdentityFullName" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the target object.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />) structure for the serialization.</param>
        </member>
        <member name="M:System.ApplicationIdentity.ToString">
            <summary>Returns the full name of the manifest-activated application.</summary>
            <returns>The full name of the manifest-activated application.</returns>
        </member>
        <member name="P:System.ApplicationIdentity.CodeBase">
            <summary>Gets the location of the deployment manifest as a URL.</summary>
            <returns>The URL of the deployment manifest.</returns>
        </member>
        <member name="P:System.ApplicationIdentity.FullName">
            <summary>Gets the full name of the application.</summary>
            <returns>The full name of the application, also known as the display name.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationPermission">
            <summary>Provides a permission structure that allows methods or classes to access configuration files.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationPermission" /> class.</summary>
            <param name="state">The permission level to grant.</param>
            <exception cref="T:System.ArgumentException">The value of <paramref name="state" /> is neither <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> nor <see cref="F:System.Security.Permissions.PermissionState.None" />.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationPermission.Copy">
            <summary>Returns a new <see cref="T:System.Configuration.ConfigurationPermission" /> object with the same permission level.</summary>
            <returns>A new <see cref="T:System.Configuration.ConfigurationPermission" /> with the same permission level.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reads the value of the permission state from XML.</summary>
            <param name="securityElement">The configuration element from which the permission state is read.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="securityElement" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see langword="unrestricted" /> attribute for the given <paramref name="securityElement" /> is neither <see langword="true" /> nor <see langword="false" />.

-or-

The <see cref="P:System.Security.SecurityElement.Tag" /> for the given <paramref name="securityElement" /> does not equal "IPermission".

-or-

The <see langword="class" /> attribute of the given <paramref name="securityElement " /> is <see langword="null" /> or is not the type name for <see cref="T:System.Configuration.ConfigurationPermission" />.

-or-

The <see langword="version" /> attribute for the given <paramref name="securityElement" /> does not equal 1.</exception>
        </member>
        <member name="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)">
            <summary>Returns the logical intersection between the <see cref="T:System.Configuration.ConfigurationPermission" /> object and a given object that implements the <see cref="T:System.Security.IPermission" /> interface.</summary>
            <param name="target">The object containing the permissions to perform the intersection with.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not typed as <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
            <returns>The logical intersection between the <see cref="T:System.Configuration.ConfigurationPermission" /> and a given object that implements <see cref="T:System.Security.IPermission" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Compares the <see cref="T:System.Configuration.ConfigurationPermission" /> object with an object implementing the <see cref="T:System.Security.IPermission" /> interface.</summary>
            <param name="target">The object to compare to.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not typed as <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
            <returns>
                <see langword="true" /> if the permission state is equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationPermission.IsUnrestricted">
            <summary>Indicates whether the permission state for the <see cref="T:System.Configuration.ConfigurationPermission" /> object is the <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> value of the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</summary>
            <returns>
                <see langword="true" /> if the permission state for the <see cref="T:System.Configuration.ConfigurationPermission" /> is the <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> value of <see cref="T:System.Security.Permissions.PermissionState" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationPermission.ToXml">
            <summary>Returns a <see cref="T:System.Security.SecurityElement" /> object with attribute values based on the current <see cref="T:System.Configuration.ConfigurationPermission" /> object.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> with attribute values based on the current <see cref="T:System.Configuration.ConfigurationPermission" />.</returns>
        </member>
        <member name="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)">
            <summary>Returns the logical union of the <see cref="T:System.Configuration.ConfigurationPermission" /> object and an object that implements the <see cref="T:System.Security.IPermission" /> interface.</summary>
            <param name="target">The object to perform the union with.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not typed as <see cref="T:System.Configuration.ConfigurationPermission" />.</exception>
            <returns>The logical union of the <see cref="T:System.Configuration.ConfigurationPermission" /> and an object that implements <see cref="T:System.Security.IPermission" />.</returns>
        </member>
        <member name="T:System.Configuration.ConfigurationPermissionAttribute">
            <summary>Creates a <see cref="T:System.Configuration.ConfigurationPermission" /> object that either grants or denies the marked target permission to access sections of configuration files.</summary>
        </member>
        <member name="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationPermissionAttribute" /> class.</summary>
            <param name="action">The security action represented by an enumeration member of <see cref="T:System.Security.Permissions.SecurityAction" />. Determines the permission state of the attribute.</param>
        </member>
        <member name="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission">
            <summary>Creates and returns an object that implements the <see cref="T:System.Security.IPermission" /> interface.</summary>
            <returns>An object that implements <see cref="T:System.Security.IPermission" />.</returns>
        </member>
        <member name="T:System.Data.Common.DBDataPermission">
            <summary>Enables a .NET Framework data provider to help ensure that a user has a security level adequate for accessing data.</summary>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.#ctor">
            <summary>Initializes a new instance of a <see langword="DBDataPermission" /> class.</summary>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)">
            <summary>Initializes a new instance of a <see langword="DBDataPermission" /> class using an existing <see langword="DBDataPermission" />.</summary>
            <param name="permission">An existing <see langword="DBDataPermission" /> used to create a new <see langword="DBDataPermission" />.</param>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)">
            <summary>Initializes a new instance of a <see langword="DBDataPermission" /> class with the specified <see langword="DBDataPermissionAttribute" />.</summary>
            <param name="permissionAttribute">A security action associated with a custom security attribute.</param>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of a <see langword="DBDataPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" /> value.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
            <summary>Initializes a new instance of a <see langword="DBDataPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" /> value, and a value indicating whether a blank password is allowed.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <param name="allowBlankPassword">
                <see langword="true" /> to indicate that a blank password is allowed; otherwise, <see langword="false" />.</param>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
            <summary>Adds access for the specified connection string to the existing state of the <see langword="DBDataPermission" />.</summary>
            <param name="connectionString">A permitted connection string.</param>
            <param name="restrictions">String that identifies connection string parameters that are allowed or disallowed.</param>
            <param name="behavior">One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> properties.</param>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.Clear">
            <summary>Removes all permissions that were previous added using the <see cref="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" /> method.</summary>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission object.</summary>
            <returns>A copy of the current permission object.</returns>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.CreateInstance">
            <summary>Creates a new instance of the <see langword="DBDataPermission" /> class.</summary>
            <returns>A new <see langword="DBDataPermission" /> object.</returns>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="securityElement">The XML encoding to use to reconstruct the security object.</param>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)">
            <summary>Returns a new permission object representing the intersection of the current permission object and the specified permission object.</summary>
            <param name="target">A permission object to intersect with the current permission object. It must be of the same type as the current permission object.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission object.</exception>
            <returns>A new permission object that represents the intersection of the current permission object and the specified permission object. This new permission object is a null reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</returns>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Returns a value indicating whether the current permission object is a subset of the specified permission object.</summary>
            <param name="target">A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is an object that is not of the same type as the current permission object.</exception>
            <returns>
                <see langword="true" /> if the current permission object is a subset of the specified permission object, otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.</summary>
            <returns>
                <see langword="true" /> if the permission can be represented as unrestricted.</returns>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)">
            <summary>Returns a new permission object that is the union of the current and specified permission objects.</summary>
            <param name="target">A permission object to combine with the current permission object. It must be of the same type as the current permission object.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> object is not the same type as the current permission object.</exception>
            <returns>A new permission object that represents the union of the current permission object and the specified permission object.</returns>
        </member>
        <member name="P:System.Data.Common.DBDataPermission.AllowBlankPassword">
            <summary>Gets a value indicating whether a blank password is allowed.</summary>
            <returns>
                <see langword="true" /> if a blank password is allowed, otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Data.Common.DBDataPermissionAttribute">
            <summary>Associates a security action with a custom security attribute.</summary>
        </member>
        <member name="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Common.DBDataPermissionAttribute" />.</summary>
            <param name="action">One of the security action values representing an action that can be performed by declarative security.</param>
        </member>
        <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString">
            <summary>Identifies whether the attribute should serialize the connection string.</summary>
            <returns>
                <see langword="true" /> if the attribute should serialize the connection string; otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions">
            <summary>Identifies whether the attribute should serialize the set of key restrictions.</summary>
            <returns>
                <see langword="true" /> if the attribute should serialize the set of key restrictions; otherwise <see langword="false" />.</returns>
        </member>
        <member name="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword">
            <summary>Gets or sets a value indicating whether a blank password is allowed.</summary>
            <returns>
                <see langword="true" /> if a blank password is allowed; otherwise <see langword="false" />.</returns>
        </member>
        <member name="P:System.Data.Common.DBDataPermissionAttribute.ConnectionString">
            <summary>Gets or sets a permitted connection string.</summary>
            <returns>A permitted connection string.</returns>
        </member>
        <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior">
            <summary>Identifies whether the list of connection string parameters identified by the <see cref="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions" /> property are the only connection string parameters allowed.</summary>
            <returns>One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> values.</returns>
        </member>
        <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions">
            <summary>Gets or sets connection string parameters that are allowed or disallowed.</summary>
            <returns>One or more connection string parameters that are allowed or disallowed.</returns>
        </member>
        <member name="T:System.Data.Odbc.OdbcPermission">
            <summary>Enables the .NET Framework Data Provider for ODBC to help make sure that a user has a security level sufficient to access an ODBC data source. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Data.Odbc.OdbcPermission.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcPermission" /> class.</summary>
        </member>
        <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcPermission" /> class with one of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
        </member>
        <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcPermission" /> class.</summary>
            <param name="state">One of the <see langword="System.Security.Permissions.PermissionState" /> values.</param>
            <param name="allowBlankPassword">Indicates whether a blank password is allowed.</param>
        </member>
        <member name="M:System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
            <summary>Adds access for the specified connection string to the existing state of the permission.</summary>
            <param name="connectionString">A permitted connection string.</param>
            <param name="restrictions">String that identifies connection string parameters that are allowed or disallowed.</param>
            <param name="behavior">One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> values.</param>
        </member>
        <member name="M:System.Data.Odbc.OdbcPermission.Copy">
            <summary>Returns the <see cref="T:System.Data.Odbc.OdbcPermission" /> as an <see cref="T:System.Security.IPermission" />.</summary>
            <returns>A copy of the current permission object.</returns>
        </member>
        <member name="T:System.Data.Odbc.OdbcPermissionAttribute">
            <summary>Associates a security action with a custom security attribute.</summary>
        </member>
        <member name="M:System.Data.Odbc.OdbcPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcPermissionAttribute" /> class with one of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed by using declarative security.</param>
        </member>
        <member name="M:System.Data.Odbc.OdbcPermissionAttribute.CreatePermission">
            <summary>Returns an <see cref="T:System.Data.Odbc.OdbcPermission" /> object that is configured according to the attribute properties.</summary>
            <returns>An <see cref="T:System.Data.Odbc.OdbcPermission" /> object.</returns>
        </member>
        <member name="T:System.Data.OleDb.OleDbPermission">
            <summary>Enables the .NET Framework Data Provider for OLE DB to help make sure that a user has a security level sufficient to access an OLE DB data source.</summary>
        </member>
        <member name="M:System.Data.OleDb.OleDbPermission.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbPermission" /> class.</summary>
        </member>
        <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbPermission" /> class.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
        </member>
        <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbPermission" /> class.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <param name="allowBlankPassword">Indicates whether a blank password is allowed.</param>
        </member>
        <member name="M:System.Data.OleDb.OleDbPermission.Copy">
            <summary>Returns the <see cref="T:System.Data.OleDb.OleDbPermission" /> as an <see cref="T:System.Security.IPermission" />.</summary>
            <returns>A copy of the current permission object.</returns>
        </member>
        <member name="P:System.Data.OleDb.OleDbPermission.Provider">
            <summary>This property has been marked as obsolete. Setting this property will have no effect.</summary>
            <returns>This property has been marked as obsolete. Setting this property will have no effect.</returns>
        </member>
        <member name="T:System.Data.OleDb.OleDbPermissionAttribute">
            <summary>Associates a security action with a custom security attribute.</summary>
        </member>
        <member name="M:System.Data.OleDb.OleDbPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" /> class.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed by using declarative security.</param>
        </member>
        <member name="M:System.Data.OleDb.OleDbPermissionAttribute.CreatePermission">
            <summary>Returns an <see cref="T:System.Data.OleDb.OleDbPermission" /> object that is configured according to the attribute properties.</summary>
            <returns>An <see cref="T:System.Data.OleDb.OleDbPermission" /> object.</returns>
        </member>
        <member name="P:System.Data.OleDb.OleDbPermissionAttribute.Provider">
            <summary>Gets or sets a comma-delimited string that contains a list of supported providers.</summary>
            <returns>A comma-delimited list of providers allowed by the security policy.</returns>
        </member>
        <member name="T:System.Data.OracleClient.OraclePermission">
            <summary>Enables the .NET Framework Data Provider for Oracle to help ensure that a user has a security level adequate to access an Oracle database.</summary>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OraclePermission" /> class with one of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
            <summary>Creates a new set of permissions.</summary>
            <param name="connectionString">The connection string.</param>
            <param name="restrictions">The key restrictions.</param>
            <param name="behavior">One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> enumerations.</param>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermission.Copy">
            <summary>When implemented by a derived class, creates and returns an identical copy of the current permission object.</summary>
            <returns>A copy of the current permission object.</returns>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)">
            <summary>When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="securityElement">A <see cref="T:System.Security.SecurityElement" /> expression.</param>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)">
            <summary>When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)">
            <summary>When implemented by a derived class, determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermission.IsUnrestricted">
            <summary>Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.</summary>
            <returns>
                <see langword="true" /> if the permission can be represented as unrestricted.</returns>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermission.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Data.OracleClient.OraclePermission.AllowBlankPassword">
            <summary>Gets a value indicating whether a blank password is allowed.</summary>
            <returns>
                <see langword="true" /> if a blank password is allowed, otherwise <see langword="false" />.</returns>
        </member>
        <member name="T:System.Data.OracleClient.OraclePermissionAttribute">
            <summary>Associates a security action with a custom security attribute.</summary>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OraclePermissionAttribute" /> class.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed using declarative security.</param>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermissionAttribute.CreatePermission">
            <summary>Returns an <see cref="T:System.Data.OracleClient.OraclePermission" /> object that is configured according to the attribute properties.</summary>
            <returns>An <see cref="T:System.Data.OracleClient.OraclePermission" /> object.</returns>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeConnectionString">
            <summary>Identifies whether the attribute should serialize the connection string.</summary>
            <returns>
                <see langword="true" /> if the attribute should serialize the connection string; otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeKeyRestrictions">
            <summary>Identifies whether the attribute should serialize the set of key restrictions.</summary>
            <returns>
                <see langword="true" /> if the attribute should serialize the set of key restrictions, otherwise <see langword="false" />.</returns>
        </member>
        <member name="P:System.Data.OracleClient.OraclePermissionAttribute.AllowBlankPassword">
            <summary>Gets or sets a value indicating whether a blank password is allowed.</summary>
            <returns>
                <see langword="true" /> if a blank password is allowed, otherwise <see langword="false" />.</returns>
        </member>
        <member name="P:System.Data.OracleClient.OraclePermissionAttribute.ConnectionString">
            <summary>Gets or sets a permitted connection string.</summary>
            <returns>A permitted connection string.</returns>
        </member>
        <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior">
            <summary>Identifies whether the list of connection string parameters identified by the <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions" /> property are the only connection string parameters allowed.</summary>
            <returns>One of the <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior" /> values.</returns>
        </member>
        <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions">
            <summary>Gets or sets connection string parameters that are allowed or disallowed.</summary>
            <returns>One or more connection string parameters that are allowed or disallowed.</returns>
        </member>
        <member name="T:System.Data.SqlClient.SqlClientPermission">
            <summary>Enables the .NET Framework Data Provider for SQL Server to help make sure that a user has a security level sufficient to access a data source.</summary>
        </member>
        <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</summary>
        </member>
        <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
        </member>
        <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <param name="allowBlankPassword">Indicates whether a blank password is allowed.</param>
        </member>
        <member name="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
            <summary>Adds a new connection string and a set of restricted keywords to the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> object.</summary>
            <param name="connectionString">The connection string.</param>
            <param name="restrictions">The key restrictions.</param>
            <param name="behavior">One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> enumerations.</param>
        </member>
        <member name="M:System.Data.SqlClient.SqlClientPermission.Copy">
            <summary>Returns the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> as an <see cref="T:System.Security.IPermission" />.</summary>
            <returns>A copy of the current permission object.</returns>
        </member>
        <member name="T:System.Data.SqlClient.SqlClientPermissionAttribute">
            <summary>Associates a security action with a custom security attribute.</summary>
        </member>
        <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" /> class.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed by using declarative security.</param>
        </member>
        <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission">
            <summary>Returns a <see cref="T:System.Data.SqlClient.SqlClientPermission" /> object that is configured according to the attribute properties.</summary>
            <returns>A <see cref="T:System.Data.SqlClient.SqlClientPermission" /> object.</returns>
        </member>
        <member name="T:System.Diagnostics.EventLogPermission">
            <summary>Controls code access permissions for event logging.</summary>
        </member>
        <member name="M:System.Diagnostics.EventLogPermission.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogPermission" /> class.</summary>
        </member>
        <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogPermission" /> class with the specified access levels and the name of the computer to use.</summary>
            <param name="permissionAccess">One of the enumeration values that specifies an access level.</param>
            <param name="machineName">The name of the computer on which to read or write events.</param>
        </member>
        <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogPermission" /> class with the specified permission entries.</summary>
            <param name="permissionAccessEntries">An array of  objects that represent permission entries. The <see cref="P:System.Diagnostics.EventLogPermission.PermissionEntries" /> property is set to this value.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="permissionAccessEntries" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogPermission" /> class with the specified permission state.</summary>
            <param name="state">One of the enumeration values that specifies the permission state (full access or no access to resources).</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="P:System.Diagnostics.EventLogPermission.PermissionEntries">
            <summary>Gets the collection of permission entries for this permissions request.</summary>
            <returns>A collection that contains the permission entries for this permissions request.</returns>
        </member>
        <member name="T:System.Diagnostics.EventLogPermissionAccess">
            <summary>Defines access levels used by <see cref="T:System.Diagnostics.EventLog" /> permission classes.</summary>
        </member>
        <member name="F:System.Diagnostics.EventLogPermissionAccess.Administer">
            <summary>The <see cref="T:System.Diagnostics.EventLog" /> can create an event source, read existing logs, delete event sources or logs, respond to entries, clear an event log, listen to events, and access a collection of all event logs.</summary>
        </member>
        <member name="F:System.Diagnostics.EventLogPermissionAccess.Audit">
            <summary>The <see cref="T:System.Diagnostics.EventLog" /> can read existing logs, delete event sources or logs, respond to entries, clear an event log, listen to events, and access a collection of all event logs. <see langword="Note" /> This member is now obsolete, use <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /> instead.</summary>
        </member>
        <member name="F:System.Diagnostics.EventLogPermissionAccess.Browse">
            <summary>The <see cref="T:System.Diagnostics.EventLog" /> can read existing logs. <see langword="Note" /> This member is now obsolete, use <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" /> instead.</summary>
        </member>
        <member name="F:System.Diagnostics.EventLogPermissionAccess.Instrument">
            <summary>The <see cref="T:System.Diagnostics.EventLog" /> can read or write to existing logs, and create event sources and logs. <see langword="Note" /> This member is now obsolete, use <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" /> instead.</summary>
        </member>
        <member name="F:System.Diagnostics.EventLogPermissionAccess.None">
            <summary>The <see cref="T:System.Diagnostics.EventLog" /> has no permissions.</summary>
        </member>
        <member name="F:System.Diagnostics.EventLogPermissionAccess.Write">
            <summary>The <see cref="T:System.Diagnostics.EventLog" /> can write to existing logs, and create event sources and logs.</summary>
        </member>
        <member name="T:System.Diagnostics.EventLogPermissionAttribute">
            <summary>Allows declarative permission checks for event logging.</summary>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogPermissionAttribute" /> class.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission">
            <summary>Creates the permission based on the <see cref="P:System.Diagnostics.EventLogPermissionAttribute.MachineName" /> property and the requested access levels that are set through the <see cref="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess" /> property on the attribute.</summary>
            <returns>An <see cref="T:System.Security.IPermission" /> that represents the created permission.</returns>
        </member>
        <member name="P:System.Diagnostics.EventLogPermissionAttribute.MachineName">
            <summary>Gets or sets the name of the computer on which events might be read.</summary>
            <exception cref="T:System.ArgumentException">The computer name is invalid.</exception>
            <returns>The name of the computer on which events might be read. The default is ".".</returns>
        </member>
        <member name="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess">
            <summary>Gets or sets the access levels used in the permissions request.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> values. The default is <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />.</returns>
        </member>
        <member name="T:System.Diagnostics.EventLogPermissionEntry">
            <summary>Defines the smallest unit of a code access security permission that is set for an <see cref="T:System.Diagnostics.EventLog" />.</summary>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntry.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> class.</summary>
            <param name="permissionAccess">A bitwise combination of the <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> values. The <see cref="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess" /> property is set to this value.</param>
            <param name="machineName">The name of the computer on which to read or write events. The <see cref="P:System.Diagnostics.EventLogPermissionEntry.MachineName" /> property is set to this value.</param>
            <exception cref="T:System.ArgumentException">The computer name is invalid.</exception>
        </member>
        <member name="P:System.Diagnostics.EventLogPermissionEntry.MachineName">
            <summary>Gets the name of the computer on which to read or write events.</summary>
            <returns>The name of the computer on which to read or write events.</returns>
        </member>
        <member name="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess">
            <summary>Gets the permission access levels used in the permissions request.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> values.</returns>
        </member>
        <member name="T:System.Diagnostics.EventLogPermissionEntryCollection">
            <summary>Contains a strongly typed collection of <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> objects.</summary>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)">
            <summary>Adds a specified <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> to this collection.</summary>
            <param name="value">The <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> to add.</param>
            <returns>The zero-based index of the added <see cref="T:System.Diagnostics.EventLogPermissionEntry" />.</returns>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])">
            <summary>Appends a set of specified permission entries to this collection.</summary>
            <param name="value">An array of type <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> objects that contains the permission entries to add.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)">
            <summary>Appends a set of specified permission entries to this collection.</summary>
            <param name="value">A <see cref="T:System.Diagnostics.EventLogPermissionEntryCollection" /> that contains the permission entries to add.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)">
            <summary>Determines whether this collection contains a specified <see cref="T:System.Diagnostics.EventLogPermissionEntry" />.</summary>
            <param name="value">The <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> to find.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> belongs to this collection; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)">
            <summary>Copies the permission entries from this collection to an array, starting at a particular index of the array.</summary>
            <param name="array">An array of type <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> that receives this collection's permission entries.</param>
            <param name="index">The zero-based index at which to begin copying the permission entries.</param>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)">
            <summary>Determines the index of a specified permission entry in this collection.</summary>
            <param name="value">The permission entry to search for.</param>
            <returns>The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.</returns>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)">
            <summary>Inserts a permission entry into this collection at a specified index.</summary>
            <param name="index">The zero-based index of the collection at which to insert the permission entry.</param>
            <param name="value">The permission entry to insert into this collection.</param>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnClear">
            <summary>Performs additional custom processes after clearing the contents of the collection.</summary>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
            <summary>Performs additional custom processes before a new permission entry is inserted into the collection.</summary>
            <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
            <param name="value">The new value of the permission entry at <paramref name="index" />.</param>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
            <summary>Performs additional custom processes when removing a new permission entry from the collection.</summary>
            <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
            <param name="value">The permission entry to remove from <paramref name="index" />.</param>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Performs additional custom processes before setting a value in the collection.</summary>
            <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found.</param>
            <param name="oldValue">The value to replace with <paramref name="newValue" />.</param>
            <param name="newValue">The new value of the permission entry at <paramref name="index" />.</param>
        </member>
        <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)">
            <summary>Removes a specified permission entry from this collection.</summary>
            <param name="value">The permission entry to remove.</param>
        </member>
        <member name="P:System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)">
            <summary>Gets or sets the object at a specified index.</summary>
            <param name="index">The zero-based index into the collection.</param>
            <returns>The <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> that exists at the specified index.</returns>
        </member>
        <member name="T:System.Diagnostics.PerformanceCounterPermission">
            <summary>Allows control of code access permissions for <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> class.</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> class with the specified access levels, the name of the computer to use, and the category associated with the performance counter.</summary>
            <param name="permissionAccess">One of the <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> values.</param>
            <param name="machineName">The server on which the performance counter and its associate category reside.</param>
            <param name="categoryName">The name of the performance counter category (performance object) with which the performance counter is associated.</param>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> class with the specified permission access level entries.</summary>
            <param name="permissionAccessEntries">An array of <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> objects. The <see cref="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" /> property is set to this value.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="permissionAccessEntries" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> class with the specified permission state.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries">
            <summary>Gets the collection of permission entries for this permissions request.</summary>
            <returns>A <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" /> that contains the permission entries for this permissions request.</returns>
        </member>
        <member name="T:System.Diagnostics.PerformanceCounterPermissionAccess">
            <summary>Defines access levels used by <see cref="T:System.Diagnostics.PerformanceCounter" /> permission classes.</summary>
        </member>
        <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer">
            <summary>The <see cref="T:System.Diagnostics.PerformanceCounter" /> can read, write, and create categories.</summary>
        </member>
        <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Browse">
            <summary>The <see cref="T:System.Diagnostics.PerformanceCounter" /> can read categories.</summary>
        </member>
        <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Instrument">
            <summary>The <see cref="T:System.Diagnostics.PerformanceCounter" /> can read and write categories.</summary>
        </member>
        <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.None">
            <summary>The <see cref="T:System.Diagnostics.PerformanceCounter" /> has no permissions.</summary>
        </member>
        <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read">
            <summary>The <see cref="T:System.Diagnostics.PerformanceCounter" /> can read categories.</summary>
        </member>
        <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write">
            <summary>The <see cref="T:System.Diagnostics.PerformanceCounter" /> can write categories.</summary>
        </member>
        <member name="T:System.Diagnostics.PerformanceCounterPermissionAttribute">
            <summary>Allows declarative performance counter permission checks.</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceCounterPermissionAttribute" /> class.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission">
            <summary>Creates the permission based on the requested access levels that are set through the <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess" /> property on the attribute.</summary>
            <returns>An <see cref="T:System.Security.IPermission" /> that represents the created permission.</returns>
        </member>
        <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.CategoryName">
            <summary>Gets or sets the name of the performance counter category.</summary>
            <exception cref="T:System.ArgumentNullException">The value is <see langword="null" />.</exception>
            <returns>The name of the performance counter category (performance object).</returns>
        </member>
        <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName">
            <summary>Gets or sets the computer name for the performance counter.</summary>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName" /> format is invalid.</exception>
            <returns>The server on which the category of the performance counter resides.</returns>
        </member>
        <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess">
            <summary>Gets or sets the access levels used in the permissions request.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> values. The default is <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />.</returns>
        </member>
        <member name="T:System.Diagnostics.PerformanceCounterPermissionEntry">
            <summary>Defines the smallest unit of a code access security permission that is set for a <see cref="T:System.Diagnostics.PerformanceCounter" />.</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> class.</summary>
            <param name="permissionAccess">A bitwise combination of the <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> values. The <see cref="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess" /> property is set to this value.</param>
            <param name="machineName">The server on which the category of the performance counter resides.</param>
            <param name="categoryName">The name of the performance counter category (performance object) with which this performance counter is associated.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="categoryName" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="machineName" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="permissionAccess" /> is not a valid <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> value.  
  
 -or-  
  
 <paramref name="machineName" /> is not a valid computer name.</exception>
        </member>
        <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.CategoryName">
            <summary>Gets the name of the performance counter category (performance object).</summary>
            <returns>The name of the performance counter category (performance object).</returns>
        </member>
        <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.MachineName">
            <summary>Gets the name of the server on which the category of the performance counter resides.</summary>
            <returns>The name of the server on which the category resides.</returns>
        </member>
        <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess">
            <summary>Gets the permission access level of the entry.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> values.</returns>
        </member>
        <member name="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection">
            <summary>Contains a strongly typed collection of <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> objects.</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)">
            <summary>Adds a specified <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> to this collection.</summary>
            <param name="value">The <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> object to add.</param>
            <returns>The zero-based index of the added <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> object.</returns>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])">
            <summary>Appends a set of specified permission entries to this collection.</summary>
            <param name="value">An array of type <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> objects that contains the permission entries to add.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)">
            <summary>Appends a set of specified permission entries to this collection.</summary>
            <param name="value">A <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" /> that contains the permission entries to add.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)">
            <summary>Determines whether this collection contains a specified <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> object.</summary>
            <param name="value">The <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> object to find.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> object belongs to this collection; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)">
            <summary>Copies the permission entries from this collection to an array, starting at a particular index of the array.</summary>
            <param name="array">An array of type <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> that receives this collection's permission entries.</param>
            <param name="index">The zero-based index at which to begin copying the permission entries.</param>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)">
            <summary>Determines the index of a specified permission entry in this collection.</summary>
            <param name="value">The permission entry for which to search.</param>
            <returns>The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.</returns>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)">
            <summary>Inserts a permission entry into this collection at a specified index.</summary>
            <param name="index">The zero-based index of the collection at which to insert the permission entry.</param>
            <param name="value">The permission entry to insert into this collection.</param>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnClear">
            <summary>Performs additional custom processes after clearing the contents of the collection.</summary>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
            <summary>Performs additional custom processes before a new permission entry is inserted into the collection.</summary>
            <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
            <param name="value">The new value of the permission entry at <paramref name="index" />.</param>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
            <summary>Performs additional custom processes when removing a new permission entry from the collection.</summary>
            <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
            <param name="value">The permission entry to remove from <paramref name="index" />.</param>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Performs additional custom processes before setting a value in the collection.</summary>
            <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found.</param>
            <param name="oldValue">The value to replace with <paramref name="newValue" />.</param>
            <param name="newValue">The new value of the permission entry at <paramref name="index" />.</param>
        </member>
        <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)">
            <summary>Removes a specified permission entry from this collection.</summary>
            <param name="value">The permission entry to remove.</param>
        </member>
        <member name="P:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Item(System.Int32)">
            <summary>Gets or sets the object at a specified index.</summary>
            <param name="index">The zero-based index into the collection.</param>
            <returns>The <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> object that exists at the specified index.</returns>
        </member>
        <member name="T:System.Drawing.Printing.PrintingPermission">
            <summary>Controls access to printers. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)">
            <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintingPermission" /> class with the level of printing access specified.</summary>
            <param name="printingLevel">One of the <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> values.</param>
        </member>
        <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintingPermission" /> class with either fully restricted or unrestricted access, as specified.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="state" /> is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Drawing.Printing.PrintingPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission object.</summary>
            <returns>A copy of the current permission object.</returns>
        </member>
        <member name="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="element">The XML encoding to use to reconstruct the security object.</param>
        </member>
        <member name="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission object and a target permission object.</summary>
            <param name="target">A permission object of the same type as the current permission object.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is an object that is not of the same type as the current permission object.</exception>
            <returns>A new permission object that represents the intersection of the current object and the specified target. This object is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission object is a subset of the specified permission.</summary>
            <param name="target">A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is an object that is not of the same type as the current permission object.</exception>
            <returns>
                <see langword="true" /> if the current permission object is a subset of <paramref name="target" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted">
            <summary>Gets a value indicating whether the permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Drawing.Printing.PrintingPermission.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that combines the permission object and the target permission object.</summary>
            <param name="target">A permission object of the same type as the current permission object.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is an object that is not of the same type as the current permission object.</exception>
            <returns>A new permission object that represents the union of the current permission object and the specified permission object.</returns>
        </member>
        <member name="P:System.Drawing.Printing.PrintingPermission.Level">
            <summary>Gets or sets the code's level of printing access.</summary>
            <returns>One of the <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> values.</returns>
        </member>
        <member name="T:System.Drawing.Printing.PrintingPermissionAttribute">
            <summary>Allows declarative printing permission checks.</summary>
        </member>
        <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintingPermissionAttribute" /> class.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission">
            <summary>Creates the permission based on the requested access levels, which are set through the <see cref="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" /> property on the attribute.</summary>
            <returns>An <see cref="T:System.Security.IPermission" /> that represents the created permission.</returns>
        </member>
        <member name="P:System.Drawing.Printing.PrintingPermissionAttribute.Level">
            <summary>Gets or sets the type of printing allowed.</summary>
            <exception cref="T:System.ArgumentException">The value is not one of the <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> values.</exception>
            <returns>One of the <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> values.</returns>
        </member>
        <member name="T:System.Drawing.Printing.PrintingPermissionLevel">
            <summary>Specifies the type of printing that code is allowed to do.</summary>
        </member>
        <member name="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting">
            <summary>Provides full access to all printers.</summary>
        </member>
        <member name="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting">
            <summary>Provides printing programmatically to the default printer, along with safe printing through semirestricted dialog box. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> is a subset of <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" />.</summary>
        </member>
        <member name="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting">
            <summary>Prevents access to printers. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting" /> is a subset of <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" />.</summary>
        </member>
        <member name="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting">
            <summary>Provides printing only from a restricted dialog box. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> is a subset of <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />.</summary>
        </member>
        <member name="T:System.Net.DnsPermission">
            <summary>Controls rights to access Domain Name System (DNS) servers on the network.</summary>
        </member>
        <member name="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Creates a new instance of the <see cref="T:System.Net.DnsPermission" /> class that either allows unrestricted DNS access or disallows DNS access.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="state" /> is not a valid <see cref="T:System.Security.Permissions.PermissionState" /> value.</exception>
        </member>
        <member name="M:System.Net.DnsPermission.Copy">
            <summary>Creates an identical copy of the current permission instance.</summary>
            <returns>A new instance of the <see cref="T:System.Net.DnsPermission" /> class that is an identical copy of the current instance.</returns>
        </member>
        <member name="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a <see cref="T:System.Net.DnsPermission" /> instance from an XML encoding.</summary>
            <param name="securityElement">The XML encoding to use to reconstruct the <see cref="T:System.Net.DnsPermission" /> instance.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="securityElement" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="securityElement" /> is not a <see cref="T:System.Net.DnsPermission" /> element.</exception>
        </member>
        <member name="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)">
            <summary>Creates a permission instance that is the intersection of the current permission instance and the specified permission instance.</summary>
            <param name="target">The <see cref="T:System.Net.DnsPermission" /> instance to intersect with the current instance.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is neither a <see cref="T:System.Net.DnsPermission" /> nor <see langword="null" />.</exception>
            <returns>A <see cref="T:System.Net.DnsPermission" /> instance that represents the intersection of the current <see cref="T:System.Net.DnsPermission" /> instance with the specified <see cref="T:System.Net.DnsPermission" /> instance, or <see langword="null" /> if the intersection is empty. If both the current instance and <paramref name="target" /> are unrestricted, this method returns a new <see cref="T:System.Net.DnsPermission" /> instance that is unrestricted; otherwise, it returns <see langword="null" />.</returns>
        </member>
        <member name="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission instance is a subset of the specified permission instance.</summary>
            <param name="target">The second <see cref="T:System.Net.DnsPermission" /> instance to be tested for the subset relationship.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is neither a <see cref="T:System.Net.DnsPermission" /> nor <see langword="null" />.</exception>
            <returns>
                <see langword="false" /> if the current instance is unrestricted and <paramref name="target" /> is either <see langword="null" /> or unrestricted; otherwise, <see langword="true" />.</returns>
        </member>
        <member name="M:System.Net.DnsPermission.IsUnrestricted">
            <summary>Checks the overall permission state of the object.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Net.DnsPermission" /> instance was created with <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.DnsPermission.ToXml">
            <summary>Creates an XML encoding of a <see cref="T:System.Net.DnsPermission" /> instance and its current state.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> instance that contains an XML-encoded representation of the security object, including state information.</returns>
        </member>
        <member name="M:System.Net.DnsPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission instance that is the union of the current permission instance and the specified permission instance.</summary>
            <param name="target">The <see cref="T:System.Net.DnsPermission" /> instance to combine with the current instance.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is neither a <see cref="T:System.Net.DnsPermission" /> nor <see langword="null" />.</exception>
            <returns>A <see cref="T:System.Net.DnsPermission" /> instance that represents the union of the current <see cref="T:System.Net.DnsPermission" /> instance with the specified <see cref="T:System.Net.DnsPermission" /> instance. If <paramref name="target" /> is <see langword="null" />, this method returns a copy of the current instance. If the current instance or <paramref name="target" /> is unrestricted, this method returns a <see cref="T:System.Net.DnsPermission" /> instance that is unrestricted; otherwise, it returns a <see cref="T:System.Net.DnsPermission" /> instance that is restricted.</returns>
        </member>
        <member name="T:System.Net.DnsPermissionAttribute">
            <summary>Specifies permission to request information from Domain Name Servers.</summary>
        </member>
        <member name="M:System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.DnsPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" /> value.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="action" /> parameter is not a valid <see cref="T:System.Security.Permissions.SecurityAction" />.</exception>
        </member>
        <member name="M:System.Net.DnsPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new instance of the <see cref="T:System.Net.DnsPermission" /> class.</summary>
            <returns>A <see cref="T:System.Net.DnsPermission" /> that corresponds to the security declaration.</returns>
        </member>
        <member name="T:System.Net.EndpointPermission">
            <summary>Defines an endpoint that is authorized by a <see cref="T:System.Net.SocketPermission" /> instance.</summary>
        </member>
        <member name="M:System.Net.EndpointPermission.Equals(System.Object)">
            <summary>Determines whether the specified <see langword="Object" /> is equal to the current <see langword="Object" />.</summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see langword="Object" />.</param>
            <returns>
                <see langword="true" /> if the specified <see langword="Object" /> is equal to the current <see langword="Object" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.EndpointPermission.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
        </member>
        <member name="P:System.Net.EndpointPermission.Hostname">
            <summary>Gets the DNS host name or IP address of the server that is associated with this endpoint.</summary>
            <returns>A string that contains the DNS host name or IP address of the server.</returns>
        </member>
        <member name="P:System.Net.EndpointPermission.Port">
            <summary>Gets the network port number that is associated with this endpoint.</summary>
            <returns>The network port number that is associated with this request, or <see cref="F:System.Net.SocketPermission.AllPorts" />.</returns>
        </member>
        <member name="P:System.Net.EndpointPermission.Transport">
            <summary>Gets the transport type that is associated with this endpoint.</summary>
            <returns>One of the <see cref="T:System.Net.TransportType" /> values.</returns>
        </member>
        <member name="T:System.Net.Mail.SmtpAccess">
            <summary>Specifies the level of access allowed to a Simple Mail Transport Protocol (SMTP) server.</summary>
        </member>
        <member name="F:System.Net.Mail.SmtpAccess.Connect">
            <summary>Connection to an SMTP host on the default port (port 25).</summary>
        </member>
        <member name="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort">
            <summary>Connection to an SMTP host on any port.</summary>
        </member>
        <member name="F:System.Net.Mail.SmtpAccess.None">
            <summary>No access to an SMTP host.</summary>
        </member>
        <member name="T:System.Net.Mail.SmtpPermission">
            <summary>Controls access to Simple Mail Transport Protocol (SMTP) servers.</summary>
        </member>
        <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpPermission" /> class with the specified state.</summary>
            <param name="unrestricted">
                <see langword="true" /> if the new permission is unrestricted; otherwise, <see langword="false" />.</param>
        </member>
        <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Net.Mail.SmtpAccess)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpPermission" /> class using the specified access level.</summary>
            <param name="access">One of the <see cref="T:System.Net.Mail.SmtpAccess" /> values.</param>
        </member>
        <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpPermission" /> class using the specified permission state value.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
        </member>
        <member name="M:System.Net.Mail.SmtpPermission.AddPermission(System.Net.Mail.SmtpAccess)">
            <summary>Adds the specified access level value to the permission.</summary>
            <param name="access">One of the <see cref="T:System.Net.Mail.SmtpAccess" /> values.</param>
        </member>
        <member name="M:System.Net.Mail.SmtpPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>An <see cref="T:System.Net.Mail.SmtpPermission" /> that is identical to the current permission.</returns>
        </member>
        <member name="M:System.Net.Mail.SmtpPermission.FromXml(System.Security.SecurityElement)">
            <summary>Sets the state of the permission using the specified XML encoding.</summary>
            <param name="securityElement">The XML encoding to use to set the state of the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="securityElement" /> does not describe an <see cref="T:System.Net.Mail.SmtpPermission" /> object.  
  
 -or-  
  
 <paramref name="securityElement" /> does not contain the required state information to reconstruct the permission.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="securityElement" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Net.Mail.SmtpPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">An <see cref="T:System.Security.IPermission" /> to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not an <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
            <returns>An <see cref="T:System.Net.Mail.SmtpPermission" /> that represents the intersection of the current permission and the specified permission. Returns <see langword="null" /> if the intersection is empty or <paramref name="target" /> is <see langword="null" />.</returns>
        </member>
        <member name="M:System.Net.Mail.SmtpPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Returns a value indicating whether the current permission is a subset of the specified permission.</summary>
            <param name="target">An <see cref="T:System.Security.IPermission" /> that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not an <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.Mail.SmtpPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.Mail.SmtpPermission.ToXml">
            <summary>Creates an XML encoding of the state of the permission.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> that contains an XML encoding of the current permission.</returns>
        </member>
        <member name="M:System.Net.Mail.SmtpPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">An <see cref="T:System.Security.IPermission" /> to combine with the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not an <see cref="T:System.Net.Mail.SmtpPermission" />.</exception>
            <returns>A new <see cref="T:System.Net.Mail.SmtpPermission" /> permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Net.Mail.SmtpPermission.Access">
            <summary>Gets the level of access to SMTP servers controlled by the permission.</summary>
            <returns>One of the <see cref="T:System.Net.Mail.SmtpAccess" /> values.</returns>
        </member>
        <member name="T:System.Net.Mail.SmtpPermissionAttribute">
            <summary>Controls access to Simple Mail Transport Protocol (SMTP) servers.</summary>
        </member>
        <member name="M:System.Net.Mail.SmtpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.Mail.SmtpPermissionAttribute" /> class.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values that specifies the permission behavior.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="action" /> is not a valid <see cref="T:System.Security.Permissions.SecurityAction" />.</exception>
        </member>
        <member name="M:System.Net.Mail.SmtpPermissionAttribute.CreatePermission">
            <summary>Creates a permission object that can be stored with the <see cref="T:System.Security.Permissions.SecurityAction" /> in an assembly's metadata.</summary>
            <returns>An <see cref="T:System.Net.Mail.SmtpPermission" /> instance.</returns>
        </member>
        <member name="P:System.Net.Mail.SmtpPermissionAttribute.Access">
            <summary>Gets or sets the level of access to SMTP servers controlled by the attribute.</summary>
            <returns>A <see cref="T:System.String" /> value. Valid values are "Connect" and "None".</returns>
        </member>
        <member name="T:System.Net.NetworkAccess">
            <summary>Specifies network access permissions.</summary>
        </member>
        <member name="F:System.Net.NetworkAccess.Accept">
            <summary>Indicates that the application is allowed to accept connections from the Internet on a local resource. Notice that this is a protection for the local host that uses Accept to grant access to a local resource (address/port). At the time a socket tries to bind to this local resource a permission check is performed to see if an Accept exists on that resource.</summary>
        </member>
        <member name="F:System.Net.NetworkAccess.Connect">
            <summary>Indicates that the application is allowed to connect to specific Internet resources. Notice that, in the case of remote host resource, no check is performed to see that Connect permissions exist. This is because the port of a connecting remote host is unknown and not suitable permissions can be built in advance. It is the application responsibility to check the permissions of the remote host trying to connect to a listening socket.</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.NetworkInformationAccess">
            <summary>Specifies permission to access information about network interfaces and traffic statistics.</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.None">
            <summary>No access to network information.</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping">
            <summary>Ping access to network information.</summary>
        </member>
        <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Read">
            <summary>Read access to network information.</summary>
        </member>
        <member name="T:System.Net.NetworkInformation.NetworkInformationPermission">
            <summary>Controls access to network information and traffic statistics for the local computer. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> class using the specified <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> value.</summary>
            <param name="access">One of the <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> values.</param>
        </member>
        <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
        </member>
        <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)">
            <summary>Adds the specified value to this permission.</summary>
            <param name="access">One of the <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> values.</param>
        </member>
        <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Copy">
            <summary>Creates and returns an identical copy of this permission.</summary>
            <returns>A <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> that is identical to the current permission</returns>
        </member>
        <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)">
            <summary>Sets the state of this permission using the specified XML encoding.</summary>
            <param name="securityElement">A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding to use to set the state of the current permission</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="securityElement" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="securityElement" /> is not a permission encoding.  
  
 -or-  
  
 <paramref name="securityElement" /> is not an encoding of a <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />.  
  
 -or-  
  
 <paramref name="securityElement" /> has invalid <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> values.</exception>
        </member>
        <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">An <see cref="T:System.Security.IPermission" /> to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not a <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />.</exception>
            <returns>A <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty or <paramref name="target" /> is <see langword="null" />.</returns>
        </member>
        <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">An <see cref="T:System.Security.IPermission" /> that is to be tested for the subset relationship. This permission must be of the same type as the current permission</param>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.ToXml">
            <summary>Creates an XML encoding of the state of this permission.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding of the current permission.</returns>
        </member>
        <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of this permission and the specified permission.</summary>
            <param name="target">A <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> permission to combine with the current permission.</param>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Net.NetworkInformation.NetworkInformationPermission.Access">
            <summary>Gets the level of access to network information controlled by this permission.</summary>
            <returns>One of the <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> values.</returns>
        </member>
        <member name="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> to be applied to code using declarative security.</summary>
        </member>
        <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute" /> class.</summary>
            <param name="action">A <see cref="T:System.Security.Permissions.SecurityAction" /> value that specifies the permission behavior.</param>
        </member>
        <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> object.</summary>
            <returns>A <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.Access">
            <summary>Gets or sets the network information access level.</summary>
            <returns>A string that specifies the access level.</returns>
        </member>
        <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
            <summary>Specifies the values that define or are used in <see cref="N:System.Net.PeerToPeer.Collaboration" /> object permissions.</summary>
        </member>
        <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />. The initial <see cref="T:System.Security.Permissions.PermissionState" /> for this instance is passed when the constructor is called.</summary>
            <param name="state">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</param>
        </member>
        <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy">
            <summary>Creates and returns a copy of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</summary>
            <returns>A <see cref="T:System.Object" /> that contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />.</returns>
        </member>
        <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)">
            <summary>Represents the XML object model for encoding security objects.</summary>
            <param name="e">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentException">The parameter is not a valid permission element.

-or-

The parameter does not contain a valid type or class.

-or-

The parameter's version number is not supported.</exception>
            <exception cref="T:System.ArgumentNullException">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</exception>
        </member>
        <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified <paramref name="target" /> permission.</summary>
            <param name="target">Permission to <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified <paramref name="target" /> permission. This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</returns>
        </member>
        <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> is a subset of the specified <paramref name="target" /> permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</exception>
            <returns>
                <see langword="true" /> if the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted">
            <summary>Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml">
            <summary>Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified <paramref name="target" /> permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</exception>
            <returns>A new permission that represents the <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> and the specified permission.</returns>
        </member>
        <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">Specifies a <see cref="T:System.Security.Permissions.SecurityAction" /> value.</param>
        </member>
        <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.IPermission" />.</summary>
            <returns>A new <see cref="T:System.Security.IPermission" /> object.</returns>
        </member>
        <member name="T:System.Net.PeerToPeer.PnrpPermission">
            <summary>Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</summary>
        </member>
        <member name="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</summary>
            <param name="state">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</param>
        </member>
        <member name="M:System.Net.PeerToPeer.PnrpPermission.Copy">
            <summary>Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</summary>
            <exception cref="T:System.ArgumentException">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.

-or-

The parameter's version number is not supported.</exception>
            <exception cref="T:System.ArgumentNullException">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</exception>
            <returns>An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</returns>
        </member>
        <member name="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentException">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.

-or-

The parameter's version number is not supported.</exception>
            <exception cref="T:System.ArgumentNullException">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</exception>
        </member>
        <member name="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</summary>
            <param name="target">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission. This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</returns>
        </member>
        <member name="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
            <summary>Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
            <summary>Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> parameter is invalid.</exception>
            <returns>A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</returns>
        </member>
        <member name="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> to be applied to code using declarative security.</summary>
        </member>
        <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.IPermission" />.</summary>
            <returns>A new <see cref="T:System.Security.IPermission" /> object.</returns>
        </member>
        <member name="T:System.Net.PeerToPeer.PnrpScope">
            <summary>Specifies the different scopes of a PNRP cloud.</summary>
        </member>
        <member name="F:System.Net.PeerToPeer.PnrpScope.All">
            <summary>All IP addresses are allowed to register with the PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />. There is no difference between any scope and all scopes.</summary>
        </member>
        <member name="F:System.Net.PeerToPeer.PnrpScope.Global">
            <summary>The scope is global; all valid IP addresses are allowed to register with the PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        </member>
        <member name="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
            <summary>The scope is link-local; only IP addresses defined for the local area subnet are allowed to register with the PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        </member>
        <member name="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
            <summary>The scope is site-local; only IP addresses defined for the site are allowed to register with the PNRP.</summary>
        </member>
        <member name="T:System.Net.SocketPermission">
            <summary>Controls rights to make or accept connections on a transport address.</summary>
        </member>
        <member name="F:System.Net.SocketPermission.AllPorts">
            <summary>Defines a constant that represents all ports.</summary>
        </member>
        <member name="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.SocketPermission" /> class for the given transport address with the specified permission.</summary>
            <param name="access">One of the <see cref="T:System.Net.NetworkAccess" /> values.</param>
            <param name="transport">One of the <see cref="T:System.Net.TransportType" /> values.</param>
            <param name="hostName">The host name for the transport address.</param>
            <param name="portNumber">The port number for the transport address.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="hostName" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.SocketPermission" /> class that allows unrestricted access to the <see cref="T:System.Net.Sockets.Socket" /> or disallows access to the <see cref="T:System.Net.Sockets.Socket" />.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
        </member>
        <member name="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
            <summary>Adds a permission to the set of permissions for a transport address.</summary>
            <param name="access">One of the <see cref="T:System.Net.NetworkAccess" /> values.</param>
            <param name="transport">One of the <see cref="T:System.Net.TransportType" /> values.</param>
            <param name="hostName">The host name for the transport address.</param>
            <param name="portNumber">The port number for the transport address.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="hostName" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Net.SocketPermission.Copy">
            <summary>Creates a copy of a <see cref="T:System.Net.SocketPermission" /> instance.</summary>
            <returns>A new instance of the <see cref="T:System.Net.SocketPermission" /> class that is a copy of the current instance.</returns>
        </member>
        <member name="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a <see cref="T:System.Net.SocketPermission" /> instance for an XML encoding.</summary>
            <param name="securityElement">The XML encoding used to reconstruct the <see cref="T:System.Net.SocketPermission" /> instance.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="securityElement" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="securityElement" /> is not a permission element for this type.</exception>
        </member>
        <member name="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
            <summary>Returns the logical intersection between two <see cref="T:System.Net.SocketPermission" /> instances.</summary>
            <param name="target">The <see cref="T:System.Net.SocketPermission" /> instance to intersect with the current instance.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not a <see cref="T:System.Net.SocketPermission" />.</exception>
            <exception cref="T:System.Security.SecurityException">
                <see cref="T:System.Net.DnsPermission" /> is not granted to the method caller.</exception>
            <returns>The <see cref="T:System.Net.SocketPermission" /> instance that represents the intersection of two <see cref="T:System.Net.SocketPermission" /> instances. If the intersection is empty, the method returns <see langword="null" />. If the <paramref name="target" /> parameter is a null reference, the method returns <see langword="null" />.</returns>
        </member>
        <member name="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines if the current permission is a subset of the specified permission.</summary>
            <param name="target">A <see cref="T:System.Net.SocketPermission" /> that is to be tested for the subset relationship.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not a <see cref="T:System.Net.Sockets.SocketException" />.</exception>
            <exception cref="T:System.Security.SecurityException">
                <see cref="T:System.Net.DnsPermission" /> is not granted to the method caller.</exception>
            <returns>If <paramref name="target" /> is <see langword="null" />, this method returns <see langword="true" /> if the current instance defines no permissions; otherwise, <see langword="false" />. If <paramref name="target" /> is not <see langword="null" />, this method returns <see langword="true" /> if the current instance defines a subset of <paramref name="target" /> permissions; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.SocketPermission.IsUnrestricted">
            <summary>Checks the overall permission state of the object.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Net.SocketPermission" /> instance is created with the <see langword="Unrestricted" /> value from <see cref="T:System.Security.Permissions.PermissionState" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.SocketPermission.ToXml">
            <summary>Creates an XML encoding of a <see cref="T:System.Net.SocketPermission" /> instance and its current state.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> instance that contains an XML-encoded representation of the <see cref="T:System.Net.SocketPermission" /> instance, including state information.</returns>
        </member>
        <member name="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
            <summary>Returns the logical union between two <see cref="T:System.Net.SocketPermission" /> instances.</summary>
            <param name="target">The <see cref="T:System.Net.SocketPermission" /> instance to combine with the current instance.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not a <see cref="T:System.Net.SocketPermission" />.</exception>
            <returns>The <see cref="T:System.Net.SocketPermission" /> instance that represents the union of two <see cref="T:System.Net.SocketPermission" /> instances. If <paramref name="target" /> parameter is <see langword="null" />, it returns a copy of the current instance.</returns>
        </member>
        <member name="P:System.Net.SocketPermission.AcceptList">
            <summary>Gets a list of <see cref="T:System.Net.EndpointPermission" /> instances that identifies the endpoints that can be accepted under this permission instance.</summary>
            <returns>An instance that implements the <see cref="T:System.Collections.IEnumerator" /> interface that contains <see cref="T:System.Net.EndpointPermission" /> instances.</returns>
        </member>
        <member name="P:System.Net.SocketPermission.ConnectList">
            <summary>Gets a list of <see cref="T:System.Net.EndpointPermission" /> instances that identifies the endpoints that can be connected to under this permission instance.</summary>
            <returns>An instance that implements the <see cref="T:System.Collections.IEnumerator" /> interface that contains <see cref="T:System.Net.EndpointPermission" /> instances.</returns>
        </member>
        <member name="T:System.Net.SocketPermissionAttribute">
            <summary>Specifies security actions to control <see cref="T:System.Net.Sockets.Socket" /> connections. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.SocketPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" /> value.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="action" /> is not a valid <see cref="T:System.Security.Permissions.SecurityAction" /> value.</exception>
        </member>
        <member name="M:System.Net.SocketPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new instance of the <see cref="T:System.Net.SocketPermission" /> class.</summary>
            <exception cref="T:System.ArgumentException">One or more of the current instance's <see cref="P:System.Net.SocketPermissionAttribute.Access" />, <see cref="P:System.Net.SocketPermissionAttribute.Host" />, <see cref="P:System.Net.SocketPermissionAttribute.Transport" />, or <see cref="P:System.Net.SocketPermissionAttribute.Port" /> properties is <see langword="null" />.</exception>
            <returns>An instance of the <see cref="T:System.Net.SocketPermission" /> class that corresponds to the security declaration.</returns>
        </member>
        <member name="P:System.Net.SocketPermissionAttribute.Access">
            <summary>Gets or sets the network access method that is allowed by this <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Net.SocketPermissionAttribute.Access" /> property is not <see langword="null" /> when you attempt to set the value. To specify more than one Access method, use an additional attribute declaration statement.</exception>
            <returns>A string that contains the network access method that is allowed by this instance of <see cref="T:System.Net.SocketPermissionAttribute" />. Valid values are "Accept" and "Connect."</returns>
        </member>
        <member name="P:System.Net.SocketPermissionAttribute.Host">
            <summary>Gets or sets the DNS host name or IP address that is specified by this <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
            <exception cref="T:System.ArgumentException">
                <see cref="P:System.Net.SocketPermissionAttribute.Host" /> is not <see langword="null" /> when you attempt to set the value. To specify more than one host, use an additional attribute declaration statement.</exception>
            <returns>A string that contains the DNS host name or IP address that is associated with this instance of <see cref="T:System.Net.SocketPermissionAttribute" />.</returns>
        </member>
        <member name="P:System.Net.SocketPermissionAttribute.Port">
            <summary>Gets or sets the port number that is associated with this <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Net.SocketPermissionAttribute.Port" /> property is <see langword="null" /> when you attempt to set the value. To specify more than one port, use an additional attribute declaration statement.</exception>
            <returns>A string that contains the port number that is associated with this instance of <see cref="T:System.Net.SocketPermissionAttribute" />.</returns>
        </member>
        <member name="P:System.Net.SocketPermissionAttribute.Transport">
            <summary>Gets or sets the <see cref="T:System.Net.TransportType" /> that is specified by this <see cref="T:System.Net.SocketPermissionAttribute" />.</summary>
            <exception cref="T:System.ArgumentException">
                <see cref="P:System.Net.SocketPermissionAttribute.Transport" /> is not <see langword="null" /> when you attempt to set the value. To specify more than one transport type, use an additional attribute declaration statement.</exception>
            <returns>A string that contains the <see cref="T:System.Net.TransportType" /> that is associated with this <see cref="T:System.Net.SocketPermissionAttribute" />.</returns>
        </member>
        <member name="T:System.Net.TransportType">
            <summary>Defines transport types for the <see cref="T:System.Net.SocketPermission" /> and <see cref="T:System.Net.Sockets.Socket" /> classes.</summary>
        </member>
        <member name="F:System.Net.TransportType.All">
            <summary>All transport types.</summary>
        </member>
        <member name="F:System.Net.TransportType.Connectionless">
            <summary>The transport type is connectionless, such as UDP. Specifying this value has the same effect as specifying <see cref="F:System.Net.TransportType.Udp" />.</summary>
        </member>
        <member name="F:System.Net.TransportType.ConnectionOriented">
            <summary>The transport is connection oriented, such as TCP. Specifying this value has the same effect as specifying <see cref="F:System.Net.TransportType.Tcp" />.</summary>
        </member>
        <member name="F:System.Net.TransportType.Tcp">
            <summary>TCP transport.</summary>
        </member>
        <member name="F:System.Net.TransportType.Udp">
            <summary>UDP transport.</summary>
        </member>
        <member name="T:System.Net.WebPermission">
            <summary>Controls rights to access HTTP Internet resources.</summary>
        </member>
        <member name="M:System.Net.WebPermission.#ctor">
            <summary>Creates a new instance of the <see cref="T:System.Net.WebPermission" /> class.</summary>
        </member>
        <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.WebPermission" /> class with the specified access rights for the specified URI.</summary>
            <param name="access">A NetworkAccess value that indicates what kind of access to grant to the specified URI. <see cref="F:System.Net.NetworkAccess.Accept" /> indicates that the application is allowed to accept connections from the Internet on a local resource. <see cref="F:System.Net.NetworkAccess.Connect" /> indicates that the application is allowed to connect to specific Internet resources.</param>
            <param name="uriString">A URI string to which access rights are granted.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="uriString" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.WebPermission" /> class with the specified access rights for the specified URI regular expression.</summary>
            <param name="access">A <see cref="T:System.Net.NetworkAccess" /> value that indicates what kind of access to grant to the specified URI. <see cref="F:System.Net.NetworkAccess.Accept" /> indicates that the application is allowed to accept connections from the Internet on a local resource. <see cref="F:System.Net.NetworkAccess.Connect" /> indicates that the application is allowed to connect to specific Internet resources.</param>
            <param name="uriRegex">A regular expression that describes the URI to which access is to be granted.</param>
        </member>
        <member name="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Creates a new instance of the <see cref="T:System.Net.WebPermission" /> class that passes all demands or fails all demands.</summary>
            <param name="state">A <see cref="T:System.Security.Permissions.PermissionState" /> value.</param>
        </member>
        <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
            <summary>Adds the specified URI string with the specified access rights to the current <see cref="T:System.Net.WebPermission" />.</summary>
            <param name="access">A <see cref="T:System.Net.NetworkAccess" /> that specifies the access rights that are granted to the URI.</param>
            <param name="uriString">A string that describes the URI to which access rights are granted.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="uriString" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
            <summary>Adds the specified URI with the specified access rights to the current <see cref="T:System.Net.WebPermission" />.</summary>
            <param name="access">A NetworkAccess that specifies the access rights that are granted to the URI.</param>
            <param name="uriRegex">A regular expression that describes the set of URIs to which access rights are granted.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uriRegex" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Net.WebPermission.Copy">
            <summary>Creates a copy of a <see cref="T:System.Net.WebPermission" />.</summary>
            <returns>A new instance of the <see cref="T:System.Net.WebPermission" /> class that has the same values as the original.</returns>
        </member>
        <member name="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a <see cref="T:System.Net.WebPermission" /> from an XML encoding.</summary>
            <param name="securityElement">The XML encoding from which to reconstruct the <see cref="T:System.Net.WebPermission" />.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="securityElement" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="securityElement" /> is not a permission element for this type.</exception>
        </member>
        <member name="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
            <summary>Returns the logical intersection of two <see cref="T:System.Net.WebPermission" /> instances.</summary>
            <param name="target">The <see cref="T:System.Net.WebPermission" /> to compare with the current instance.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> or of type <see cref="T:System.Net.WebPermission" /></exception>
            <returns>A new <see cref="T:System.Net.WebPermission" /> that represents the intersection of the current instance and the <paramref name="target" /> parameter. If the intersection is empty, the method returns <see langword="null" />.</returns>
        </member>
        <member name="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current <see cref="T:System.Net.WebPermission" /> is a subset of the specified object.</summary>
            <param name="target">The <see cref="T:System.Net.WebPermission" /> to compare to the current <see cref="T:System.Net.WebPermission" />.</param>
            <exception cref="T:System.ArgumentException">The target parameter is not an instance of <see cref="T:System.Net.WebPermission" />.</exception>
            <exception cref="T:System.NotSupportedException">The current instance contains a Regex-encoded right and there is not exactly the same right found in the target instance.</exception>
            <returns>
                <see langword="true" /> if the current instance is a subset of the <paramref name="target" /> parameter; otherwise, <see langword="false" />. If the target is <see langword="null" />, the method returns <see langword="true" /> for an empty current permission that is not unrestricted and <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:System.Net.WebPermission.IsUnrestricted">
            <summary>Checks the overall permission state of the <see cref="T:System.Net.WebPermission" />.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Net.WebPermission" /> was created with the <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Net.WebPermission.ToXml">
            <summary>Creates an XML encoding of a <see cref="T:System.Net.WebPermission" /> and its current state.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> that contains an XML-encoded representation of the <see cref="T:System.Net.WebPermission" />, including state information.</returns>
        </member>
        <member name="M:System.Net.WebPermission.Union(System.Security.IPermission)">
            <summary>Returns the logical union between two instances of the <see cref="T:System.Net.WebPermission" /> class.</summary>
            <param name="target">The <see cref="T:System.Net.WebPermission" /> to combine with the current <see cref="T:System.Net.WebPermission" />.</param>
            <exception cref="T:System.ArgumentException">target is not <see langword="null" /> or of type <see cref="T:System.Net.WebPermission" />.</exception>
            <returns>A <see cref="T:System.Net.WebPermission" /> that represents the union of the current instance and the <paramref name="target" /> parameter. If either <see langword="WebPermission" /> is <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />, the method returns a <see cref="T:System.Net.WebPermission" /> that is <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. If the target is <see langword="null" />, the method returns a copy of the current <see cref="T:System.Net.WebPermission" />.</returns>
        </member>
        <member name="P:System.Net.WebPermission.AcceptList">
            <summary>This property returns an enumeration of a single accept permissions held by this <see cref="T:System.Net.WebPermission" />. The possible objects types contained in the returned enumeration are <see cref="T:System.String" /> and <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
            <returns>The <see cref="T:System.Collections.IEnumerator" /> interface that contains accept permissions.</returns>
        </member>
        <member name="P:System.Net.WebPermission.ConnectList">
            <summary>This property returns an enumeration of a single connect permissions held by this <see cref="T:System.Net.WebPermission" />. The possible objects types contained in the returned enumeration are <see cref="T:System.String" /> and <see cref="T:System.Text.RegularExpressions.Regex" />.</summary>
            <returns>The <see cref="T:System.Collections.IEnumerator" /> interface that contains connect permissions.</returns>
        </member>
        <member name="T:System.Net.WebPermissionAttribute">
            <summary>Specifies permission to access Internet resources. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.WebPermissionAttribute" /> class with a value that specifies the security actions that can be performed on this class.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="action" /> is not a valid <see cref="T:System.Security.Permissions.SecurityAction" /> value.</exception>
        </member>
        <member name="M:System.Net.WebPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new instance of the <see cref="T:System.Net.WebPermission" /> class.</summary>
            <returns>A <see cref="T:System.Net.WebPermission" /> corresponding to the security declaration.</returns>
        </member>
        <member name="P:System.Net.WebPermissionAttribute.Accept">
            <summary>Gets or sets the URI string accepted by the current <see cref="T:System.Net.WebPermissionAttribute" />.</summary>
            <exception cref="T:System.ArgumentException">
                <see cref="P:System.Net.WebPermissionAttribute.Accept" /> is not <see langword="null" /> when you attempt to set the value. If you wish to specify more than one Accept URI, use an additional attribute declaration statement.</exception>
            <returns>A string containing the URI accepted by the current <see cref="T:System.Net.WebPermissionAttribute" />.</returns>
        </member>
        <member name="P:System.Net.WebPermissionAttribute.AcceptPattern">
            <summary>Gets or sets a regular expression pattern that describes the URI accepted by the current <see cref="T:System.Net.WebPermissionAttribute" />.</summary>
            <exception cref="T:System.ArgumentException">
                <see cref="P:System.Net.WebPermissionAttribute.AcceptPattern" /> is not <see langword="null" /> when you attempt to set the value. If you wish to specify more than one Accept URI, use an additional attribute declaration statement.</exception>
            <returns>A string containing a regular expression pattern that describes the URI accepted by the current <see cref="T:System.Net.WebPermissionAttribute" />. This string must be escaped according to the rules for encoding a <see cref="T:System.Text.RegularExpressions.Regex" /> constructor string.</returns>
        </member>
        <member name="P:System.Net.WebPermissionAttribute.Connect">
            <summary>Gets or sets the URI connection string controlled by the current <see cref="T:System.Net.WebPermissionAttribute" />.</summary>
            <exception cref="T:System.ArgumentException">
                <see cref="P:System.Net.WebPermissionAttribute.Connect" /> is not <see langword="null" /> when you attempt to set the value. If you wish to specify more than one Connect URI, use an additional attribute declaration statement.</exception>
            <returns>A string containing the URI connection controlled by the current <see cref="T:System.Net.WebPermissionAttribute" />.</returns>
        </member>
        <member name="P:System.Net.WebPermissionAttribute.ConnectPattern">
            <summary>Gets or sets a regular expression pattern that describes the URI connection controlled by the current <see cref="T:System.Net.WebPermissionAttribute" />.</summary>
            <exception cref="T:System.ArgumentException">
                <see cref="P:System.Net.WebPermissionAttribute.ConnectPattern" /> is not <see langword="null" /> when you attempt to set the value. If you wish to specify more than one connect URI, use an additional attribute declaration statement.</exception>
            <returns>A string containing a regular expression pattern that describes the URI connection controlled by this <see cref="T:System.Net.WebPermissionAttribute" />.</returns>
        </member>
        <member name="T:System.Security.CodeAccessPermission">
            <summary>Defines the underlying structure of all code access permissions.</summary>
        </member>
        <member name="M:System.Security.CodeAccessPermission.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.CodeAccessPermission" /> class.</summary>
        </member>
        <member name="M:System.Security.CodeAccessPermission.Assert">
            <summary>Declares that the calling code can access the resource protected by a permission demand through the code that calls this method, even if callers higher in the stack have not been granted permission to access the resource. Using <see cref="M:System.Security.CodeAccessPermission.Assert" /> can create security issues.</summary>
            <exception cref="T:System.Security.SecurityException">The calling code does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.  
  
 -or-  
  
 There is already an active <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</exception>
        </member>
        <member name="M:System.Security.CodeAccessPermission.Copy">
            <summary>When implemented by a derived class, creates and returns an identical copy of the current permission object.</summary>
            <returns>A copy of the current permission object.</returns>
        </member>
        <member name="M:System.Security.CodeAccessPermission.Demand">
            <summary>Forces a <see cref="T:System.Security.SecurityException" /> at run time if all callers higher in the call stack have not been granted the permission specified by the current instance.</summary>
            <exception cref="T:System.Security.SecurityException">A caller higher in the call stack does not have the permission specified by the current instance.  
  
 -or-  
  
 A caller higher in the call stack has called <see cref="M:System.Security.CodeAccessPermission.Deny" /> on the current permission object.</exception>
        </member>
        <member name="M:System.Security.CodeAccessPermission.Deny">
            <summary>Prevents callers higher in the call stack from using the code that calls this method to access the resource specified by the current instance.</summary>
            <exception cref="T:System.Security.SecurityException">There is already an active <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame.</exception>
        </member>
        <member name="M:System.Security.CodeAccessPermission.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Security.CodeAccessPermission" /> object is equal to the current <see cref="T:System.Security.CodeAccessPermission" />.</summary>
            <param name="obj">The <see cref="T:System.Security.CodeAccessPermission" /> object to compare with the current <see cref="T:System.Security.CodeAccessPermission" />.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Security.CodeAccessPermission" /> object is equal to the current <see cref="T:System.Security.CodeAccessPermission" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
            <summary>When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="elem">The XML encoding to use to reconstruct the security object.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="elem" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="elem" /> parameter does not contain the XML encoding for an instance of the same type as the current instance.  
  
 -or-  
  
 The version number of the <paramref name="elem" /> parameter is not supported.</exception>
        </member>
        <member name="M:System.Security.CodeAccessPermission.GetHashCode">
            <summary>Gets a hash code for the <see cref="T:System.Security.CodeAccessPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
            <returns>A hash code for the current <see cref="T:System.Security.CodeAccessPermission" /> object.</returns>
        </member>
        <member name="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
            <summary>When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>When implemented by a derived class, determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.CodeAccessPermission.PermitOnly">
            <summary>Prevents callers higher in the call stack from using the code that calls this method to access all resources except for the resource specified by the current instance.</summary>
            <exception cref="T:System.Security.SecurityException">There is already an active <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</exception>
        </member>
        <member name="M:System.Security.CodeAccessPermission.RevertAll">
            <summary>Causes all previous overrides for the current frame to be removed and no longer in effect.</summary>
            <exception cref="T:System.InvalidOperationException">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" />, or <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</exception>
        </member>
        <member name="M:System.Security.CodeAccessPermission.RevertAssert">
            <summary>Causes any previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame to be removed and no longer in effect.</summary>
            <exception cref="T:System.InvalidOperationException">There is no previous <see cref="M:System.Security.CodeAccessPermission.Assert" /> for the current frame.</exception>
        </member>
        <member name="M:System.Security.CodeAccessPermission.RevertDeny">
            <summary>Causes any previous <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame to be removed and no longer in effect.</summary>
            <exception cref="T:System.InvalidOperationException">There is no previous <see cref="M:System.Security.CodeAccessPermission.Deny" /> for the current frame.</exception>
        </member>
        <member name="M:System.Security.CodeAccessPermission.RevertPermitOnly">
            <summary>Causes any previous <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame to be removed and no longer in effect.</summary>
            <exception cref="T:System.InvalidOperationException">There is no previous <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> for the current frame.</exception>
        </member>
        <member name="M:System.Security.CodeAccessPermission.ToString">
            <summary>Creates and returns a string representation of the current permission object.</summary>
            <returns>A string representation of the current permission object.</returns>
        </member>
        <member name="M:System.Security.CodeAccessPermission.ToXml">
            <summary>When overridden in a derived class, creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
            <summary>When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="other">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.NotSupportedException">The <paramref name="other" /> parameter is not <see langword="null" />. This method is only supported at this level when passed <see langword="null" />.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="T:System.Security.HostProtectionException">
            <summary>The exception that is thrown when a denied host resource is detected.</summary>
        </member>
        <member name="M:System.Security.HostProtectionException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.HostProtectionException" /> class with default values.</summary>
        </member>
        <member name="M:System.Security.HostProtectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.HostProtectionException" /> class using the provided serialization information and streaming context.</summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">Contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.HostProtectionException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.HostProtectionException" /> class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.HostProtectionException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="e">The exception that is the cause of the current exception. If the <c>innerException</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</param>
        </member>
        <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Security.Permissions.HostProtectionResource,System.Security.Permissions.HostProtectionResource)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.HostProtectionException" /> class with a specified error message, the protected host resources, and the host resources that caused the exception to be thrown.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="protectedResources">A bitwise combination of the enumeration values that specify the host resources that are inaccessible to partially trusted code.</param>
            <param name="demandedResources">A bitwise combination of the enumeration values that specify the demanded host resources.</param>
        </member>
        <member name="M:System.Security.HostProtectionException.ToString">
            <summary>Returns a string representation of the current host protection exception.</summary>
            <returns>A string representation of the current <see cref="T:System.Security.HostProtectionException" />.</returns>
        </member>
        <member name="P:System.Security.HostProtectionException.DemandedResources">
            <summary>Gets or sets the demanded host protection resources that caused the exception to be thrown.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.HostProtectionResource" /> values identifying the protection resources causing the exception to be thrown. The default is <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</returns>
        </member>
        <member name="P:System.Security.HostProtectionException.ProtectedResources">
            <summary>Gets or sets the host protection resources that are inaccessible to partially trusted code.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.HostProtectionResource" /> values identifying the inaccessible host protection categories. The default is <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</returns>
        </member>
        <member name="T:System.Security.HostSecurityManager">
            <summary>Allows the control and customization of security behavior for application domains.</summary>
        </member>
        <member name="M:System.Security.HostSecurityManager.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.HostSecurityManager" /> class.</summary>
        </member>
        <member name="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
            <summary>Determines whether an application should be executed.</summary>
            <param name="applicationEvidence">The evidence for the application to be activated.</param>
            <param name="activatorEvidence">Optionally, the evidence for the activating application domain.</param>
            <param name="context">The trust context.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="applicationEvidence" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">An <see cref="T:System.Runtime.Hosting.ActivationArguments" /> object could not be found in the application evidence.  
  
 -or-  
  
 The <see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /> property in the activation arguments is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Security.Policy.ApplicationTrust" /> grant set does not contain the minimum request set specified by the <see cref="T:System.ActivationContext" />.</exception>
            <returns>An object that contains trust information about the application.</returns>
        </member>
        <member name="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
            <summary>Requests a specific evidence type for the application domain.</summary>
            <param name="evidenceType">The evidence type.</param>
            <returns>The requested application domain evidence.</returns>
        </member>
        <member name="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
            <summary>Requests a specific evidence type for the assembly.</summary>
            <param name="evidenceType">The evidence type.</param>
            <param name="assembly">The target assembly.</param>
            <returns>The requested assembly evidence.</returns>
        </member>
        <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
            <summary>Determines which evidence types the host can supply for the application domain, if requested.</summary>
            <returns>An array of evidence types.</returns>
        </member>
        <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
            <summary>Determines which evidence types the host can supply for the assembly, if requested.</summary>
            <param name="assembly">The target assembly.</param>
            <returns>An array of evidence types.</returns>
        </member>
        <member name="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
            <summary>Provides the application domain evidence for an assembly being loaded.</summary>
            <param name="inputEvidence">Additional evidence to add to the <see cref="T:System.AppDomain" /> evidence.</param>
            <returns>The evidence to be used for the <see cref="T:System.AppDomain" />.</returns>
        </member>
        <member name="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
            <summary>Provides the assembly evidence for an assembly being loaded.</summary>
            <param name="loadedAssembly">The loaded assembly.</param>
            <param name="inputEvidence">Additional evidence to add to the assembly evidence.</param>
            <returns>The evidence to be used for the assembly.</returns>
        </member>
        <member name="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
            <summary>Determines what permissions to grant to code based on the specified evidence.</summary>
            <param name="evidence">The evidence set used to evaluate policy.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="evidence" /> is <see langword="null" />.</exception>
            <returns>The permission set that can be granted by the security system.</returns>
        </member>
        <member name="P:System.Security.HostSecurityManager.DomainPolicy">
            <summary>When overridden in a derived class, gets the security policy for the current application domain.</summary>
            <exception cref="T:System.NotSupportedException">This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &lt;legacyCasPolicy&gt; element.</exception>
            <returns>The security policy for the current application domain. The default is <see langword="null" />.</returns>
        </member>
        <member name="P:System.Security.HostSecurityManager.Flags">
            <summary>Gets the flag representing the security policy components of concern to the host.</summary>
            <returns>One of the enumeration values that specifies security policy components. The default is <see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" />.</returns>
        </member>
        <member name="T:System.Security.HostSecurityManagerOptions">
            <summary>Specifies the security policy components to be used by the host security manager.</summary>
        </member>
        <member name="F:System.Security.HostSecurityManagerOptions.AllFlags">
            <summary>Use all security policy components.</summary>
        </member>
        <member name="F:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence">
            <summary>Use the application domain evidence.</summary>
        </member>
        <member name="F:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence">
            <summary>Use the assembly evidence.</summary>
        </member>
        <member name="F:System.Security.HostSecurityManagerOptions.HostDetermineApplicationTrust">
            <summary>Route calls to the <see cref="M:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)" /> method to the <see cref="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)" /> method first.</summary>
        </member>
        <member name="F:System.Security.HostSecurityManagerOptions.HostPolicyLevel">
            <summary>Use the policy level specified in the <see cref="P:System.Security.HostSecurityManager.DomainPolicy" /> property.</summary>
        </member>
        <member name="F:System.Security.HostSecurityManagerOptions.HostResolvePolicy">
            <summary>Use the <see cref="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" /> method to resolve the application evidence.</summary>
        </member>
        <member name="F:System.Security.HostSecurityManagerOptions.None">
            <summary>Use none of the security policy components.</summary>
        </member>
        <member name="T:System.Security.IEvidenceFactory">
            <summary>Gets an object's <see cref="T:System.Security.Policy.Evidence" />.</summary>
        </member>
        <member name="P:System.Security.IEvidenceFactory.Evidence">
            <summary>Gets <see cref="T:System.Security.Policy.Evidence" /> that verifies the current object's identity.</summary>
            <returns>
                <see cref="T:System.Security.Policy.Evidence" /> of the current object's identity.</returns>
        </member>
        <member name="T:System.Security.ISecurityPolicyEncodable">
            <summary>Supports the methods that convert permission object state to and from an XML element representation.</summary>
        </member>
        <member name="M:System.Security.ISecurityPolicyEncodable.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <param name="level">The policy-level context to resolve named permission set references.</param>
        </member>
        <member name="M:System.Security.ISecurityPolicyEncodable.ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <param name="level">The policy-level context to resolve named permission set references.</param>
            <returns>The root element of the XML representation of the policy object.</returns>
        </member>
        <member name="T:System.Security.NamedPermissionSet">
            <summary>Defines a permission set that has a name and description associated with it. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.NamedPermissionSet" /> class from another named permission set.</summary>
            <param name="permSet">The named permission set from which to create the new instance.</param>
        </member>
        <member name="M:System.Security.NamedPermissionSet.#ctor(System.String)">
            <summary>Initializes a new, empty instance of the <see cref="T:System.Security.NamedPermissionSet" /> class with the specified name.</summary>
            <param name="name">The name for the new named permission set.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is <see langword="null" /> or is an empty string ("").</exception>
        </member>
        <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.NamedPermissionSet" /> class with the specified name in either an unrestricted or a fully restricted state.</summary>
            <param name="name">The name for the new named permission set.</param>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is <see langword="null" /> or is an empty string ("").</exception>
        </member>
        <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.NamedPermissionSet" /> class with the specified name from a permission set.</summary>
            <param name="name">The name for the named permission set.</param>
            <param name="permSet">The permission set from which to take the value of the new named permission set.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is <see langword="null" /> or is an empty string ("").</exception>
        </member>
        <member name="M:System.Security.NamedPermissionSet.Copy">
            <summary>Creates a permission set copy from a named permission set.</summary>
            <returns>A permission set that is a copy of the permissions in the named permission set.</returns>
        </member>
        <member name="M:System.Security.NamedPermissionSet.Copy(System.String)">
            <summary>Creates a copy of the named permission set with a different name but the same permissions.</summary>
            <param name="name">The name for the new named permission set.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is <see langword="null" /> or is an empty string ("").</exception>
            <returns>A copy of the named permission set with the new name.</returns>
        </member>
        <member name="M:System.Security.NamedPermissionSet.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Security.NamedPermissionSet" /> object is equal to the current <see cref="T:System.Security.NamedPermissionSet" />.</summary>
            <param name="o">The <see cref="T:System.Security.NamedPermissionSet" /> object to compare with the current <see cref="T:System.Security.NamedPermissionSet" />.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Security.NamedPermissionSet" /> is equal to the current <see cref="T:System.Security.NamedPermissionSet" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a named permission set with a specified state from an XML encoding.</summary>
            <param name="et">A security element containing the XML representation of the named permission set.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="et" /> parameter is not a valid representation of a named permission set.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="et" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.NamedPermissionSet.GetHashCode">
            <summary>Gets a hash code for the <see cref="T:System.Security.NamedPermissionSet" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
            <returns>A hash code for the current <see cref="T:System.Security.NamedPermissionSet" /> object.</returns>
        </member>
        <member name="M:System.Security.NamedPermissionSet.ToXml">
            <summary>Creates an XML element description of the named permission set.</summary>
            <returns>The XML representation of the named permission set.</returns>
        </member>
        <member name="P:System.Security.NamedPermissionSet.Description">
            <summary>Gets or sets the text description of the current named permission set.</summary>
            <returns>A text description of the named permission set.</returns>
        </member>
        <member name="P:System.Security.NamedPermissionSet.Name">
            <summary>Gets or sets the name of the current named permission set.</summary>
            <exception cref="T:System.ArgumentException">The name is <see langword="null" /> or is an empty string ("").</exception>
            <returns>The name of the named permission set.</returns>
        </member>
        <member name="T:System.Security.Permissions.DataProtectionPermission">
            <summary>Controls the ability to access encrypted data and memory. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.DataProtectionPermission" /> class with the specified permission flags.</summary>
            <param name="flag">A bitwise combination of the <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="flag" /> is not a valid combination of the <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> values.</exception>
        </member>
        <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.DataProtectionPermission" /> class with the specified permission state.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="state" /> is not a valid <see cref="T:System.Security.Permissions.PermissionState" /> value.</exception>
        </member>
        <member name="M:System.Security.Permissions.DataProtectionPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specific state from an XML encoding.</summary>
            <param name="securityElement">A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding used to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="securityElement" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="securityElement" /> is not a valid permission element.  
  
 -or-  
  
 The version number of <paramref name="securityElement" /> is not supported.</exception>
        </member>
        <member name="M:System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> and does not specify a permission of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission to test for the subset relationship. This permission must be the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> and does not specify a permission of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.DataProtectionPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.DataProtectionPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> and does not specify a permission of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.DataProtectionPermission.Flags">
            <summary>Gets or sets the data and memory protection flags.</summary>
            <exception cref="T:System.ArgumentException">The specified value is not a valid combination of the <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> values.</exception>
            <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> values.</returns>
        </member>
        <member name="T:System.Security.Permissions.DataProtectionPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.DataProtectionPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.DataProtectionPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.DataProtectionPermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.DataProtectionPermission" /> that corresponds to the attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.Flags">
            <summary>Gets or sets the data protection permissions.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> values. The default is <see cref="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData">
            <summary>Gets or sets a value indicating whether data can be encrypted using the <see cref="T:System.Security.Cryptography.ProtectedData" /> class.</summary>
            <returns>
                <see langword="true" /> if data can be encrypted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory">
            <summary>Gets or sets a value indicating whether memory can be encrypted using the <see cref="T:System.Security.Cryptography.ProtectedMemory" /> class.</summary>
            <returns>
                <see langword="true" /> if memory can be encrypted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData">
            <summary>Gets or sets a value indicating whether data can be unencrypted using the <see cref="T:System.Security.Cryptography.ProtectedData" /> class.</summary>
            <returns>
                <see langword="true" /> if data can be unencrypted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory">
            <summary>Gets or sets a value indicating whether memory can be unencrypted using the <see cref="T:System.Security.Cryptography.ProtectedMemory" /> class.</summary>
            <returns>
                <see langword="true" /> if memory can be unencrypted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Security.Permissions.DataProtectionPermissionFlags">
            <summary>Specifies the access permissions for encrypting data and memory.</summary>
        </member>
        <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.AllFlags">
            <summary>The ability to encrypt data, encrypt memory, unencrypt data, and unencrypt memory.</summary>
        </member>
        <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags">
            <summary>No protection abilities.</summary>
        </member>
        <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectData">
            <summary>The ability to encrypt data.</summary>
        </member>
        <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectMemory">
            <summary>The ability to encrypt memory.</summary>
        </member>
        <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectData">
            <summary>The ability to unencrypt data.</summary>
        </member>
        <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectMemory">
            <summary>The ability to unencrypt memory.</summary>
        </member>
        <member name="T:System.Security.Permissions.EnvironmentPermission">
            <summary>Controls access to system and user environment variables. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.EnvironmentPermission" /> class with the specified access to the specified environment variables.</summary>
            <param name="flag">One of the <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> values.</param>
            <param name="pathList">A list of environment variables (semicolon-separated) to which access is granted.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="pathList" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="flag" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.EnvironmentPermission" /> class with either restricted or unrestricted permission as specified.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
            <summary>Adds access for the specified environment variables to the existing state of the permission.</summary>
            <param name="flag">One of the <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> values.</param>
            <param name="pathList">A list of environment variables (semicolon-separated).</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="pathList" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="flag" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="esd">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="esd" /> parameter's version number is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)">
            <summary>Gets all environment variables with the specified <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</summary>
            <param name="flag">One of the <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> values that represents a single type of environment variable access.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="flag" /> is not a valid value of <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.  
  
 -or-  
  
 <paramref name="flag" /> is <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" />, which represents more than one type of environment variable access, or <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" />, which does not represent any type of environment variable access.</exception>
            <returns>A list of environment variables (semicolon-separated) for the selected flag.</returns>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
            <summary>Sets the specified access to the specified environment variables to the existing state of the permission.</summary>
            <param name="flag">One of the <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> values.</param>
            <param name="pathList">A list of environment variables (semicolon-separated).</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="pathList" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="flag" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="other">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="other" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="T:System.Security.Permissions.EnvironmentPermissionAccess">
            <summary>Specifies access to environment variables.</summary>
        </member>
        <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess">
            <summary>
                <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /> and <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Write" /> access to environment variables. <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /> represents multiple <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> values and causes an <see cref="T:System.ArgumentException" /> when used as the <paramref name="flag" /> parameter for the <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" /> method, which expects a single value.</summary>
        </member>
        <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess">
            <summary>No access to environment variables. <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" /> represents no valid <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> values and causes an <see cref="T:System.ArgumentException" /> when used as the parameter for <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />, which expects a single value.</summary>
        </member>
        <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Read">
            <summary>Only read access to environment variables is specified. Changing, deleting and creating environment variables is not included in this access level.</summary>
        </member>
        <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Write">
            <summary>Only write access to environment variables is specified. Write access includes creating and deleting environment variables as well as changing existing values. Reading environment variables is not included in this access level.</summary>
        </member>
        <member name="T:System.Security.Permissions.EnvironmentPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.EnvironmentPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.EnvironmentPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="action" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.SecurityAction" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.EnvironmentPermission" />.</summary>
            <returns>An <see cref="T:System.Security.Permissions.EnvironmentPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.All">
            <summary>Sets full access for the environment variables specified by the string value.</summary>
            <exception cref="T:System.NotSupportedException">The get method is not supported for this property.</exception>
            <returns>A list of environment variables for full access.</returns>
        </member>
        <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Read">
            <summary>Gets or sets read access for the environment variables specified by the string value.</summary>
            <returns>A list of environment variables for read access.</returns>
        </member>
        <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Write">
            <summary>Gets or sets write access for the environment variables specified by the string value.</summary>
            <returns>A list of environment variables for write access.</returns>
        </member>
        <member name="T:System.Security.Permissions.FileDialogPermission">
            <summary>Controls the ability to access files or folders through a File dialog box. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.FileDialogPermission" /> class with the specified access.</summary>
            <param name="access">A bitwise combination of the <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid combination of the <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> values.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.FileDialogPermission" /> class with either restricted or unrestricted permission, as specified.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values (<see langword="Unrestricted" /> or <see langword="None" />).</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileDialogPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="esd">The XML encoding used to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  
  
 -or-  
  
 The version number of the <paramref name="esd" /> parameter is not supported.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileDialogPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileDialogPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileDialogPermission.Access">
            <summary>Gets or sets the permitted access to files.</summary>
            <exception cref="T:System.ArgumentException">An attempt is made to set the <paramref name="access" /> parameter to a value that is not a valid combination of the <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> values.</exception>
            <returns>The permitted access to files.</returns>
        </member>
        <member name="T:System.Security.Permissions.FileDialogPermissionAccess">
            <summary>Specifies the type of access to files allowed through the File dialog boxes.</summary>
        </member>
        <member name="F:System.Security.Permissions.FileDialogPermissionAccess.None">
            <summary>No access to files through the File dialog boxes.</summary>
        </member>
        <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Open">
            <summary>Ability to open files through the File dialog boxes.</summary>
        </member>
        <member name="F:System.Security.Permissions.FileDialogPermissionAccess.OpenSave">
            <summary>Ability to open and save files through the File dialog boxes.</summary>
        </member>
        <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Save">
            <summary>Ability to save files through the File dialog boxes.</summary>
        </member>
        <member name="T:System.Security.Permissions.FileDialogPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.FileDialogPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.FileDialogPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.FileDialogPermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.FileDialogPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Open">
            <summary>Gets or sets a value indicating whether permission to open files through the file dialog is declared.</summary>
            <returns>
                <see langword="true" /> if permission to open files through the file dialog is declared; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Save">
            <summary>Gets or sets a value indicating whether permission to save files through the file dialog is declared.</summary>
            <returns>
                <see langword="true" /> if permission to save files through the file dialog is declared; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Security.Permissions.FileIOPermission">
            <summary>Controls the ability to access files and folders. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.FileIOPermission" /> class with the specified access to the designated file or directory and the specified access rights to file control information.</summary>
            <param name="access">A bitwise combination of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> enumeration values.</param>
            <param name="actions">A bitwise combination of the <see cref="T:System.Security.AccessControl.AccessControlActions" /> enumeration values.</param>
            <param name="path">The absolute path of the file or directory.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
 -or-  
  
 The <paramref name="path" /> parameter is not a valid string.  
  
 -or-  
  
 The <paramref name="path" /> parameter does not specify the absolute path to the file or directory.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.FileIOPermission" /> class with the specified access to the designated files and directories and the specified access rights to file control information.</summary>
            <param name="access">A bitwise combination of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> enumeration values.</param>
            <param name="actions">A bitwise combination of the <see cref="T:System.Security.AccessControl.AccessControlActions" /> enumeration values.</param>
            <param name="pathList">An array containing the absolute paths of the files and directories.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
 -or-  
  
 An entry in the <paramref name="pathList" /> array is not a valid string.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.FileIOPermission" /> class with the specified access to the designated file or directory.</summary>
            <param name="access">A bitwise combination of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> enumeration values.</param>
            <param name="path">The absolute path of the file or directory.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
 -or-  
  
 The <paramref name="path" /> parameter is not a valid string.  
  
 -or-  
  
 The <paramref name="path" /> parameter does not specify the absolute path to the file or directory.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.FileIOPermission" /> class with the specified access to the designated files and directories.</summary>
            <param name="access">A bitwise combination of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> enumeration values.</param>
            <param name="pathList">An array containing the absolute paths of the files and directories.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
 -or-  
  
 An entry in the <paramref name="pathList" /> array is not a valid string.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.FileIOPermission" /> class with fully restricted or unrestricted permission as specified.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
            <summary>Adds access for the specified file or directory to the existing state of the permission.</summary>
            <param name="access">A bitwise combination of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values.</param>
            <param name="path">The absolute path of a file or directory.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
 -or-  
  
 The <paramref name="path" /> parameter is not a valid string.  
  
 -or-  
  
 The <paramref name="path" /> parameter did not specify the absolute path to the file or directory.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="path" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.NotSupportedException">The <paramref name="path" /> parameter has an invalid format.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
            <summary>Adds access for the specified files and directories to the existing state of the permission.</summary>
            <param name="access">A bitwise combination of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values.</param>
            <param name="pathList">An array containing the absolute paths of the files and directories.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
 -or-  
  
 An entry in the <paramref name="pathList" /> array is not valid.</exception>
            <exception cref="T:System.NotSupportedException">An entry in the <paramref name="pathList" /> array has an invalid format.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="pathList" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Security.Permissions.FileIOPermission" /> object is equal to the current <see cref="T:System.Security.Permissions.FileIOPermission" />.</summary>
            <param name="o">The <see cref="T:System.Security.Permissions.FileIOPermission" /> object to compare with the current <see cref="T:System.Security.Permissions.FileIOPermission" />.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Security.Permissions.FileIOPermission" /> is equal to the current <see cref="T:System.Security.Permissions.FileIOPermission" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="esd">The XML encoding used to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="esd" /> parameter's version number is not compatible.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.GetHashCode">
            <summary>Gets a hash code for the <see cref="T:System.Security.Permissions.FileIOPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
            <returns>A hash code for the current <see cref="T:System.Security.Permissions.FileIOPermission" /> object.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)">
            <summary>Gets all files and directories with the specified <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</summary>
            <param name="access">One of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values that represents a single type of file access.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="access" /> is not a valid value of <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
 -or-  
  
 <paramref name="access" /> is <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" />, which represents more than one type of file access, or <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />, which does not represent any type of file access.</exception>
            <returns>An array containing the paths of the files and directories to which access specified by the <paramref name="access" /> parameter is granted.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
            <summary>Sets the specified access to the specified file or directory, replacing the existing state of the permission.</summary>
            <param name="access">A bitwise combination of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values.</param>
            <param name="path">The absolute path of the file or directory.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
 -or-  
  
 The <paramref name="path" /> parameter is not a valid string.  
  
 -or-  
  
 The <paramref name="path" /> parameter did not specify the absolute path to the file or directory.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
            <summary>Sets the specified access to the specified files and directories, replacing the current state for the specified access with the new set of paths.</summary>
            <param name="access">A bitwise combination of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values.</param>
            <param name="pathList">An array containing the absolute paths of the files and directories.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.  
  
 -or-  
  
 An entry in the <paramref name="pathList" /> parameter is not a valid string.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="other">A permission to combine with the current permission. It must be the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="other" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileIOPermission.AllFiles">
            <summary>Gets or sets the permitted access to all files.</summary>
            <returns>The set of file I/O flags for all files.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileIOPermission.AllLocalFiles">
            <summary>Gets or sets the permitted access to all local files.</summary>
            <returns>The set of file I/O flags for all local files.</returns>
        </member>
        <member name="T:System.Security.Permissions.FileIOPermissionAccess">
            <summary>Specifies the type of file access requested.</summary>
        </member>
        <member name="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess">
            <summary>
                <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> access to a file or directory. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> represents multiple <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values and causes an <see cref="T:System.ArgumentException" /> when used as the <paramref name="access" /> parameter for the <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" /> method, which expects a single value.</summary>
        </member>
        <member name="F:System.Security.Permissions.FileIOPermissionAccess.Append">
            <summary>Access to append material to a file or directory. <see langword="FileIOPermissionAccess.Append" /> access includes the ability to create a new file or directory. To create files, code must also be granted both<see langword="Append" /> and either <see langword="Write" /> or <see langword="Read" /> access.</summary>
        </member>
        <member name="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess">
            <summary>No access to a file or directory. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> represents no valid <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values and causes an <see cref="T:System.ArgumentException" /> when used as the parameter for <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />, which expects a single value.</summary>
        </member>
        <member name="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery">
            <summary>
                <para>Access to the information in the path itself. This helps protect sensitive information in the path, such as user names, as well as information about the directory structure revealed in the path. This value does not grant access to files or folders represented by the path.</para>
                <para>For performance reasons, <see langword="PathDiscovery" /> should only be granted to directories, not to files. For example, <see langword="PathDiscovery" /> permission should be granted to paths such as C:\test and C:\test\, not C:\test\example.txt.</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.FileIOPermissionAccess.Read">
            <summary>Access to read from a file or directory.</summary>
        </member>
        <member name="F:System.Security.Permissions.FileIOPermissionAccess.Write">
            <summary>Access to write to or delete a file or directory. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> access includes deleting and overwriting files or directories.</summary>
        </member>
        <member name="T:System.Security.Permissions.FileIOPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.FileIOPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.FileIOPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="action" /> parameter is not a valid <see cref="T:System.Security.Permissions.SecurityAction" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.FileIOPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.FileIOPermission" />.</summary>
            <exception cref="T:System.ArgumentException">The path information for a file or directory for which access is to be secured contains invalid characters or wildcard specifiers.</exception>
            <returns>A <see cref="T:System.Security.Permissions.FileIOPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileIOPermissionAttribute.All">
            <summary>Gets or sets full access for the file or directory that is specified by the string value.</summary>
            <exception cref="T:System.NotSupportedException">The get method is not supported for this property.</exception>
            <returns>The absolute path of the file or directory for full access.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllFiles">
            <summary>Gets or sets the permitted access to all files.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values that represents the permissions for all files. The default is <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles">
            <summary>Gets or sets the permitted access to all local files.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values that represents the permissions for all local files. The default is <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Append">
            <summary>Gets or sets append access for the file or directory that is specified by the string value.</summary>
            <returns>The absolute path of the file or directory for append access.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl">
            <summary>Gets or sets the file or directory in which access control information can be changed.</summary>
            <returns>The absolute path of the file or directory in which access control information can be changed.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery">
            <summary>Gets or sets the file or directory to which to grant path discovery.</summary>
            <returns>The absolute path of the file or directory.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Read">
            <summary>Gets or sets read access for the file or directory specified by the string value.</summary>
            <returns>The absolute path of the file or directory for read access.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl">
            <summary>Gets or sets the file or directory in which access control information can be viewed.</summary>
            <returns>The absolute path of the file or directory in which access control information can be viewed.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify">
            <summary>Gets or sets the file or directory in which file data can be viewed and modified.</summary>
            <exception cref="T:System.NotSupportedException">The <see langword="get" /> accessor is called. The accessor is provided only for C# compiler compatibility.</exception>
            <returns>The absolute path of the file or directory in which file data can be viewed and modified.</returns>
        </member>
        <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Write">
            <summary>Gets or sets write access for the file or directory specified by the string value.</summary>
            <returns>The absolute path of the file or directory for write access.</returns>
        </member>
        <member name="T:System.Security.Permissions.GacIdentityPermission">
            <summary>Defines the identity permission for files originating in the global assembly cache. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.GacIdentityPermission" /> class.</summary>
        </member>
        <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.GacIdentityPermission" /> class with fully restricted <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="state" /> is not a valid <see cref="T:System.Security.Permissions.PermissionState" /> value.</exception>
        </member>
        <member name="M:System.Security.Permissions.GacIdentityPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)">
            <summary>Creates a permission from an XML encoding.</summary>
            <param name="securityElement">A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding to use to create the permission.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="securityElement" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="securityElement" /> is not a valid permission element.  
  
 -or-  
  
 The version number of <paramref name="securityElement" /> is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. The new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Indicates whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission object to test for the subset relationship. The permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.GacIdentityPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> that represents the XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="T:System.Security.Permissions.GacIdentityPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.GacIdentityPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.GacIdentityPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" /> value.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="action" /> parameter is not a valid <see cref="T:System.Security.Permissions.SecurityAction" /> value.</exception>
        </member>
        <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission">
            <summary>Creates a new <see cref="T:System.Security.Permissions.GacIdentityPermission" /> object.</summary>
            <returns>A <see cref="T:System.Security.Permissions.GacIdentityPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="T:System.Security.Permissions.HostProtectionAttribute">
            <summary>Allows the use of declarative security actions to determine host protection requirements. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> class with default values.</summary>
        </member>
        <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" /> value.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="action" /> is not <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.HostProtectionAttribute.CreatePermission">
            <summary>Creates and returns a new host protection permission.</summary>
            <returns>An <see cref="T:System.Security.IPermission" /> that corresponds to the current attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt">
            <summary>Gets or sets a value indicating whether external process management is exposed.</summary>
            <returns>
                <see langword="true" /> if external process management is exposed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalThreading">
            <summary>Gets or sets a value indicating whether external threading is exposed.</summary>
            <returns>
                <see langword="true" /> if external threading is exposed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort">
            <summary>Gets or sets a value indicating whether resources might leak memory if the operation is terminated.</summary>
            <returns>
                <see langword="true" /> if resources might leak memory on termination; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.HostProtectionAttribute.Resources">
            <summary>Gets or sets flags specifying categories of functionality that are potentially harmful to the host.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.HostProtectionResource" /> values. The default is <see cref="F:System.Security.Permissions.HostProtectionResource.None" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure">
            <summary>Gets or sets a value indicating whether the security infrastructure is exposed.</summary>
            <returns>
                <see langword="true" /> if the security infrastructure is exposed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt">
            <summary>Gets or sets a value indicating whether self-affecting process management is exposed.</summary>
            <returns>
                <see langword="true" /> if self-affecting process management is exposed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading">
            <summary>Gets or sets a value indicating whether self-affecting threading is exposed.</summary>
            <returns>
                <see langword="true" /> if self-affecting threading is exposed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.HostProtectionAttribute.SharedState">
            <summary>Gets or sets a value indicating whether shared state is exposed.</summary>
            <returns>
                <see langword="true" /> if shared state is exposed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.HostProtectionAttribute.Synchronization">
            <summary>Gets or sets a value indicating whether synchronization is exposed.</summary>
            <returns>
                <see langword="true" /> if synchronization is exposed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.HostProtectionAttribute.UI">
            <summary>Gets or sets a value indicating whether the user interface is exposed.</summary>
            <returns>
                <see langword="true" /> if the user interface is exposed; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="T:System.Security.Permissions.HostProtectionResource">
            <summary>Specifies categories of functionality potentially harmful to the host if invoked by a method or class.</summary>
        </member>
        <member name="F:System.Security.Permissions.HostProtectionResource.All">
            <summary>Exposes all host resources.</summary>
        </member>
        <member name="F:System.Security.Permissions.HostProtectionResource.ExternalProcessMgmt">
            <summary>Might create or destroy other processes.</summary>
        </member>
        <member name="F:System.Security.Permissions.HostProtectionResource.ExternalThreading">
            <summary>Creates or manipulates threads other than its own, which might be harmful to the host.</summary>
        </member>
        <member name="F:System.Security.Permissions.HostProtectionResource.MayLeakOnAbort">
            <summary>Might cause a resource leak on termination, if not protected by a safe handle or some other means of ensuring the release of resources.</summary>
        </member>
        <member name="F:System.Security.Permissions.HostProtectionResource.None">
            <summary>Exposes no host resources.</summary>
        </member>
        <member name="F:System.Security.Permissions.HostProtectionResource.SecurityInfrastructure">
            <summary>Exposes the security infrastructure.</summary>
        </member>
        <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingProcessMgmt">
            <summary>Might exit the current process, terminating the server.</summary>
        </member>
        <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingThreading">
            <summary>Manipulates threads in a way that only affects user code.</summary>
        </member>
        <member name="F:System.Security.Permissions.HostProtectionResource.SharedState">
            <summary>Exposes state that might be shared between threads.</summary>
        </member>
        <member name="F:System.Security.Permissions.HostProtectionResource.Synchronization">
            <summary>Exposes synchronization.</summary>
        </member>
        <member name="F:System.Security.Permissions.HostProtectionResource.UI">
            <summary>Exposes the user interface.</summary>
        </member>
        <member name="T:System.Security.Permissions.IsolatedStorageContainment">
            <summary>Specifies the permitted use of isolated storage.</summary>
        </member>
        <member name="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser">
            <summary>Unlimited administration ability for the user store. Allows browsing and deletion of the entire user store, but not read access other than the user's own domain/assembly identity.</summary>
        </member>
        <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine">
            <summary>Storage is isolated first by computer and then by application. This provides a data store for the application that is accessible in any domain context. The per-application data compartment requires additional trust because it potentially provides a "tunnel" between applications that could compromise the data isolation of applications in particular Web sites.</summary>
        </member>
        <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser">
            <summary>Storage is isolated first by user and then by application evidence. Storage will roam if Windows user data roaming is enabled. This provides a data store for the application that is accessible in any domain context. The per-application data compartment requires additional trust because it potentially provides a "tunnel" between applications that could compromise the data isolation of applications in particular Web sites.</summary>
        </member>
        <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser">
            <summary>Storage is isolated first by user and then by application. Storage is also isolated by computer. This provides a data store for the application that is accessible in any domain context. The per-application data compartment requires additional trust because it potentially provides a "tunnel" between applications that could compromise the data isolation of applications in particular Web sites.</summary>
        </member>
        <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine">
            <summary>Storage is isolated first by computer and then by code assembly. This provides a data store for the assembly that is accessible in any domain context. The per-assembly data compartment requires additional trust because it potentially provides a "tunnel" between applications that could compromise the data isolation of applications in particular Web sites.</summary>
        </member>
        <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser">
            <summary>Storage is isolated first by user and then by assembly evidence. Storage will roam if Windows user data roaming is enabled. This provides a data store for the assembly that is accessible in any domain context. The per-assembly data compartment requires additional trust because it potentially provides a "tunnel" between applications that could compromise the data isolation of applications in particular Web sites.</summary>
        </member>
        <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser">
            <summary>Storage is isolated first by user and then by code assembly. Storage is also isolated by computer. This provides a data store for the assembly that is accessible in any domain context. The per-assembly data compartment requires additional trust because it potentially provides a "tunnel" between applications that could compromise the data isolation of applications in particular Web sites.</summary>
        </member>
        <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine">
            <summary>Storage is isolated first by computer and then by domain and assembly. Data can only be accessed within the context of the same application and only when run on the same computer. This is helpful when a third-party assembly wants to keep a private data store.</summary>
        </member>
        <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser">
            <summary>Storage is isolated first by user and then by domain and assembly. Storage will roam if Windows user data roaming is enabled. Data can only be accessed within the context of the same application and only when run by the same user. This is helpful when a third-party assembly wants to keep a private data store.</summary>
        </member>
        <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser">
            <summary>Storage is isolated first by user and then by domain and assembly. Storage is also isolated by computer. Data can only be accessed within the context of the same application and only when run by the same user. This is helpful when a third-party assembly wants to keep a private data store.</summary>
        </member>
        <member name="F:System.Security.Permissions.IsolatedStorageContainment.None">
            <summary>Use of isolated storage is not allowed.</summary>
        </member>
        <member name="F:System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage">
            <summary>Use of isolated storage is allowed without restriction. Code has full access to any part of the user store, regardless of the identity of the domain or assembly. This use of isolated storage includes the ability to enumerate the contents of the isolated storage data store.</summary>
        </member>
        <member name="T:System.Security.Permissions.IsolatedStorageFilePermission">
            <summary>Specifies the allowed usage of a private virtual file system. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> class with either fully restricted or unrestricted permission as specified.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission object. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" />.</summary>
            <returns>An <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="T:System.Security.Permissions.IsolatedStoragePermission">
            <summary>Represents access to generic isolated storage capabilities.</summary>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> class with either restricted or unrestricted permission as specified.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="esd">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="esd" /> parameter's version number is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStoragePermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="P:System.Security.Permissions.IsolatedStoragePermission.UsageAllowed">
            <summary>Gets or sets the type of isolated storage containment allowed.</summary>
            <returns>One of the <see cref="T:System.Security.Permissions.IsolatedStorageContainment" /> values.</returns>
        </member>
        <member name="P:System.Security.Permissions.IsolatedStoragePermission.UserQuota">
            <summary>Gets or sets the quota on the overall size of each user's total store.</summary>
            <returns>The size, in bytes, of the resource allocated to the user.</returns>
        </member>
        <member name="T:System.Security.Permissions.IsolatedStoragePermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> to be applied to code using declarative security.</summary>
        </member>
        <member name="M:System.Security.Permissions.IsolatedStoragePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.IsolatedStoragePermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UsageAllowed">
            <summary>Gets or sets the level of isolated storage that should be declared.</summary>
            <returns>One of the <see cref="T:System.Security.Permissions.IsolatedStorageContainment" /> values.</returns>
        </member>
        <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UserQuota">
            <summary>Gets or sets the maximum user storage quota size.</summary>
            <returns>The maximum user storage quota size in bytes.</returns>
        </member>
        <member name="T:System.Security.Permissions.IUnrestrictedPermission">
            <summary>Allows a permission to expose an unrestricted state.</summary>
        </member>
        <member name="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
            <summary>Returns a value indicating whether unrestricted access to the resource protected by the permission is allowed.</summary>
            <returns>
                <see langword="true" /> if unrestricted use of the resource protected by the permission is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Security.Permissions.KeyContainerPermission">
            <summary>Controls the ability to access key containers. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.KeyContainerPermission" /> class with the specified access.</summary>
            <param name="flags">A bitwise combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="flags" /> is not a valid combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values.</exception>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.KeyContainerPermission" /> class with the specified global access and specific key container access rights.</summary>
            <param name="flags">A bitwise combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values.</param>
            <param name="accessList">An array of <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objects identifying specific key container access rights.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="flags" /> is not a valid combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="accessList" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.KeyContainerPermission" /> class with either restricted or unrestricted permission.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="state" /> is not a valid <see cref="T:System.Security.Permissions.PermissionState" /> value.</exception>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="securityElement">A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding used to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="securityElement" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="securityElement" /> is not a valid permission element.  
  
 -or-  
  
 The version number of <paramref name="securityElement" /> is not supported.</exception>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> and does not specify a permission of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission to test for the subset relationship. This permission must be the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> and does not specify a permission of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermission.IsUnrestricted">
            <summary>Determines whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> that contains an XML encoding of the permission, including state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> and does not specify a permission of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermission.AccessEntries">
            <summary>Gets the collection of <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objects associated with the current permission.</summary>
            <returns>A <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /> containing the <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objects for this <see cref="T:System.Security.Permissions.KeyContainerPermission" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermission.Flags">
            <summary>Gets the key container permission flags that apply to all key containers associated with the permission.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values.</returns>
        </member>
        <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntry">
            <summary>Specifies access rights for specific key containers. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> class, using the specified cryptographic service provider (CSP) parameters and access permissions.</summary>
            <param name="parameters">A <see cref="T:System.Security.Cryptography.CspParameters" /> object that contains the cryptographic service provider (CSP) parameters.</param>
            <param name="flags">A bitwise combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values.</param>
            <exception cref="T:System.ArgumentException">The resulting entry would have unrestricted access.</exception>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> class, using the specified key container name and access permissions.</summary>
            <param name="keyContainerName">The name of the key container.</param>
            <param name="flags">A bitwise combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values.</param>
            <exception cref="T:System.ArgumentException">The resulting entry would have unrestricted access.</exception>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> class with the specified property values.</summary>
            <param name="keyStore">The name of the key store.</param>
            <param name="providerName">The name of the provider.</param>
            <param name="providerType">The type code for the provider. See the <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType" /> property for values.</param>
            <param name="keyContainerName">The name of the key container.</param>
            <param name="keySpec">The key specification. See the <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec" /> property for values.</param>
            <param name="flags">A bitwise combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values.</param>
            <exception cref="T:System.ArgumentException">The resulting entry would have unrestricted access.</exception>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object is equal to the current instance.</summary>
            <param name="o">The <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> is equal to the current <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode">
            <summary>Gets a hash code for the current instance that is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
            <returns>A hash code for the current <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags">
            <summary>Gets or sets the key container permissions.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values. The default is <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName">
            <summary>Gets or sets the key container name.</summary>
            <exception cref="T:System.ArgumentException">The resulting entry would have unrestricted access.</exception>
            <returns>The name of the key container.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec">
            <summary>Gets or sets the key specification.</summary>
            <exception cref="T:System.ArgumentException">The resulting entry would have unrestricted access.</exception>
            <returns>One of the AT_ values defined in the Wincrypt.h header file.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore">
            <summary>Gets or sets the name of the key store.</summary>
            <exception cref="T:System.ArgumentException">The resulting entry would have unrestricted access.</exception>
            <returns>The name of the key store.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName">
            <summary>Gets or sets the provider name.</summary>
            <exception cref="T:System.ArgumentException">The resulting entry would have unrestricted access.</exception>
            <returns>The name of the provider.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType">
            <summary>Gets or sets the provider type.</summary>
            <exception cref="T:System.ArgumentException">The resulting entry would have unrestricted access.</exception>
            <returns>One of the PROV_ values defined in the Wincrypt.h header file.</returns>
        </member>
        <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
            <summary>Represents a collection of <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objects. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.#ctor" />
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
            <summary>Adds a <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object to the collection.</summary>
            <param name="accessEntry">The <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object to add.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="accessEntry" /> is <see langword="null" />.</exception>
            <returns>The index at which the new element was inserted.</returns>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear">
            <summary>Removes all the <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objects from the collection.</summary>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Array,System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
            <param name="array">The one-dimensional array as the destination for the elements copied from <see cref="T:System.Collections.ICollection" />. The array must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)">
            <summary>Copies the elements of the collection to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> array that is the destination of the elements copied from the current collection.</param>
            <param name="index">The index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="array" /> is multidimensional.  
  
 -or-  
  
 The number of elements in the collection is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator">
            <summary>Returns a <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> object that can be used to iterate through the objects in the collection.</summary>
            <returns>A <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
            <summary>Gets the index in the collection of the specified <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object, if it exists in the collection.</summary>
            <param name="accessEntry">The <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object to locate.</param>
            <returns>The index of the specified <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object in the collection, or -1 if no match is found.</returns>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
            <summary>Removes the specified <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object from the collection.</summary>
            <param name="accessEntry">The <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object to remove.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="accessEntry" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns a <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> object that can be used to iterate through the objects in the collection.</summary>
            <returns>A <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count">
            <summary>Gets the number of items in the collection.</summary>
            <returns>The number of <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objects in the collection.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized">
            <summary>Gets a value indicating whether the collection is synchronized (thread safe).</summary>
            <returns>
                <see langword="false" /> in all cases.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)">
            <summary>Gets the item at the specified index in the collection.</summary>
            <param name="index">The zero-based index of the element to access.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is greater than or equal to the collection count.</exception>
            <exception cref="T:System.InvalidOperationException">
                <paramref name="index" /> is negative.</exception>
            <returns>The <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object at the specified index in the collection.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot">
            <summary>Gets an object that can be used to synchronize access to the collection.</summary>
            <returns>An object that can be used to synchronize access to the collection.</returns>
        </member>
        <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
            <summary>Represents the enumerator for <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objects in a <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />.</summary>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
            <summary>Moves to the next element in the collection.</summary>
            <returns>
                <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
            <summary>Resets the enumerator to the beginning of the collection.</summary>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
            <summary>Gets the current entry in the collection.</summary>
            <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> property is accessed before first calling the <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> method. The cursor is located before the first object in the collection.  
  
 -or-  
  
 The <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> property is accessed after a call to the <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> method returns <see langword="false" />, which indicates that the cursor is located after the last object in the collection.</exception>
            <returns>The current <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object in the collection.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
            <summary>Gets the current object in the collection.</summary>
            <returns>The current object in the collection.</returns>
        </member>
        <member name="T:System.Security.Permissions.KeyContainerPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.KeyContainerPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.KeyContainerPermissionAttribute" /> class with the specified security action.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.KeyContainerPermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.KeyContainerPermission" /> that corresponds to the attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.Flags">
            <summary>Gets or sets the key container permissions.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> values. The default is <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName">
            <summary>Gets or sets the name of the key container.</summary>
            <returns>The name of the key container.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec">
            <summary>Gets or sets the key specification.</summary>
            <returns>One of the AT_ values defined in the Wincrypt.h header file.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore">
            <summary>Gets or sets the name of the key store.</summary>
            <returns>The name of the key store. The default is "*".</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName">
            <summary>Gets or sets the provider name.</summary>
            <returns>The name of the provider.</returns>
        </member>
        <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType">
            <summary>Gets or sets the provider type.</summary>
            <returns>One of the PROV_ values defined in the Wincrypt.h header file.</returns>
        </member>
        <member name="T:System.Security.Permissions.KeyContainerPermissionFlags">
            <summary>Specifies the type of key container access allowed.</summary>
        </member>
        <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags">
            <summary>Create, decrypt, delete, and open a key container; export and import a key; sign files using a key; and view and change the access control list for a key container.</summary>
        </member>
        <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl">
            <summary>Change the access control list (ACL) for a key container.</summary>
        </member>
        <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Create">
            <summary>
                <para>Create a key container.</para>
                <para>Creating a key container also creates a file on disk. It is very important that any key container that is created is removed when it is no longer in use.</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt">
            <summary>
                <para>Decrypt a key container.</para>
                <para>Decryption is a privileged operation because it uses the private key.</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete">
            <summary>
                <para>Delete a key container.</para>
                <para>Deleting a key container can constitute a denial of service attack because it prevents the use of files encrypted or signed with the key. Therefore, deletion is a privileged operation.</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Export">
            <summary>
                <para>Export a key from a key container.</para>
                <para>The ability to export a key is potentially harmful because it removes the exclusivity of the key.</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Import">
            <summary>
                <para>Import a key into a key container.</para>The ability to import a key can be as harmful as the ability to delete a container because importing a key into a named key container replaces the existing key.<para /></summary>
        </member>
        <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags">
            <summary>No access to a key container.</summary>
        </member>
        <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Open">
            <summary>
                <para>Open a key container and use the public key.</para>
                <para>
                    <see langword="Open" /> does not give permission to sign or decrypt files using the private key, but it does allow a user to verify file signatures and to encrypt files. Only the owner of the key is able to decrypt these files using the private key.</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign">
            <summary>
                <para>Sign a file using a key.</para>
                <para>The ability to sign a file is potentially harmful because it can allow a user to sign a file using another user's key.</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl">
            <summary>View the access control list (ACL) for a key container.</summary>
        </member>
        <member name="T:System.Security.Permissions.MediaPermission">
            <summary>The <see cref="T:System.Security.Permissions.MediaPermission" /> describes a set of security permissions that controls the ability for audio, image, and video media to work in a partial-trust Windows Presentation Foundation (WPF) application.</summary>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class.</summary>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class by specifying the audio permission level.</summary>
            <param name="permissionAudio">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class by specifying the audio, video, and image permission levels.</summary>
            <param name="permissionAudio">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</param>
            <param name="permissionVideo">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
            <param name="permissionImage">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class by specifying the image permission level.</summary>
            <param name="permissionImage">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</param>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class by specifying the video permission level.</summary>
            <param name="permissionVideo">An enumerated value of <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</param>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.MediaPermission" /> class by specifying a permission state.</summary>
            <param name="state">An enumerated value of <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="securityElement">The XML encoding to use to reconstruct the permission.</param>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <returns>The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the audio, image, and video permissions are all unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.MediaPermission.Audio">
            <summary>Gets the current value of the audio permission level.</summary>
            <returns>The audio permission level.</returns>
        </member>
        <member name="P:System.Security.Permissions.MediaPermission.Image">
            <summary>Gets the current value of the image permission level.</summary>
            <returns>The image permission level.</returns>
        </member>
        <member name="P:System.Security.Permissions.MediaPermission.Video">
            <summary>Gets the current value of the video permission level.</summary>
            <returns>The media permission level.</returns>
        </member>
        <member name="T:System.Security.Permissions.MediaPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.MediaPermission" /> to be applied to code using declarative security.</summary>
        </member>
        <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.MediaPermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.MediaPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
            <summary>Gets or sets the audio permission level for the <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
            <returns>The state of the <see cref="T:System.Security.Permissions.MediaPermissionAudio" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
            <summary>Gets or sets the image permission level for the <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
            <returns>The state of the <see cref="T:System.Security.Permissions.MediaPermissionImage" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
            <summary>Gets or sets the video permission level for the <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />.</summary>
            <returns>The state of the <see cref="T:System.Security.Permissions.MediaPermissionVideo" />.</returns>
        </member>
        <member name="T:System.Security.Permissions.MediaPermissionAudio">
            <summary>Specifies the permission level for audio.</summary>
        </member>
        <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
            <summary>Permission that allows unrestricted audio playback.</summary>
        </member>
        <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
            <summary>Permission that denies all audio playback.</summary>
        </member>
        <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
            <summary>Permission that allows safe, limited audio playback, which includes denying stream access to the image file.</summary>
        </member>
        <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
            <summary>Permission that only allows audio playback of files that are located at the application's site of origin.</summary>
        </member>
        <member name="T:System.Security.Permissions.MediaPermissionImage">
            <summary>Specifies the permission level for images.</summary>
        </member>
        <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
            <summary>Permission that allows unrestricted image display.</summary>
        </member>
        <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
            <summary>Permission that denies all images to be displayed.</summary>
        </member>
        <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
            <summary>Permission that allows safe, limited image display, which includes denying stream access to the image file.</summary>
        </member>
        <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
            <summary>Permission that only allows display of images that are located at the application's site of origin.</summary>
        </member>
        <member name="T:System.Security.Permissions.MediaPermissionVideo">
            <summary>Specifies the permission level for video.</summary>
        </member>
        <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
            <summary>Permission that allows unrestricted video playback.</summary>
        </member>
        <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
            <summary>Permission that denies all video playback.</summary>
        </member>
        <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
            <summary>Permission that allows safe, limited video playback, which includes denying stream access to the image file.</summary>
        </member>
        <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
            <summary>Permission that only allows video playback of files that are located at the application's site of origin.</summary>
        </member>
        <member name="T:System.Security.Permissions.PermissionSetAttribute">
            <summary>Allows security actions for a <see cref="T:System.Security.PermissionSet" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.PermissionSetAttribute" /> class with the specified security action.</summary>
            <param name="action">One of the enumeration values that specifies a security action.</param>
        </member>
        <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermission">
            <summary>This method is not used.</summary>
            <returns>A null reference (<see langword="nothing" /> in Visual Basic) in all cases.</returns>
        </member>
        <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet">
            <summary>Creates and returns a new permission set based on this permission set attribute object.</summary>
            <returns>A new permission set.</returns>
        </member>
        <member name="P:System.Security.Permissions.PermissionSetAttribute.File">
            <summary>Gets or sets a file containing the XML representation of a custom permission set to be declared.</summary>
            <returns>The physical path to the file containing the XML representation of the permission set.</returns>
        </member>
        <member name="P:System.Security.Permissions.PermissionSetAttribute.Hex">
            <summary>Gets or sets the hexadecimal representation of the XML encoded permission set.</summary>
            <returns>The hexadecimal representation of the XML encoded permission set.</returns>
        </member>
        <member name="P:System.Security.Permissions.PermissionSetAttribute.Name">
            <summary>Gets or sets the name of the permission set.</summary>
            <returns>The name of an immutable <see cref="T:System.Security.NamedPermissionSet" /> (one of several permission sets that are contained in the default policy and cannot be altered).</returns>
        </member>
        <member name="P:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded">
            <summary>Gets or sets a value indicating whether the file specified by <see cref="P:System.Security.Permissions.PermissionSetAttribute.File" /> is Unicode or ASCII encoded.</summary>
            <returns>
                <see langword="true" /> if the file is Unicode encoded; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.PermissionSetAttribute.XML">
            <summary>Gets or sets the XML representation of a permission set.</summary>
            <returns>The XML representation of a permission set.</returns>
        </member>
        <member name="T:System.Security.Permissions.PrincipalPermission">
            <summary>Allows checks against the active principal (see <see cref="T:System.Security.Principal.IPrincipal" />) using the language constructs defined for both declarative and imperative security actions. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" /> and <paramref name="role" />.</summary>
            <param name="name">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</param>
            <param name="role">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</param>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermission" /> class for the specified <paramref name="name" />, <paramref name="role" />, and authentication status.</summary>
            <param name="name">The name of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user.</param>
            <param name="role">The role of the <see cref="T:System.Security.Principal.IPrincipal" /> object's user (for example, Administrator).</param>
            <param name="isAuthenticated">
                <see langword="true" /> to signify that the user is authenticated; otherwise, <see langword="false" />.</param>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.Demand">
            <summary>Determines at run time whether the current principal matches the principal specified by the current permission.</summary>
            <exception cref="T:System.Security.SecurityException">The current principal does not pass the security check for the principal specified by the current permission.  
  
 -or-  
  
 The current <see cref="T:System.Security.Principal.IPrincipal" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> object is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</summary>
            <param name="o">The <see cref="T:System.Security.Permissions.PrincipalPermission" /> object to compare with the current <see cref="T:System.Security.Permissions.PrincipalPermission" />.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Security.Permissions.PrincipalPermission" /> is equal to the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="elem">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="elem" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="elem" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="elem" /> parameter's version number is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.GetHashCode">
            <summary>Gets a hash code for the <see cref="T:System.Security.Permissions.PrincipalPermission" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
            <returns>A hash code for the current <see cref="T:System.Security.Permissions.PrincipalPermission" /> object.</returns>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission will be <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is an object that is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.ToString">
            <summary>Creates and returns a string representing the current permission.</summary>
            <returns>A representation of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="other">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="other" /> parameter is an object that is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="T:System.Security.Permissions.PrincipalPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.PrincipalPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.PrincipalPermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.PrincipalPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated">
            <summary>Gets or sets a value indicating whether the current principal has been authenticated by the underlying role-based security provider.</summary>
            <returns>
                <see langword="true" /> if the current principal has been authenticated; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Name">
            <summary>Gets or sets the name of the identity associated with the current principal.</summary>
            <returns>A name to match against that provided by the underlying role-based security provider.</returns>
        </member>
        <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Role">
            <summary>Gets or sets membership in a specified security role.</summary>
            <returns>The name of a role from the underlying role-based security provider.</returns>
        </member>
        <member name="T:System.Security.Permissions.PublisherIdentityPermission">
            <summary>Represents the identity of a software publisher. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> class with the specified Authenticode X.509v3 certificate.</summary>
            <param name="certificate">An X.509 certificate representing the software publisher's identity.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="certificate" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="certificate" /> parameter is not a valid certificate.</exception>
        </member>
        <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.PublisherIdentityPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="esd">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="esd" /> parameter's version number is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.PublisherIdentityPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  
  
 -or-  
  
 The two permissions are not equal.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.PublisherIdentityPermission.Certificate">
            <summary>Gets or sets an Authenticode X.509v3 certificate that represents the identity of the software publisher.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> is not a valid certificate.</exception>
            <exception cref="T:System.NotSupportedException">The property cannot be set because the identity is ambiguous.</exception>
            <returns>An X.509 certificate representing the identity of the software publisher.</returns>
        </member>
        <member name="T:System.Security.Permissions.PublisherIdentityPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.PublisherIdentityPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new instance of <see cref="T:System.Security.Permissions.PublisherIdentityPermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile">
            <summary>Gets or sets a certification file containing an Authenticode X.509v3 certificate.</summary>
            <returns>The file path of an X.509 certificate file (usually has the extension.cer).</returns>
        </member>
        <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile">
            <summary>Gets or sets a signed file from which to extract an Authenticode X.509v3 certificate.</summary>
            <returns>The file path of a file signed with the Authenticode signature.</returns>
        </member>
        <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate">
            <summary>Gets or sets an Authenticode X.509v3 certificate that identifies the publisher of the calling code.</summary>
            <returns>A hexadecimal representation of the X.509 certificate.</returns>
        </member>
        <member name="T:System.Security.Permissions.ReflectionPermission">
            <summary>Controls access to non-public types and members through the <see cref="N:System.Reflection" /> APIs. Controls some features of the <see cref="N:System.Reflection.Emit" /> APIs.</summary>
        </member>
        <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class with either fully restricted or unrestricted permission as specified.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermission" /> class with the specified access.</summary>
            <param name="flag">One of the <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="flag" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.ReflectionPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="esd">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="esd" /> parameter's version number is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.ReflectionPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="other">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="other" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.ReflectionPermission.Flags">
            <summary>Gets or sets the type of reflection allowed for the current permission.</summary>
            <exception cref="T:System.ArgumentException">An attempt is made to set this property to an invalid value. See <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> for the valid values.</exception>
            <returns>The set flags for the current permission.</returns>
        </member>
        <member name="T:System.Security.Permissions.ReflectionPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.ReflectionPermission" /> to be applied to code using declarative security.</summary>
        </member>
        <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ReflectionPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.ReflectionPermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.ReflectionPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
            <summary>Gets or sets the current allowed uses of reflection.</summary>
            <exception cref="T:System.ArgumentException">An attempt is made to set this property to an invalid value. See <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> for the valid values.</exception>
            <returns>One or more of the <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> values combined using a bitwise OR.</returns>
        </member>
        <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess">
            <summary>Gets or sets a value that indicates whether invocation of operations on non-public members is allowed.</summary>
            <returns>
                <see langword="true" /> if invocation of operations on non-public members is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
            <summary>Gets or sets a value that indicates whether use of certain features in <see cref="N:System.Reflection.Emit" />, such as emitting debug symbols, is allowed.</summary>
            <returns>
                <see langword="true" /> if use of the affected features is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
            <summary>Gets or sets a value that indicates whether restricted invocation of non-public members is allowed. Restricted invocation means that the grant set of the assembly that contains the non-public member that is being invoked must be equal to, or a subset of, the grant set of the invoking assembly.</summary>
            <returns>
                <see langword="true" /> if restricted invocation of non-public members is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
            <summary>Gets or sets a value that indicates whether reflection on members that are not visible is allowed.</summary>
            <returns>
                <see langword="true" /> if reflection on members that are not visible is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Security.Permissions.ReflectionPermissionFlag">
            <summary>Specifies the permitted use of the <see cref="N:System.Reflection" /> and <see cref="N:System.Reflection.Emit" /> namespaces.</summary>
        </member>
        <member name="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
            <summary>
                <see langword="TypeInformation" /> , <see langword="MemberAccess" />, and <see langword="ReflectionEmit" /> are set. <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> does not include <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />.</summary>
        </member>
        <member name="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
            <summary>Invocation operations on all members are allowed, regardless of grant set. If this flag is not set, invocation operations are allowed only on visible members.</summary>
        </member>
        <member name="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
            <summary>Enumeration of types and members is allowed. Invocation operations are allowed on visible types and members.</summary>
        </member>
        <member name="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
            <summary>Emitting debug symbols is allowed. Beginning with the .NET Framework 2.0 Service Pack 1, this flag is no longer required to emit code.</summary>
        </member>
        <member name="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
            <summary>Restricted member access is provided for partially trusted code. Partially trusted code can access nonpublic types and members, but only if the grant set of the partially trusted code includes all permissions in the grant set of the assembly that contains the nonpublic types and members being accessed. This flag is new in the .NET Framework 2.0 SP1.</summary>
        </member>
        <member name="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
            <summary>This flag is obsolete. No flags are necessary to enumerate types and members and to examine their metadata. Use <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /> instead.</summary>
        </member>
        <member name="T:System.Security.Permissions.RegistryPermission">
            <summary>Controls the ability to access registry variables. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.RegistryPermission" /> class with either fully restricted or unrestricted permission as specified.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.RegistryPermission" /> class with the specified access to the specified registry variables and the specified access rights to registry control information.</summary>
            <param name="access">One of the <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> values.</param>
            <param name="control">A bitwise combination of the <see cref="T:System.Security.AccessControl.AccessControlActions" /> values.</param>
            <param name="pathList">A list of registry variables (semicolon-separated) to which access is granted.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
 -or-  
  
 The <paramref name="pathList" /> parameter is not a valid string.</exception>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.RegistryPermission" /> class with the specified access to the specified registry variables.</summary>
            <param name="access">One of the <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> values.</param>
            <param name="pathList">A list of registry variables (semicolon-separated) to which access is granted.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
 -or-  
  
 The <paramref name="pathList" /> parameter is not a valid string.</exception>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
            <summary>Adds access for the specified registry variables to the existing state of the permission, specifying registry permission access and access control actions.</summary>
            <param name="access">One of the <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> values.</param>
            <param name="actions">One of the <see cref="T:System.Security.AccessControl.AccessControlActions" /> values.</param>
            <param name="pathList">A list of registry variables (separated by semicolons).</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
 -or-  
  
 The <paramref name="pathList" /> parameter is not a valid string.</exception>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
            <summary>Adds access for the specified registry variables to the existing state of the permission.</summary>
            <param name="access">One of the <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> values.</param>
            <param name="pathList">A list of registry variables (semicolon-separated).</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
 -or-  
  
 The <paramref name="pathList" /> parameter is not a valid string.</exception>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="elem">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="elem" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="elem" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="elem" /> parameter's version number is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)">
            <summary>Gets paths for all registry variables with the specified <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</summary>
            <param name="access">One of the <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> values that represents a single type of registry variable access.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="access" /> is not a valid value of <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
 -or-  
  
 <paramref name="access" /> is <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" />, which represents more than one type of registry variable access, or <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" />, which does not represent any type of registry variable access.</exception>
            <returns>A list of the registry variables (semicolon-separated) with the specified <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
            <summary>Sets new access for the specified registry variable names to the existing state of the permission.</summary>
            <param name="access">One of the <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> values.</param>
            <param name="pathList">A list of registry variables (semicolon-separated).</param>
            <exception cref="T:System.ArgumentException">The <paramref name="access" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />.  
  
 -or-  
  
 The <paramref name="pathList" /> parameter is not a valid string.</exception>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="other">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="other" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="T:System.Security.Permissions.RegistryPermissionAccess">
            <summary>Specifies the permitted access to registry keys and values.</summary>
        </member>
        <member name="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess">
            <summary>
                <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" />, and <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /> access to registry variables. <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" /> represents multiple <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> values and causes an <see cref="T:System.ArgumentException" /> when used as the <paramref name="access" /> parameter for the <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" /> method, which expects a single value.</summary>
        </member>
        <member name="F:System.Security.Permissions.RegistryPermissionAccess.Create">
            <summary>Create access to registry variables.</summary>
        </member>
        <member name="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess">
            <summary>No access to registry variables. <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" /> represents no valid <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> values and causes an <see cref="T:System.ArgumentException" /> when used as the parameter for <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />, which expects a single value.</summary>
        </member>
        <member name="F:System.Security.Permissions.RegistryPermissionAccess.Read">
            <summary>Read access to registry variables.</summary>
        </member>
        <member name="F:System.Security.Permissions.RegistryPermissionAccess.Write">
            <summary>Write access to registry variables.</summary>
        </member>
        <member name="T:System.Security.Permissions.RegistryPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.RegistryPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.RegistryPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="action" /> parameter is not a valid <see cref="T:System.Security.Permissions.SecurityAction" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.RegistryPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.RegistryPermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.RegistryPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.RegistryPermissionAttribute.All">
            <summary>Gets or sets full access for the specified registry keys.</summary>
            <exception cref="T:System.NotSupportedException">The get accessor is called; it is only provided for C# compiler compatibility.</exception>
            <returns>A semicolon-separated list of registry key paths, for full access.</returns>
        </member>
        <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl">
            <summary>Gets or sets change access control for the specified registry keys.</summary>
            <returns>A semicolon-separated list of registry key paths, for change access control. .</returns>
        </member>
        <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Create">
            <summary>Gets or sets create-level access for the specified registry keys.</summary>
            <returns>A semicolon-separated list of registry key paths, for create-level access.</returns>
        </member>
        <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Read">
            <summary>Gets or sets read access for the specified registry keys.</summary>
            <returns>A semicolon-separated list of registry key paths, for read access.</returns>
        </member>
        <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl">
            <summary>Gets or sets view access control for the specified registry keys.</summary>
            <returns>A semicolon-separated list of registry key paths, for view access control.</returns>
        </member>
        <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify">
            <summary>Gets or sets a specified set of registry keys that can be viewed and modified.</summary>
            <exception cref="T:System.NotSupportedException">The get accessor is called; it is only provided for C# compiler compatibility.</exception>
            <returns>A semicolon-separated list of registry key paths, for create, read, and write access.</returns>
        </member>
        <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Write">
            <summary>Gets or sets write access for the specified registry keys.</summary>
            <returns>A semicolon-separated list of registry key paths, for write access.</returns>
        </member>
        <member name="T:System.Security.Permissions.ResourcePermissionBase">
            <summary>Allows control of code access security permissions.</summary>
        </member>
        <member name="F:System.Security.Permissions.ResourcePermissionBase.Any">
            <summary>Specifies the character to be used to represent the any wildcard character.</summary>
        </member>
        <member name="F:System.Security.Permissions.ResourcePermissionBase.Local">
            <summary>Specifies the character to be used to represent a local reference.</summary>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> class.</summary>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> class with the specified level of access to resources at creation.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
            <summary>Adds a permission entry to the permission.</summary>
            <param name="entry">The <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> to add.</param>
            <exception cref="T:System.ArgumentNullException">The specified <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">The number of elements in the <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> property is not equal to the number of elements in the <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> property.  
  
 -or-  
  
 The <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> is already included in the permission.</exception>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.Clear">
            <summary>Clears the permission of the added permission entries.</summary>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.Copy">
            <summary>Creates and returns an identical copy of the current permission object.</summary>
            <returns>A copy of the current permission object.</returns>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="securityElement">The XML encoding to use to reconstruct the security object.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="securityElement" /> parameter is not a valid permission element.  
  
 -or-  
  
 The version number of the <paramref name="securityElement" /> parameter is not supported.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="securityElement" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries">
            <summary>Returns an array of the <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> objects added to this permission.</summary>
            <returns>An array of <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> objects that were added to this permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission object that is the intersection of the current permission object and a target permission object.</summary>
            <param name="target">A permission object of the same type as the current permission object.</param>
            <exception cref="T:System.ArgumentException">The target permission object is not of the same type as the current permission object.</exception>
            <returns>A new permission object that represents the intersection of the current object and the specified target. This object is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission object is a subset of the specified permission.</summary>
            <param name="target">A permission object that is to be tested for the subset relationship.</param>
            <returns>
                <see langword="true" /> if the current permission object is a subset of the specified permission object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted">
            <summary>Gets a value indicating whether the permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
            <summary>Removes a permission entry from the permission.</summary>
            <param name="entry">The <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> to remove.</param>
            <exception cref="T:System.ArgumentNullException">The specified <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">The number of elements in the <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> property is not equal to the number of elements in the <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> property.  
  
 -or-  
  
 The <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> is not in the permission.</exception>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.ToXml">
            <summary>Creates and returns an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)">
            <summary>Creates a permission object that combines the current permission object and the target permission object.</summary>
            <param name="target">A permission object to combine with the current permission object. It must be of the same type as the current permission object.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> permission object is not of the same type as the current permission object.</exception>
            <returns>A new permission object that represents the union of the current permission object and the specified permission object.</returns>
        </member>
        <member name="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType">
            <summary>Gets or sets an enumeration value that describes the types of access that you are giving the resource.</summary>
            <exception cref="T:System.ArgumentNullException">The property value is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The property value is not an enumeration value.</exception>
            <returns>An enumeration value that is derived from <see cref="T:System.Type" /> and describes the types of access that you are giving the resource.</returns>
        </member>
        <member name="P:System.Security.Permissions.ResourcePermissionBase.TagNames">
            <summary>Gets or sets an array of strings that identify the resource you are protecting.</summary>
            <exception cref="T:System.ArgumentNullException">The property value is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The length of the array is 0.</exception>
            <returns>An array of strings that identify the resource you are trying to protect.</returns>
        </member>
        <member name="T:System.Security.Permissions.ResourcePermissionBaseEntry">
            <summary>Defines the smallest unit of a code access security permission set.</summary>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> class.</summary>
        </member>
        <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> class with the specified permission access and permission access path.</summary>
            <param name="permissionAccess">The integer representation of the permission access level enumeration value. The <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess" /> property is set to this value.</param>
            <param name="permissionAccessPath">The array of strings that identify the resource you are protecting. The <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> property is set to this value.</param>
            <exception cref="T:System.ArgumentNullException">The specified <paramref name="permissionAccessPath" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess">
            <summary>Gets an integer representation of the access level enumeration value.</summary>
            <returns>The access level enumeration value.</returns>
        </member>
        <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath">
            <summary>Gets an array of strings that identify the resource you are protecting.</summary>
            <returns>An array of strings that identify the resource you are protecting.</returns>
        </member>
        <member name="T:System.Security.Permissions.SecurityPermission">
            <summary>Describes a set of security permissions applied to code. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.SecurityPermission" /> class with either restricted or unrestricted permission as specified.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.SecurityPermissionFlag)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.SecurityPermission" /> class with the specified initial set state of the flags.</summary>
            <param name="flag">The initial state of the permission, represented by a bitwise OR combination of any permission bits defined by <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="flag" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.SecurityPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.SecurityPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="esd">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="esd" /> parameter's version number is not supported.</exception>
        </member>
        <member name="M:System.Security.Permissions.SecurityPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission object that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.SecurityPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.SecurityPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.SecurityPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.SecurityPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.SecurityPermission.Flags">
            <summary>Gets or sets the security permission flags.</summary>
            <exception cref="T:System.ArgumentException">An attempt is made to set this property to an invalid value. See <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> for the valid values.</exception>
            <returns>The state of the current permission, represented by a bitwise OR combination of any permission bits defined by <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</returns>
        </member>
        <member name="T:System.Security.Permissions.SiteIdentityPermission">
            <summary>Defines the identity permission for the Web site from which the code originates. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> class to represent the specified site identity.</summary>
            <param name="site">The site name or wildcard expression.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="site" /> parameter is not a valid string, or does not match a valid wildcard site name.</exception>
        </member>
        <member name="M:System.Security.Permissions.SiteIdentityPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="esd">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="esd" /> parameter's version number is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.SiteIdentityPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  
  
 -or-  
  
 The permissions are not equal and one is not a subset of the other.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.SiteIdentityPermission.Site">
            <summary>Gets or sets the current site.</summary>
            <exception cref="T:System.NotSupportedException">The site identity cannot be retrieved because it has an ambiguous identity.</exception>
            <returns>The current site.</returns>
        </member>
        <member name="T:System.Security.Permissions.SiteIdentityPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.SiteIdentityPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new instance of <see cref="T:System.Security.Permissions.SiteIdentityPermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.SiteIdentityPermissionAttribute.Site">
            <summary>Gets or sets the site name of the calling code.</summary>
            <returns>The site name to compare against the site name specified by the security provider.</returns>
        </member>
        <member name="T:System.Security.Permissions.StorePermission">
            <summary>Controls access to stores containing X.509 certificates. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StorePermission" /> class with either fully restricted or unrestricted permission state.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="state" /> is not a valid <see cref="T:System.Security.Permissions.PermissionState" /> value.</exception>
        </member>
        <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StorePermission" /> class with the specified access.</summary>
            <param name="flag">A bitwise combination of the <see cref="T:System.Security.Permissions.StorePermissionFlags" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="flag" /> is not a valid combination of <see cref="T:System.Security.Permissions.StorePermissionFlags" /> values.</exception>
        </member>
        <member name="M:System.Security.Permissions.StorePermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="securityElement">A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="securityElement" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="securityElement" /> is not a valid permission element.  
  
 -or-  
  
 The version number in <paramref name="securityElement" /> is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> s not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission to test for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.StorePermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.StorePermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> that contains an XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.StorePermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.StorePermission.Flags">
            <summary>Gets or sets the type of <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> access allowed by the current permission.</summary>
            <exception cref="T:System.ArgumentException">An attempt is made to set this property to an invalid value. See <see cref="T:System.Security.Permissions.StorePermissionFlags" /> for the valid values.</exception>
            <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.StorePermissionFlags" /> values.</returns>
        </member>
        <member name="T:System.Security.Permissions.StorePermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.StorePermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StorePermissionAttribute" /> class with the specified security action.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.StorePermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.StorePermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.StorePermission" /> that corresponds to the attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.StorePermissionAttribute.AddToStore">
            <summary>Gets or sets a value indicating whether the code is permitted to add to a store.</summary>
            <returns>
                <see langword="true" /> if the ability to add to a store is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.StorePermissionAttribute.CreateStore">
            <summary>Gets or sets a value indicating whether the code is permitted to create a store.</summary>
            <returns>
                <see langword="true" /> if the ability to create a store is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.StorePermissionAttribute.DeleteStore">
            <summary>Gets or sets a value indicating whether the code is permitted to delete a store.</summary>
            <returns>
                <see langword="true" /> if the ability to delete a store is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates">
            <summary>Gets or sets a value indicating whether the code is permitted to enumerate the certificates in a store.</summary>
            <returns>
                <see langword="true" /> if the ability to enumerate certificates is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateStores">
            <summary>Gets or sets a value indicating whether the code is permitted to enumerate stores.</summary>
            <returns>
                <see langword="true" /> if the ability to enumerate stores is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.StorePermissionAttribute.Flags">
            <summary>Gets or sets the store permissions.</summary>
            <returns>A bitwise combination of the <see cref="T:System.Security.Permissions.StorePermissionFlags" /> values. The default is <see cref="F:System.Security.Permissions.StorePermissionFlags.NoFlags" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.StorePermissionAttribute.OpenStore">
            <summary>Gets or sets a value indicating whether the code is permitted to open a store.</summary>
            <returns>
                <see langword="true" /> if the ability to open a store is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.StorePermissionAttribute.RemoveFromStore">
            <summary>Gets or sets a value indicating whether the code is permitted to remove a certificate from a store.</summary>
            <returns>
                <see langword="true" /> if the ability to remove a certificate from a store is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Security.Permissions.StorePermissionFlags">
            <summary>Specifies the permitted access to X.509 certificate stores.</summary>
        </member>
        <member name="F:System.Security.Permissions.StorePermissionFlags.AddToStore">
            <summary>
                <para>The ability to add a certificate to a store.</para>
                <para>For security reasons, this ability should be granted only to highly trusted code.</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.StorePermissionFlags.AllFlags">
            <summary>The ability to perform all certificate and store operations.</summary>
        </member>
        <member name="F:System.Security.Permissions.StorePermissionFlags.CreateStore">
            <summary>
                <para>The ability to create a new store.</para>
                <para>New stores are created by calling the <see cref="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)" /> method.</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.StorePermissionFlags.DeleteStore">
            <summary>
                <para>The ability to delete a store.</para>
                <para>This functionality is not exposed by the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class.</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateCertificates">
            <summary>
                <para>The ability to enumerate the certificates in a store.</para>
                <para>For privacy reasons, this ability should be granted only to fully trusted code.</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateStores">
            <summary>
                <para>The ability to enumerate the stores on a computer.</para>
                <para>This functionality is not exposed by the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> class.</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.StorePermissionFlags.NoFlags">
            <summary>Permission is not given to perform any certificate or store operations.</summary>
        </member>
        <member name="F:System.Security.Permissions.StorePermissionFlags.OpenStore">
            <summary>
                <para>The ability to open a store.</para>
                <para>The ability to open a store does not include the ability to enumerate certificates (which raises privacy concerns) or to add or remove certificates (which raises security concerns).</para>
            </summary>
        </member>
        <member name="F:System.Security.Permissions.StorePermissionFlags.RemoveFromStore">
            <summary>
                <para>The ability to remove a certificate from a store.</para>
                <para>This ability should be granted only to highly trusted code because removing a certificate can result in a denial of service.</para>
            </summary>
        </member>
        <member name="T:System.Security.Permissions.StrongNameIdentityPermission">
            <summary>Defines the identity permission for strong names. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> class for the specified strong name identity.</summary>
            <param name="blob">The public key defining the strong name identity namespace.</param>
            <param name="name">The simple name part of the strong name identity. This corresponds to the name of the assembly.</param>
            <param name="version">The version number of the identity.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="blob" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is an empty string ("").</exception>
        </member>
        <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="e" /> parameter's version number is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission, or <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  
  
 -or-  
  
 The two permissions are not equal and one is a subset of the other.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Name">
            <summary>Gets or sets the simple name portion of the strong name identity.</summary>
            <exception cref="T:System.ArgumentException">The value is an empty string ("").</exception>
            <exception cref="T:System.NotSupportedException">The property value cannot be retrieved because it contains an ambiguous identity.</exception>
            <returns>The simple name of the identity.</returns>
        </member>
        <member name="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey">
            <summary>Gets or sets the public key blob that defines the strong name identity namespace.</summary>
            <exception cref="T:System.ArgumentNullException">The property value is set to <see langword="null" />.</exception>
            <exception cref="T:System.NotSupportedException">The property value cannot be retrieved because it contains an ambiguous identity.</exception>
            <returns>A <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> that contains the public key of the identity, or <see langword="null" /> if there is no key.</returns>
        </member>
        <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Version">
            <summary>Gets or sets the version number of the identity.</summary>
            <exception cref="T:System.NotSupportedException">The property value cannot be retrieved because it contains an ambiguous identity.</exception>
            <returns>The version of the identity.</returns>
        </member>
        <member name="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />.</summary>
            <exception cref="T:System.ArgumentException">The method failed because the key is <see langword="null" />.</exception>
            <returns>A <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name">
            <summary>Gets or sets the name of the strong name identity.</summary>
            <returns>A name to compare against the name specified by the security provider.</returns>
        </member>
        <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey">
            <summary>Gets or sets the public key value of the strong name identity expressed as a hexadecimal string.</summary>
            <returns>The public key value of the strong name identity expressed as a hexadecimal string.</returns>
        </member>
        <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version">
            <summary>Gets or sets the version of the strong name identity.</summary>
            <returns>The version number of the strong name identity.</returns>
        </member>
        <member name="T:System.Security.Permissions.StrongNamePublicKeyBlob">
            <summary>Represents the public key information (called a blob) for a strong name. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.#ctor(System.Byte[])">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> class with raw bytes of the public key blob.</summary>
            <param name="publicKey">The array of bytes representing the raw public key data.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="publicKey" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.Equals(System.Object)">
            <summary>Gets or sets a value indicating whether the current public key blob is equal to the specified public key blob.</summary>
            <param name="o">An object containing a public key blob.</param>
            <returns>
                <see langword="true" /> if the public key blob of the current object is equal to the public key blob of the <paramref name="o" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode">
            <summary>Returns a hash code based on the public key.</summary>
            <returns>The hash code based on the public key.</returns>
        </member>
        <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.ToString">
            <summary>Creates and returns a string representation of the public key blob.</summary>
            <returns>A hexadecimal version of the public key blob.</returns>
        </member>
        <member name="T:System.Security.Permissions.TypeDescriptorPermission">
            <summary>Defines partial-trust access to the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</summary>
        </member>
        <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> class.</summary>
            <param name="state">The <see cref="T:System.Security.Permissions.PermissionState" /> to request. Only <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> and <see cref="F:System.Security.Permissions.PermissionState.None" /> are valid.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="state" /> is not a valid permission state. Only <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> and <see cref="F:System.Security.Permissions.PermissionState.None" /> are valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> class with the specified permission flags.</summary>
            <param name="flag">The permission flags to request.</param>
        </member>
        <member name="M:System.Security.Permissions.TypeDescriptorPermission.Copy">
            <summary>When implemented by a derived class, creates and returns an identical copy of the current permission object.</summary>
            <returns>A copy of the current permission object.</returns>
        </member>
        <member name="M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)">
            <summary>When overridden in a derived class, reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="securityElement">The XML encoding to use to reconstruct the security object.</param>
        </member>
        <member name="M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)">
            <summary>When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>When implemented by a derived class, determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted">
            <summary>Gets a value that indicates whether the type descriptor may be called from partially trusted code.</summary>
            <returns>
                <see langword="true" /> if the <see cref="P:System.Security.Permissions.TypeDescriptorPermission.Flags" /> property is set to <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.TypeDescriptorPermission.ToXml">
            <summary>When overridden in a derived class, creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)">
            <summary>When overridden in a derived class, creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.TypeDescriptorPermission.Flags">
            <summary>Gets or sets the <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the type descriptor.</summary>
            <returns>The <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the type descriptor.</returns>
        </member>
        <member name="T:System.Security.Permissions.TypeDescriptorPermissionAttribute">
            <summary>Determines the permission flags that apply to a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        </member>
        <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.TypeDescriptorPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission">
            <summary>When overridden in a derived class, creates a permission object that can then be serialized into binary form and persistently stored along with the <see cref="T:System.Security.Permissions.SecurityAction" /> in an assembly's metadata.</summary>
            <returns>A serializable permission object.</returns>
        </member>
        <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags">
            <summary>Gets or sets the <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
            <returns>The <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> for the <see cref="T:System.ComponentModel.TypeDescriptor" />.</returns>
        </member>
        <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess">
            <summary>Gets or sets a value that indicates whether the type descriptor can be accessed from partial trust.</summary>
            <returns>
                <see langword="true" /> if the type descriptor can be accessed from partial trust; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Security.Permissions.TypeDescriptorPermissionFlags">
            <summary>Defines permission settings for type descriptors.</summary>
        </member>
        <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.NoFlags">
            <summary>No permission flags are set on the type descriptor.</summary>
        </member>
        <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess">
            <summary>The type descriptor may be called from partially trusted code.</summary>
        </member>
        <member name="T:System.Security.Permissions.UIPermission">
            <summary>Controls the permissions related to user interfaces and the Clipboard. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UIPermission" /> class with either fully restricted or unrestricted access, as specified.</summary>
            <param name="state">One of the enumeration values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UIPermission" /> class with the permissions for the Clipboard, and no access to windows.</summary>
            <param name="clipboardFlag">One of the enumeration values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="clipboardFlag" /> parameter is not a valid <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> value.</exception>
        </member>
        <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UIPermission" /> class with the permissions for windows, and no access to the Clipboard.</summary>
            <param name="windowFlag">One of the enumeration values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="windowFlag" /> parameter is not a valid <see cref="T:System.Security.Permissions.UIPermissionWindow" /> value.</exception>
        </member>
        <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UIPermission" /> class with the specified permissions for windows and the Clipboard.</summary>
            <param name="windowFlag">One of the enumeration values.</param>
            <param name="clipboardFlag">One of the enumeration values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="windowFlag" /> parameter is not a valid <see cref="T:System.Security.Permissions.UIPermissionWindow" /> value.  
  
 -or-  
  
 The <paramref name="clipboardFlag" /> parameter is not a valid <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> value.</exception>
        </member>
        <member name="M:System.Security.Permissions.UIPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="esd">The XML encoding used to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="esd" /> parameter's version number is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission to test for the subset relationship. This permission must be the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.UIPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.UIPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.UIPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.UIPermission.Clipboard">
            <summary>Gets or sets the Clipboard access represented by the permission.</summary>
            <returns>One of the <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> values.</returns>
        </member>
        <member name="P:System.Security.Permissions.UIPermission.Window">
            <summary>Gets or sets the window access represented by the permission.</summary>
            <returns>One of the <see cref="T:System.Security.Permissions.UIPermissionWindow" /> values.</returns>
        </member>
        <member name="T:System.Security.Permissions.UIPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.UIPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.UIPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UIPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.UIPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.UIPermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.UIPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.UIPermissionAttribute.Clipboard">
            <summary>Gets or sets the type of access to the clipboard that is permitted.</summary>
            <returns>One of the <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> values.</returns>
        </member>
        <member name="P:System.Security.Permissions.UIPermissionAttribute.Window">
            <summary>Gets or sets the type of access to the window resources that is permitted.</summary>
            <returns>One of the <see cref="T:System.Security.Permissions.UIPermissionWindow" /> values.</returns>
        </member>
        <member name="T:System.Security.Permissions.UIPermissionClipboard">
            <summary>Specifies the type of clipboard access that is allowed to the calling code.</summary>
        </member>
        <member name="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
            <summary>Clipboard can be used without restriction.</summary>
        </member>
        <member name="F:System.Security.Permissions.UIPermissionClipboard.NoClipboard">
            <summary>Clipboard cannot be used.</summary>
        </member>
        <member name="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard">
            <summary>The ability to put data on the clipboard (<see langword="Copy" />, <see langword="Cut" />) is unrestricted. Intrinsic controls that accept <see langword="Paste" />, such as text box, can accept the clipboard data, but user controls that must programmatically read the clipboard cannot.</summary>
        </member>
        <member name="T:System.Security.Permissions.UIPermissionWindow">
            <summary>Specifies the type of windows that code is allowed to use.</summary>
        </member>
        <member name="F:System.Security.Permissions.UIPermissionWindow.AllWindows">
            <summary>Users can use all windows and user input events without restriction.</summary>
        </member>
        <member name="F:System.Security.Permissions.UIPermissionWindow.NoWindows">
            <summary>Users cannot use any windows or user interface events. No user interface can be used.</summary>
        </member>
        <member name="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows">
            <summary>Users can only use <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> for drawing, and can only use user input events for user interface within that subwindow. Examples of <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> are a <see cref="T:System.Windows.Forms.MessageBox" />, common dialog controls, and a control displayed within a browser.</summary>
        </member>
        <member name="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows">
            <summary>Users can only use <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /> and <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> for drawing, and can only use user input events for the user interface within those top-level windows and subwindows. See the Remarks section for more information.</summary>
        </member>
        <member name="T:System.Security.Permissions.UrlIdentityPermission">
            <summary>Defines the identity permission for the URL from which the code originates. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> class to represent the URL identity described by <paramref name="site" />.</summary>
            <param name="site">A URL or wildcard expression.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="site" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.FormatException">The length of the <paramref name="site" /> parameter is zero.</exception>
            <exception cref="T:System.ArgumentException">The URL, directory, or site portion of the <paramref name="site" /> parameter is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.UrlIdentityPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="esd">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="esd" /> parameter's version number is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  
  
 -or-  
  
 The Url property is not a valid URL.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  
  
 -or-  
  
 The Url property is not a valid URL.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.UrlIdentityPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  
  
 -or-  
  
 The <see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> property is not a valid URL.  
  
 -or-  
  
 The two permissions are not equal and one is not a subset of the other.</exception>
            <exception cref="T:System.NotSupportedException">The operation is ambiguous because the permission represents multiple identities.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.UrlIdentityPermission.Url">
            <summary>Gets or sets a URL representing the identity of Internet code.</summary>
            <exception cref="T:System.NotSupportedException">The URL cannot be retrieved because it has an ambiguous identity.</exception>
            <returns>A URL representing the identity of Internet code.</returns>
        </member>
        <member name="T:System.Security.Permissions.UrlIdentityPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.UrlIdentityPermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.UrlIdentityPermissionAttribute.Url">
            <summary>Gets or sets the full URL of the calling code.</summary>
            <returns>The URL to match with the URL specified by the host.</returns>
        </member>
        <member name="T:System.Security.Permissions.WebBrowserPermission">
            <summary>The <see cref="T:System.Security.Permissions.WebBrowserPermission" /> object controls the ability to create the WebBrowser control.</summary>
        </member>
        <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.WebBrowserPermission" /> class.</summary>
        </member>
        <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.WebBrowserPermission" /> class by specifying a permission state.</summary>
            <param name="state">An enumerated value of <see cref="T:System.Security.Permissions.PermissionState" />.</param>
        </member>
        <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.WebBrowserPermission" /> class by specifying the Web browser permission level.</summary>
            <param name="webBrowserPermissionLevel">An enumerated value of <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />.</param>
        </member>
        <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="securityElement">The XML encoding to use to reconstruct the permission.</param>
        </member>
        <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <returns>The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
            <summary>Returns a value indicating whether the current permission is unrestricted.</summary>
            <returns>
                <see langword="true" /> if the <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> property is set to <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
            <summary>Gets or sets the current value of the Web browser permission level.</summary>
            <returns>The current value of the Web browser permission level.</returns>
        </member>
        <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.WebBrowserPermission" /> to be applied to code using declarative security.</summary>
        </member>
        <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new instance of the <see cref="T:System.Security.Permissions.WebBrowserPermission" /> class.</summary>
            <returns>A <see cref="T:System.Security.Permissions.WebBrowserPermission" /> corresponding to the security declaration.</returns>
        </member>
        <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
            <summary>Gets or sets the current Web browser permission level for the <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />.</summary>
            <returns>The state of the current Web browser permission level.</returns>
        </member>
        <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
            <summary>Specifies the permission level for a Web browser.</summary>
        </member>
        <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
            <summary>A Web browser that cannot navigate frames to HTML.</summary>
        </member>
        <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
            <summary>A Web browser that can safely navigate frames to HTML but with several restrictions.</summary>
        </member>
        <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
            <summary>A Web browser that can navigate without restrictions.</summary>
        </member>
        <member name="T:System.Security.Permissions.ZoneIdentityPermission">
            <summary>Defines the identity permission for the zone from which the code originates. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> class to represent the specified zone identity.</summary>
            <param name="zone">The zone identifier.</param>
        </member>
        <member name="M:System.Security.Permissions.ZoneIdentityPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="esd">The XML encoding to use to reconstruct the permission.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="esd" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="esd" /> parameter is not a valid permission element.  
  
 -or-  
  
 The <paramref name="esd" /> parameter's version number is not valid.</exception>
        </member>
        <member name="M:System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</exception>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" />, this permission does not represent the <see cref="F:System.Security.SecurityZone.NoZone" /> security zone, and the specified permission is not equal to the current permission.</exception>
            <returns>
                <see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Permissions.ZoneIdentityPermission.ToXml">
            <summary>Creates an XML encoding of the permission and its current state.</summary>
            <returns>An XML encoding of the permission, including any state information.</returns>
        </member>
        <member name="M:System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.  
  
 -or-  
  
 The two permissions are not equal and the current permission does not represent the <see cref="F:System.Security.SecurityZone.NoZone" /> security zone.</exception>
            <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Security.Permissions.ZoneIdentityPermission.SecurityZone">
            <summary>Gets or sets the zone represented by the current <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />.</summary>
            <exception cref="T:System.ArgumentException">The parameter value is not a valid value of <see cref="T:System.Security.SecurityZone" />.</exception>
            <returns>One of the <see cref="T:System.Security.SecurityZone" /> values.</returns>
        </member>
        <member name="T:System.Security.Permissions.ZoneIdentityPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Permissions.ZoneIdentityPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission">
            <summary>Creates and returns a new <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />.</summary>
            <returns>A <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> that corresponds to this attribute.</returns>
        </member>
        <member name="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone">
            <summary>Gets or sets membership in the content zone specified by the property value.</summary>
            <returns>One of the <see cref="T:System.Security.SecurityZone" /> values.</returns>
        </member>
        <member name="T:System.Security.Policy.AllMembershipCondition">
            <summary>Represents a membership condition that matches all code. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.AllMembershipCondition.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.AllMembershipCondition" /> class.</summary>
        </member>
        <member name="M:System.Security.Policy.AllMembershipCondition.Check(System.Security.Policy.Evidence)">
            <summary>Determines whether the specified evidence satisfies the membership condition.</summary>
            <param name="evidence">The evidence set against which to make the test.</param>
            <returns>Always <see langword="true" />.</returns>
        </member>
        <member name="M:System.Security.Policy.AllMembershipCondition.Copy">
            <summary>Creates an equivalent copy of the membership condition.</summary>
            <returns>A new, identical copy of the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.AllMembershipCondition.Equals(System.Object)">
            <summary>Determines whether the specified membership condition is an <see cref="T:System.Security.Policy.AllMembershipCondition" />.</summary>
            <param name="o">The object to compare to <see cref="T:System.Security.Policy.AllMembershipCondition" />.</param>
            <returns>
                <see langword="true" /> if the specified membership condition is an <see cref="T:System.Security.Policy.AllMembershipCondition" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
        </member>
        <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <param name="level">The policy level context used to resolve named permission set references.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.AllMembershipCondition.GetHashCode">
            <summary>Gets the hash code for the current membership condition.</summary>
            <returns>The hash code for the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.AllMembershipCondition.ToString">
            <summary>Creates and returns a string representation of the membership condition.</summary>
            <returns>A representation of the membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.AllMembershipCondition.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Policy.AllMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Creates an XML encoding of the security object and its current state with the specified <see cref="T:System.Security.Policy.PolicyLevel" />.</summary>
            <param name="level">The policy level context for resolving named permission set references.</param>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="T:System.Security.Policy.ApplicationDirectory">
            <summary>Provides the application directory as evidence for policy evaluation. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectory.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.ApplicationDirectory" /> class.</summary>
            <param name="name">The path of the application directory.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectory.Copy">
            <summary>Creates a new copy of the <see cref="T:System.Security.Policy.ApplicationDirectory" />.</summary>
            <returns>A new, identical copy of the <see cref="T:System.Security.Policy.ApplicationDirectory" />.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectory.Equals(System.Object)">
            <summary>Determines whether instances of the same type of an evidence object are equivalent.</summary>
            <param name="o">An object of same type as the current evidence object.</param>
            <returns>
                <see langword="true" /> if the two instances are equivalent; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectory.GetHashCode">
            <summary>Gets the hash code of the current application directory.</summary>
            <returns>The hash code of the current application directory.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectory.ToString">
            <summary>Gets a string representation of the state of the <see cref="T:System.Security.Policy.ApplicationDirectory" /> evidence object.</summary>
            <returns>A representation of the state of the <see cref="T:System.Security.Policy.ApplicationDirectory" /> evidence object.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationDirectory.Directory">
            <summary>Gets the path of the application directory.</summary>
            <returns>The path of the application directory.</returns>
        </member>
        <member name="T:System.Security.Policy.ApplicationDirectoryMembershipCondition">
            <summary>Determines whether an assembly belongs to a code group by testing its application directory. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" /> class.</summary>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)">
            <summary>Determines whether the membership condition is satisfied by the specified evidence.</summary>
            <param name="evidence">The evidence set against which to make the test.</param>
            <returns>
                <see langword="true" /> if the specified evidence satisfies the membership condition; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy">
            <summary>Creates an equivalent copy of the membership condition.</summary>
            <returns>A new, identical copy of the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)">
            <summary>Determines whether the specified membership condition is an <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />.</summary>
            <param name="o">The object to compare to <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />.</param>
            <returns>
                <see langword="true" /> if the specified membership condition is an <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid application directory membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <param name="level">The policy level context, used to resolve named permission set references.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid application directory membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode">
            <summary>Gets the hash code for the current membership condition.</summary>
            <returns>The hash code for the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString">
            <summary>Creates and returns a string representation of the membership condition.</summary>
            <returns>A string representation of the state of the membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Creates an XML encoding of the security object and its current state with the specified <see cref="T:System.Security.Policy.PolicyLevel" />.</summary>
            <param name="level">The policy level context for resolving named permission set references.</param>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="T:System.Security.Policy.ApplicationTrust">
            <summary>Encapsulates security decisions about an application. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrust.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.ApplicationTrust" /> class.</summary>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.ApplicationTrust" /> class with an <see cref="T:System.ApplicationIdentity" />.</summary>
            <param name="identity">An <see cref="T:System.ApplicationIdentity" /> that uniquely identifies an application.</param>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.ApplicationTrust" /> class using the provided grant set and collection of full-trust assemblies.</summary>
            <param name="defaultGrantSet">A default permission set that is granted to all assemblies that do not have specific grants.</param>
            <param name="fullTrustAssemblies">An array of strong names that represent assemblies that should be considered fully trusted in an application domain.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="fullTrustAssemblies" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="fullTrustAssemblies" /> contains an assembly that does not have a <see cref="T:System.Security.Policy.StrongName" />.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs an <see cref="T:System.Security.Policy.ApplicationTrust" /> object with a given state from an XML encoding.</summary>
            <param name="element">The XML encoding to use to reconstruct the <see cref="T:System.Security.Policy.ApplicationTrust" /> object.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="element" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The XML encoding used for <paramref name="element" /> is invalid.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrust.ToXml">
            <summary>Creates an XML encoding of the <see cref="T:System.Security.Policy.ApplicationTrust" /> object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity">
            <summary>Gets or sets the application identity for the application trust object.</summary>
            <exception cref="T:System.ArgumentNullException">
                <see cref="T:System.ApplicationIdentity" /> cannot be set because it has a value of <see langword="null" />.</exception>
            <returns>An <see cref="T:System.ApplicationIdentity" /> for the application trust object.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrust.DefaultGrantSet">
            <summary>Gets or sets the policy statement defining the default grant set.</summary>
            <returns>A <see cref="T:System.Security.Policy.PolicyStatement" /> describing the default grants.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrust.ExtraInfo">
            <summary>Gets or sets extra security information about the application.</summary>
            <returns>An object containing additional security information about the application.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrust.FullTrustAssemblies">
            <summary>Gets the list of full-trust assemblies for this application trust.</summary>
            <returns>A list of full-trust assemblies.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun">
            <summary>Gets or sets a value indicating whether the application has the required permission grants and is trusted to run.</summary>
            <returns>
                <see langword="true" /> if the application is trusted to run; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrust.Persist">
            <summary>Gets or sets a value indicating whether application trust information is persisted.</summary>
            <returns>
                <see langword="true" /> if application trust information is persisted; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="T:System.Security.Policy.ApplicationTrustCollection">
            <summary>Represents a collection of <see cref="T:System.Security.Policy.ApplicationTrust" /> objects. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)">
            <summary>Adds an element to the collection.</summary>
            <param name="trust">The <see cref="T:System.Security.Policy.ApplicationTrust" /> object to add.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="trust" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> property of the <see cref="T:System.Security.Policy.ApplicationTrust" /> specified in <paramref name="trust" /> is <see langword="null" />.</exception>
            <returns>The index at which the new element was inserted.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])">
            <summary>Copies the elements of the specified <see cref="T:System.Security.Policy.ApplicationTrust" /> array to the end of the collection.</summary>
            <param name="trusts">An array of type <see cref="T:System.Security.Policy.ApplicationTrust" /> containing the objects to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="trusts" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> property of an <see cref="T:System.Security.Policy.ApplicationTrust" /> specified in <paramref name="trust" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)">
            <summary>Copies the elements of the specified <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> to the end of the collection.</summary>
            <param name="trusts">A <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> containing the objects to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="trusts" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> property of an <see cref="T:System.Security.Policy.ApplicationTrust" /> specified in <paramref name="trust" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.Clear">
            <summary>Removes all the application trusts from the collection.</summary>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> property of an item in the collection is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)">
            <summary>Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
            <param name="array">The one-dimensional array of type <see cref="T:System.Security.Policy.ApplicationTrust" /> that is the destination of the elements copied from the current collection.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="array" /> is multidimensional.  
  
 -or-  
  
 The number of elements in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
            <summary>Gets the application trusts in the collection that match the specified application identity.</summary>
            <param name="applicationIdentity">An <see cref="T:System.ApplicationIdentity" /> object describing the application to find.</param>
            <param name="versionMatch">One of the <see cref="T:System.Security.Policy.ApplicationVersionMatch" /> values.</param>
            <returns>An <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> containing all matching <see cref="T:System.Security.Policy.ApplicationTrust" /> objects.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.GetEnumerator">
            <summary>Returns an object that can be used to iterate over the collection.</summary>
            <returns>An <see cref="T:System.Security.Policy.ApplicationTrustEnumerator" /> that can be used to iterate over the collection.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
            <summary>Removes all application trust objects that match the specified criteria from the collection.</summary>
            <param name="applicationIdentity">The <see cref="T:System.ApplicationIdentity" /> of the <see cref="T:System.Security.Policy.ApplicationTrust" /> object to be removed.</param>
            <param name="versionMatch">One of the <see cref="T:System.Security.Policy.ApplicationVersionMatch" /> values.</param>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)">
            <summary>Removes the specified application trust from the collection.</summary>
            <param name="trust">The <see cref="T:System.Security.Policy.ApplicationTrust" /> object to remove.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="trust" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> property of the <see cref="T:System.Security.Policy.ApplicationTrust" /> object specified by <paramref name="trust" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])">
            <summary>Removes the application trust objects in the specified array from the collection.</summary>
            <param name="trusts">A one-dimensional array of type <see cref="T:System.Security.Policy.ApplicationTrust" /> that contains items to be removed from the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="trusts" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)">
            <summary>Removes the application trust objects in the specified collection from the collection.</summary>
            <param name="trusts">An <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> that contains items to be removed from the current collection.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="trusts" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Collections.ICollection" /> to the specified <see cref="T:System.Array" />, starting at the specified <see cref="T:System.Array" /> index.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="array" /> is multidimensional.  
  
 -or-  
  
 The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrustCollection.Count">
            <summary>Gets the number of items contained in the collection.</summary>
            <returns>The number of items contained in the collection.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrustCollection.IsSynchronized">
            <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
            <returns>
                <see langword="false" /> in all cases.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)">
            <summary>Gets the <see cref="T:System.Security.Policy.ApplicationTrust" /> object located at the specified index in the collection.</summary>
            <param name="index">The zero-based index of the object within the collection.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is greater than or equal to the count of objects in the collection.</exception>
            <exception cref="T:System.InvalidOperationException">
                <paramref name="index" /> is negative.</exception>
            <returns>The <see cref="T:System.Security.Policy.ApplicationTrust" /> object at the specified index in the collection.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.String)">
            <summary>Gets the <see cref="T:System.Security.Policy.ApplicationTrust" /> object for the specified application.</summary>
            <param name="appFullName">The full name of the application.</param>
            <returns>The <see cref="T:System.Security.Policy.ApplicationTrust" /> object for the specified application, or <see langword="null" /> if the object cannot be found.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrustCollection.SyncRoot">
            <summary>Gets an object that can be used to synchronize access to the collection.</summary>
            <returns>The object to use to synchronize access to the collection.</returns>
        </member>
        <member name="T:System.Security.Policy.ApplicationTrustEnumerator">
            <summary>Represents the enumerator for <see cref="T:System.Security.Policy.ApplicationTrust" /> objects in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</summary>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
            <summary>Moves to the next element in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</summary>
            <returns>
                <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
            <summary>Resets the enumerator to the beginning of the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</summary>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
            <summary>Gets the current <see cref="T:System.Security.Policy.ApplicationTrust" /> object in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</summary>
            <returns>The current <see cref="T:System.Security.Policy.ApplicationTrust" /> in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</returns>
        </member>
        <member name="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current">
            <summary>Gets the current <see cref="T:System.Object" /> in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> collection.</summary>
            <returns>The current <see cref="T:System.Object" /> in the <see cref="T:System.Security.Policy.ApplicationTrustCollection" />.</returns>
        </member>
        <member name="T:System.Security.Policy.ApplicationVersionMatch">
            <summary>Specifies how to match versions when locating application trusts in a collection.</summary>
        </member>
        <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchAllVersions">
            <summary>Match on all versions.</summary>
        </member>
        <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchExactVersion">
            <summary>Match on the exact version.</summary>
        </member>
        <member name="T:System.Security.Policy.CodeConnectAccess">
            <summary>Specifies the network resource access that is granted to code.</summary>
        </member>
        <member name="F:System.Security.Policy.CodeConnectAccess.AnyScheme">
            <summary>Contains the string value that represents the scheme wildcard.</summary>
        </member>
        <member name="F:System.Security.Policy.CodeConnectAccess.DefaultPort">
            <summary>Contains the value used to represent the default port.</summary>
        </member>
        <member name="F:System.Security.Policy.CodeConnectAccess.OriginPort">
            <summary>Contains the value used to represent the port value in the URI where code originated.</summary>
        </member>
        <member name="F:System.Security.Policy.CodeConnectAccess.OriginScheme">
            <summary>Contains the value used to represent the scheme in the URL where the code originated.</summary>
        </member>
        <member name="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.CodeConnectAccess" /> class.</summary>
            <param name="allowScheme">The URI scheme represented by the current instance.</param>
            <param name="allowPort">The port represented by the current instance.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="allowScheme" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="allowScheme" /> is an empty string ("").  
  
 -or-  
  
 <paramref name="allowScheme" /> contains characters that are not permitted in schemes.  
  
 -or-  
  
 <paramref name="allowPort" /> is less than 0.  
  
 -or-  
  
 <paramref name="allowPort" /> is greater than 65,535.</exception>
        </member>
        <member name="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)">
            <summary>Returns a <see cref="T:System.Security.Policy.CodeConnectAccess" /> instance that represents access to the specified port using any scheme.</summary>
            <param name="allowPort">The port represented by the returned instance.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="allowPort" /> is less than 0.  
  
 -or-  
  
 <paramref name="allowPort" /> is greater than 65,535.</exception>
            <returns>A <see cref="T:System.Security.Policy.CodeConnectAccess" /> instance for the specified port.</returns>
        </member>
        <member name="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)">
            <summary>Returns a <see cref="T:System.Security.Policy.CodeConnectAccess" /> instance that represents access to the specified port using the code's scheme of origin.</summary>
            <param name="allowPort">The port represented by the returned instance.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="allowPort" /> is less than 0.  
  
 -or-  
  
 <paramref name="allowPort" /> is greater than 65,535.</exception>
            <returns>A <see cref="T:System.Security.Policy.CodeConnectAccess" /> instance for the specified port.</returns>
        </member>
        <member name="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)">
            <summary>Returns a value indicating whether two <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects represent the same scheme and port.</summary>
            <param name="o">The object to compare to the current <see cref="T:System.Security.Policy.CodeConnectAccess" /> object.</param>
            <returns>
                <see langword="true" /> if the two objects represent the same scheme and port; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.CodeConnectAccess.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
        </member>
        <member name="P:System.Security.Policy.CodeConnectAccess.Port">
            <summary>Gets the port represented by the current instance.</summary>
            <returns>A <see cref="T:System.Int32" /> value that identifies a computer port used in conjunction with the <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" /> property.</returns>
        </member>
        <member name="P:System.Security.Policy.CodeConnectAccess.Scheme">
            <summary>Gets the URI scheme represented by the current instance.</summary>
            <returns>A <see cref="T:System.String" /> that identifies a URI scheme, converted to lowercase.</returns>
        </member>
        <member name="T:System.Security.Policy.CodeGroup">
            <summary>Represents the abstract base class from which all implementations of code groups must derive.</summary>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
            <summary>Initializes a new instance of <see cref="T:System.Security.Policy.CodeGroup" />.</summary>
            <param name="membershipCondition">A membership condition that tests evidence to determine whether this code group applies policy.</param>
            <param name="policy">The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="membershipCondition" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The type of the <paramref name="membershipCondition" /> parameter is not valid.  
  
 -or-  
  
 The type of the <paramref name="policy" /> parameter is not valid.</exception>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
            <summary>Adds a child code group to the current code group.</summary>
            <param name="group">The code group to be added as a child. This new child code group is added to the end of the list.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="group" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="group" /> parameter is not a valid code group.</exception>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.Copy">
            <summary>When overridden in a derived class, makes a deep copy of the current code group.</summary>
            <returns>An equivalent copy of the current code group, including its membership conditions and child code groups.</returns>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>When overridden in a derived class, serializes properties and internal state specific to a derived code group and adds the serialization to the specified <see cref="T:System.Security.SecurityElement" />.</summary>
            <param name="element">The XML encoding to which to add the serialization.</param>
            <param name="level">The policy level within which the code group exists.</param>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
            <summary>Determines whether the specified code group is equivalent to the current code group.</summary>
            <param name="o">The code group to compare with the current code group.</param>
            <returns>
                <see langword="true" /> if the specified code group is equivalent to the current code group; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
            <summary>Determines whether the specified code group is equivalent to the current code group, checking the child code groups as well, if specified.</summary>
            <param name="cg">The code group to compare with the current code group.</param>
            <param name="compareChildren">
                <see langword="true" /> to compare child code groups, as well; otherwise, <see langword="false" />.</param>
            <returns>
                <see langword="true" /> if the specified code group is equivalent to the current code group; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a given state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Reconstructs a security object with a given state and policy level from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <param name="level">The policy level within which the code group exists.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.GetHashCode">
            <summary>Gets the hash code of the current code group.</summary>
            <returns>The hash code of the current code group.</returns>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>When overridden in a derived class, reconstructs properties and internal state specific to a derived code group from the specified <see cref="T:System.Security.SecurityElement" />.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <param name="level">The policy level within which the code group exists.</param>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)">
            <summary>Removes the specified child code group.</summary>
            <param name="group">The code group to be removed as a child.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="group" /> parameter is not an immediate child code group of the current code group.</exception>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
            <summary>When overridden in a derived class, resolves policy for the code group and its descendants for a set of evidence.</summary>
            <param name="evidence">The evidence for the assembly.</param>
            <returns>A policy statement that consists of the permissions granted by the code group with optional attributes, or <see langword="null" /> if the code group does not apply (the membership condition does not match the specified evidence).</returns>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
            <summary>When overridden in a derived class, resolves matching code groups.</summary>
            <param name="evidence">The evidence for the assembly.</param>
            <returns>A <see cref="T:System.Security.Policy.CodeGroup" /> that is the root of the tree of matching code groups.</returns>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Creates an XML encoding of the security object, its current state, and the policy level within which the code exists.</summary>
            <param name="level">The policy level within which the code group exists.</param>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="P:System.Security.Policy.CodeGroup.AttributeString">
            <summary>Gets a string representation of the attributes of the policy statement for the code group.</summary>
            <returns>A string representation of the attributes of the policy statement for the code group.</returns>
        </member>
        <member name="P:System.Security.Policy.CodeGroup.Children">
            <summary>Gets or sets an ordered list of the child code groups of a code group.</summary>
            <exception cref="T:System.ArgumentNullException">An attempt is made to set this property to <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">An attempt is made to set this property with a list of children that are not <see cref="T:System.Security.Policy.CodeGroup" /> objects.</exception>
            <returns>A list of child code groups.</returns>
        </member>
        <member name="P:System.Security.Policy.CodeGroup.Description">
            <summary>Gets or sets the description of the code group.</summary>
            <returns>The description of the code group.</returns>
        </member>
        <member name="P:System.Security.Policy.CodeGroup.MembershipCondition">
            <summary>Gets or sets the code group's membership condition.</summary>
            <exception cref="T:System.ArgumentNullException">An attempt is made to set this parameter to <see langword="null" />.</exception>
            <returns>The membership condition that determines to which evidence the code group is applicable.</returns>
        </member>
        <member name="P:System.Security.Policy.CodeGroup.MergeLogic">
            <summary>When overridden in a derived class, gets the merge logic for the code group.</summary>
            <returns>A description of the merge logic for the code group.</returns>
        </member>
        <member name="P:System.Security.Policy.CodeGroup.Name">
            <summary>Gets or sets the name of the code group.</summary>
            <returns>The name of the code group.</returns>
        </member>
        <member name="P:System.Security.Policy.CodeGroup.PermissionSetName">
            <summary>Gets the name of the named permission set for the code group.</summary>
            <returns>The name of a named permission set of the policy level.</returns>
        </member>
        <member name="P:System.Security.Policy.CodeGroup.PolicyStatement">
            <summary>Gets or sets the policy statement associated with the code group.</summary>
            <returns>The policy statement for the code group.</returns>
        </member>
        <member name="T:System.Security.Policy.Evidence">
            <summary>Defines the set of information that constitutes input to security policy decisions. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.Evidence.#ctor">
            <summary>Initializes a new empty instance of the <see cref="T:System.Security.Policy.Evidence" /> class.</summary>
        </member>
        <member name="M:System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.Evidence" /> class from multiple sets of host and assembly evidence.</summary>
            <param name="hostEvidence">The host evidence from which to create the new instance.</param>
            <param name="assemblyEvidence">The assembly evidence from which to create the new instance.</param>
        </member>
        <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.Evidence" /> class from a shallow copy of an existing one.</summary>
            <param name="evidence">The <see cref="T:System.Security.Policy.Evidence" /> instance from which to create the new instance. This instance is not deep-copied.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="evidence" /> parameter is not a valid instance of <see cref="T:System.Security.Policy.Evidence" />.</exception>
        </member>
        <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.Evidence" /> class from multiple sets of host and assembly evidence.</summary>
            <param name="hostEvidence">The host evidence from which to create the new instance.</param>
            <param name="assemblyEvidence">The assembly evidence from which to create the new instance.</param>
        </member>
        <member name="M:System.Security.Policy.Evidence.AddAssembly(System.Object)">
            <summary>Adds the specified assembly evidence to the evidence set.</summary>
            <param name="id">Any evidence object.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="id" /> is null.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="id" /> is not serializable.</exception>
        </member>
        <member name="M:System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)">
            <summary>Adds an evidence object of the specified type to the assembly-supplied evidence list.</summary>
            <param name="evidence">The assembly evidence to add.</param>
            <typeparam name="T">The type of the object in <paramref name="evidence" />.</typeparam>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="evidence" /> is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">Evidence of type <paramref name="T" /> is already in the list.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="evidence" /> is not serializable.</exception>
        </member>
        <member name="M:System.Security.Policy.Evidence.AddHost(System.Object)">
            <summary>Adds the specified evidence supplied by the host to the evidence set.</summary>
            <param name="id">Any evidence object.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="id" /> is null.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="id" /> is not serializable.</exception>
        </member>
        <member name="M:System.Security.Policy.Evidence.AddHostEvidence``1(``0)">
            <summary>Adds host evidence of the specified type to the host evidence collection.</summary>
            <param name="evidence">The host evidence to add.</param>
            <typeparam name="T">The type of the object in <paramref name="evidence" />.</typeparam>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="evidence" /> is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">Evidence of type <paramref name="T" /> is already in the list.</exception>
        </member>
        <member name="M:System.Security.Policy.Evidence.Clear">
            <summary>Removes the host and assembly evidence from the evidence set.</summary>
        </member>
        <member name="M:System.Security.Policy.Evidence.Clone">
            <summary>Returns a duplicate copy of this evidence object.</summary>
            <returns>A duplicate copy of this evidence object.</returns>
        </member>
        <member name="M:System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)">
            <summary>Copies evidence objects to an <see cref="T:System.Array" />.</summary>
            <param name="array">The target array to which to copy evidence objects.</param>
            <param name="index">The zero-based position in the array to which to begin copying evidence objects.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="array" /> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is outside the range of the target array.</exception>
        </member>
        <member name="M:System.Security.Policy.Evidence.GetAssemblyEnumerator">
            <summary>Enumerates evidence provided by the assembly.</summary>
            <returns>An enumerator for evidence added by the <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" /> method.</returns>
        </member>
        <member name="M:System.Security.Policy.Evidence.GetAssemblyEvidence``1">
            <summary>Gets assembly evidence of the specified type from the collection.</summary>
            <typeparam name="T">The type of the evidence to get.</typeparam>
            <returns>Evidence of type <paramref name="T" /> in the assembly evidence collection.</returns>
        </member>
        <member name="M:System.Security.Policy.Evidence.GetEnumerator">
            <summary>Enumerates all evidence in the set, both that provided by the host and that provided by the assembly.</summary>
            <returns>An enumerator for evidence added by both the <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> method and the <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" /> method.</returns>
        </member>
        <member name="M:System.Security.Policy.Evidence.GetHostEnumerator">
            <summary>Enumerates evidence supplied by the host.</summary>
            <returns>An enumerator for evidence added by the <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> method.</returns>
        </member>
        <member name="M:System.Security.Policy.Evidence.GetHostEvidence``1">
            <summary>Gets host evidence of the specified type from the collection.</summary>
            <typeparam name="T">The type of the evidence to get.</typeparam>
            <returns>Evidence of type <paramref name="T" /> in the host evidence collection.</returns>
        </member>
        <member name="M:System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)">
            <summary>Merges the specified evidence set into the current evidence set.</summary>
            <param name="evidence">The evidence set to be merged into the current evidence set.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="evidence" /> parameter is not a valid instance of <see cref="T:System.Security.Policy.Evidence" />.</exception>
            <exception cref="T:System.Security.SecurityException">
                <see cref="P:System.Security.Policy.Evidence.Locked" /> is <see langword="true" />, the code that calls this method does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />, and the <paramref name="evidence" /> parameter has a host list that is not empty.</exception>
        </member>
        <member name="M:System.Security.Policy.Evidence.RemoveType(System.Type)">
            <summary>Removes the evidence for a given type from the host and assembly enumerations.</summary>
            <param name="t">The type of the evidence to be removed.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="t" /> is null.</exception>
        </member>
        <member name="P:System.Security.Policy.Evidence.Count">
            <summary>Gets the number of evidence objects in the evidence set.</summary>
            <returns>The number of evidence objects in the evidence set.</returns>
        </member>
        <member name="P:System.Security.Policy.Evidence.IsReadOnly">
            <summary>Gets a value indicating whether the evidence set is read-only.</summary>
            <returns>Always <see langword="false" />, because read-only evidence sets are not supported.</returns>
        </member>
        <member name="P:System.Security.Policy.Evidence.IsSynchronized">
            <summary>Gets a value indicating whether the evidence set is thread-safe.</summary>
            <returns>Always <see langword="false" /> because thread-safe evidence sets are not supported.</returns>
        </member>
        <member name="P:System.Security.Policy.Evidence.Locked">
            <summary>Gets or sets a value indicating whether the evidence is locked.</summary>
            <returns>
                <see langword="true" /> if the evidence is locked; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Policy.Evidence.SyncRoot">
            <summary>Gets the synchronization root.</summary>
            <returns>Always <see langword="this" /> (<see langword="Me" /> in Visual Basic), because synchronization of evidence sets is not supported.</returns>
        </member>
        <member name="T:System.Security.Policy.EvidenceBase">
            <summary>Provides a base class from which all objects to be used as evidence must derive.</summary>
        </member>
        <member name="M:System.Security.Policy.EvidenceBase.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.EvidenceBase" /> class.</summary>
            <exception cref="T:System.InvalidOperationException">An object to be used as evidence is not serializable.</exception>
        </member>
        <member name="M:System.Security.Policy.EvidenceBase.Clone">
            <summary>Creates a new object that is a complete copy of the current instance.</summary>
            <returns>A duplicate copy of this evidence object.</returns>
        </member>
        <member name="T:System.Security.Policy.FileCodeGroup">
            <summary>Grants permission to manipulate files located in the code assemblies to code assemblies that match the membership condition. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.FileCodeGroup" /> class.</summary>
            <param name="membershipCondition">A membership condition that tests evidence to determine whether this code group applies policy.</param>
            <param name="access">One of the <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values. This value is used to construct the <see cref="T:System.Security.Permissions.FileIOPermission" /> that is granted.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="membershipCondition" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The type of the <paramref name="membershipCondition" /> parameter is not valid.  
  
 -or-  
  
 The type of the <paramref name="access" /> parameter is not valid.</exception>
        </member>
        <member name="M:System.Security.Policy.FileCodeGroup.Copy">
            <summary>Makes a deep copy of the current code group.</summary>
            <returns>An equivalent copy of the current code group, including its membership conditions and child code groups.</returns>
        </member>
        <member name="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
            <summary>Determines whether the specified code group is equivalent to the current code group.</summary>
            <param name="o">The code group to compare with the current code group.</param>
            <returns>
                <see langword="true" /> if the specified code group is equivalent to the current code group; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.FileCodeGroup.GetHashCode">
            <summary>Gets the hash code of the current code group.</summary>
            <returns>The hash code of the current code group.</returns>
        </member>
        <member name="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
            <summary>Resolves policy for the code group and its descendants for a set of evidence.</summary>
            <param name="evidence">The evidence for the assembly.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="evidence" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.Security.Policy.PolicyException">The current policy is <see langword="null" />.  
  
 -or-  
  
 More than one code group (including the parent code group and all child code groups) is marked <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
            <returns>A policy statement consisting of the permissions granted by the code group with optional attributes, or <see langword="null" /> if the code group does not apply (the membership condition does not match the specified evidence).</returns>
        </member>
        <member name="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
            <summary>Resolves matching code groups.</summary>
            <param name="evidence">The evidence for the assembly.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="evidence" /> parameter is <see langword="null" />.</exception>
            <returns>A <see cref="T:System.Security.Policy.CodeGroup" /> that is the root of the tree of matching code groups.</returns>
        </member>
        <member name="P:System.Security.Policy.FileCodeGroup.AttributeString">
            <summary>Gets a string representation of the attributes of the policy statement for the code group.</summary>
            <returns>Always <see langword="null" />.</returns>
        </member>
        <member name="P:System.Security.Policy.FileCodeGroup.MergeLogic">
            <summary>Gets the merge logic.</summary>
            <returns>The string "Union".</returns>
        </member>
        <member name="P:System.Security.Policy.FileCodeGroup.PermissionSetName">
            <summary>Gets the name of the named permission set for the code group.</summary>
            <returns>The concatenation of the string "Same directory FileIO - " and the access type.</returns>
        </member>
        <member name="T:System.Security.Policy.FirstMatchCodeGroup">
            <summary>Allows security policy to be defined by the union of the policy statement of a code group and that of the first child code group that matches. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.FirstMatchCodeGroup" /> class.</summary>
            <param name="membershipCondition">A membership condition that tests evidence to determine whether this code group applies policy.</param>
            <param name="policy">The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.</param>
            <exception cref="T:System.ArgumentException">The type of the <paramref name="membershipCondition" /> parameter is not valid.  
  
 -or-  
  
 The type of the <paramref name="policy" /> parameter is not valid.</exception>
        </member>
        <member name="M:System.Security.Policy.FirstMatchCodeGroup.Copy">
            <summary>Makes a deep copy of the code group.</summary>
            <returns>An equivalent copy of the code group, including its membership conditions and child code groups.</returns>
        </member>
        <member name="M:System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)">
            <summary>Resolves policy for the code group and its descendants for a set of evidence.</summary>
            <param name="evidence">The evidence for the assembly.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="evidence" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.Security.Policy.PolicyException">More than one code group (including the parent code group and any child code groups) is marked <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
            <returns>A policy statement consisting of the permissions granted by the code group with optional attributes, or <see langword="null" /> if the code group does not apply (the membership condition does not match the specified evidence).</returns>
        </member>
        <member name="M:System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
            <summary>Resolves matching code groups.</summary>
            <param name="evidence">The evidence for the assembly.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="evidence" /> parameter is <see langword="null" />.</exception>
            <returns>A <see cref="T:System.Security.Policy.CodeGroup" /> that is the root of the tree of matching code groups.</returns>
        </member>
        <member name="P:System.Security.Policy.FirstMatchCodeGroup.MergeLogic">
            <summary>Gets the merge logic.</summary>
            <returns>The string "First Match".</returns>
        </member>
        <member name="T:System.Security.Policy.GacInstalled">
            <summary>Confirms that a code assembly originates in the global assembly cache (GAC) as evidence for policy evaluation. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.GacInstalled.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.GacInstalled" /> class.</summary>
        </member>
        <member name="M:System.Security.Policy.GacInstalled.Copy">
            <summary>Creates an equivalent copy of the current object.</summary>
            <returns>An equivalent copy of <see cref="T:System.Security.Policy.GacInstalled" />.</returns>
        </member>
        <member name="M:System.Security.Policy.GacInstalled.CreateIdentityPermission(System.Security.Policy.Evidence)">
            <summary>Creates a new identity permission that corresponds to the current object.</summary>
            <param name="evidence">The <see cref="T:System.Security.Policy.Evidence" /> from which to construct the identity permission.</param>
            <returns>A new identity permission that corresponds to the current object.</returns>
        </member>
        <member name="M:System.Security.Policy.GacInstalled.Equals(System.Object)">
            <summary>Indicates whether the current object is equivalent to the specified object.</summary>
            <param name="o">The object to compare with the current object.</param>
            <returns>
                <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Security.Policy.GacInstalled" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.GacInstalled.GetHashCode">
            <summary>Returns a hash code for the current object.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:System.Security.Policy.GacInstalled.ToString">
            <summary>Returns a string representation of the current  object.</summary>
            <returns>A string representation of the current object.</returns>
        </member>
        <member name="T:System.Security.Policy.GacMembershipCondition">
            <summary>Determines whether an assembly belongs to a code group by testing its global assembly cache membership. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.GacMembershipCondition.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.GacMembershipCondition" /> class.</summary>
        </member>
        <member name="M:System.Security.Policy.GacMembershipCondition.Check(System.Security.Policy.Evidence)">
            <summary>Indicates whether the specified evidence satisfies the membership condition.</summary>
            <param name="evidence">The <see cref="T:System.Security.Policy.Evidence" /> against which to make the test.</param>
            <returns>
                <see langword="true" /> if the specified evidence satisfies the membership condition; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.GacMembershipCondition.Copy">
            <summary>Creates an equivalent copy of the membership condition.</summary>
            <returns>A new <see cref="T:System.Security.Policy.GacMembershipCondition" /> object.</returns>
        </member>
        <member name="M:System.Security.Policy.GacMembershipCondition.Equals(System.Object)">
            <summary>Indicates whether the current object is equivalent to the specified object.</summary>
            <param name="o">The object to compare with the current object.</param>
            <returns>
                <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Security.Policy.GacMembershipCondition" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement)">
            <summary>Uses the specified XML encoding to reconstruct a security object.</summary>
            <param name="e">The <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding to use to reconstruct the security object.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="e" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="e" /> is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Uses the specified XML encoding to reconstruct a security object, using the specified policy level context.</summary>
            <param name="e">The <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding to use to reconstruct the security object.</param>
            <param name="level">The <see cref="T:System.Security.Policy.PolicyLevel" /> context for resolving <see cref="T:System.Security.NamedPermissionSet" /> references.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="e" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="e" /> is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.GacMembershipCondition.GetHashCode">
            <summary>Gets a hash code for the current membership condition.</summary>
            <returns>0 (zero).</returns>
        </member>
        <member name="M:System.Security.Policy.GacMembershipCondition.ToString">
            <summary>Returns a string representation of the membership condition.</summary>
            <returns>A string representation of the membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.GacMembershipCondition.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Policy.GacMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Creates an XML encoding of the security object and its current state, using the specified policy level context.</summary>
            <param name="level">The <see cref="T:System.Security.Policy.PolicyLevel" /> context for resolving <see cref="T:System.Security.NamedPermissionSet" /> references.</param>
            <returns>A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="T:System.Security.Policy.Hash">
            <summary>Provides evidence about the hash value for an assembly. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.Hash.#ctor(System.Reflection.Assembly)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.Hash" /> class.</summary>
            <param name="assembly">The assembly for which to compute the hash value.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="assembly" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="assembly" /> is not a run-time <see cref="T:System.Reflection.Assembly" /> object.</exception>
        </member>
        <member name="M:System.Security.Policy.Hash.CreateMD5(System.Byte[])">
            <summary>Creates a <see cref="T:System.Security.Policy.Hash" /> object that contains an <see cref="T:System.Security.Cryptography.MD5" /> hash value.</summary>
            <param name="md5">A byte array that contains an <see cref="T:System.Security.Cryptography.MD5" /> hash value.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="md5" /> parameter is <see langword="null" />.</exception>
            <returns>An object that contains the hash value provided by the <paramref name="md5" /> parameter.</returns>
        </member>
        <member name="M:System.Security.Policy.Hash.CreateSHA1(System.Byte[])">
            <summary>Creates a <see cref="T:System.Security.Policy.Hash" /> object that contains a <see cref="T:System.Security.Cryptography.SHA1" /> hash value.</summary>
            <param name="sha1">A byte array that contains a <see cref="T:System.Security.Cryptography.SHA1" /> hash value.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sha1" /> parameter is <see langword="null" />.</exception>
            <returns>An object that contains the hash value provided by the <paramref name="sha1" /> parameter.</returns>
        </member>
        <member name="M:System.Security.Policy.Hash.CreateSHA256(System.Byte[])">
            <summary>Creates a <see cref="T:System.Security.Policy.Hash" /> object that contains a <see cref="T:System.Security.Cryptography.SHA256" /> hash value.</summary>
            <param name="sha256">A byte array that contains a <see cref="T:System.Security.Cryptography.SHA256" /> hash value.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sha256" /> parameter is <see langword="null" />.</exception>
            <returns>A hash object that contains the hash value provided by the <paramref name="sha256" /> parameter.</returns>
        </member>
        <member name="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)">
            <summary>Computes the hash value for the assembly using the specified hash algorithm.</summary>
            <param name="hashAlg">The hash algorithm to use to compute the hash value for the assembly.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="hashAlg" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.Security.SecurityException">The hash value for the assembly cannot be generated.</exception>
            <returns>A byte array that represents the hash value for the assembly.</returns>
        </member>
        <member name="M:System.Security.Policy.Hash.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Gets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the parameter name and additional exception information.</summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:System.Security.Policy.Hash.ToString">
            <summary>Returns a string representation of the current <see cref="T:System.Security.Policy.Hash" />.</summary>
            <returns>A representation of the current <see cref="T:System.Security.Policy.Hash" />.</returns>
        </member>
        <member name="P:System.Security.Policy.Hash.MD5">
            <summary>Gets the <see cref="T:System.Security.Cryptography.MD5" /> hash value for the assembly.</summary>
            <returns>A byte array that represents the <see cref="T:System.Security.Cryptography.MD5" /> hash value for the assembly.</returns>
        </member>
        <member name="P:System.Security.Policy.Hash.SHA1">
            <summary>Gets the <see cref="T:System.Security.Cryptography.SHA1" /> hash value for the assembly.</summary>
            <returns>A byte array that represents the <see cref="T:System.Security.Cryptography.SHA1" /> hash value for the assembly.</returns>
        </member>
        <member name="P:System.Security.Policy.Hash.SHA256">
            <summary>Gets the <see cref="T:System.Security.Cryptography.SHA256" /> hash value for the assembly.</summary>
            <returns>A byte array that represents the <see cref="T:System.Security.Cryptography.SHA256" /> hash value for the assembly.</returns>
        </member>
        <member name="T:System.Security.Policy.HashMembershipCondition">
            <summary>Determines whether an assembly belongs to a code group by testing its hash value. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.HashMembershipCondition.#ctor(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.HashMembershipCondition" /> class with the hash algorithm and hash value that determine membership.</summary>
            <param name="hashAlg">The hash algorithm to use to compute the hash value for the assembly.</param>
            <param name="value">The hash value for which to test.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="hashAlg" /> parameter is <see langword="null" />.  
  
 -or-  
  
 The <paramref name="value" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="hashAlg" /> parameter is not a valid hash algorithm.</exception>
        </member>
        <member name="M:System.Security.Policy.HashMembershipCondition.Check(System.Security.Policy.Evidence)">
            <summary>Determines whether the specified evidence satisfies the membership condition.</summary>
            <param name="evidence">The evidence set against which to make the test.</param>
            <returns>
                <see langword="true" /> if the specified evidence satisfies the membership condition; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.HashMembershipCondition.Copy">
            <summary>Creates an equivalent copy of the membership condition.</summary>
            <returns>A new, identical copy of the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.HashMembershipCondition.Equals(System.Object)">
            <summary>Determines whether the <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> and the <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> from the specified object are equivalent to the <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> and <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> contained in the current <see cref="T:System.Security.Policy.HashMembershipCondition" />.</summary>
            <param name="o">The object to compare to the current <see cref="T:System.Security.Policy.HashMembershipCondition" />.</param>
            <returns>
                <see langword="true" /> if the <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> and <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> from the specified object is equivalent to the <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> and <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> contained in the current <see cref="T:System.Security.Policy.HashMembershipCondition" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
        </member>
        <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <param name="level">The policy level context, used to resolve named permission set references.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.HashMembershipCondition.GetHashCode">
            <summary>Gets the hash code for the current membership condition.</summary>
            <returns>The hash code for the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>Runs when the entire object graph has been deserialized.</summary>
            <param name="sender">The object that initiated the callback. The functionality for this parameter is not currently implemented.</param>
        </member>
        <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
            <param name="context">The destination <see cref="T:System.Runtime.Serialization.StreamingContext" /> for this serialization.</param>
        </member>
        <member name="M:System.Security.Policy.HashMembershipCondition.ToString">
            <summary>Creates and returns a string representation of the membership condition.</summary>
            <returns>A string representation of the state of the membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.HashMembershipCondition.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Policy.HashMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Creates an XML encoding of the security object and its current state with the specified <see cref="T:System.Security.Policy.PolicyLevel" />.</summary>
            <param name="level">The policy level context for resolving named permission set references.</param>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm">
            <summary>Gets or sets the hash algorithm to use for the membership condition.</summary>
            <exception cref="T:System.ArgumentNullException">An attempt is made to set <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> to <see langword="null" />.</exception>
            <returns>The hash algorithm to use for the membership condition.</returns>
        </member>
        <member name="P:System.Security.Policy.HashMembershipCondition.HashValue">
            <summary>Gets or sets the hash value for which the membership condition tests.</summary>
            <exception cref="T:System.ArgumentNullException">An attempt is made to set <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> to <see langword="null" />.</exception>
            <returns>The hash value for which the membership condition tests.</returns>
        </member>
        <member name="T:System.Security.Policy.IIdentityPermissionFactory">
            <summary>Defines the method that creates a new identity permission.</summary>
        </member>
        <member name="M:System.Security.Policy.IIdentityPermissionFactory.CreateIdentityPermission(System.Security.Policy.Evidence)">
            <summary>Creates a new identity permission for the specified evidence.</summary>
            <param name="evidence">The evidence from which to create the new identity permission.</param>
            <returns>The new identity permission.</returns>
        </member>
        <member name="T:System.Security.Policy.IMembershipCondition">
            <summary>Defines the test to determine whether a code assembly is a member of a code group.</summary>
        </member>
        <member name="M:System.Security.Policy.IMembershipCondition.Check(System.Security.Policy.Evidence)">
            <summary>Determines whether the specified evidence satisfies the membership condition.</summary>
            <param name="evidence">The evidence set against which to make the test.</param>
            <returns>
                <see langword="true" /> if the specified evidence satisfies the membership condition; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.IMembershipCondition.Copy">
            <summary>Creates an equivalent copy of the membership condition.</summary>
            <returns>A new, identical copy of the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.IMembershipCondition.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.</summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.IMembershipCondition.ToString">
            <summary>Creates and returns a string representation of the membership condition.</summary>
            <returns>A string representation of the state of the current membership condition.</returns>
        </member>
        <member name="T:System.Security.Policy.NetCodeGroup">
            <summary>Grants Web permission to the site from which the assembly was downloaded. This class cannot be inherited.</summary>
        </member>
        <member name="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme">
            <summary>Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.</summary>
        </member>
        <member name="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme">
            <summary>Contains a value used to specify any other unspecified origin scheme.</summary>
        </member>
        <member name="M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.NetCodeGroup" /> class.</summary>
            <param name="membershipCondition">A membership condition that tests evidence to determine whether this code group applies code access security policy.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="membershipCondition" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The type of the <paramref name="membershipCondition" /> parameter is not valid.</exception>
        </member>
        <member name="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)">
            <summary>Adds the specified connection access to the current code group.</summary>
            <param name="originScheme">A <see cref="T:System.String" /> containing the scheme to match against the code's scheme.</param>
            <param name="connectAccess">A <see cref="T:System.Security.Policy.CodeConnectAccess" /> that specifies the scheme and port code can use to connect back to its origin server.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="originScheme" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="originScheme" /> contains characters that are not permitted in schemes.  
  
 -or-  
  
 <paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> and <paramref name="connectAccess" /> specifies <see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" /> as its scheme.</exception>
        </member>
        <member name="M:System.Security.Policy.NetCodeGroup.Copy">
            <summary>Makes a deep copy of the current code group.</summary>
            <returns>An equivalent copy of the current code group, including its membership conditions and child code groups.</returns>
        </member>
        <member name="M:System.Security.Policy.NetCodeGroup.Equals(System.Object)">
            <summary>Determines whether the specified code group is equivalent to the current code group.</summary>
            <param name="o">The <see cref="T:System.Security.Policy.NetCodeGroup" /> object to compare with the current code group.</param>
            <returns>
                <see langword="true" /> if the specified code group is equivalent to the current code group; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules">
            <summary>Gets the connection access information for the current code group.</summary>
            <returns>A <see cref="T:System.Collections.DictionaryEntry" /> array containing connection access information.</returns>
        </member>
        <member name="M:System.Security.Policy.NetCodeGroup.GetHashCode">
            <summary>Gets the hash code of the current code group.</summary>
            <returns>The hash code of the current code group.</returns>
        </member>
        <member name="M:System.Security.Policy.NetCodeGroup.ResetConnectAccess">
            <summary>Removes all connection access information for the current code group.</summary>
        </member>
        <member name="M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)">
            <summary>Resolves policy for the code group and its descendants for a set of evidence.</summary>
            <param name="evidence">The <see cref="T:System.Security.Policy.Evidence" /> for the assembly.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="evidence" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.Security.Policy.PolicyException">More than one code group (including the parent code group and any child code groups) is marked <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
            <returns>A <see cref="T:System.Security.Policy.PolicyStatement" /> that consists of the permissions granted by the code group with optional attributes, or <see langword="null" /> if the code group does not apply (the membership condition does not match the specified evidence).</returns>
        </member>
        <member name="M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
            <summary>Resolves matching code groups.</summary>
            <param name="evidence">The evidence for the assembly.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="evidence" /> parameter is <see langword="null" />.</exception>
            <returns>The complete set of code groups that were matched by the evidence.</returns>
        </member>
        <member name="P:System.Security.Policy.NetCodeGroup.AttributeString">
            <summary>Gets a string representation of the attributes of the policy statement for the code group.</summary>
            <returns>Always <see langword="null" />.</returns>
        </member>
        <member name="P:System.Security.Policy.NetCodeGroup.MergeLogic">
            <summary>Gets the logic to use for merging groups.</summary>
            <returns>The string "Union".</returns>
        </member>
        <member name="P:System.Security.Policy.NetCodeGroup.PermissionSetName">
            <summary>Gets the name of the <see cref="T:System.Security.NamedPermissionSet" /> for the code group.</summary>
            <returns>Always the string "Same site Web."</returns>
        </member>
        <member name="T:System.Security.Policy.PermissionRequestEvidence">
            <summary>Defines evidence that represents permission requests. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.PermissionRequestEvidence.#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> class with the permission request of a code assembly.</summary>
            <param name="request">The minimum permissions the code requires to run.</param>
            <param name="optional">The permissions the code can use if they are granted, but that are not required.</param>
            <param name="denied">The permissions the code explicitly asks not to be granted.</param>
        </member>
        <member name="M:System.Security.Policy.PermissionRequestEvidence.Copy">
            <summary>Creates an equivalent copy of the current <see cref="T:System.Security.Policy.PermissionRequestEvidence" />.</summary>
            <returns>An equivalent copy of the current <see cref="T:System.Security.Policy.PermissionRequestEvidence" />.</returns>
        </member>
        <member name="M:System.Security.Policy.PermissionRequestEvidence.ToString">
            <summary>Gets a string representation of the state of the <see cref="T:System.Security.Policy.PermissionRequestEvidence" />.</summary>
            <returns>A representation of the state of the <see cref="T:System.Security.Policy.PermissionRequestEvidence" />.</returns>
        </member>
        <member name="P:System.Security.Policy.PermissionRequestEvidence.DeniedPermissions">
            <summary>Gets the permissions the code explicitly asks not to be granted.</summary>
            <returns>The permissions the code explicitly asks not to be granted.</returns>
        </member>
        <member name="P:System.Security.Policy.PermissionRequestEvidence.OptionalPermissions">
            <summary>Gets the permissions the code can use if they are granted, but are not required.</summary>
            <returns>The permissions the code can use if they are granted, but are not required.</returns>
        </member>
        <member name="P:System.Security.Policy.PermissionRequestEvidence.RequestedPermissions">
            <summary>Gets the minimum permissions the code requires to run.</summary>
            <returns>The minimum permissions the code requires to run.</returns>
        </member>
        <member name="T:System.Security.Policy.PolicyException">
            <summary>The exception that is thrown when policy forbids code to run.</summary>
        </member>
        <member name="M:System.Security.Policy.PolicyException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.PolicyException" /> class with default properties.</summary>
        </member>
        <member name="M:System.Security.Policy.PolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.PolicyException" /> class with serialized data.</summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:System.Security.Policy.PolicyException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.PolicyException" /> class with a specified error message.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:System.Security.Policy.PolicyException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.PolicyException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="exception">The exception that is the cause of the current exception. If the <paramref name="exception" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</param>
        </member>
        <member name="T:System.Security.Policy.PolicyLevel">
            <summary>Represents the security policy levels for the common language runtime. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)">
            <summary>Adds a <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> corresponding to the specified <see cref="T:System.Security.Policy.StrongName" /> to the list of <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.</summary>
            <param name="sn">The <see cref="T:System.Security.Policy.StrongName" /> used to create the <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> to add to the list of <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sn" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Policy.StrongName" /> specified by the <paramref name="sn" /> parameter already has full trust.</exception>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
            <summary>Adds the specified <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> to the list of <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.</summary>
            <param name="snMC">The <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> to add to the list of <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> objects used to determine whether an assembly is a member of the group of assemblies that should not be evaluated.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="snMC" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> specified by the <paramref name="snMC" /> parameter already has full trust.</exception>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)">
            <summary>Adds a <see cref="T:System.Security.NamedPermissionSet" /> to the current policy level.</summary>
            <param name="permSet">The <see cref="T:System.Security.NamedPermissionSet" /> to add to the current policy level.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="permSet" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="permSet" /> parameter has the same name as an existing <see cref="T:System.Security.NamedPermissionSet" /> in the <see cref="T:System.Security.Policy.PolicyLevel" />.</exception>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)">
            <summary>Replaces a <see cref="T:System.Security.NamedPermissionSet" /> in the current policy level with the specified <see cref="T:System.Security.PermissionSet" />.</summary>
            <param name="name">The name of the <see cref="T:System.Security.NamedPermissionSet" /> to replace.</param>
            <param name="pSet">The <see cref="T:System.Security.PermissionSet" /> that replaces the <see cref="T:System.Security.NamedPermissionSet" /> specified by the <paramref name="name" /> parameter.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is <see langword="null" />.  
  
 -or-  
  
 The <paramref name="pSet" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is equal to the name of a reserved permission set.  
  
 -or-  
  
 The <see cref="T:System.Security.PermissionSet" /> specified by the <paramref name="pSet" /> parameter cannot be found.</exception>
            <returns>A copy of the <see cref="T:System.Security.NamedPermissionSet" /> that was replaced.</returns>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.CreateAppDomainLevel">
            <summary>Creates a new policy level for use at the application domain policy level.</summary>
            <returns>The newly created <see cref="T:System.Security.Policy.PolicyLevel" />.</returns>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a given state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.SecurityElement" /> specified by the <paramref name="e" /> parameter is invalid.</exception>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)">
            <summary>Returns the <see cref="T:System.Security.NamedPermissionSet" /> in the current policy level with the specified name.</summary>
            <param name="name">The name of the <see cref="T:System.Security.NamedPermissionSet" /> to find.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is <see langword="null" />.</exception>
            <returns>The <see cref="T:System.Security.NamedPermissionSet" /> in the current policy level with the specified name, if found; otherwise, <see langword="null" />.</returns>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.Recover">
            <summary>Replaces the configuration file for this <see cref="T:System.Security.Policy.PolicyLevel" /> with the last backup (reflecting the state of policy prior to the last time it was saved) and returns it to the state of the last save.</summary>
            <exception cref="T:System.Security.Policy.PolicyException">The policy level does not have a valid configuration file.</exception>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)">
            <summary>Removes an assembly with the specified <see cref="T:System.Security.Policy.StrongName" /> from the list of assemblies the policy level uses to evaluate policy.</summary>
            <param name="sn">The <see cref="T:System.Security.Policy.StrongName" /> of the assembly to remove from the list of assemblies used to evaluate policy.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sn" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The assembly with the <see cref="T:System.Security.Policy.StrongName" /> specified by the <paramref name="sn" /> parameter does not have full trust.</exception>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
            <summary>Removes an assembly with the specified <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> from the list of assemblies the policy level uses to evaluate policy.</summary>
            <param name="snMC">The <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> of the assembly to remove from the list of assemblies used to evaluate policy.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="snMC" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> specified by the <paramref name="snMC" /> parameter does not have full trust.</exception>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)">
            <summary>Removes the specified <see cref="T:System.Security.NamedPermissionSet" /> from the current policy level.</summary>
            <param name="permSet">The <see cref="T:System.Security.NamedPermissionSet" /> to remove from the current policy level.</param>
            <exception cref="T:System.ArgumentException">The <see cref="T:System.Security.NamedPermissionSet" /> specified by the <paramref name="permSet" /> parameter was not found.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="permSet" /> parameter is <see langword="null" />.</exception>
            <returns>The <see cref="T:System.Security.NamedPermissionSet" /> that was removed.</returns>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)">
            <summary>Removes the <see cref="T:System.Security.NamedPermissionSet" /> with the specified name from the current policy level.</summary>
            <param name="name">The name of the <see cref="T:System.Security.NamedPermissionSet" /> to remove.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is equal to the name of a reserved permission set.  
  
 -or-  
  
 A <see cref="T:System.Security.NamedPermissionSet" /> with the specified name cannot be found.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is <see langword="null" />.</exception>
            <returns>The <see cref="T:System.Security.NamedPermissionSet" /> that was removed.</returns>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.Reset">
            <summary>Returns the current policy level to the default state.</summary>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)">
            <summary>Resolves policy based on evidence for the policy level, and returns the resulting <see cref="T:System.Security.Policy.PolicyStatement" />.</summary>
            <param name="evidence">The <see cref="T:System.Security.Policy.Evidence" /> used to resolve the <see cref="T:System.Security.Policy.PolicyLevel" />.</param>
            <exception cref="T:System.Security.Policy.PolicyException">The policy level contains multiple matching code groups marked as exclusive.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="evidence" /> parameter is <see langword="null" />.</exception>
            <returns>The resulting <see cref="T:System.Security.Policy.PolicyStatement" />.</returns>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
            <summary>Resolves policy at the policy level and returns the root of a code group tree that matches the evidence.</summary>
            <param name="evidence">The <see cref="T:System.Security.Policy.Evidence" /> used to resolve policy.</param>
            <exception cref="T:System.Security.Policy.PolicyException">The policy level contains multiple matching code groups marked as exclusive.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="evidence" /> parameter is <see langword="null" />.</exception>
            <returns>A <see cref="T:System.Security.Policy.CodeGroup" /> representing the root of a tree of code groups matching the specified evidence.</returns>
        </member>
        <member name="M:System.Security.Policy.PolicyLevel.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="P:System.Security.Policy.PolicyLevel.FullTrustAssemblies">
            <summary>Gets a list of <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy.</summary>
            <returns>A list of <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> objects used to determine whether an assembly is a member of the group of assemblies used to evaluate security policy. These assemblies are granted full trust during security policy evaluation of assemblies not in the list.</returns>
        </member>
        <member name="P:System.Security.Policy.PolicyLevel.Label">
            <summary>Gets a descriptive label for the policy level.</summary>
            <returns>The label associated with the policy level.</returns>
        </member>
        <member name="P:System.Security.Policy.PolicyLevel.NamedPermissionSets">
            <summary>Gets a list of named permission sets defined for the policy level.</summary>
            <returns>A list of named permission sets defined for the policy level.</returns>
        </member>
        <member name="P:System.Security.Policy.PolicyLevel.RootCodeGroup">
            <summary>Gets or sets the root code group for the policy level.</summary>
            <exception cref="T:System.ArgumentNullException">The value for <see cref="P:System.Security.Policy.PolicyLevel.RootCodeGroup" /> is <see langword="null" />.</exception>
            <returns>The <see cref="T:System.Security.Policy.CodeGroup" /> that is the root of the tree of policy level code groups.</returns>
        </member>
        <member name="P:System.Security.Policy.PolicyLevel.StoreLocation">
            <summary>Gets the path where the policy file is stored.</summary>
            <returns>The path where the policy file is stored, or <see langword="null" /> if the <see cref="T:System.Security.Policy.PolicyLevel" /> does not have a storage location.</returns>
        </member>
        <member name="P:System.Security.Policy.PolicyLevel.Type">
            <summary>Gets the type of the policy level.</summary>
            <returns>One of the <see cref="T:System.Security.PolicyLevelType" /> values.</returns>
        </member>
        <member name="T:System.Security.Policy.PolicyStatement">
            <summary>Represents the statement of a <see cref="T:System.Security.Policy.CodeGroup" /> describing the permissions and other information that apply to code with a particular set of evidence. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.PolicyStatement" /> class with the specified <see cref="T:System.Security.PermissionSet" />.</summary>
            <param name="permSet">The <see cref="T:System.Security.PermissionSet" /> with which to initialize the new instance.</param>
        </member>
        <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.PolicyStatement" /> class with the specified <see cref="T:System.Security.PermissionSet" /> and attributes.</summary>
            <param name="permSet">The <see cref="T:System.Security.PermissionSet" /> with which to initialize the new instance.</param>
            <param name="attributes">A bitwise combination of the <see cref="T:System.Security.Policy.PolicyStatementAttribute" /> values.</param>
        </member>
        <member name="M:System.Security.Policy.PolicyStatement.Copy">
            <summary>Creates an equivalent copy of the current policy statement.</summary>
            <returns>A new copy of the <see cref="T:System.Security.Policy.PolicyStatement" /> with <see cref="P:System.Security.Policy.PolicyStatement.PermissionSet" /> and <see cref="P:System.Security.Policy.PolicyStatement.Attributes" /> identical to those of the current <see cref="T:System.Security.Policy.PolicyStatement" />.</returns>
        </member>
        <member name="M:System.Security.Policy.PolicyStatement.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Security.Policy.PolicyStatement" /> object is equal to the current <see cref="T:System.Security.Policy.PolicyStatement" />.</summary>
            <param name="o">The <see cref="T:System.Security.Policy.PolicyStatement" /> object to compare with the current <see cref="T:System.Security.Policy.PolicyStatement" />.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Security.Policy.PolicyStatement" /> is equal to the current <see cref="T:System.Security.Policy.PolicyStatement" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a given state from an XML encoding.</summary>
            <param name="et">The XML encoding to use to reconstruct the security object.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="et" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="et" /> parameter is not a valid <see cref="T:System.Security.Policy.PolicyStatement" /> encoding.</exception>
        </member>
        <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Reconstructs a security object with a given state from an XML encoding.</summary>
            <param name="et">The XML encoding to use to reconstruct the security object.</param>
            <param name="level">The <see cref="T:System.Security.Policy.PolicyLevel" /> context for lookup of <see cref="T:System.Security.NamedPermissionSet" /> values.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="et" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="et" /> parameter is not a valid <see cref="T:System.Security.Policy.PolicyStatement" /> encoding.</exception>
        </member>
        <member name="M:System.Security.Policy.PolicyStatement.GetHashCode">
            <summary>Gets a hash code for the <see cref="T:System.Security.Policy.PolicyStatement" /> object that is suitable for use in hashing algorithms and data structures such as a hash table.</summary>
            <returns>A hash code for the current <see cref="T:System.Security.Policy.PolicyStatement" /> object.</returns>
        </member>
        <member name="M:System.Security.Policy.PolicyStatement.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <param name="level">The <see cref="T:System.Security.Policy.PolicyLevel" /> context for lookup of <see cref="T:System.Security.NamedPermissionSet" /> values.</param>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="P:System.Security.Policy.PolicyStatement.Attributes">
            <summary>Gets or sets the attributes of the policy statement.</summary>
            <returns>The attributes of the policy statement.</returns>
        </member>
        <member name="P:System.Security.Policy.PolicyStatement.AttributeString">
            <summary>Gets a string representation of the attributes of the policy statement.</summary>
            <returns>A text string representing the attributes of the policy statement.</returns>
        </member>
        <member name="P:System.Security.Policy.PolicyStatement.PermissionSet">
            <summary>Gets or sets the <see cref="T:System.Security.PermissionSet" /> of the policy statement.</summary>
            <returns>The <see cref="T:System.Security.PermissionSet" /> of the policy statement.</returns>
        </member>
        <member name="T:System.Security.Policy.PolicyStatementAttribute">
            <summary>Defines special attribute flags for security policy on code groups.</summary>
        </member>
        <member name="F:System.Security.Policy.PolicyStatementAttribute.All">
            <summary>All attribute flags are set.</summary>
        </member>
        <member name="F:System.Security.Policy.PolicyStatementAttribute.Exclusive">
            <summary>The exclusive code group flag. When a code group has this flag set, only the permissions associated with that code group are granted to code belonging to the code group. At most, one code group matching a given piece of code can be set as exclusive.</summary>
        </member>
        <member name="F:System.Security.Policy.PolicyStatementAttribute.LevelFinal">
            <summary>The flag representing a policy statement that causes lower policy levels to not be evaluated as part of the resolve operation, effectively allowing the policy level to override lower levels.</summary>
        </member>
        <member name="F:System.Security.Policy.PolicyStatementAttribute.Nothing">
            <summary>No flags are set.</summary>
        </member>
        <member name="T:System.Security.Policy.Publisher">
            <summary>Provides the Authenticode X.509v3 digital signature of a code assembly as evidence for policy evaluation. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.Publisher" /> class with the Authenticode X.509v3 certificate containing the publisher's public key.</summary>
            <param name="cert">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> that contains the software publisher's public key.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="cert" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.Publisher.Copy">
            <summary>Creates an equivalent copy of the <see cref="T:System.Security.Policy.Publisher" />.</summary>
            <returns>A new, identical copy of the <see cref="T:System.Security.Policy.Publisher" />.</returns>
        </member>
        <member name="M:System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)">
            <summary>Creates an identity permission that corresponds to the current instance of the <see cref="T:System.Security.Policy.Publisher" /> class.</summary>
            <param name="evidence">The <see cref="T:System.Security.Policy.Evidence" /> from which to construct the identity permission.</param>
            <returns>A <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> for the specified <see cref="T:System.Security.Policy.Publisher" />.</returns>
        </member>
        <member name="M:System.Security.Policy.Publisher.Equals(System.Object)">
            <summary>Compares the current <see cref="T:System.Security.Policy.Publisher" /> to the specified object for equivalence.</summary>
            <param name="o">The <see cref="T:System.Security.Policy.Publisher" /> to test for equivalence with the current object.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="o" /> parameter is not a <see cref="T:System.Security.Policy.Publisher" /> object.</exception>
            <returns>
                <see langword="true" /> if the two instances of the <see cref="T:System.Security.Policy.Publisher" /> class are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.Publisher.GetHashCode">
            <summary>Gets the hash code of the current <see cref="P:System.Security.Policy.Publisher.Certificate" />.</summary>
            <returns>The hash code of the current <see cref="P:System.Security.Policy.Publisher.Certificate" />.</returns>
        </member>
        <member name="M:System.Security.Policy.Publisher.ToString">
            <summary>Returns a string representation of the current <see cref="T:System.Security.Policy.Publisher" />.</summary>
            <returns>A representation of the current <see cref="T:System.Security.Policy.Publisher" />.</returns>
        </member>
        <member name="P:System.Security.Policy.Publisher.Certificate">
            <summary>Gets the publisher's Authenticode X.509v3 certificate.</summary>
            <returns>The publisher's <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />.</returns>
        </member>
        <member name="T:System.Security.Policy.PublisherMembershipCondition">
            <summary>Determines whether an assembly belongs to a code group by testing its software publisher's Authenticode X.509v3 certificate. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.PublisherMembershipCondition.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> class with the Authenticode X.509v3 certificate that determines membership.</summary>
            <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> that contains the software publisher's public key.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="certificate" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.PublisherMembershipCondition.Check(System.Security.Policy.Evidence)">
            <summary>Determines whether the specified evidence satisfies the membership condition.</summary>
            <param name="evidence">The <see cref="T:System.Security.Policy.Evidence" /> against which to make the test.</param>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> property is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if the specified evidence satisfies the membership condition; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.PublisherMembershipCondition.Copy">
            <summary>Creates an equivalent copy of the membership condition.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> property is <see langword="null" />.</exception>
            <returns>A new, identical copy of the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.PublisherMembershipCondition.Equals(System.Object)">
            <summary>Determines whether the publisher certificate from the specified object is equivalent to the publisher certificate contained in the current <see cref="T:System.Security.Policy.PublisherMembershipCondition" />.</summary>
            <param name="o">The object to compare to the current <see cref="T:System.Security.Policy.PublisherMembershipCondition" />.</param>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> property is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if the publisher certificate from the specified object is equivalent to the publisher certificate contained in the current <see cref="T:System.Security.Policy.PublisherMembershipCondition" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <param name="level">The <see cref="T:System.Security.Policy.PolicyLevel" /> context, used to resolve <see cref="T:System.Security.NamedPermissionSet" /> references.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.PublisherMembershipCondition.GetHashCode">
            <summary>Gets the hash code for the current membership condition.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> property is <see langword="null" />.</exception>
            <returns>The hash code for the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.PublisherMembershipCondition.ToString">
            <summary>Creates and returns a string representation of the <see cref="T:System.Security.Policy.PublisherMembershipCondition" />.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> property is <see langword="null" />.</exception>
            <returns>A representation of the <see cref="T:System.Security.Policy.PublisherMembershipCondition" />.</returns>
        </member>
        <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> property is <see langword="null" />.</exception>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Creates an XML encoding of the security object and its current state with the specified <see cref="T:System.Security.Policy.PolicyLevel" />.</summary>
            <param name="level">The <see cref="T:System.Security.Policy.PolicyLevel" /> context, which is used to resolve <see cref="T:System.Security.NamedPermissionSet" /> references.</param>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> property is <see langword="null" />.</exception>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="P:System.Security.Policy.PublisherMembershipCondition.Certificate">
            <summary>Gets or sets the Authenticode X.509v3 certificate for which the membership condition tests.</summary>
            <exception cref="T:System.ArgumentNullException">The property value is <see langword="null" />.</exception>
            <returns>The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> for which the membership condition tests.</returns>
        </member>
        <member name="T:System.Security.Policy.Site">
            <summary>Provides the Web site from which a code assembly originates as evidence for policy evaluation. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.Site.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.Site" /> class with the website from which a code assembly originates.</summary>
            <param name="name">The website of origin for the associated code assembly.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.Site.Copy">
            <summary>Creates an equivalent copy of the <see cref="T:System.Security.Policy.Site" /> object.</summary>
            <returns>A new object that is identical to the current <see cref="T:System.Security.Policy.Site" /> object.</returns>
        </member>
        <member name="M:System.Security.Policy.Site.CreateFromUrl(System.String)">
            <summary>Creates a new <see cref="T:System.Security.Policy.Site" /> object from the specified URL.</summary>
            <param name="url">The URL from which to create the new <see cref="T:System.Security.Policy.Site" /> object.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="url" /> parameter is not a valid URL.  
  
 -or-  
  
 The <paramref name="url" /> parameter is a file name.</exception>
            <returns>A new site object.</returns>
        </member>
        <member name="M:System.Security.Policy.Site.CreateIdentityPermission(System.Security.Policy.Evidence)">
            <summary>Creates an identity permission that corresponds to the current <see cref="T:System.Security.Policy.Site" /> object.</summary>
            <param name="evidence">The evidence from which to construct the identity permission.</param>
            <returns>A site identity permission for the current <see cref="T:System.Security.Policy.Site" /> object.</returns>
        </member>
        <member name="M:System.Security.Policy.Site.Equals(System.Object)">
            <summary>Compares the current <see cref="T:System.Security.Policy.Site" /> to the specified object for equivalence.</summary>
            <param name="o">The object to test for equivalence with the current object.</param>
            <returns>
                <see langword="true" /> if the two instances of the <see cref="T:System.Security.Policy.Site" /> class are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.Site.GetHashCode">
            <summary>Returns the hash code of the current website name.</summary>
            <returns>The hash code of the current website name.</returns>
        </member>
        <member name="M:System.Security.Policy.Site.ToString">
            <summary>Returns a string representation of the current <see cref="T:System.Security.Policy.Site" /> object.</summary>
            <returns>A representation of the current site.</returns>
        </member>
        <member name="P:System.Security.Policy.Site.Name">
            <summary>Gets the website from which the code assembly originates.</summary>
            <returns>The name of the website from which the code assembly originates.</returns>
        </member>
        <member name="T:System.Security.Policy.SiteMembershipCondition">
            <summary>Determines whether an assembly belongs to a code group by testing the site from which it originated. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.SiteMembershipCondition.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.SiteMembershipCondition" /> class with name of the site that determines membership.</summary>
            <param name="site">The site name or wildcard expression.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="site" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="site" /> parameter is not a valid <see cref="T:System.Security.Policy.Site" />.</exception>
        </member>
        <member name="M:System.Security.Policy.SiteMembershipCondition.Check(System.Security.Policy.Evidence)">
            <summary>Determines whether the specified evidence satisfies the membership condition.</summary>
            <param name="evidence">The <see cref="T:System.Security.Policy.Evidence" /> against which to make the test.</param>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> property is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if the specified evidence satisfies the membership condition; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.SiteMembershipCondition.Copy">
            <summary>Creates an equivalent copy of the membership condition.</summary>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> property is <see langword="null" />.</exception>
            <returns>A new, identical copy of the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.SiteMembershipCondition.Equals(System.Object)">
            <summary>Determines whether the site from the specified <see cref="T:System.Security.Policy.SiteMembershipCondition" /> object is equivalent to the site contained in the current <see cref="T:System.Security.Policy.SiteMembershipCondition" />.</summary>
            <param name="o">The <see cref="T:System.Security.Policy.SiteMembershipCondition" /> object to compare to the current <see cref="T:System.Security.Policy.SiteMembershipCondition" />.</param>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> property for the current object or the specified object is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if the site from the specified <see cref="T:System.Security.Policy.SiteMembershipCondition" /> object is equivalent to the site contained in the current <see cref="T:System.Security.Policy.SiteMembershipCondition" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <param name="level">The <see cref="T:System.Security.Policy.PolicyLevel" /> context, used to resolve <see cref="T:System.Security.NamedPermissionSet" /> references.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.SiteMembershipCondition.GetHashCode">
            <summary>Gets the hash code for the current membership condition.</summary>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> property is <see langword="null" />.</exception>
            <returns>The hash code for the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.SiteMembershipCondition.ToString">
            <summary>Creates and returns a string representation of the membership condition.</summary>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> property is <see langword="null" />.</exception>
            <returns>A string representation of the membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> property is <see langword="null" />.</exception>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Creates an XML encoding of the security object and its current state with the specified <see cref="T:System.Security.Policy.PolicyLevel" />.</summary>
            <param name="level">The <see cref="T:System.Security.Policy.PolicyLevel" /> context, used to resolve <see cref="T:System.Security.NamedPermissionSet" /> references.</param>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> property is <see langword="null" />.</exception>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="P:System.Security.Policy.SiteMembershipCondition.Site">
            <summary>Gets or sets the site for which the membership condition tests.</summary>
            <exception cref="T:System.ArgumentNullException">An attempt is made to set <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> to <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">An attempt is made to set <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> to an invalid <see cref="T:System.Security.Policy.Site" />.</exception>
            <returns>The site for which the membership condition tests.</returns>
        </member>
        <member name="T:System.Security.Policy.StrongName">
            <summary>Provides the strong name of a code assembly as evidence for policy evaluation. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.StrongName" /> class with the strong name public key blob, name, and version.</summary>
            <param name="blob">The <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> of the software publisher.</param>
            <param name="name">The simple name section of the strong name.</param>
            <param name="version">The <see cref="T:System.Version" /> of the strong name.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="blob" /> parameter is <see langword="null" />.  
  
 -or-  
  
 The <paramref name="name" /> parameter is <see langword="null" />.  
  
 -or-  
  
 The <paramref name="version" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is an empty string ("").</exception>
        </member>
        <member name="M:System.Security.Policy.StrongName.Copy">
            <summary>Creates an equivalent copy of the current <see cref="T:System.Security.Policy.StrongName" />.</summary>
            <returns>A new, identical copy of the current <see cref="T:System.Security.Policy.StrongName" />.</returns>
        </member>
        <member name="M:System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)">
            <summary>Creates a <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> that corresponds to the current <see cref="T:System.Security.Policy.StrongName" />.</summary>
            <param name="evidence">The <see cref="T:System.Security.Policy.Evidence" /> from which to construct the <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />.</param>
            <returns>A <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> for the specified <see cref="T:System.Security.Policy.StrongName" />.</returns>
        </member>
        <member name="M:System.Security.Policy.StrongName.Equals(System.Object)">
            <summary>Determines whether the specified strong name is equal to the current strong name.</summary>
            <param name="o">The strong name to compare against the current strong name.</param>
            <returns>
                <see langword="true" /> if the specified strong name is equal to the current strong name; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.StrongName.GetHashCode">
            <summary>Gets the hash code of the current <see cref="T:System.Security.Policy.StrongName" />.</summary>
            <returns>The hash code of the current <see cref="T:System.Security.Policy.StrongName" />.</returns>
        </member>
        <member name="M:System.Security.Policy.StrongName.ToString">
            <summary>Creates a string representation of the current <see cref="T:System.Security.Policy.StrongName" />.</summary>
            <returns>A representation of the current <see cref="T:System.Security.Policy.StrongName" />.</returns>
        </member>
        <member name="P:System.Security.Policy.StrongName.Name">
            <summary>Gets the simple name of the current <see cref="T:System.Security.Policy.StrongName" />.</summary>
            <returns>The simple name part of the <see cref="T:System.Security.Policy.StrongName" />.</returns>
        </member>
        <member name="P:System.Security.Policy.StrongName.PublicKey">
            <summary>Gets the <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> of the current <see cref="T:System.Security.Policy.StrongName" />.</summary>
            <returns>The <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> of the current <see cref="T:System.Security.Policy.StrongName" />.</returns>
        </member>
        <member name="P:System.Security.Policy.StrongName.Version">
            <summary>Gets the <see cref="T:System.Version" /> of the current <see cref="T:System.Security.Policy.StrongName" />.</summary>
            <returns>The <see cref="T:System.Version" /> of the current <see cref="T:System.Security.Policy.StrongName" />.</returns>
        </member>
        <member name="T:System.Security.Policy.StrongNameMembershipCondition">
            <summary>Determines whether an assembly belongs to a code group by testing its strong name. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.StrongNameMembershipCondition.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> class with the strong name public key blob, name, and version number that determine membership.</summary>
            <param name="blob">The strong name public key blob of the software publisher.</param>
            <param name="name">The simple name section of the strong name.</param>
            <param name="version">The version number of the strong name.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="blob" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="name" /> parameter is <see langword="null" />.  
  
 -or-  
  
 The <paramref name="name" /> parameter is an empty string ("").</exception>
        </member>
        <member name="M:System.Security.Policy.StrongNameMembershipCondition.Check(System.Security.Policy.Evidence)">
            <summary>Determines whether the specified evidence satisfies the membership condition.</summary>
            <param name="evidence">The <see cref="T:System.Security.Policy.Evidence" /> against which to make the test.</param>
            <returns>
                <see langword="true" /> if the specified evidence satisfies the membership condition; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.StrongNameMembershipCondition.Copy">
            <summary>Creates an equivalent copy of the current <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />.</summary>
            <returns>A new, identical copy of the current <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /></returns>
        </member>
        <member name="M:System.Security.Policy.StrongNameMembershipCondition.Equals(System.Object)">
            <summary>Determines whether the <see cref="T:System.Security.Policy.StrongName" /> from the specified object is equivalent to the <see cref="T:System.Security.Policy.StrongName" /> contained in the current <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />.</summary>
            <param name="o">The object to compare to the current <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />.</param>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> property of the current object or the specified object is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Security.Policy.StrongName" /> from the specified object is equivalent to the <see cref="T:System.Security.Policy.StrongName" /> contained in the current <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
        </member>
        <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <param name="level">The <see cref="T:System.Security.Policy.PolicyLevel" /> context, used to resolve <see cref="T:System.Security.NamedPermissionSet" /> references.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.StrongNameMembershipCondition.GetHashCode">
            <summary>Returns the hash code for the current <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />.</summary>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> property is <see langword="null" />.</exception>
            <returns>The hash code for the current <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />.</returns>
        </member>
        <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToString">
            <summary>Creates and returns a string representation of the current <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />.</summary>
            <returns>A representation of the current <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />.</returns>
        </member>
        <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Creates an XML encoding of the security object and its current state with the specified <see cref="T:System.Security.Policy.PolicyLevel" />.</summary>
            <param name="level">The <see cref="T:System.Security.Policy.PolicyLevel" /> context, which is used to resolve <see cref="T:System.Security.NamedPermissionSet" /> references.</param>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="P:System.Security.Policy.StrongNameMembershipCondition.Name">
            <summary>Gets or sets the simple name of the <see cref="T:System.Security.Policy.StrongName" /> for which the membership condition tests.</summary>
            <exception cref="T:System.ArgumentException">The value is <see langword="null" />.  
  
 -or-  
  
 The value is an empty string ("").</exception>
            <returns>The simple name of the <see cref="T:System.Security.Policy.StrongName" /> for which the membership condition tests.</returns>
        </member>
        <member name="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey">
            <summary>Gets or sets the <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> of the <see cref="T:System.Security.Policy.StrongName" /> for which the membership condition tests.</summary>
            <exception cref="T:System.ArgumentNullException">An attempt is made to set the <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> to <see langword="null" />.</exception>
            <returns>The <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> of the <see cref="T:System.Security.Policy.StrongName" /> for which the membership condition tests.</returns>
        </member>
        <member name="P:System.Security.Policy.StrongNameMembershipCondition.Version">
            <summary>Gets or sets the <see cref="T:System.Version" /> of the <see cref="T:System.Security.Policy.StrongName" /> for which the membership condition tests.</summary>
            <returns>The <see cref="T:System.Version" /> of the <see cref="T:System.Security.Policy.StrongName" /> for which the membership condition tests.</returns>
        </member>
        <member name="T:System.Security.Policy.TrustManagerContext">
            <summary>Represents the context for the trust manager to consider when making the decision to run an application, and when setting up the security on a new <see cref="T:System.AppDomain" /> in which to run an application.</summary>
        </member>
        <member name="M:System.Security.Policy.TrustManagerContext.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.TrustManagerContext" /> class.</summary>
        </member>
        <member name="M:System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.TrustManagerContext" /> class using the specified <see cref="T:System.Security.Policy.TrustManagerUIContext" /> object.</summary>
            <param name="uiContext">One of the <see cref="T:System.Security.Policy.TrustManagerUIContext" /> values that specifies the type of trust manager user interface to use.</param>
        </member>
        <member name="P:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision">
            <summary>Gets or sets a value indicating whether the application security manager should ignore any persisted decisions and call the trust manager.</summary>
            <returns>
                <see langword="true" /> to call the trust manager; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Policy.TrustManagerContext.KeepAlive">
            <summary>Gets or sets a value indicating whether the trust manager should cache state for this application, to facilitate future requests to determine application trust.</summary>
            <returns>
                <see langword="true" /> to cache state data; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Policy.TrustManagerContext.NoPrompt">
            <summary>Gets or sets a value indicating whether the trust manager should prompt the user for trust decisions.</summary>
            <returns>
                <see langword="true" /> to not prompt the user; <see langword="false" /> to prompt the user. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Policy.TrustManagerContext.Persist">
            <summary>Gets or sets a value indicating whether the user's response to the consent dialog should be persisted.</summary>
            <returns>
                <see langword="true" /> to cache state data; otherwise, <see langword="false" />. The default is <see langword="true" />.</returns>
        </member>
        <member name="P:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity">
            <summary>Gets or sets the identity of the previous application identity.</summary>
            <returns>An <see cref="T:System.ApplicationIdentity" /> object representing the previous <see cref="T:System.ApplicationIdentity" />.</returns>
        </member>
        <member name="P:System.Security.Policy.TrustManagerContext.UIContext">
            <summary>Gets or sets the type of user interface the trust manager should display.</summary>
            <returns>One of the <see cref="T:System.Security.Policy.TrustManagerUIContext" /> values. The default is <see cref="F:System.Security.Policy.TrustManagerUIContext.Run" />.</returns>
        </member>
        <member name="T:System.Security.Policy.TrustManagerUIContext">
            <summary>Specifies the type of user interface (UI) the trust manager should use for trust decisions.</summary>
        </member>
        <member name="F:System.Security.Policy.TrustManagerUIContext.Install">
            <summary>An Install UI.</summary>
        </member>
        <member name="F:System.Security.Policy.TrustManagerUIContext.Run">
            <summary>A Run UI.</summary>
        </member>
        <member name="F:System.Security.Policy.TrustManagerUIContext.Upgrade">
            <summary>An Upgrade UI.</summary>
        </member>
        <member name="T:System.Security.Policy.UnionCodeGroup">
            <summary>Represents a code group whose policy statement is the union of the current code group's policy statement and the policy statement of all its matching child code groups. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.UnionCodeGroup" /> class.</summary>
            <param name="membershipCondition">A membership condition that tests evidence to determine whether this code group applies policy.</param>
            <param name="policy">The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.</param>
            <exception cref="T:System.ArgumentException">The type of the <paramref name="membershipCondition" /> parameter is not valid.  
  
 -or-  
  
 The type of the <paramref name="policy" /> parameter is not valid.</exception>
        </member>
        <member name="M:System.Security.Policy.UnionCodeGroup.Copy">
            <summary>Makes a deep copy of the current code group.</summary>
            <returns>An equivalent copy of the current code group, including its membership conditions and child code groups.</returns>
        </member>
        <member name="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
            <summary>Resolves policy for the code group and its descendants for a set of evidence.</summary>
            <param name="evidence">The evidence for the assembly.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="evidence" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.Security.Policy.PolicyException">More than one code group (including the parent code group and any child code groups) is marked <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</exception>
            <returns>A policy statement consisting of the permissions granted by the code group with optional attributes, or <see langword="null" /> if the code group does not apply (the membership condition does not match the specified evidence).</returns>
        </member>
        <member name="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
            <summary>Resolves matching code groups.</summary>
            <param name="evidence">The evidence for the assembly.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="evidence" /> parameter is <see langword="null" />.</exception>
            <returns>The complete set of code groups that were matched by the evidence.</returns>
        </member>
        <member name="P:System.Security.Policy.UnionCodeGroup.MergeLogic">
            <summary>Gets the merge logic.</summary>
            <returns>Always the string "Union".</returns>
        </member>
        <member name="T:System.Security.Policy.Url">
            <summary>Provides the URL from which a code assembly originates as evidence for policy evaluation. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.Url.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.Url" /> class with the URL from which a code assembly originates.</summary>
            <param name="name">The URL of origin for the associated code assembly.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Policy.Url.Copy">
            <summary>Creates a new copy of the evidence object.</summary>
            <returns>A new, identical copy of the evidence object.</returns>
        </member>
        <member name="M:System.Security.Policy.Url.CreateIdentityPermission(System.Security.Policy.Evidence)">
            <summary>Creates an identity permission corresponding to the current instance of the <see cref="T:System.Security.Policy.Url" /> evidence class.</summary>
            <param name="evidence">The evidence set from which to construct the identity permission.</param>
            <returns>A <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> for the specified <see cref="T:System.Security.Policy.Url" /> evidence.</returns>
        </member>
        <member name="M:System.Security.Policy.Url.Equals(System.Object)">
            <summary>Compares the current <see cref="T:System.Security.Policy.Url" /> evidence object to the specified object for equivalence.</summary>
            <param name="o">The <see cref="T:System.Security.Policy.Url" /> evidence object to test for equivalence with the current object.</param>
            <returns>
                <see langword="true" /> if the two <see cref="T:System.Security.Policy.Url" /> objects are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.Url.GetHashCode">
            <summary>Gets the hash code of the current URL.</summary>
            <returns>The hash code of the current URL.</returns>
        </member>
        <member name="M:System.Security.Policy.Url.ToString">
            <summary>Returns a string representation of the current <see cref="T:System.Security.Policy.Url" />.</summary>
            <returns>A representation of the current <see cref="T:System.Security.Policy.Url" />.</returns>
        </member>
        <member name="P:System.Security.Policy.Url.Value">
            <summary>Gets the URL from which the code assembly originates.</summary>
            <returns>The URL from which the code assembly originates.</returns>
        </member>
        <member name="T:System.Security.Policy.UrlMembershipCondition">
            <summary>Determines whether an assembly belongs to a code group by testing its URL. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.UrlMembershipCondition.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.UrlMembershipCondition" /> class with the URL that determines membership.</summary>
            <param name="url">The URL for which to test.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="url" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="url" /> must be an absolute URL.</exception>
        </member>
        <member name="M:System.Security.Policy.UrlMembershipCondition.Check(System.Security.Policy.Evidence)">
            <summary>Determines whether the specified evidence satisfies the membership condition.</summary>
            <param name="evidence">The evidence set against which to make the test.</param>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> property is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if the specified evidence satisfies the membership condition; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.UrlMembershipCondition.Copy">
            <summary>Creates an equivalent copy of the membership condition.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> property is <see langword="null" />.</exception>
            <returns>A new, identical copy of the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.UrlMembershipCondition.Equals(System.Object)">
            <summary>Determines whether the URL from the specified object is equivalent to the URL contained in the current <see cref="T:System.Security.Policy.UrlMembershipCondition" />.</summary>
            <param name="o">The object to compare to the current <see cref="T:System.Security.Policy.UrlMembershipCondition" />.</param>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> property of the current object or the specified object is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if the URL from the specified object is equivalent to the URL contained in the current <see cref="T:System.Security.Policy.UrlMembershipCondition" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <param name="level">The policy level context, used to resolve named permission set references.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.UrlMembershipCondition.GetHashCode">
            <summary>Gets the hash code for the current membership condition.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> property is <see langword="null" />.</exception>
            <returns>The hash code for the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.UrlMembershipCondition.ToString">
            <summary>Creates and returns a string representation of the membership condition.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> property is <see langword="null" />.</exception>
            <returns>A string representation of the state of the membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Creates an XML encoding of the security object and its current state with the specified <see cref="T:System.Security.Policy.PolicyLevel" />.</summary>
            <param name="level">The policy level context for resolving named permission set references.</param>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> property is <see langword="null" />.</exception>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="P:System.Security.Policy.UrlMembershipCondition.Url">
            <summary>Gets or sets the URL for which the membership condition tests.</summary>
            <exception cref="T:System.ArgumentNullException">An attempt is made to set <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> to <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">Value is not an absolute URL.</exception>
            <returns>The URL for which the membership condition tests.</returns>
        </member>
        <member name="T:System.Security.Policy.Zone">
            <summary>Provides the security zone of a code assembly as evidence for policy evaluation. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.Zone.#ctor(System.Security.SecurityZone)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.Zone" /> class with the zone from which a code assembly originates.</summary>
            <param name="zone">The zone of origin for the associated code assembly.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="zone" /> parameter is not a valid <see cref="T:System.Security.SecurityZone" />.</exception>
        </member>
        <member name="M:System.Security.Policy.Zone.Copy">
            <summary>Creates an equivalent copy of the evidence object.</summary>
            <returns>A new, identical copy of the evidence object.</returns>
        </member>
        <member name="M:System.Security.Policy.Zone.CreateFromUrl(System.String)">
            <summary>Creates a new zone with the specified URL.</summary>
            <param name="url">The URL from which to create the zone.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="url" /> parameter is <see langword="null" />.</exception>
            <returns>A new zone with the specified URL.</returns>
        </member>
        <member name="M:System.Security.Policy.Zone.CreateIdentityPermission(System.Security.Policy.Evidence)">
            <summary>Creates an identity permission that corresponds to the current instance of the <see cref="T:System.Security.Policy.Zone" /> evidence class.</summary>
            <param name="evidence">The evidence set from which to construct the identity permission.</param>
            <returns>A <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> for the specified <see cref="T:System.Security.Policy.Zone" /> evidence.</returns>
        </member>
        <member name="M:System.Security.Policy.Zone.Equals(System.Object)">
            <summary>Compares the current <see cref="T:System.Security.Policy.Zone" /> evidence object to the specified object for equivalence.</summary>
            <param name="o">The <see cref="T:System.Security.Policy.Zone" /> evidence object to test for equivalence with the current object.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="o" /> parameter is not a <see cref="T:System.Security.Policy.Zone" /> object.</exception>
            <returns>
                <see langword="true" /> if the two <see cref="T:System.Security.Policy.Zone" /> objects are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.Zone.GetHashCode">
            <summary>Gets the hash code of the current zone.</summary>
            <returns>The hash code of the current zone.</returns>
        </member>
        <member name="M:System.Security.Policy.Zone.ToString">
            <summary>Returns a string representation of the current <see cref="T:System.Security.Policy.Zone" />.</summary>
            <returns>A representation of the current <see cref="T:System.Security.Policy.Zone" />.</returns>
        </member>
        <member name="P:System.Security.Policy.Zone.SecurityZone">
            <summary>Gets the zone from which the code assembly originates.</summary>
            <returns>The zone from which the code assembly originates.</returns>
        </member>
        <member name="T:System.Security.Policy.ZoneMembershipCondition">
            <summary>Determines whether an assembly belongs to a code group by testing its zone of origin. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Policy.ZoneMembershipCondition.#ctor(System.Security.SecurityZone)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> class with the zone that determines membership.</summary>
            <param name="zone">The <see cref="T:System.Security.SecurityZone" /> for which to test.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="zone" /> parameter is not a valid <see cref="T:System.Security.SecurityZone" />.</exception>
        </member>
        <member name="M:System.Security.Policy.ZoneMembershipCondition.Check(System.Security.Policy.Evidence)">
            <summary>Determines whether the specified evidence satisfies the membership condition.</summary>
            <param name="evidence">The evidence set against which to make the test.</param>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property is not a valid <see cref="T:System.Security.SecurityZone" />.</exception>
            <returns>
                <see langword="true" /> if the specified evidence satisfies the membership condition; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.ZoneMembershipCondition.Copy">
            <summary>Creates an equivalent copy of the membership condition.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property is not a valid <see cref="T:System.Security.SecurityZone" />.</exception>
            <returns>A new, identical copy of the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.ZoneMembershipCondition.Equals(System.Object)">
            <summary>Determines whether the zone from the specified object is equivalent to the zone contained in the current <see cref="T:System.Security.Policy.ZoneMembershipCondition" />.</summary>
            <param name="o">The object to compare to the current <see cref="T:System.Security.Policy.ZoneMembershipCondition" />.</param>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property for the current object or the specified object is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property for the current object or the specified object is not a valid <see cref="T:System.Security.SecurityZone" />.</exception>
            <returns>
                <see langword="true" /> if the zone from the specified object is equivalent to the zone contained in the current <see cref="T:System.Security.Policy.ZoneMembershipCondition" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="e">The XML encoding to use to reconstruct the security object.</param>
            <param name="level">The policy level context used to resolve named permission set references.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="e" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="e" /> parameter is not a valid membership condition element.</exception>
        </member>
        <member name="M:System.Security.Policy.ZoneMembershipCondition.GetHashCode">
            <summary>Gets the hash code for the current membership condition.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property is not a valid <see cref="T:System.Security.SecurityZone" />.</exception>
            <returns>The hash code for the current membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.ZoneMembershipCondition.ToString">
            <summary>Creates and returns a string representation of the membership condition.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property is not a valid <see cref="T:System.Security.SecurityZone" />.</exception>
            <returns>A string representation of the state of the membership condition.</returns>
        </member>
        <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property is not a valid <see cref="T:System.Security.SecurityZone" />.</exception>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
            <summary>Creates an XML encoding of the security object and its current state with the specified <see cref="T:System.Security.Policy.PolicyLevel" />.</summary>
            <param name="level">The policy level context for resolving named permission set references.</param>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> property is not a valid <see cref="T:System.Security.SecurityZone" />.</exception>
            <returns>An XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone">
            <summary>Gets or sets the zone for which the membership condition tests.</summary>
            <exception cref="T:System.ArgumentNullException">The value is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">An attempt is made to set <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> to an invalid <see cref="T:System.Security.SecurityZone" />.</exception>
            <returns>The zone for which the membership condition tests.</returns>
        </member>
        <member name="T:System.Security.PolicyLevelType">
            <summary>Specifies the type of a managed code policy level.</summary>
        </member>
        <member name="F:System.Security.PolicyLevelType.AppDomain">
            <summary>Security policy for all managed code in an application.</summary>
        </member>
        <member name="F:System.Security.PolicyLevelType.Enterprise">
            <summary>Security policy for all managed code in an enterprise.</summary>
        </member>
        <member name="F:System.Security.PolicyLevelType.Machine">
            <summary>Security policy for all managed code that is run on the computer.</summary>
        </member>
        <member name="F:System.Security.PolicyLevelType.User">
            <summary>Security policy for all managed code that is run by the user.</summary>
        </member>
        <member name="T:System.Security.SecurityContext">
            <summary>Encapsulates and propagates all security-related data for execution contexts transferred across threads. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.SecurityContext.Capture">
            <summary>Captures the security context for the current thread.</summary>
            <returns>The security context for the current thread.</returns>
        </member>
        <member name="M:System.Security.SecurityContext.CreateCopy">
            <summary>Creates a copy of the current security context.</summary>
            <exception cref="T:System.InvalidOperationException">The current security context has been previously used, was marshaled across application domains, or was not acquired through the <see cref="M:System.Security.SecurityContext.Capture" /> method.</exception>
            <returns>The security context for the current thread.</returns>
        </member>
        <member name="M:System.Security.SecurityContext.Dispose">
            <summary>Releases all resources used by the current instance of the <see cref="T:System.Security.SecurityContext" /> class.</summary>
        </member>
        <member name="M:System.Security.SecurityContext.IsFlowSuppressed">
            <summary>Determines whether the flow of the security context has been suppressed.</summary>
            <returns>
                <see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed">
            <summary>Determines whether the flow of the Windows identity portion of the current security context has been suppressed.</summary>
            <returns>
                <see langword="true" /> if the flow has been suppressed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.SecurityContext.RestoreFlow">
            <summary>Restores the flow of the security context across asynchronous threads.</summary>
            <exception cref="T:System.InvalidOperationException">The security context is <see langword="null" /> or an empty string.</exception>
        </member>
        <member name="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
            <summary>Runs the specified method in the specified security context on the current thread.</summary>
            <param name="securityContext">The security context to set.</param>
            <param name="callback">The delegate that represents the method to run in the specified security context.</param>
            <param name="state">The object to pass to the callback method.</param>
            <exception cref="T:System.InvalidOperationException">
                <paramref name="securityContext" /> is <see langword="null" />.  
  
 -or-  
  
 <paramref name="securityContext" /> was not acquired through a capture operation.  
  
 -or-  
  
 <paramref name="securityContext" /> has already been used as the argument to a <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> method call.</exception>
        </member>
        <member name="M:System.Security.SecurityContext.SuppressFlow">
            <summary>Suppresses the flow of the security context across asynchronous threads.</summary>
            <returns>An <see cref="T:System.Threading.AsyncFlowControl" /> structure for restoring the flow.</returns>
        </member>
        <member name="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
            <summary>Suppresses the flow of the Windows identity portion of the current security context across asynchronous threads.</summary>
            <returns>A structure for restoring the flow.</returns>
        </member>
        <member name="T:System.Security.SecurityContextSource">
            <summary>Identifies the source for the security context.</summary>
        </member>
        <member name="F:System.Security.SecurityContextSource.CurrentAppDomain">
            <summary>The current application domain is the source for the security context.</summary>
        </member>
        <member name="F:System.Security.SecurityContextSource.CurrentAssembly">
            <summary>The current assembly is the source for the security context.</summary>
        </member>
        <member name="T:System.Security.SecurityManager">
            <summary>Provides the main access point for classes interacting with the security system. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture">
            <summary>Determines whether the current thread requires a security context capture if its security state has to be re-created at a later point in time.</summary>
            <returns>
                <see langword="false" /> if the stack contains no partially trusted application domains, no partially trusted assemblies, and no currently active <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> or <see cref="M:System.Security.CodeAccessPermission.Deny" /> modifiers; <see langword="true" /> if the common language runtime cannot guarantee that the stack contains none of these.</returns>
        </member>
        <member name="M:System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)">
            <summary>Gets a permission set that is safe to grant to an application that has the provided evidence.</summary>
            <param name="evidence">The host evidence to match to a permission set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="evidence" /> is <see langword="null" />.</exception>
            <returns>A permission set that can be used as a grant set for the application that has the provided evidence.</returns>
        </member>
        <member name="M:System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)">
            <summary>Gets the granted zone identity and URL identity permission sets for the current assembly.</summary>
            <param name="zone">An output parameter that contains an <see cref="T:System.Collections.ArrayList" /> of granted <see cref="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone" /> objects.</param>
            <param name="origin">An output parameter that contains an <see cref="T:System.Collections.ArrayList" /> of granted <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> objects.</param>
            <exception cref="T:System.Security.SecurityException">The request for <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> failed.</exception>
        </member>
        <member name="M:System.Security.SecurityManager.IsGranted(System.Security.IPermission)">
            <summary>Determines whether a permission is granted to the caller.</summary>
            <param name="perm">The permission to test against the grant of the caller.</param>
            <returns>
                <see langword="true" /> if the permissions granted to the caller include the permission <paramref name="perm" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)">
            <summary>Loads a <see cref="T:System.Security.Policy.PolicyLevel" /> from the specified file.</summary>
            <param name="path">The physical file path to a file containing the security policy information.</param>
            <param name="type">One of the enumeration values that specifies the type of the policy level to be loaded.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="path" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The file indicated by the <paramref name="path" /> parameter does not exist.</exception>
            <exception cref="T:System.Security.SecurityException">The code that calls this method does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.  
  
 -or-  
  
 The code that calls this method does not have <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />.  
  
 -or-  
  
 The code that calls this method does not have <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />.  
  
 -or-  
  
 The code that calls this method does not have <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</exception>
            <exception cref="T:System.NotSupportedException">This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &lt;legacyCasPolicy&gt; element.</exception>
            <returns>The loaded policy level.</returns>
        </member>
        <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)">
            <summary>Loads a <see cref="T:System.Security.Policy.PolicyLevel" /> from the specified string.</summary>
            <param name="str">The XML representation of a security policy level in the same form in which it appears in a configuration file.</param>
            <param name="type">One of the enumeration values that specifies the type of the policy level to be loaded.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="str" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="str" /> parameter is not valid.</exception>
            <exception cref="T:System.Security.SecurityException">The code that calls this method does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
            <returns>The loaded policy level.</returns>
        </member>
        <member name="M:System.Security.SecurityManager.PolicyHierarchy">
            <summary>Provides an enumerator to access the security policy hierarchy by levels, such as computer policy and user policy.</summary>
            <exception cref="T:System.NotSupportedException">This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &lt;legacyCasPolicy&gt; element.</exception>
            <exception cref="T:System.Security.SecurityException">The code that calls this method does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
            <returns>An enumerator for <see cref="T:System.Security.Policy.PolicyLevel" /> objects that compose the security policy hierarchy.</returns>
        </member>
        <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
            <summary>Determines what permissions to grant to code based on the specified evidence.</summary>
            <param name="evidence">The evidence set used to evaluate policy.</param>
            <exception cref="T:System.NotSupportedException">This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &lt;legacyCasPolicy&gt; element.</exception>
            <returns>The set of permissions that can be granted by the security system.</returns>
        </member>
        <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)">
            <summary>Determines what permissions to grant to code based on the specified evidence and requests.</summary>
            <param name="evidence">The evidence set used to evaluate policy.</param>
            <param name="reqdPset">The required permissions the code needs to run.</param>
            <param name="optPset">The optional permissions that will be used if granted, but aren't required for the code to run.</param>
            <param name="denyPset">The denied permissions that must never be granted to the code even if policy otherwise permits it.</param>
            <param name="denied">An output parameter that contains the set of permissions not granted.</param>
            <exception cref="T:System.NotSupportedException">This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &lt;legacyCasPolicy&gt; element.</exception>
            <exception cref="T:System.Security.Policy.PolicyException">Policy fails to grant the minimum required permissions specified by the <paramref name="reqdPset" /> parameter.</exception>
            <returns>The set of permissions that would be granted by the security system.</returns>
        </member>
        <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])">
            <summary>Determines what permissions to grant to code based on the specified evidence.</summary>
            <param name="evidences">An array of evidence objects used to evaluate policy.</param>
            <exception cref="T:System.NotSupportedException">This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &lt;legacyCasPolicy&gt; element.</exception>
            <returns>The set of permissions that is appropriate for all of the provided evidence.</returns>
        </member>
        <member name="M:System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)">
            <summary>Gets a collection of code groups matching the specified evidence.</summary>
            <param name="evidence">The evidence set against which the policy is evaluated.</param>
            <exception cref="T:System.NotSupportedException">This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &lt;legacyCasPolicy&gt; element.</exception>
            <returns>An enumeration of the set of code groups matching the evidence.</returns>
        </member>
        <member name="M:System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)">
            <summary>Determines which permissions to grant to code based on the specified evidence, excluding the policy for the <see cref="T:System.AppDomain" /> level.</summary>
            <param name="evidence">The evidence set used to evaluate policy.</param>
            <exception cref="T:System.NotSupportedException">This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &lt;legacyCasPolicy&gt; element.</exception>
            <returns>The set of permissions that can be granted by the security system.</returns>
        </member>
        <member name="M:System.Security.SecurityManager.SavePolicy">
            <summary>Saves the modified security policy state.</summary>
            <exception cref="T:System.NotSupportedException">This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &lt;legacyCasPolicy&gt; element.</exception>
            <exception cref="T:System.Security.SecurityException">The code that calls this method does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
        </member>
        <member name="M:System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)">
            <summary>Saves a modified security policy level loaded with <see cref="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" />.</summary>
            <param name="level">The policy level object to be saved.</param>
            <exception cref="T:System.Security.SecurityException">The code that calls this method does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
            <exception cref="T:System.NotSupportedException">This method uses code access security (CAS) policy, which is obsolete in the .NET Framework 4. To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the &lt;legacyCasPolicy&gt; element.</exception>
        </member>
        <member name="P:System.Security.SecurityManager.CheckExecutionRights">
            <summary>Gets or sets a value indicating whether code must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> in order to execute.</summary>
            <exception cref="T:System.Security.SecurityException">The code that calls this method does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
            <returns>
                <see langword="true" /> if code must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> in order to execute; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.SecurityManager.SecurityEnabled">
            <summary>Gets or sets a value indicating whether security is enabled.</summary>
            <exception cref="T:System.Security.SecurityException">The code that calls this method does not have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />.</exception>
            <returns>
                <see langword="true" /> if security is enabled; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Security.SecurityState">
            <summary>Provides a base class for requesting the security status of an action from the <see cref="T:System.AppDomainManager" /> object.</summary>
        </member>
        <member name="M:System.Security.SecurityState.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.SecurityState" /> class.</summary>
        </member>
        <member name="M:System.Security.SecurityState.EnsureState">
            <summary>When overridden in a derived class, ensures that the state that is represented by <see cref="T:System.Security.SecurityState" /> is available on the host.</summary>
        </member>
        <member name="M:System.Security.SecurityState.IsStateAvailable">
            <summary>Gets a value that indicates whether the state for this implementation of the <see cref="T:System.Security.SecurityState" /> class is available on the current host.</summary>
            <returns>
                <see langword="true" /> if the state is available; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Security.SecurityZone">
            <summary>Defines the integer values corresponding to security zones used by security policy.</summary>
        </member>
        <member name="F:System.Security.SecurityZone.Internet">
            <summary>The Internet zone is used for the Web sites on the Internet that do not belong to another zone.</summary>
        </member>
        <member name="F:System.Security.SecurityZone.Intranet">
            <summary>The local intranet zone is used for content located on a company's intranet. Because the servers and information would be within a company's firewall, a user or company could assign a higher trust level to the content on the intranet.</summary>
        </member>
        <member name="F:System.Security.SecurityZone.MyComputer">
            <summary>The local computer zone is an implicit zone used for content that exists on the user's computer.</summary>
        </member>
        <member name="F:System.Security.SecurityZone.NoZone">
            <summary>No zone is specified.</summary>
        </member>
        <member name="F:System.Security.SecurityZone.Trusted">
            <summary>The trusted sites zone is used for content located on Web sites considered more reputable or trustworthy than other sites on the Internet. Users can use this zone to assign a higher trust level to these sites to minimize the number of authentication requests. The URLs of these trusted Web sites need to be mapped into this zone by the user.</summary>
        </member>
        <member name="F:System.Security.SecurityZone.Untrusted">
            <summary>The restricted sites zone is used for Web sites with content that could cause, or could have caused, problems when downloaded. The URLs of these untrusted Web sites need to be mapped into this zone by the user.</summary>
        </member>
        <member name="T:System.Security.XmlSyntaxException">
            <summary>The exception that is thrown when there is a syntax error in XML parsing. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.XmlSyntaxException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.XmlSyntaxException" /> class with default properties.</summary>
        </member>
        <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.XmlSyntaxException" /> class with the line number where the exception was detected.</summary>
            <param name="lineNumber">The line number of the XML stream where the XML syntax error was detected.</param>
        </member>
        <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.XmlSyntaxException" /> class with a specified error message and the line number where the exception was detected.</summary>
            <param name="lineNumber">The line number of the XML stream where the XML syntax error was detected.</param>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:System.Security.XmlSyntaxException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.XmlSyntaxException" /> class with a specified error message.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:System.Security.XmlSyntaxException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.XmlSyntaxException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</param>
        </member>
        <member name="T:System.ServiceProcess.ServiceControllerPermission">
            <summary>Allows control of code access security permissions for service controllers.</summary>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> class.</summary>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> class with the specified access to resources.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
            <exception cref="T:System.ArgumentException">The <paramref name="state" /> parameter is not a valid value of <see cref="T:System.Security.Permissions.PermissionState" />.</exception>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> class with the specified permission access levels, the name of the computer on which the service resides, and the short name that identifies the service to the system.</summary>
            <param name="permissionAccess">One of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> values.</param>
            <param name="machineName">The name of the computer on which the service resides.</param>
            <param name="serviceName">The short name that identifies the service to the system.</param>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])">
            <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> class with the specified permission entries.</summary>
            <param name="permissionAccessEntries">An array of <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> objects. The <see cref="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" /> property is set to this value.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="permissionAccessEntries" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries">
            <summary>Gets the collection of permission entries for this permissions request.</summary>
            <returns>A <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" /> that contains the permission entries for this permissions request.</returns>
        </member>
        <member name="T:System.ServiceProcess.ServiceControllerPermissionAccess">
            <summary>Defines access levels used by <see cref="T:System.ServiceProcess.ServiceController" /> permission classes.</summary>
        </member>
        <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse">
            <summary>The <see cref="T:System.ServiceProcess.ServiceController" /> can connect to, but not control, existing services.</summary>
        </member>
        <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control">
            <summary>The <see cref="T:System.ServiceProcess.ServiceController" /> can connect to and control existing services.</summary>
        </member>
        <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.None">
            <summary>The <see cref="T:System.ServiceProcess.ServiceController" /> has no permissions.</summary>
        </member>
        <member name="T:System.ServiceProcess.ServiceControllerPermissionAttribute">
            <summary>Allows declarative service controller permission checks.</summary>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAttribute" /> class.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission">
            <summary>Creates the permission based on the requested access levels that are set through the <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" /> property on the attribute.</summary>
            <returns>An <see cref="T:System.Security.IPermission" /> that represents the created permission.</returns>
        </member>
        <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName">
            <summary>Gets or sets the name of the computer on which the service resides.</summary>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName" /> syntax is invalid.</exception>
            <returns>The name of the computer that is running the service associated with the <see cref="T:System.ServiceProcess.ServiceController" />.</returns>
        </member>
        <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess">
            <summary>Gets or sets the access levels used in the permissions request.</summary>
            <returns>A bitwise combination of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> values.</returns>
        </member>
        <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName">
            <summary>Gets or sets the short name that identifies the service to the system.</summary>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The syntax of the <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> property is invalid.</exception>
            <returns>The name of the service.</returns>
        </member>
        <member name="T:System.ServiceProcess.ServiceControllerPermissionEntry">
            <summary>Defines the smallest unit of a code access security permission that is set for a <see cref="T:System.ServiceProcess.ServiceController" />.</summary>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> class.</summary>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> class with the specified permission access levels, the name of the computer, and a short name that identifies the service.</summary>
            <param name="permissionAccess">One of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> values.</param>
            <param name="machineName">The name of the computer on which the service resides.</param>
            <param name="serviceName">The short name that identifies the service to the system.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="serviceName" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="machineName" /> is not valid.  
  
 -or-  
  
 <paramref name="serviceName" /> is not valid.</exception>
        </member>
        <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName">
            <summary>Gets the name of the computer on which the service resides.</summary>
            <returns>The name of the computer that is running the service associated with the <see cref="T:System.ServiceProcess.ServiceController" />.</returns>
        </member>
        <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess">
            <summary>Gets the access levels used in the permissions request.</summary>
            <returns>A bitwise combination of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> values.</returns>
        </member>
        <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName">
            <summary>Gets the short name that identifies the service to the system.</summary>
            <returns>The name of the service.</returns>
        </member>
        <member name="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
            <summary>Contains a strongly-typed collection of <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> objects.</summary>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)">
            <summary>Adds a specified <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> to this collection.</summary>
            <param name="value">The <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object to add.</param>
            <returns>The zero-based index of the added <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object.</returns>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])">
            <summary>Appends a set of specified permission entries to this collection.</summary>
            <param name="value">An array of type <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> objects that contains the permission entries to add.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)">
            <summary>Appends a set of specified permission entries to this collection.</summary>
            <param name="value">A <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" /> that contains the permission entries to add.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)">
            <summary>Determines whether this collection contains a specified <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object.</summary>
            <param name="value">The <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object to find.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object belongs to this collection; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)">
            <summary>Copies the permission entries from this collection to an array, starting at a particular index of the array.</summary>
            <param name="array">An array of type <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> that receives the copied permission entries.</param>
            <param name="index">The zero-based index at which to begin copying the permission entries.</param>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)">
            <summary>Determines the index of a specified permission entry in this collection.</summary>
            <param name="value">The permission entry to search for.</param>
            <returns>The zero-based index of the specified permission entry, or -1 if the permission entry was not found in the collection.</returns>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)">
            <summary>Inserts a permission entry into this collection at a specified index.</summary>
            <param name="index">The zero-based index of the collection at which to insert the permission entry.</param>
            <param name="value">The permission entry to insert into this collection.</param>
        </member>
        <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)">
            <summary>Removes a specified permission entry from this collection.</summary>
            <param name="value">The permission entry to remove.</param>
        </member>
        <member name="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)">
            <summary>Gets or sets the object at a specified index.</summary>
            <param name="index">The zero-based index into the collection.</param>
            <returns>The <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object that exists at the specified index.</returns>
        </member>
        <member name="T:System.Transactions.DistributedTransactionPermission">
            <summary>The permission that is demanded by <see cref="N:System.Transactions" /> when management of a transaction is escalated to MSDTC. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Transactions.DistributedTransactionPermission" /> class.</summary>
            <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
        </member>
        <member name="M:System.Transactions.DistributedTransactionPermission.Copy">
            <summary>Creates and returns an identical copy of the current permission.</summary>
            <returns>A copy of the current permission.</returns>
        </member>
        <member name="M:System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission with a specified state from an XML encoding.</summary>
            <param name="securityElement">The XML encoding used to reconstruct the permission.</param>
        </member>
        <member name="M:System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to intersect with the current permission. It must be the same type as the current permission.</param>
            <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Returns a value that indicates whether the current permission is a subset of the specified permission.</summary>
            <param name="target">A permission to test for the subset relationship. This permission must be the same type as the current permission.</param>
            <returns>
                <see langword="true" /> if the current <see cref="T:System.Security.IPermission" /> is a subset of the specified <see cref="T:System.Security.IPermission" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Transactions.DistributedTransactionPermission.IsUnrestricted">
            <summary>Returns a value that indicates whether unrestricted access to the resource that is protected by the current permission is allowed.</summary>
            <returns>
                <see langword="true" /> if unrestricted use of the resource protected by the permission is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Transactions.DistributedTransactionPermission.ToXml">
            <summary>Creates an XML encoding of the security object and its current state.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> that contains the XML encoding of the security object, including any state information.</returns>
        </member>
        <member name="M:System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <returns>An <see cref="T:System.Security.IPermission" /> that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="T:System.Transactions.DistributedTransactionPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Transactions.DistributedTransactionPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Transactions.DistributedTransactionPermissionAttribute" /> class with the specified <see cref="T:System.Security.Permissions.SecurityAction" />.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
        </member>
        <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.CreatePermission">
            <summary>Creates a permission object that can then be serialized into binary form and persistently stored along with the <see cref="T:System.Security.Permissions.SecurityAction" /> in an assembly's metadata.</summary>
            <returns>A serializable permission object.</returns>
        </member>
        <member name="P:System.Transactions.DistributedTransactionPermissionAttribute.Unrestricted">
            <summary>Gets or sets a value indicating whether full (unrestricted) permission to the resource protected by the attribute is declared.</summary>
            <returns>
                <see langword="true" /> if full permission to the protected resource is declared; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Web.AspNetHostingPermission">
            <summary>Controls access permissions in ASP.NET hosted environments. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Web.AspNetHostingPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" /> enumeration value.</summary>
            <param name="state">A <see cref="T:System.Security.Permissions.PermissionState" /> enumeration value.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="state" /> is not set to one of the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration values.</exception>
        </member>
        <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)">
            <summary>Initializes a new instance of the <see cref="T:System.Web.AspNetHostingPermission" /> class with the specified permission level.</summary>
            <param name="level">An <see cref="T:System.Web.AspNetHostingPermissionLevel" /> enumeration value.</param>
        </member>
        <member name="M:System.Web.AspNetHostingPermission.Copy">
            <summary>When implemented by a derived class, creates and returns an identical copy of the current permission object.</summary>
            <returns>A copy of the current permission object.</returns>
        </member>
        <member name="M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a permission object with a specified state from an XML encoding.</summary>
            <param name="securityElement">The <see cref="T:System.Security.SecurityElement" /> containing the XML encoding to use to reconstruct the permission object.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="securityElement" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Security.SecurityElement.Tag" /> property of <paramref name="securityElement" /> is not equal to "IPermission".  
  
-or-  
  
 The class <see cref="M:System.Security.SecurityElement.Attribute(System.String)" /> of <paramref name="securityElement" /> is <see langword="null" /> or an empty string ("").</exception>
        </member>
        <member name="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)">
            <summary>When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not an <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
            <returns>An <see cref="T:System.Security.IPermission" /> that represents the intersection of the current permission and the specified permission; otherwise, <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Returns a value indicating whether the current permission is a subset of the specified permission.</summary>
            <param name="target">The <see cref="T:System.Security.IPermission" /> to combine with the current permission. It must be of the same type as the current <see cref="T:System.Security.IPermission" />.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not an <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
            <returns>
                <see langword="true" /> if the current <see cref="T:System.Security.IPermission" /> is a subset of the specified <see cref="T:System.Security.IPermission" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Web.AspNetHostingPermission.IsUnrestricted">
            <summary>Returns a value indicating whether unrestricted access to the resource that is protected by the current permission is allowed.</summary>
            <returns>
                <see langword="true" /> if unrestricted use of the resource protected by the permission is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Web.AspNetHostingPermission.ToXml">
            <summary>Creates an XML encoding of the permission object and its current state.</summary>
            <returns>A <see cref="T:System.Security.SecurityElement" /> containing the XML encoding of the permission object, including any state information.</returns>
        </member>
        <member name="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current permission and the specified permission.</summary>
            <param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not an <see cref="T:System.Web.AspNetHostingPermission" />.</exception>
            <returns>An <see cref="T:System.Security.IPermission" /> that represents the union of the current permission and the specified permission.</returns>
        </member>
        <member name="P:System.Web.AspNetHostingPermission.Level">
            <summary>Gets or sets the current hosting permission level for an ASP.NET application.</summary>
            <returns>One of the <see cref="T:System.Web.AspNetHostingPermissionLevel" /> enumeration values.</returns>
        </member>
        <member name="T:System.Web.AspNetHostingPermissionAttribute">
            <summary>Allows security actions for <see cref="T:System.Web.AspNetHostingPermission" /> to be applied to code using declarative security. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Web.AspNetHostingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
            <summary>Initializes a new instance of the <see cref="T:System.Web.AspNetHostingPermissionAttribute" /> class.</summary>
            <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> enumeration values.</param>
        </member>
        <member name="M:System.Web.AspNetHostingPermissionAttribute.CreatePermission">
            <summary>Creates a new <see cref="T:System.Web.AspNetHostingPermission" /> with the permission level previously set by the <see cref="P:System.Web.AspNetHostingPermissionAttribute.Level" /> property.</summary>
            <returns>An <see cref="T:System.Security.IPermission" /> that is the new <see cref="T:System.Web.AspNetHostingPermission" />.</returns>
        </member>
        <member name="P:System.Web.AspNetHostingPermissionAttribute.Level">
            <summary>Gets or sets the current hosting permission level.</summary>
            <returns>One of the <see cref="T:System.Web.AspNetHostingPermissionLevel" /> enumeration values.</returns>
        </member>
        <member name="T:System.Web.AspNetHostingPermissionLevel">
            <summary>Specifies the trust level that is granted to an ASP.NET Web application.</summary>
        </member>
        <member name="F:System.Web.AspNetHostingPermissionLevel.High">
            <summary>Indicates that features protected with a demand for any level less than or equal to the <see langword="High" /> trust level will succeed. This level is intended for highly trusted managed-code applications that need to use most of the managed permissions that support semi-trusted access. It does not grant some of the highest permissions (for example, the ability to call into native code), but it does provide a way to run trusted applications with least privilege or to provide some level of constraints for highly trusted applications. This level is granted by configuring at least the <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> trust level in the trust section in a configuration file.</summary>
        </member>
        <member name="F:System.Web.AspNetHostingPermissionLevel.Low">
            <summary>Indicates that features protected with a demand for any level less than or equal to the <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> level will succeed. This level is intended to allow read-only access to limited resources in a constrained environment. This level is granted by specifying the <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> trust level in the trust section in a configuration file.</summary>
        </member>
        <member name="F:System.Web.AspNetHostingPermissionLevel.Medium">
            <summary>Indicates that features protected with a demand for any level less than or equal to the <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> level will succeed. This level is granted by configuring at least the <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> trust level in the trust section in a configuration file.</summary>
        </member>
        <member name="F:System.Web.AspNetHostingPermissionLevel.Minimal">
            <summary>Indicates that features protected with a demand for the <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> level will succeed. This level allows code to execute but not to interact with resources present on the system. This level is granted by configuring at least the <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> trust level using the trust section in a configuration file.</summary>
        </member>
        <member name="F:System.Web.AspNetHostingPermissionLevel.None">
            <summary>Indicates that no permission is granted. All demands for <see cref="T:System.Web.AspNetHostingPermission" /> will fail.</summary>
        </member>
        <member name="F:System.Web.AspNetHostingPermissionLevel.Unrestricted">
            <summary>Indicates that all demands for permission to use all features of an application will be granted. This is equivalent to granting <see langword="Full" /> trust level in the trust section in a configuration file.</summary>
        </member>
        <member name="T:System.Xaml.Permissions.XamlLoadPermission">
            <summary>Declares permissions for loading types from assemblies that are used by a XAML reader or writer.</summary>
        </member>
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
            <summary>Initializes a new instance of the <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> class, using an enumerable set of specific <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> values.</summary>
            <param name="allowedAccess">An enumerable set of specific <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> values.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="allowedAccess" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="allowedAccess" /> contained invalid information, such as a null item.</exception>
        </member>
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
            <summary>Initializes a new instance of the <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> class, using existing permissions.</summary>
            <param name="state">A <see cref="T:System.Security.Permissions.PermissionState" /> enumeration value.</param>
        </member>
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
            <summary>Initializes a new instance of the <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> class, using a single <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> value.</summary>
            <param name="allowedAccess">The defining <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> value.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="allowedAccess" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
            <summary>Creates and returns an identical copy of the current <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</summary>
            <returns>A copy of the current <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</returns>
        </member>
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
            <param name="obj" />
        </member>
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
            <summary>Reconstructs a security object with a specified state from an XML encoding.</summary>
            <param name="elem">The XML encoding to use to reconstruct the security object.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="elem" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="elem" /> does not contain the XML encoding for a <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  
  
 -or-  
  
 The version attribute within <paramref name="elem" /> is not supported.</exception>
        </member>
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
            <summary>Returns whether this <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> includes a specified <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> in its <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> list.</summary>
            <param name="requestedAccess">The specific <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> to check for.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="requestedAccess" /> is null.</exception>
            <returns>
                <see langword="true" /> if <paramref name="requestedAccess" /> exists as an item in the <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> list of the current <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
            <summary>Creates and returns a <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> that is the intersection of the current <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> and the specified permission.</summary>
            <param name="target">A <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> to intersect with the current <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Can be <see langword="null" />.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> or is not a <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
            <returns>A new permission that represents the intersection of the current <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> and the specified <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. This new permission is <see langword="null" /> if the intersection is empty.</returns>
        </member>
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
            <summary>Determines whether the current <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> is a subset of the specified permission.</summary>
            <param name="target">A permission that is to be tested for the subset relationship. Can be <see langword="null" />.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="target" /> is not <see langword="null" /> or is not a <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
            <returns>
                <see langword="true" /> if the current <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
            <summary>Returns whether this <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> denotes unrestricted permissions.</summary>
            <returns>
                <see langword="true" /> if this <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> denotes unrestricted permissions. <see langword="false" /> if this <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> has specific access level restrictions in <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />, or has no permissions.</returns>
        </member>
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
            <summary>Creates an XML encoding of this <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> and its current state.</summary>
            <returns>An XML encoding of this <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, including any state information.</returns>
        </member>
        <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
            <summary>Creates a permission that is the union of the current <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> and the specified permission.</summary>
            <param name="other">A <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> to combine with the current <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Can be <see langword="null" />.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="other" /> is not <see langword="null" /> or is not a <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
            <returns>A new <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> that represents the union of the current <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> and the specified <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</returns>
        </member>
        <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
            <summary>Gets the list of all <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> values that this <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> represents.</summary>
            <returns>A read-only list of <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> values, or <see langword="null" />.</returns>
        </member>
        <member name="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle">
            <summary>Provides a safe handle to a Windows thread or process access token. For more information, see Access Tokens.</summary>
        </member>
        <member name="M:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> class.</summary>
            <param name="handle">An <see cref="T:System.IntPtr" /> object that represents the pre-existing handle to use. Using <see cref="F:System.IntPtr.Zero" /> returns an invalid handle.</param>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle">
            <summary>Returns an invalid handle by instantiating a <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> object with <see cref="F:System.IntPtr.Zero" />.</summary>
            <returns>Returns a <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> object.</returns>
        </member>
        <member name="P:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid">
            <summary>Gets a value that indicates whether the handle is invalid.</summary>
            <returns>
                <see langword="true" /> if the handle is not valid; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Security.Principal.IdentityNotMappedException">
            <summary>Represents an exception for a principal whose identity could not be mapped to a known identity.</summary>
        </member>
        <member name="M:System.Security.Principal.IdentityNotMappedException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.IdentityNotMappedException" /> class.</summary>
        </member>
        <member name="M:System.Security.Principal.IdentityNotMappedException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.IdentityNotMappedException" /> class by using the specified error message.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:System.Security.Principal.IdentityNotMappedException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.IdentityNotMappedException" /> class by using the specified error message and inner exception.</summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception. If <paramref name="inner" /> is not null, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</param>
        </member>
        <member name="M:System.Security.Principal.IdentityNotMappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Gets serialization information with the data needed to create an instance of this <see cref="T:System.Security.Principal.IdentityNotMappedException" /> object.</summary>
            <param name="serializationInfo">The object that holds the serialized object data about the exception being thrown.</param>
            <param name="streamingContext">The object that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:System.Security.Principal.IdentityNotMappedException.UnmappedIdentities">
            <summary>Represents the collection of unmapped identities for an <see cref="T:System.Security.Principal.IdentityNotMappedException" /> exception.</summary>
            <returns>The collection of unmapped identities.</returns>
        </member>
        <member name="T:System.Security.Principal.IdentityReference">
            <summary>Represents an identity and is the base class for the <see cref="T:System.Security.Principal.NTAccount" /> and <see cref="T:System.Security.Principal.SecurityIdentifier" /> classes. This class does not provide a public constructor, and therefore cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Principal.IdentityReference.Equals(System.Object)">
            <summary>Returns a value that indicates whether the specified object equals this instance of the <see cref="T:System.Security.Principal.IdentityReference" /> class.</summary>
            <param name="o">An object to compare with this <see cref="T:System.Security.Principal.IdentityReference" /> instance, or a null reference.</param>
            <returns>
                <see langword="true" /> if <paramref name="o" /> is an object with the same underlying type and value as this <see cref="T:System.Security.Principal.IdentityReference" /> instance; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.IdentityReference.GetHashCode">
            <summary>Serves as a hash function for <see cref="T:System.Security.Principal.IdentityReference" />. <see cref="M:System.Security.Principal.IdentityReference.GetHashCode" /> is suitable for use in hashing algorithms and data structures like a hash table.</summary>
            <returns>The hash code for this <see cref="T:System.Security.Principal.IdentityReference" /> object.</returns>
        </member>
        <member name="M:System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)">
            <summary>Returns a value that indicates whether the specified type is a valid translation type for the <see cref="T:System.Security.Principal.IdentityReference" /> class.</summary>
            <param name="targetType">The type being queried for validity to serve as a conversion from <see cref="T:System.Security.Principal.IdentityReference" />. The following target types are valid:  
  
 <see cref="T:System.Security.Principal.NTAccount" /><see cref="T:System.Security.Principal.SecurityIdentifier" /></param>
            <returns>
                <see langword="true" /> if <paramref name="targetType" /> is a valid translation type for the <see cref="T:System.Security.Principal.IdentityReference" /> class; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)">
            <summary>Compares two <see cref="T:System.Security.Principal.IdentityReference" /> objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the <see cref="P:System.Security.Principal.IdentityReference.Value" /> property or if they are both <see langword="null" />.</summary>
            <param name="left">The left <see cref="T:System.Security.Principal.IdentityReference" /> operand to use for the equality comparison. This parameter can be <see langword="null" />.</param>
            <param name="right">The right <see cref="T:System.Security.Principal.IdentityReference" /> operand to use for the equality comparison. This parameter can be <see langword="null" />.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)">
            <summary>Compares two <see cref="T:System.Security.Principal.IdentityReference" /> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <see cref="P:System.Security.Principal.IdentityReference.Value" /> property or if one of the objects is <see langword="null" /> and the other is not.</summary>
            <param name="left">The left <see cref="T:System.Security.Principal.IdentityReference" /> operand to use for the inequality comparison. This parameter can be <see langword="null" />.</param>
            <param name="right">The right <see cref="T:System.Security.Principal.IdentityReference" /> operand to use for the inequality comparison. This parameter can be <see langword="null" />.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.IdentityReference.ToString">
            <summary>Returns the string representation of the identity represented by the <see cref="T:System.Security.Principal.IdentityReference" /> object.</summary>
            <returns>The identity in string format.</returns>
        </member>
        <member name="M:System.Security.Principal.IdentityReference.Translate(System.Type)">
            <summary>Translates the account name represented by the <see cref="T:System.Security.Principal.IdentityReference" /> object into another <see cref="T:System.Security.Principal.IdentityReference" />-derived type.</summary>
            <param name="targetType">The target type for the conversion from <see cref="T:System.Security.Principal.IdentityReference" />.</param>
            <returns>The converted identity.</returns>
        </member>
        <member name="P:System.Security.Principal.IdentityReference.Value">
            <summary>Gets the string value of the identity represented by the <see cref="T:System.Security.Principal.IdentityReference" /> object.</summary>
            <returns>The string value of the identity represented by the <see cref="T:System.Security.Principal.IdentityReference" /> object.</returns>
        </member>
        <member name="T:System.Security.Principal.IdentityReferenceCollection">
            <summary>Represents a collection of <see cref="T:System.Security.Principal.IdentityReference" /> objects and provides a means of converting sets of <see cref="T:System.Security.Principal.IdentityReference" />-derived objects to <see cref="T:System.Security.Principal.IdentityReference" />-derived types.</summary>
        </member>
        <member name="M:System.Security.Principal.IdentityReferenceCollection.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> class with zero items in the collection.</summary>
        </member>
        <member name="M:System.Security.Principal.IdentityReferenceCollection.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> class by using the specified initial size.</summary>
            <param name="capacity">The initial number of items in the collection. The value of <paramref name="capacity" /> is a hint only; it is not necessarily the maximum number of items created.</param>
        </member>
        <member name="M:System.Security.Principal.IdentityReferenceCollection.Add(System.Security.Principal.IdentityReference)">
            <summary>Adds an <see cref="T:System.Security.Principal.IdentityReference" /> object to the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection.</summary>
            <param name="identity">The <see cref="T:System.Security.Principal.IdentityReference" /> object to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="identity" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Principal.IdentityReferenceCollection.Clear">
            <summary>Clears all <see cref="T:System.Security.Principal.IdentityReference" /> objects from the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection.</summary>
        </member>
        <member name="M:System.Security.Principal.IdentityReferenceCollection.Contains(System.Security.Principal.IdentityReference)">
            <summary>Indicates whether the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection contains the specified <see cref="T:System.Security.Principal.IdentityReference" /> object.</summary>
            <param name="identity">The <see cref="T:System.Security.Principal.IdentityReference" /> object to check for.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="identity" /> is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if the collection contains the specified object.</returns>
        </member>
        <member name="M:System.Security.Principal.IdentityReferenceCollection.CopyTo(System.Security.Principal.IdentityReference[],System.Int32)">
            <summary>Copies the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection to an <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> array, starting at the specified index.</summary>
            <param name="array">An <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> array object to which the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection is to be copied.</param>
            <param name="offset">The zero-based index in <paramref name="array" /> where the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection is to be copied.</param>
        </member>
        <member name="M:System.Security.Principal.IdentityReferenceCollection.GetEnumerator">
            <summary>Gets an enumerator that can be used to iterate through the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection.</summary>
            <returns>An enumerator for the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection.</returns>
        </member>
        <member name="M:System.Security.Principal.IdentityReferenceCollection.Remove(System.Security.Principal.IdentityReference)">
            <summary>Removes the specified <see cref="T:System.Security.Principal.IdentityReference" /> object from the collection.</summary>
            <param name="identity">The <see cref="T:System.Security.Principal.IdentityReference" /> object to remove.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="identity" /> is <see langword="null" />.</exception>
            <returns>
                <see langword="true" /> if the specified object was removed from the collection.</returns>
        </member>
        <member name="M:System.Security.Principal.IdentityReferenceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Gets an enumerator that can be used to iterate through the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection.</summary>
            <returns>An enumerator for the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection.</returns>
        </member>
        <member name="M:System.Security.Principal.IdentityReferenceCollection.Translate(System.Type)">
            <summary>Converts the objects in the collection to the specified type. Calling this method is the same as calling <see cref="M:System.Security.Principal.IdentityReferenceCollection.Translate(System.Type,System.Boolean)" /> with the second parameter set to <see langword="false" />, which means that exceptions will not be thrown for items that fail conversion.</summary>
            <param name="targetType">The type to which items in the collection are being converted.</param>
            <returns>A <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection that represents the converted contents of the original collection.</returns>
        </member>
        <member name="M:System.Security.Principal.IdentityReferenceCollection.Translate(System.Type,System.Boolean)">
            <summary>Converts the objects in the collection to the specified type and uses the specified fault tolerance to handle or ignore errors associated with a type not having a conversion mapping.</summary>
            <param name="targetType">The type to which items in the collection are being converted.</param>
            <param name="forceSuccess">A Boolean value that determines how conversion errors are handled.  
  
 If <paramref name="forceSuccess" /> is <see langword="true" />, conversion errors due to a mapping not being found for the translation result in a failed conversion and exceptions being thrown.  
  
 If <paramref name="forceSuccess" /> is <see langword="false" />, types that failed to convert due to a mapping not being found for the translation are copied without being converted into the collection being returned.</param>
            <returns>A <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection that represents the converted contents of the original collection.</returns>
        </member>
        <member name="P:System.Security.Principal.IdentityReferenceCollection.Count">
            <summary>Gets the number of items in the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection.</summary>
            <returns>The number of <see cref="T:System.Security.Principal.IdentityReference" /> objects in the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection.</returns>
        </member>
        <member name="P:System.Security.Principal.IdentityReferenceCollection.Item(System.Int32)">
            <summary>Gets or sets the node at the specified index of the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection.</summary>
            <param name="index">The zero-based index in the <see cref="T:System.Security.Principal.IdentityReferenceCollection" /> collection.</param>
            <returns>The <see cref="T:System.Security.Principal.IdentityReference" /> at the specified index in the collection. If <paramref name="index" /> is greater than or equal to the number of nodes in the collection, the return value is <see langword="null" />.</returns>
        </member>
        <member name="P:System.Security.Principal.IdentityReferenceCollection.System#Collections#Generic#ICollection{System#Security#Principal#IdentityReference}#IsReadOnly">
            <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
            <returns>
                <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Security.Principal.NTAccount">
            <summary>Represents a user or group account.</summary>
        </member>
        <member name="M:System.Security.Principal.NTAccount.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.NTAccount" /> class by using the specified name.</summary>
            <param name="name">The name used to create the <see cref="T:System.Security.Principal.NTAccount" /> object. This parameter cannot be <see langword="null" /> or an empty string.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="name" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="name" /> is an empty string.  
  
 -or-  
  
 <paramref name="name" /> is too long.</exception>
        </member>
        <member name="M:System.Security.Principal.NTAccount.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.NTAccount" /> class by using the specified domain name and account name.</summary>
            <param name="domainName">The name of the domain. This parameter can be <see langword="null" /> or an empty string. Domain names that are null values are treated like an empty string.</param>
            <param name="accountName">The name of the account. This parameter cannot be <see langword="null" /> or an empty string.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="accountName" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="accountName" /> is an empty string.  
  
 -or-  
  
 <paramref name="accountName" /> is too long.  
  
 -or-  
  
 <paramref name="domainName" /> is too long.</exception>
        </member>
        <member name="M:System.Security.Principal.NTAccount.Equals(System.Object)">
            <summary>Returns a value that indicates whether this <see cref="T:System.Security.Principal.NTAccount" /> object is equal to a specified object.</summary>
            <param name="o">An object to compare with this <see cref="T:System.Security.Principal.NTAccount" /> object, or <see langword="null" />.</param>
            <returns>
                <see langword="true" /> if <paramref name="o" /> is an object with the same underlying type and value as this <see cref="T:System.Security.Principal.NTAccount" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.NTAccount.GetHashCode">
            <summary>Serves as a hash function for the current <see cref="T:System.Security.Principal.NTAccount" /> object. The <see cref="M:System.Security.Principal.NTAccount.GetHashCode" /> method is suitable for hashing algorithms and data structures like a hash table.</summary>
            <returns>A hash value for the current <see cref="T:System.Security.Principal.NTAccount" /> object.</returns>
        </member>
        <member name="M:System.Security.Principal.NTAccount.IsValidTargetType(System.Type)">
            <summary>Returns a value that indicates whether the specified type is a valid translation type for the <see cref="T:System.Security.Principal.NTAccount" /> class.</summary>
            <param name="targetType">The type being queried for validity to serve as a conversion from <see cref="T:System.Security.Principal.NTAccount" />. The following target types are valid:  
  
 - <see cref="T:System.Security.Principal.NTAccount" />  
  
 - <see cref="T:System.Security.Principal.SecurityIdentifier" /></param>
            <returns>
                <see langword="true" /> if <paramref name="targetType" /> is a valid translation type for the <see cref="T:System.Security.Principal.NTAccount" /> class; otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)">
            <summary>Compares two <see cref="T:System.Security.Principal.NTAccount" /> objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the <see cref="P:System.Security.Principal.NTAccount.Value" /> property or if they are both <see langword="null" />.</summary>
            <param name="left">The left operand to use for the equality comparison. This parameter can be <see langword="null" />.</param>
            <param name="right">The right operand to use for the equality comparison. This parameter can be <see langword="null" />.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)">
            <summary>Compares two <see cref="T:System.Security.Principal.NTAccount" /> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <see cref="P:System.Security.Principal.NTAccount.Value" /> property or if one of the objects is <see langword="null" /> and the other is not.</summary>
            <param name="left">The left operand to use for the inequality comparison. This parameter can be <see langword="null" />.</param>
            <param name="right">The right operand to use for the inequality comparison. This parameter can be <see langword="null" />.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.NTAccount.ToString">
            <summary>Returns the account name, in Domain \ Account format, for the account represented by the <see cref="T:System.Security.Principal.NTAccount" /> object.</summary>
            <returns>The account name, in Domain \ Account format.</returns>
        </member>
        <member name="M:System.Security.Principal.NTAccount.Translate(System.Type)">
            <summary>Translates the account name represented by the <see cref="T:System.Security.Principal.NTAccount" /> object into another <see cref="T:System.Security.Principal.IdentityReference" />-derived type.</summary>
            <param name="targetType">The target type for the conversion from <see cref="T:System.Security.Principal.NTAccount" />. The target type must be a type that is considered valid by the <see cref="M:System.Security.Principal.NTAccount.IsValidTargetType(System.Type)" /> method.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="targetType" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="targetType" /> is not an <see cref="T:System.Security.Principal.IdentityReference" /> type.</exception>
            <exception cref="T:System.Security.Principal.IdentityNotMappedException">Some or all identity references could not be translated.</exception>
            <exception cref="T:System.SystemException">The source account name is too long.  
  
 -or-  
  
 A Win32 error code was returned.</exception>
            <returns>The converted identity.</returns>
        </member>
        <member name="P:System.Security.Principal.NTAccount.Value">
            <summary>Returns a string representation of this <see cref="T:System.Security.Principal.NTAccount" /> object.</summary>
            <returns>The string representation of this <see cref="T:System.Security.Principal.NTAccount" /> object.</returns>
        </member>
        <member name="T:System.Security.Principal.SecurityIdentifier">
            <summary>Represents a security identifier (SID) and provides marshaling and comparison operations for SIDs.</summary>
        </member>
        <member name="F:System.Security.Principal.SecurityIdentifier.MaxBinaryLength">
            <summary>Returns the maximum size, in bytes, of the binary representation of the security identifier.</summary>
        </member>
        <member name="F:System.Security.Principal.SecurityIdentifier.MinBinaryLength">
            <summary>Returns the minimum size, in bytes, of the binary representation of the security identifier.</summary>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.SecurityIdentifier" /> class by using a specified binary representation of a security identifier (SID).</summary>
            <param name="binaryForm">The byte array that represents the SID.</param>
            <param name="offset">The byte offset to use as the starting index in <paramref name="binaryForm" />.</param>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.SecurityIdentifier" /> class by using an integer that represents the binary form of a security identifier (SID).</summary>
            <param name="binaryForm">An integer that represents the binary form of a SID.</param>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.SecurityIdentifier" /> class by using the specified well known security identifier (SID) type and domain SID.</summary>
            <param name="sidType">One of the enumeration values. This value must not be <see cref="F:System.Security.Principal.WellKnownSidType.LogonIdsSid" />.</param>
            <param name="domainSid">The domain SID. This value is required for the following <see cref="T:System.Security.Principal.WellKnownSidType" /> values. This parameter is ignored for any other <see cref="T:System.Security.Principal.WellKnownSidType" /> values.  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountAdministratorSid" />  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountGuestSid" />  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountKrbtgtSid" />  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountDomainAdminsSid" />  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountDomainUsersSid" />  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountDomainGuestsSid" />  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountComputersSid" />  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountControllersSid" />  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountCertAdminsSid" />  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountSchemaAdminsSid" />  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountEnterpriseAdminsSid" />  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountPolicyAdminsSid" />  
  
 - <see cref="F:System.Security.Principal.WellKnownSidType.AccountRasAndIasServersSid" /></param>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.SecurityIdentifier" /> class by using the specified security identifier (SID) in Security Descriptor Definition Language (SDDL) format.</summary>
            <param name="sddlForm">SDDL string for the SID used to create the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</param>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)">
            <summary>Compares the current <see cref="T:System.Security.Principal.SecurityIdentifier" /> object with the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
            <param name="sid">The object to compare with the current object.</param>
            <returns>A signed number indicating the relative values of this instance and <paramref name="sid" />.  
  
 <list type="table"><listheader><term> Return Value</term><description> Description</description></listheader><item><term> Less than zero</term><description> This instance is less than <paramref name="sid" />.</description></item><item><term> Zero</term><description> This instance is equal to <paramref name="sid" />.</description></item><item><term> Greater than zero</term><description> This instance is greater than <paramref name="sid" />.</description></item></list></returns>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.Equals(System.Object)">
            <summary>Returns a value that indicates whether this <see cref="T:System.Security.Principal.SecurityIdentifier" /> object is equal to a specified object.</summary>
            <param name="o">An object to compare with this <see cref="T:System.Security.Principal.SecurityIdentifier" /> object, or <see langword="null" />.</param>
            <returns>
                <see langword="true" /> if <paramref name="o" /> is an object with the same underlying type and value as this <see cref="T:System.Security.Principal.SecurityIdentifier" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)">
            <summary>Indicates whether the specified <see cref="T:System.Security.Principal.SecurityIdentifier" /> object is equal to the current <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
            <param name="sid">The object to compare with the current object.</param>
            <returns>
                <see langword="true" /> if the value of <paramref name="sid" /> is equal to the value of the current <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</returns>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)">
            <summary>Copies the binary representation of the specified security identifier (SID) represented by the <see cref="T:System.Security.Principal.SecurityIdentifier" /> class to a byte array.</summary>
            <param name="binaryForm">The byte array to receive the copied SID.</param>
            <param name="offset">The byte offset to use as the starting index in <paramref name="binaryForm" />.</param>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.GetHashCode">
            <summary>Serves as a hash function for the current <see cref="T:System.Security.Principal.SecurityIdentifier" /> object. The <see cref="M:System.Security.Principal.SecurityIdentifier.GetHashCode" /> method is suitable for hashing algorithms and data structures like a hash table.</summary>
            <returns>A hash value for the current <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</returns>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.IsAccountSid">
            <summary>Returns a value that indicates whether the security identifier (SID) represented by this <see cref="T:System.Security.Principal.SecurityIdentifier" /> object is a valid Windows account SID.</summary>
            <returns>
                <see langword="true" /> if the SID represented by this <see cref="T:System.Security.Principal.SecurityIdentifier" /> object is a valid Windows account SID; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)">
            <summary>Returns a value that indicates whether the security identifier (SID) represented by this <see cref="T:System.Security.Principal.SecurityIdentifier" /> object is from the same domain as the specified SID.</summary>
            <param name="sid">The SID to compare with this <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</param>
            <returns>
                <see langword="true" /> if the SID represented by this <see cref="T:System.Security.Principal.SecurityIdentifier" /> object is in the same domain as the <paramref name="sid" /> SID; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)">
            <summary>Returns a value that indicates whether the specified type is a valid translation type for the <see cref="T:System.Security.Principal.SecurityIdentifier" /> class.</summary>
            <param name="targetType">The type being queried for validity to serve as a conversion from <see cref="T:System.Security.Principal.SecurityIdentifier" />. The following target types are valid:  
  
 - <see cref="T:System.Security.Principal.NTAccount" />  
  
 - <see cref="T:System.Security.Principal.SecurityIdentifier" /></param>
            <returns>
                <see langword="true" /> if <paramref name="targetType" /> is a valid translation type for the <see cref="T:System.Security.Principal.SecurityIdentifier" /> class; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)">
            <summary>Returns a value that indicates whether the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object matches the specified well known security identifier (SID) type.</summary>
            <param name="type">A value to compare with the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</param>
            <returns>
                <see langword="true" /> if <paramref name="type" /> is the SID type for the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)">
            <summary>Compares two <see cref="T:System.Security.Principal.SecurityIdentifier" /> objects to determine whether they are equal. They are considered equal if they have the same canonical representation as the one returned by the <see cref="P:System.Security.Principal.SecurityIdentifier.Value" /> property or if they are both <see langword="null" />.</summary>
            <param name="left">The left operand to use for the equality comparison. This parameter can be <see langword="null" />.</param>
            <param name="right">The right operand to use for the equality comparison. This parameter can be <see langword="null" />.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)">
            <summary>Compares two <see cref="T:System.Security.Principal.SecurityIdentifier" /> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <see cref="P:System.Security.Principal.SecurityIdentifier.Value" /> property or if one of the objects is <see langword="null" /> and the other is not.</summary>
            <param name="left">The left operand to use for the inequality comparison. This parameter can be <see langword="null" />.</param>
            <param name="right">The right operand to use for the inequality comparison. This parameter can be <see langword="null" />.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.ToString">
            <summary>Returns the security identifier (SID), in Security Descriptor Definition Language (SDDL) format, for the account represented by the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object. An example of the SDDL format is S-1-5-9.</summary>
            <returns>The SID, in SDDL format, for the account represented by the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</returns>
        </member>
        <member name="M:System.Security.Principal.SecurityIdentifier.Translate(System.Type)">
            <summary>Translates the account name represented by the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object into another <see cref="T:System.Security.Principal.IdentityReference" />-derived type.</summary>
            <param name="targetType">The target type for the conversion from <see cref="T:System.Security.Principal.SecurityIdentifier" />. The target type must be a type that is considered valid by the <see cref="M:System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)" /> method.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="targetType" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="targetType" /> is not an <see cref="T:System.Security.Principal.IdentityReference" /> type.</exception>
            <exception cref="T:System.Security.Principal.IdentityNotMappedException">Some or all identity references could not be translated.</exception>
            <exception cref="T:System.SystemException">A Win32 error code was returned.</exception>
            <returns>The converted identity.</returns>
        </member>
        <member name="P:System.Security.Principal.SecurityIdentifier.AccountDomainSid">
            <summary>Returns the account domain security identifier (SID) portion from the SID represented by the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object if the SID represents a Windows account SID. If the SID does not represent a Windows account SID, this property returns <see langword="null" />.</summary>
            <returns>The account domain SID portion from the SID represented by the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object if the SID represents a Windows account SID; otherwise, it returns <see langword="null" />.</returns>
        </member>
        <member name="P:System.Security.Principal.SecurityIdentifier.BinaryLength">
            <summary>Returns the length, in bytes, of the security identifier (SID) represented by the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
            <returns>The length, in bytes, of the SID represented by the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</returns>
        </member>
        <member name="P:System.Security.Principal.SecurityIdentifier.Value">
            <summary>Returns an uppercase Security Descriptor Definition Language (SDDL) string for the security identifier (SID) represented by this <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</summary>
            <returns>An uppercase SDDL string for the SID represented by the <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</returns>
        </member>
        <member name="T:System.Security.Principal.TokenAccessLevels">
            <summary>Defines the privileges of the user account associated with the access token.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.AdjustDefault">
            <summary>The user can change the default owner, primary group, or discretionary access control list (DACL) of the token.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.AdjustGroups">
            <summary>The user can change the attributes of the groups in the token.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.AdjustPrivileges">
            <summary>The user can enable or disable privileges in the token.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.AdjustSessionId">
            <summary>The user can adjust the session identifier of the token.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.AllAccess">
            <summary>The user has all possible access to the token.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.AssignPrimary">
            <summary>The user can attach a primary token to a process.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.Duplicate">
            <summary>The user can duplicate the token.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.Impersonate">
            <summary>The user can impersonate a client.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.MaximumAllowed">
            <summary>The maximum value that can be assigned for the <see cref="T:System.Security.Principal.TokenAccessLevels" /> enumeration.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.Query">
            <summary>The user can query the token.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.QuerySource">
            <summary>The user can query the source of the token.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.Read">
            <summary>The user has standard read rights and the <see cref="F:System.Security.Principal.TokenAccessLevels.Query" /> privilege for the token.</summary>
        </member>
        <member name="F:System.Security.Principal.TokenAccessLevels.Write">
            <summary>The user has standard write rights and the <see cref="F:System.Security.Principal.TokenAccessLevels.AdjustPrivileges" />, <see cref="F:System.Security.Principal.TokenAccessLevels.AdjustGroups" /> and <see cref="F:System.Security.Principal.TokenAccessLevels.AdjustDefault" /> privileges for the token.</summary>
        </member>
        <member name="T:System.Security.Principal.WellKnownSidType">
            <summary>Defines a set of commonly used security identifiers (SIDs).</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountAdministratorSid">
            <summary>Indicates a SID that matches the account administrators group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountCertAdminsSid">
            <summary>Indicates a SID that matches the certificate administrators group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountComputersSid">
            <summary>Indicates a SID that matches the account computer group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountControllersSid">
            <summary>Indicates a SID that matches the account controller group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountDomainAdminsSid">
            <summary>Indicates a SID that matches the account domain administrator group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountDomainGuestsSid">
            <summary>Indicates a SID that matches the account domain guests group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountDomainUsersSid">
            <summary>Indicates a SID that matches the account domain users group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountEnterpriseAdminsSid">
            <summary>Indicates a SID that matches the enterprise administrators group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountGuestSid">
            <summary>Indicates a SID that matches the account guest group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountKrbtgtSid">
            <summary>Indicates a SID that matches the account Kerberos target group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountPolicyAdminsSid">
            <summary>Indicates a SID that matches the policy administrators group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountRasAndIasServersSid">
            <summary>Indicates a SID that matches the RAS and IAS server account.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AccountSchemaAdminsSid">
            <summary>Indicates a SID that matches the schema administrators group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AnonymousSid">
            <summary>Indicates a SID for the anonymous account.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.AuthenticatedUserSid">
            <summary>Indicates a SID for an authenticated user.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BatchSid">
            <summary>Indicates a SID for a batch process. This SID is added to the process of a token when it logs on as a batch job.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinAccountOperatorsSid">
            <summary>Indicates a SID that matches the account operators account.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinAdministratorsSid">
            <summary>Indicates a SID that matches the administrator account.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinAuthorizationAccessSid">
            <summary>Indicates a SID that matches the Windows Authorization Access group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinBackupOperatorsSid">
            <summary>Indicates a SID that matches the backup operators group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinDomainSid">
            <summary>Indicates a SID that matches the domain account.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinGuestsSid">
            <summary>Indicates a SID that matches the guest account.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinIncomingForestTrustBuildersSid">
            <summary>Indicates a SID that allows a user to create incoming forest trusts. It is added to the token of users who are a member of the Incoming Forest Trust Builders built-in group in the root domain of the forest.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinNetworkConfigurationOperatorsSid">
            <summary>Indicates a SID that matches the network operators group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinPerformanceLoggingUsersSid">
            <summary>Indicates a SID that matches the group of users that have remote access to monitor the computer.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinPerformanceMonitoringUsersSid">
            <summary>Indicates a SID that matches the group of users that have remote access to schedule logging of performance counters on this computer.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinPowerUsersSid">
            <summary>Indicates a SID that matches the power users group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinPreWindows2000CompatibleAccessSid">
            <summary>Indicates a SID that matches pre-Windows 2000 compatible accounts.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinPrintOperatorsSid">
            <summary>Indicates a SID that matches the print operators group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinRemoteDesktopUsersSid">
            <summary>Indicates a SID that matches remote desktop users.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinReplicatorSid">
            <summary>Indicates a SID that matches the replicator account.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinSystemOperatorsSid">
            <summary>Indicates a SID that matches the system operators group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.BuiltinUsersSid">
            <summary>Indicates a SID that matches built-in user accounts.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.CreatorGroupServerSid">
            <summary>Indicates a creator group server SID.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.CreatorGroupSid">
            <summary>Indicates a SID that matches the creator group of an object.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.CreatorOwnerServerSid">
            <summary>Indicates a creator owner server SID.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.CreatorOwnerSid">
            <summary>Indicates a SID that matches the owner or creator of an object.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.DialupSid">
            <summary>Indicates a SID for a dial-up account.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.DigestAuthenticationSid">
            <summary>Indicates a SID present when the Microsoft Digest authentication package authenticated the client.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.EnterpriseControllersSid">
            <summary>Indicates a SID for an enterprise controller.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.InteractiveSid">
            <summary>Indicates a SID for an interactive account. This SID is added to the process of a token when it logs on interactively.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.LocalServiceSid">
            <summary>Indicates a SID that matches a local service.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.LocalSid">
            <summary>Indicates a local SID.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.LocalSystemSid">
            <summary>Indicates a SID that matches the local system.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.LogonIdsSid">
            <summary>Indicates a SID that matches logon IDs.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.MaxDefined">
            <summary>Indicates the maximum defined SID in the <see cref="T:System.Security.Principal.WellKnownSidType" /> enumeration.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.NetworkServiceSid">
            <summary>Indicates a SID that matches a network service.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.NetworkSid">
            <summary>Indicates a SID for a network account. This SID is added to the process of a token when it logs on across a network.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.NTAuthoritySid">
            <summary>Indicates a SID for the Windows NT authority.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.NtlmAuthenticationSid">
            <summary>Indicates a SID present when the Microsoft NTLM authentication package authenticated the client.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.NullSid">
            <summary>Indicates a null SID.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.OtherOrganizationSid">
            <summary>Indicates a SID present when the user authenticated across a forest with the selective authentication option enabled. If this SID is present, then <see cref="F:System.Security.Principal.WellKnownSidType.ThisOrganizationSid" /> cannot be present.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.ProxySid">
            <summary>Indicates a proxy SID.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.RemoteLogonIdSid">
            <summary>Indicates a SID that matches remote logons.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.RestrictedCodeSid">
            <summary>Indicates a SID for restricted code.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.SChannelAuthenticationSid">
            <summary>Indicates a SID present when the Secure Channel (SSL/TLS) authentication package authenticated the client.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.SelfSid">
            <summary>Indicates a SID for self.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.ServiceSid">
            <summary>Indicates a SID for a service. This SID is added to the process of a token when it logs on as a service.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.TerminalServerSid">
            <summary>Indicates a SID that matches a terminal server account.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.ThisOrganizationSid">
            <summary>Indicates a SID present when the user authenticated from within the forest or across a trust that does not have the selective authentication option enabled. If this SID is present, then <see cref="F:System.Security.Principal.WellKnownSidType.OtherOrganizationSid" /> cannot be present.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinAccountReadonlyControllersSid">
            <summary>Indicates a SID that matches an account read-only controllers group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinApplicationPackageAuthoritySid">
            <summary>Indicates a SID that matches the application package authority.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinBuiltinAnyPackageSid">
            <summary>Indicates a SID that applies to all app containers.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinBuiltinCertSvcDComAccessGroup">
            <summary>Indicates a SID that matches the built-in DCOM certification services access group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinBuiltinCryptoOperatorsSid">
            <summary>Indicates a SID that allows a user to use cryptographic operations. It is added to the token of users who are a member of the CryptoOperators built-in group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinBuiltinDCOMUsersSid">
            <summary>Indicates a SID that matches the distributed COM user group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinBuiltinEventLogReadersGroup">
            <summary>Indicates a SID that matches an event log readers group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinBuiltinIUsersSid">
            <summary>Indicates a SID that matches the Internet built-in user group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinBuiltinTerminalServerLicenseServersSid">
            <summary>Indicates a SID is present in a server that can issue Terminal Server licenses.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinCacheablePrincipalsGroupSid">
            <summary>Indicates a SID that matches a cacheable principals group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinCapabilityDocumentsLibrarySid">
            <summary>Indicates a SID for documents library capability for app containers.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinCapabilityEnterpriseAuthenticationSid">
            <summary>Indicates a SID for Windows credentials capability for app containers.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinCapabilityInternetClientServerSid">
            <summary>Indicates a SID of Internet client and server capability for app containers.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinCapabilityInternetClientSid">
            <summary>Indicates a SID of Internet client capability for app containers.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinCapabilityMusicLibrarySid">
            <summary>Indicates a SID for music library capability for app containers.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinCapabilityPicturesLibrarySid">
            <summary>Indicates a SID for pictures library capability for app containers.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinCapabilityPrivateNetworkClientServerSid">
            <summary>Indicates a SID of private network client and server capability for app containers.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinCapabilityRemovableStorageSid">
            <summary>Indicates a SID for removable storage capability for app containers.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinCapabilitySharedUserCertificatesSid">
            <summary>Indicates a SID for shared user certificates capability for app containers.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinCapabilityVideosLibrarySid">
            <summary>Indicates a SID for videos library capability for app containers.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinConsoleLogonSid">
            <summary>Indicates a SID that matches a console logon group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinCreatorOwnerRightsSid">
            <summary>Indicates a SID that matches a creator and owner rights group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinEnterpriseReadonlyControllersSid">
            <summary>Indicates a SID that matches an enterprise wide read-only controllers group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinHighLabelSid">
            <summary>Indicates a SID that matches a high level of trust label.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinIUserSid">
            <summary>Indicates a SID that matches the Internet user group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinLocalLogonSid">
            <summary>Indicates a SID that matches a local logon group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinLowLabelSid">
            <summary>Indicates a SID that matches an low level of trust label.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinMediumLabelSid">
            <summary>Indicates a SID that matches an medium level of trust label.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinMediumPlusLabelSid">
            <summary>Indicates a SID that matches the medium plus integrity label.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinNewEnterpriseReadonlyControllersSid">
            <summary>Indicates a SID that matches a read-only enterprise domain controller.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinNonCacheablePrincipalsGroupSid">
            <summary>Indicates a SID that matches a non-cacheable principals group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinSystemLabelSid">
            <summary>Indicates a SID that matches a system label.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinThisOrganizationCertificateSid">
            <summary>Indicates a SID that matches a certificate for the given organization.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinUntrustedLabelSid">
            <summary>Indicates a SID that matches an untrusted label.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WinWriteRestrictedCodeSid">
            <summary>Indicates a SID that matches a write restricted code group.</summary>
        </member>
        <member name="F:System.Security.Principal.WellKnownSidType.WorldSid">
            <summary>Indicates a SID that matches everyone.</summary>
        </member>
        <member name="T:System.Security.Principal.WindowsAccountType">
            <summary>Specifies the type of Windows account used.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsAccountType.Anonymous">
            <summary>An anonymous account.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsAccountType.Guest">
            <summary>A Windows guest account.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsAccountType.Normal">
            <summary>A standard user account.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsAccountType.System">
            <summary>A Windows system account.</summary>
        </member>
        <member name="T:System.Security.Principal.WindowsBuiltInRole">
            <summary>Specifies common roles to be used with <see cref="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.String)" />.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsBuiltInRole.AccountOperator">
            <summary>Account operators manage the user accounts on a computer or domain.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsBuiltInRole.Administrator">
            <summary>Administrators have complete and unrestricted access to the computer or domain.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsBuiltInRole.BackupOperator">
            <summary>Backup operators can override security restrictions for the sole purpose of backing up or restoring files.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsBuiltInRole.Guest">
            <summary>Guests are more restricted than users.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsBuiltInRole.PowerUser">
            <summary>Power users possess most administrative permissions with some restrictions. Thus, power users can run legacy applications, in addition to certified applications.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsBuiltInRole.PrintOperator">
            <summary>Print operators can take control of a printer.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsBuiltInRole.Replicator">
            <summary>Replicators support file replication in a domain.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsBuiltInRole.SystemOperator">
            <summary>System operators manage a particular computer.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsBuiltInRole.User">
            <summary>Users are prevented from making accidental or intentional system-wide changes. Thus, users can run certified applications, but not most legacy applications.</summary>
        </member>
        <member name="T:System.Security.Principal.WindowsIdentity">
            <summary>Represents a Windows user.</summary>
        </member>
        <member name="F:System.Security.Principal.WindowsIdentity.DefaultIssuer">
            <summary>Identifies the name of the default <see cref="T:System.Security.Claims.ClaimsIdentity" /> issuer.</summary>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token.</summary>
            <param name="userToken">The account token for the user on whose behalf the code is running.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="userToken" /> is 0.  
  
 -or-  
  
 <paramref name="userToken" /> is duplicated and invalid for impersonation.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the correct permissions.  
  
 -or-  
  
 A Win32 error occurred.</exception>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token and the specified authentication type.</summary>
            <param name="userToken">The account token for the user on whose behalf the code is running.</param>
            <param name="type">(Informational use only.) The type of authentication used to identify the user.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="userToken" /> is 0.  
  
 -or-  
  
 <paramref name="userToken" /> is duplicated and invalid for impersonation.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the correct permissions.  
  
 -or-  
  
 A Win32 error occurred.</exception>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, and the specified Windows account type.</summary>
            <param name="userToken">The account token for the user on whose behalf the code is running.</param>
            <param name="type">(Informational use only.) The type of authentication used to identify the user.</param>
            <param name="acctType">One of the enumeration values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="userToken" /> is 0.  
  
 -or-  
  
 <paramref name="userToken" /> is duplicated and invalid for impersonation.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the correct permissions.  
  
 -or-  
  
 A Win32 error occurred.</exception>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.#ctor(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified Windows account token, the specified authentication type, the specified Windows account type, and the specified authentication status.</summary>
            <param name="userToken">The account token for the user on whose behalf the code is running.</param>
            <param name="type">(Informational use only.) The type of authentication used to identify the user.</param>
            <param name="acctType">One of the enumeration values.</param>
            <param name="isAuthenticated">
                <see langword="true" /> to indicate that the user is authenticated; otherwise, <see langword="false" />.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="userToken" /> is 0.  
  
 -or-  
  
 <paramref name="userToken" /> is duplicated and invalid for impersonation.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the correct permissions.  
  
 -or-  
  
 A Win32 error occurred.</exception>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by information in a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> stream.</summary>
            <param name="info">The object containing the account information for the user.</param>
            <param name="context">An object that indicates the stream characteristics.</param>
            <exception cref="T:System.NotSupportedException">A <see cref="T:System.Security.Principal.WindowsIdentity" /> cannot be serialized across processes.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the correct permissions.  
  
 -or-  
  
 A Win32 error occurred.</exception>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.#ctor(System.Security.Principal.WindowsIdentity)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class by using the specified <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</summary>
            <param name="identity">The object from which to construct the new instance of <see cref="T:System.Security.Principal.WindowsIdentity" />.</param>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsIdentity" /> class for the user represented by the specified User Principal Name (UPN).</summary>
            <param name="sUserPrincipalName">The UPN for the user on whose behalf the code is running.</param>
            <exception cref="T:System.UnauthorizedAccessException">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</exception>
            <exception cref="T:System.OutOfMemoryException">There is insufficient memory available.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the correct permissions.  
  
 -or-  
  
 The computer is not attached to a Windows 2003 or later domain.  
  
 -or-  
  
 The computer is not running Windows 2003 or later.  
  
 -or-  
  
 The user is not a member of the domain the computer is attached to.</exception>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.Clone">
            <summary>Creates a new  object that is a copy of the current instance.</summary>
            <returns>A copy of the current instance.</returns>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.Dispose">
            <summary>Releases all resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" />.</summary>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.Dispose(System.Boolean)">
            <summary>Releases the unmanaged resources used by the <see cref="T:System.Security.Principal.WindowsIdentity" /> and optionally releases the managed resources.</summary>
            <param name="disposing">
                <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.GetAnonymous">
            <summary>Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that you can use as a sentinel value in your code to represent an anonymous user. The property value does not represent the built-in anonymous identity used by the Windows operating system.</summary>
            <returns>An object that represents an anonymous user.</returns>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.GetCurrent">
            <summary>Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user.</summary>
            <exception cref="T:System.Security.SecurityException">The caller does not have the correct permissions.</exception>
            <returns>An object that represents the current user.</returns>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Boolean)">
            <summary>Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the Windows identity for either the thread or the process, depending on the value of the <paramref name="ifImpersonating" /> parameter.</summary>
            <param name="ifImpersonating">
                <see langword="true" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> only if the thread is currently impersonating; <see langword="false" /> to return the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the thread if it is impersonating or the <see cref="T:System.Security.Principal.WindowsIdentity" /> of the process if the thread is not currently impersonating.</param>
            <returns>An object that represents a Windows user.</returns>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.GetCurrent(System.Security.Principal.TokenAccessLevels)">
            <summary>Returns a <see cref="T:System.Security.Principal.WindowsIdentity" /> object that represents the current Windows user, using the specified desired token access level.</summary>
            <param name="desiredAccess">A bitwise combination of the enumeration values.</param>
            <returns>An object that represents the current user.</returns>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)">
            <summary>Runs the specified action as the impersonated Windows identity. Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</summary>
            <param name="safeAccessTokenHandle">The SafeAccessTokenHandle of the impersonated Windows identity.</param>
            <param name="action">The System.Action to run.</param>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.RunImpersonated``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{``0})">
            <summary>Runs the specified function as the impersonated Windows identity. Instead of using an impersonated method call and running your function in <see cref="T:System.Security.Principal.WindowsImpersonationContext" />, you can use <see cref="M:System.Security.Principal.WindowsIdentity.RunImpersonated(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Action)" /> and provide your function directly as a parameter.</summary>
            <param name="safeAccessTokenHandle">The SafeAccessTokenHandle of the impersonated Windows identity.</param>
            <param name="func">The System.Func to run.</param>
            <typeparam name="T">The type of object used by and returned by the function.</typeparam>
            <returns>The result of the function.</returns>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.RunImpersonatedAsync(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{System.Threading.Tasks.Task})">
            <summary>Runs the specified asynchronous action as the impersonated Windows identity.</summary>
            <param name="safeAccessTokenHandle">The handle of the impersonated Windows identity.</param>
            <param name="func">The function to run.</param>
            <returns>A task that represents the asynchronous operation of the provided <see cref="T:System.Func`1" />.</returns>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.RunImpersonatedAsync``1(Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>Runs the specified asynchronous action as the impersonated Windows identity.</summary>
            <param name="safeAccessTokenHandle">The handle of the impersonated Windows identity.</param>
            <param name="func">The function to run.</param>
            <typeparam name="T">The type of the object to return.</typeparam>
            <returns>A task that represents the asynchronous operation of <paramref name="func" />.</returns>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</summary>
            <param name="sender">The source of the deserialization event.</param>
        </member>
        <member name="M:System.Security.Principal.WindowsIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the logical context information needed to recreate an instance of this execution context.</summary>
            <param name="info">An object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</param>
            <param name="context">An object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</param>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.AccessToken">
            <summary>Gets this <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" /> for this <see cref="T:System.Security.Principal.WindowsIdentity" /> instance.</summary>
            <returns>Returns a <see cref="T:Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.AuthenticationType">
            <summary>Gets the type of authentication used to identify the user.</summary>
            <exception cref="T:System.UnauthorizedAccessException">Windows returned the Windows NT status code STATUS_ACCESS_DENIED.</exception>
            <exception cref="T:System.OutOfMemoryException">There is insufficient memory available.</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the correct permissions.  
  
 -or-  
  
 The computer is not attached to a Windows 2003 or later domain.  
  
 -or-  
  
 The computer is not running Windows 2003 or later.  
  
 -or-  
  
 The user is not a member of the domain the computer is attached to.</exception>
            <returns>The type of authentication used to identify the user.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.Claims">
            <summary>Gets all claims for the user represented by this Windows identity.</summary>
            <returns>A collection of claims for this <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.DeviceClaims">
            <summary>Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</summary>
            <returns>A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsDeviceClaim" /> property key.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.Groups">
            <summary>Gets the groups the current Windows user belongs to.</summary>
            <returns>An object representing the groups the current Windows user belongs to.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.ImpersonationLevel">
            <summary>Gets the impersonation level for the user.</summary>
            <returns>One of the enumeration values that specifies the impersonation level.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.IsAnonymous">
            <summary>Gets a value that indicates whether the user account is identified as an anonymous account by the system.</summary>
            <returns>
                <see langword="true" /> if the user account is an anonymous account; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.IsAuthenticated">
            <summary>Gets a value indicating whether the user has been authenticated by Windows.</summary>
            <returns>
                <see langword="true" /> if the user was authenticated; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.IsGuest">
            <summary>Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account by the system.</summary>
            <returns>
                <see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.Guest" /> account; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.IsSystem">
            <summary>Gets a value indicating whether the user account is identified as a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account by the system.</summary>
            <returns>
                <see langword="true" /> if the user account is a <see cref="F:System.Security.Principal.WindowsAccountType.System" /> account; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.Name">
            <summary>Gets the user's Windows logon name.</summary>
            <returns>The Windows logon name of the user on whose behalf the code is being run.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.Owner">
            <summary>Gets the security identifier (SID) for the token owner.</summary>
            <returns>An object for the token owner.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.Token">
            <summary>Gets the Windows account token for the user.</summary>
            <returns>The handle of the access token associated with the current execution thread.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.User">
            <summary>Gets the security identifier (SID) for the user.</summary>
            <returns>An object for the user.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsIdentity.UserClaims">
            <summary>Gets claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</summary>
            <returns>A collection of claims that have the <see cref="F:System.Security.Claims.ClaimTypes.WindowsUserClaim" /> property key.</returns>
        </member>
        <member name="T:System.Security.Principal.WindowsPrincipal">
            <summary>Enables code to check the Windows group membership of a Windows user.</summary>
        </member>
        <member name="M:System.Security.Principal.WindowsPrincipal.#ctor(System.Security.Principal.WindowsIdentity)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Principal.WindowsPrincipal" /> class by using the specified <see cref="T:System.Security.Principal.WindowsIdentity" /> object.</summary>
            <param name="ntIdentity">The object from which to construct the new instance of <see cref="T:System.Security.Principal.WindowsPrincipal" />.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="ntIdentity" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Int32)">
            <summary>Determines whether the current principal belongs to the Windows user group with the specified relative identifier (RID).</summary>
            <param name="rid">The RID of the Windows user group in which to check for the principal's membership status.</param>
            <returns>
                <see langword="true" /> if the current principal is a member of the specified Windows user group, that is, in a particular role; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.SecurityIdentifier)">
            <summary>Determines whether the current principal belongs to the Windows user group with the specified security identifier (SID).</summary>
            <param name="sid">A <see cref="T:System.Security.Principal.SecurityIdentifier" /> that uniquely identifies a Windows user group.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="sid" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Security.SecurityException">Windows returned a Win32 error.</exception>
            <returns>
                <see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.Security.Principal.WindowsBuiltInRole)">
            <summary>Determines whether the current principal belongs to the Windows user group with the specified <see cref="T:System.Security.Principal.WindowsBuiltInRole" />.</summary>
            <param name="role">One of the <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> values.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="role" /> is not a valid <see cref="T:System.Security.Principal.WindowsBuiltInRole" /> value.</exception>
            <returns>
                <see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Security.Principal.WindowsPrincipal.IsInRole(System.String)">
            <summary>Determines whether the current principal belongs to the Windows user group with the specified name.</summary>
            <param name="role">The name of the Windows user group for which to check membership.</param>
            <returns>
                <see langword="true" /> if the current principal is a member of the specified Windows user group; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsPrincipal.DeviceClaims">
            <summary>Gets all Windows device claims from this principal.</summary>
            <returns>A collection of all Windows device claims from this principal.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsPrincipal.Identity">
            <summary>Gets the identity of the current principal.</summary>
            <returns>The <see cref="T:System.Security.Principal.WindowsIdentity" /> object of the current principal.</returns>
        </member>
        <member name="P:System.Security.Principal.WindowsPrincipal.UserClaims">
            <summary>Gets all Windows user claims from this principal.</summary>
            <returns>A collection of all Windows user claims from this principal.</returns>
        </member>
        <member name="T:System.Text.CodePagesEncodingProvider">
            <summary>Provides access to an encoding provider for code pages that otherwise are available only in the desktop .NET Framework.</summary>
        </member>
        <member name="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.Int32)">
            <summary>Returns the encoding associated with the specified code page identifier.</summary>
            <param name="codepage">The code page identifier of the preferred encoding which the encoding provider may support.</param>
            <returns>The encoding associated with the specified code page identifier, or <see langword="null" /> if the provider does not support the requested codepage encoding.</returns>
        </member>
        <member name="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.String)">
            <summary>Returns the encoding associated with the specified code page name.</summary>
            <param name="name">The code page name of the preferred encoding which the encoding provider may support.</param>
            <returns>The encoding associated with the specified code page, or <see langword="null" /> if the provider does not support the requested encoding.</returns>
        </member>
        <member name="M:System.Text.CodePagesEncodingProvider.GetEncodings">
            <summary>Returns an array that contains all the encodings that are supported by the <see cref="T:System.Text.CodePagesEncodingProvider" />.</summary>
            <returns>An array that contains all the supported encodings.</returns>
        </member>
        <member name="P:System.Text.CodePagesEncodingProvider.Instance">
            <summary>Gets an encoding provider for code pages supported in the desktop .NET Framework but not in the current .NET Framework platform.</summary>
            <returns>An encoding provider that allows access to encodings not supported on the current .NET Framework platform.</returns>
        </member>
        <member name="T:System.Text.Encodings.Web.HtmlEncoder">
            <summary>Represents an HTML character encoding.</summary>
        </member>
        <member name="M:System.Text.Encodings.Web.HtmlEncoder.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> class.</summary>
        </member>
        <member name="M:System.Text.Encodings.Web.HtmlEncoder.Create(System.Text.Encodings.Web.TextEncoderSettings)">
            <summary>Creates a new instance of the HtmlEncoder class with the specified settings.</summary>
            <param name="settings">Settings that control how the <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> instance encodes, primarily which characters to encode.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="settings" /> is <see langword="null" />.</exception>
            <returns>A new instance of the <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> class.</returns>
        </member>
        <member name="M:System.Text.Encodings.Web.HtmlEncoder.Create(System.Text.Unicode.UnicodeRange[])">
            <summary>Creates a new instance of the HtmlEncoder class that specifies characters the encoder is allowed to not encode.</summary>
            <param name="allowedRanges">The set of characters that the encoder is allowed to not encode.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="allowedRanges" /> is <see langword="null" />.</exception>
            <returns>A new instance of the <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> class.</returns>
        </member>
        <member name="P:System.Text.Encodings.Web.HtmlEncoder.Default">
            <summary>Gets a built-in instance of the <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> class.</summary>
            <returns>A built-in instance of the <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> class.</returns>
        </member>
        <member name="T:System.Text.Encodings.Web.JavaScriptEncoder">
            <summary>Represents a JavaScript character encoding.</summary>
        </member>
        <member name="M:System.Text.Encodings.Web.JavaScriptEncoder.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Encodings.Web.JavaScriptEncoder" /> class.</summary>
        </member>
        <member name="M:System.Text.Encodings.Web.JavaScriptEncoder.Create(System.Text.Encodings.Web.TextEncoderSettings)">
            <summary>Creates a new instance of JavaScriptEncoder class with the specified settings.</summary>
            <param name="settings">Settings that control how the <see cref="T:System.Text.Encodings.Web.JavaScriptEncoder" /> instance encodes, primarily which characters to encode.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="settings" /> is <see langword="null" />.</exception>
            <returns>A new instance of the <see cref="T:System.Text.Encodings.Web.JavaScriptEncoder" /> class.</returns>
        </member>
        <member name="M:System.Text.Encodings.Web.JavaScriptEncoder.Create(System.Text.Unicode.UnicodeRange[])">
            <summary>Creates a new instance of the JavaScriptEncoder class that specifies characters the encoder is allowed to not encode.</summary>
            <param name="allowedRanges">The set of characters that the encoder is allowed to not encode.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="allowedRanges" /> is <see langword="null" />.</exception>
            <returns>A new instance of the <see cref="T:System.Text.Encodings.Web.JavaScriptEncoder" /> class.</returns>
        </member>
        <member name="P:System.Text.Encodings.Web.JavaScriptEncoder.Default">
            <summary>Gets a built-in instance of the <see cref="T:System.Text.Encodings.Web.JavaScriptEncoder" /> class.</summary>
            <returns>A built-in instance of the <see cref="T:System.Text.Encodings.Web.JavaScriptEncoder" /> class.</returns>
        </member>
        <member name="P:System.Text.Encodings.Web.JavaScriptEncoder.UnsafeRelaxedJsonEscaping">
            <summary>Gets a built-in JavaScript encoder instance that is less strict about what is encoded.</summary>
            <returns>A JavaScript encoder instance.</returns>
        </member>
        <member name="T:System.Text.Encodings.Web.TextEncoder">
            <summary>The base class of web encoders.</summary>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoder.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Encodings.Web.TextEncoder" /> class.</summary>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoder.Encode(System.IO.TextWriter,System.Char[],System.Int32,System.Int32)">
            <summary>Encodes characters from an array and writes them to a <see cref="T:System.IO.TextWriter" /> object.</summary>
            <param name="output">The stream to which to write the encoded text.</param>
            <param name="value">The array of characters to encode.</param>
            <param name="startIndex">The array index of the first character to encode.</param>
            <param name="characterCount">The number of characters in the array to encode.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="output" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="M:System.Text.Encodings.Web.TextEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)" /> method failed. The encoder does not implement <see cref="P:System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter" /> correctly.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="startIndex" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="characterCount" /> is out of range.</exception>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoder.Encode(System.IO.TextWriter,System.String)">
            <summary>Encodes the specified string to a <see cref="T:System.IO.TextWriter" /> object.</summary>
            <param name="output">The stream to which to write the encoded text.</param>
            <param name="value">The string to encode.</param>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoder.Encode(System.IO.TextWriter,System.String,System.Int32,System.Int32)">
            <summary>Encodes a substring and writes it to a <see cref="T:System.IO.TextWriter" /> object.</summary>
            <param name="output">The stream to which to write the encoded text.</param>
            <param name="value">The string whose substring is to be encoded.</param>
            <param name="startIndex">The index where the substring starts.</param>
            <param name="characterCount">The number of characters in the substring.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="output" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="M:System.Text.Encodings.Web.TextEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)" /> method failed. The encoder does not implement <see cref="P:System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter" /> correctly.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="startIndex" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="characterCount" /> is out of range.</exception>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoder.Encode(System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@,System.Int32@,System.Boolean)">
            <summary>Encodes the supplied characters.</summary>
            <param name="source">A source buffer containing the characters to encode.</param>
            <param name="destination">The destination buffer to which the encoded form of <paramref name="source" /> will be written.</param>
            <param name="charsConsumed">The number of characters consumed from the <paramref name="source" /> buffer.</param>
            <param name="charsWritten">The number of characters written to the <paramref name="destination" /> buffer.</param>
            <param name="isFinalBlock">
                <see langword="true" /> to indicate there is no further source data that needs to be encoded; otherwise, <see langword="false" />.</param>
            <returns>An enumeration value that describes the result of the encoding operation.</returns>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoder.Encode(System.String)">
            <summary>Encodes the supplied string and returns the encoded text as a new string.</summary>
            <param name="value">The string to encode.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The <see cref="M:System.Text.Encodings.Web.TextEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)" /> method failed. The encoder does not implement <see cref="P:System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter" /> correctly.</exception>
            <returns>The encoded string.</returns>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoder.EncodeUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)">
            <summary>Encodes the supplied UTF-8 text.</summary>
            <param name="utf8Source">A source buffer containing the UTF-8 text to encode.</param>
            <param name="utf8Destination">The destination buffer to which the encoded form of <paramref name="utf8Source" /> will be written.</param>
            <param name="bytesConsumed">The number of bytes consumed from the <paramref name="utf8Source" /> buffer.</param>
            <param name="bytesWritten">The number of bytes written to the <paramref name="utf8Destination" /> buffer.</param>
            <param name="isFinalBlock">
                <see langword="true" /> to indicate there is no further source data that needs to be encoded; otherwise, <see langword="false" />.</param>
            <returns>A status code that describes the result of the encoding operation.</returns>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoder.FindFirstCharacterToEncode(System.Char*,System.Int32)">
            <summary>Finds the index of the first character to encode.</summary>
            <param name="text">The text buffer to search.</param>
            <param name="textLength">The number of characters in <paramref name="text" />.</param>
            <returns>The index of the first character to encode.</returns>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoder.FindFirstCharacterToEncodeUtf8(System.ReadOnlySpan{System.Byte})">
            <summary>Finds the first element in a UTF-8 text input buffer that would be escaped by the current encoder instance.</summary>
            <param name="utf8Text">The UTF-8 text input buffer to search.</param>
            <returns>The index of the first element in <paramref name="utf8Text" /> that would be escaped by the current encoder instance, or -1 if no data in <paramref name="utf8Text" /> requires escaping.</returns>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoder.TryEncodeUnicodeScalar(System.Int32,System.Char*,System.Int32,System.Int32@)">
            <summary>Encodes a Unicode scalar value and writes it to a buffer.</summary>
            <param name="unicodeScalar">A Unicode scalar value.</param>
            <param name="buffer">A pointer to the buffer to which to write the encoded text.</param>
            <param name="bufferLength">The length of the destination <paramref name="buffer" /> in characters.</param>
            <param name="numberOfCharactersWritten">When the method returns, indicates the number of characters written to the <paramref name="buffer" />.</param>
            <returns>
                <see langword="false" /> if <paramref name="bufferLength" /> is too small to fit the encoded text; otherwise, returns <see langword="true" />.</returns>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoder.WillEncode(System.Int32)">
            <summary>Determines if a given Unicode scalar value will be encoded.</summary>
            <param name="unicodeScalar">A Unicode scalar value.</param>
            <returns>
                <see langword="true" /> if the <paramref name="unicodeScalar" /> value will be encoded by this encoder; otherwise, returns <see langword="false" />.</returns>
        </member>
        <member name="P:System.Text.Encodings.Web.TextEncoder.MaxOutputCharactersPerInputCharacter">
            <summary>Gets the maximum number of characters that this encoder can generate for each input code point.</summary>
            <returns>The maximum number of characters.</returns>
        </member>
        <member name="T:System.Text.Encodings.Web.TextEncoderSettings">
            <summary>Represents a filter that allows only certain Unicode code points.</summary>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.#ctor">
            <summary>Instantiates an empty filter (allows no code points through by default).</summary>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.#ctor(System.Text.Encodings.Web.TextEncoderSettings)">
            <summary>Instantiates a filter by cloning the allowed list of another <see cref="T:System.Text.Encodings.Web.TextEncoderSettings" /> object.</summary>
            <param name="other">The other <see cref="T:System.Text.Encodings.Web.TextEncoderSettings" /> object to be cloned.</param>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.#ctor(System.Text.Unicode.UnicodeRange[])">
            <summary>Instantiates a filter where only the character ranges specified by <paramref name="allowedRanges" /> are allowed by the filter.</summary>
            <param name="allowedRanges">The allowed character ranges.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="allowedRanges" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.AllowCharacter(System.Char)">
            <summary>Allows the character specified by <paramref name="character" /> through the filter.</summary>
            <param name="character">The allowed character.</param>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.AllowCharacters(System.Char[])">
            <summary>Allows all characters specified by <paramref name="characters" /> through the filter.</summary>
            <param name="characters">The allowed characters.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="characters" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.AllowCodePoints(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>Allows all code points specified by <paramref name="codePoints" />.</summary>
            <param name="codePoints">The allowed code points.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="codePoints" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.AllowRange(System.Text.Unicode.UnicodeRange)">
            <summary>Allows all characters specified by <paramref name="range" /> through the filter.</summary>
            <param name="range">The range of characters to be allowed.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="range" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.AllowRanges(System.Text.Unicode.UnicodeRange[])">
            <summary>Allows all characters specified by <paramref name="ranges" /> through the filter.</summary>
            <param name="ranges">The ranges of characters to be allowed.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="ranges" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.Clear">
            <summary>Resets this object by disallowing all characters.</summary>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.ForbidCharacter(System.Char)">
            <summary>Disallows the character <paramref name="character" /> through the filter.</summary>
            <param name="character">The disallowed character.</param>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.ForbidCharacters(System.Char[])">
            <summary>Disallows all characters specified by <paramref name="characters" /> through the filter.</summary>
            <param name="characters">The disallowed characters.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="characters" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.ForbidRange(System.Text.Unicode.UnicodeRange)">
            <summary>Disallows all characters specified by <paramref name="range" /> through the filter.</summary>
            <param name="range">The range of characters to be disallowed.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="range" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.ForbidRanges(System.Text.Unicode.UnicodeRange[])">
            <summary>Disallows all characters specified by <paramref name="ranges" /> through the filter.</summary>
            <param name="ranges">The ranges of characters to be disallowed.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="ranges" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Encodings.Web.TextEncoderSettings.GetAllowedCodePoints">
            <summary>Gets an enumerator of all allowed code points.</summary>
            <returns>The enumerator of allowed code points.</returns>
        </member>
        <member name="T:System.Text.Encodings.Web.UrlEncoder">
            <summary>Represents a URL character encoding.</summary>
        </member>
        <member name="M:System.Text.Encodings.Web.UrlEncoder.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Encodings.Web.UrlEncoder" /> class.</summary>
        </member>
        <member name="M:System.Text.Encodings.Web.UrlEncoder.Create(System.Text.Encodings.Web.TextEncoderSettings)">
            <summary>Creates a new instance of UrlEncoder class with the specified settings.</summary>
            <param name="settings">Settings that control how the <see cref="T:System.Text.Encodings.Web.UrlEncoder" /> instance encodes, primarily which characters to encode.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="settings" /> is <see langword="null" />.</exception>
            <returns>A new instance of the <see cref="T:System.Text.Encodings.Web.UrlEncoder" /> class.</returns>
        </member>
        <member name="M:System.Text.Encodings.Web.UrlEncoder.Create(System.Text.Unicode.UnicodeRange[])">
            <summary>Creates a new instance of the UrlEncoder class that specifies characters the encoder is allowed to not encode.</summary>
            <param name="allowedRanges">The set of characters that the encoder is allowed to not encode.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="allowedRanges" /> is <see langword="null" />.</exception>
            <returns>A new instance of the <see cref="T:System.Text.Encodings.Web.UrlEncoder" /> class.</returns>
        </member>
        <member name="P:System.Text.Encodings.Web.UrlEncoder.Default">
            <summary>Gets a built-in instance of the <see cref="T:System.Text.Encodings.Web.UrlEncoder" /> class.</summary>
            <returns>A built-in instance of the <see cref="T:System.Text.Encodings.Web.UrlEncoder" /> class.</returns>
        </member>
        <member name="T:System.Text.Unicode.UnicodeRange">
            <summary>Represents a contiguous range of Unicode code points.</summary>
        </member>
        <member name="M:System.Text.Unicode.UnicodeRange.#ctor(System.Int32,System.Int32)">
            <summary>Creates a new <see cref="T:System.Text.Unicode.UnicodeRange" /> that includes a specified number of characters starting at a specified Unicode code point.</summary>
            <param name="firstCodePoint">The first code point in the range.</param>
            <param name="length">The number of code points in the range.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="firstCodePoint" /> is less than zero or greater than 0xFFFF. 

-or-           

<paramref name="length" /> is less than zero.

-or-

<paramref name="firstCodePoint" /> plus <paramref name="length" /> is greater than 0xFFFF.</exception>
        </member>
        <member name="M:System.Text.Unicode.UnicodeRange.Create(System.Char,System.Char)">
            <summary>Creates a new <see cref="T:System.Text.Unicode.UnicodeRange" /> instance from a span of characters.</summary>
            <param name="firstCharacter">The first character in the range.</param>
            <param name="lastCharacter">The last character in the range.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="lastCharacter" /> precedes <paramref name="firstCharacter" />.</exception>
            <returns>A range that includes all characters between <paramref name="firstCharacter" /> and <paramref name="lastCharacter" />.</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRange.FirstCodePoint">
            <summary>Gets the first code point in the range represented by this <see cref="T:System.Text.Unicode.UnicodeRange" /> instance.</summary>
            <returns>The first code point in the range.</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRange.Length">
            <summary>Gets the number of code points in the range represented by this <see cref="T:System.Text.Unicode.UnicodeRange" /> instance.</summary>
            <returns>The number of code points in the range.</returns>
        </member>
        <member name="T:System.Text.Unicode.UnicodeRanges">
            <summary>Provides static properties that return predefined <see cref="T:System.Text.Unicode.UnicodeRange" /> instances that correspond to blocks from the Unicode specification.</summary>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.All">
            <summary>Gets a range that consists of the entire Basic Multilingual Plane (BMP), from U+0000 to U+FFFF).</summary>
            <returns>A range that consists of the entire BMP.</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.AlphabeticPresentationForms">
            <summary>Gets the Alphabetic Presentation Forms Unicode block (U+FB00-U+FB4F).</summary>
            <returns>The Alphabetic Presentation Forms Unicode block (U+FB00-U+FB4F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Arabic">
            <summary>Gets the Arabic Unicode block (U+0600-U+06FF).</summary>
            <returns>The Arabic Unicode block (U+0600-U+06FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.ArabicExtendedA">
            <summary>Gets the Arabic Extended-A Unicode block (U+08A0-U+08FF).</summary>
            <returns>The Arabic Extended-A Unicode block (U+08A0-U+08FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.ArabicPresentationFormsA">
            <summary>Gets the Arabic Presentation Forms-A Unicode block (U+FB50-U+FDFF).</summary>
            <returns>The Arabic Presentation Forms-A Unicode block (U+FB50-U+FDFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.ArabicPresentationFormsB">
            <summary>Gets the Arabic Presentation Forms-B Unicode block (U+FE70-U+FEFF).</summary>
            <returns>The Arabic Presentation Forms-B Unicode block (U+FE70-U+FEFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.ArabicSupplement">
            <summary>Gets the Arabic Supplement Unicode block (U+0750-U+077F).</summary>
            <returns>The Arabic Supplement Unicode block (U+0750-U+077F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Armenian">
            <summary>Gets the Armenian Unicode block (U+0530-U+058F).</summary>
            <returns>The Armenian Unicode block (U+0530-U+058F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Arrows">
            <summary>Gets the Arrows Unicode block (U+2190-U+21FF).</summary>
            <returns>The Arrows Unicode block (U+2190-U+21FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Balinese">
            <summary>Gets the Balinese Unicode block (U+1B00-U+1B7F).</summary>
            <returns>The Balinese Unicode block (U+1B00-U+1B7F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Bamum">
            <summary>Gets the Bamum Unicode block (U+A6A0-U+A6FF).</summary>
            <returns>The Bamum Unicode block (U+A6A0-U+A6FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.BasicLatin">
            <summary>Gets the Basic Latin Unicode block (U+0021-U+007F).</summary>
            <returns>The Basic Latin Unicode block (U+0021-U+007F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Batak">
            <summary>Gets the Batak Unicode block (U+1BC0-U+1BFF).</summary>
            <returns>The Batak Unicode block (U+1BC0-U+1BFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Bengali">
            <summary>Gets the Bengali Unicode block (U+0980-U+09FF).</summary>
            <returns>The Bengali Unicode block (U+0980-U+09FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.BlockElements">
            <summary>Gets the Block Elements Unicode block (U+2580-U+259F).</summary>
            <returns>The Block Elements Unicode block (U+2580-U+259F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Bopomofo">
            <summary>Gets the Bopomofo Unicode block (U+3100-U+312F).</summary>
            <returns>The Bopomofo Unicode block (U+3105-U+312F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.BopomofoExtended">
            <summary>Gets the Bopomofo Extended Unicode block (U+31A0-U+31BF).</summary>
            <returns>The Bopomofo Extended Unicode block (U+31A0-U+31BF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.BoxDrawing">
            <summary>Gets the Box Drawing Unicode block (U+2500-U+257F).</summary>
            <returns>The Box Drawing Unicode block (U+2500-U+257F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.BraillePatterns">
            <summary>Gets the Braille Patterns Unicode block (U+2800-U+28FF).</summary>
            <returns>The Braille Patterns Unicode block (U+2800-U+28FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Buginese">
            <summary>Gets the Buginese Unicode block (U+1A00-U+1A1F).</summary>
            <returns>The Buginese Unicode block (U+1A00-U+1A1F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Buhid">
            <summary>Gets the Buhid Unicode block (U+1740-U+175F).</summary>
            <returns>The Buhid Unicode block (U+1740-U+175F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Cham">
            <summary>Gets the Cham Unicode block (U+AA00-U+AA5F).</summary>
            <returns>The Cham Unicode block (U+AA00-U+AA5F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Cherokee">
            <summary>Gets the Cherokee Unicode block (U+13A0-U+13FF).</summary>
            <returns>The Cherokee Unicode block (U+13A0-U+13FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CherokeeSupplement">
            <summary>Gets the Cherokee Supplement Unicode block (U+AB70-U+ABBF).</summary>
            <returns>The Cherokee Supplement Unicode block (U+AB70-U+ABBF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CjkCompatibility">
            <summary>Gets the CJK Compatibility Unicode block (U+3300-U+33FF).</summary>
            <returns>The CJK Compatibility Unicode block (U+3300-U+33FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CjkCompatibilityForms">
            <summary>Gets the CJK Compatibility Forms Unicode block (U+FE30-U+FE4F).</summary>
            <returns>The CJK Compatibility Forms Unicode block (U+FE30-U+FE4F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CjkCompatibilityIdeographs">
            <summary>Gets the CJK Compatibility Ideographs Unicode block (U+F900-U+FAD9).</summary>
            <returns>The CJK Compatibility Ideographs Unicode block (U+F900-U+FAD9).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CjkRadicalsSupplement">
            <summary>Gets the CJK Radicals Supplement Unicode block (U+2E80-U+2EFF).</summary>
            <returns>The CJK Radicals Supplement Unicode block (U+2E80-U+2EFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CjkStrokes">
            <summary>Gets the CJK Strokes Unicode block (U+31C0-U+31EF).</summary>
            <returns>The CJK Strokes Unicode block (U+31C0-U+31EF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CjkSymbolsandPunctuation">
            <summary>Gets the CJK Symbols and Punctuation Unicode block (U+3000-U+303F).</summary>
            <returns>The CJK Symbols and Punctuation Unicode block (U+3000-U+303F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CjkUnifiedIdeographs">
            <summary>Gets the CJK Unified Ideographs Unicode block (U+4E00-U+9FCC).</summary>
            <returns>The CJK Unified Ideographs Unicode block (U+4E00-U+9FCC).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CjkUnifiedIdeographsExtensionA">
            <summary>Gets the CJK Unitied Ideographs Extension A Unicode block (U+3400-U+4DB5).</summary>
            <returns>The CJK Unitied Ideographs Extension A Unicode block (U+3400-U+4DB5).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CombiningDiacriticalMarks">
            <summary>Gets the Combining Diacritical Marks Unicode block (U+0300-U+036F).</summary>
            <returns>The Combining Diacritical Marks Unicode block (U+0300-U+036F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CombiningDiacriticalMarksExtended">
            <summary>Gets the Combining Diacritical Marks Extended Unicode block (U+1AB0-U+1AFF).</summary>
            <returns>The Combining Diacritical Marks Extended Unicode block (U+1AB0-U+1AFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CombiningDiacriticalMarksforSymbols">
            <summary>Gets the Combining Diacritical Marks for Symbols Unicode block (U+20D0-U+20FF).</summary>
            <returns>The Combining Diacritical Marks for Symbols Unicode block (U+20D0-U+20FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CombiningDiacriticalMarksSupplement">
            <summary>Gets the Combining Diacritical Marks Supplement Unicode block (U+1DC0-U+1DFF).</summary>
            <returns>The Combining Diacritical Marks Supplement Unicode block (U+1DC0-U+1DFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CombiningHalfMarks">
            <summary>Gets the Combining Half Marks Unicode block (U+FE20-U+FE2F).</summary>
            <returns>The Combining Half Marks Unicode block (U+FE20-U+FE2F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CommonIndicNumberForms">
            <summary>Gets the Common Indic Number Forms Unicode block (U+A830-U+A83F).</summary>
            <returns>The Common Indic Number Forms Unicode block (U+A830-U+A83F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.ControlPictures">
            <summary>Gets the Control Pictures Unicode block (U+2400-U+243F).</summary>
            <returns>The Control Pictures Unicode block (U+2400-U+243F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Coptic">
            <summary>Gets the Coptic Unicode block (U+2C80-U+2CFF).</summary>
            <returns>The Coptic Unicode block (U+2C80-U+2CFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CurrencySymbols">
            <summary>Gets the Currency Symbols Unicode block (U+20A0-U+20CF).</summary>
            <returns>The Currency Symbols Unicode block (U+20A0-U+20CF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Cyrillic">
            <summary>Gets the Cyrillic Unicode block (U+0400-U+04FF).</summary>
            <returns>The Cyrillic Unicode block (U+0400-U+04FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CyrillicExtendedA">
            <summary>Gets the Cyrillic Extended-A Unicode block (U+2DE0-U+2DFF).</summary>
            <returns>The Cyrillic Extended-A Unicode block (U+2DE0-U+2DFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CyrillicExtendedB">
            <summary>Gets the Cyrillic Extended-B Unicode block (U+A640-U+A69F).</summary>
            <returns>The Cyrillic Extended-B Unicode block (U+A640-U+A69F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CyrillicExtendedC">
            <summary>A <see cref="T:System.Text.Unicode.UnicodeRange" /> corresponding to the 'Cyrillic Extended-C' Unicode block (U+1C80..U+1C8F).</summary>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.CyrillicSupplement">
            <summary>Gets the Cyrillic Supplement Unicode block (U+0500-U+052F).</summary>
            <returns>The Cyrillic Supplement Unicode block (U+0500-U+052F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Devanagari">
            <summary>Gets the Devangari Unicode block (U+0900-U+097F).</summary>
            <returns>The Devangari Unicode block (U+0900-U+097F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.DevanagariExtended">
            <summary>Gets the Devanagari Extended Unicode block (U+A8E0-U+A8FF).</summary>
            <returns>The Devanagari Extended Unicode block (U+A8E0-U+A8FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Dingbats">
            <summary>Gets the Dingbats Unicode block (U+2700-U+27BF).</summary>
            <returns>The Dingbats Unicode block (U+2700-U+27BF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.EnclosedAlphanumerics">
            <summary>Gets the Enclosed Alphanumerics Unicode block (U+2460-U+24FF).</summary>
            <returns>The Enclosed Alphanumerics Unicode block (U+2460-U+24FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.EnclosedCjkLettersandMonths">
            <summary>Gets the Enclosed CJK Letters and Months Unicode block (U+3200-U+32FF).</summary>
            <returns>The Enclosed CJK Letters and Months Unicode block (U+3200-U+32FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Ethiopic">
            <summary>Gets the Ethiopic Unicode block (U+1200-U+137C).</summary>
            <returns>The Ethiopic Unicode block (U+1200-U+137C).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.EthiopicExtended">
            <summary>Gets the Ethipic Extended Unicode block (U+2D80-U+2DDF).</summary>
            <returns>The Ethipic Extended Unicode block (U+2D80-U+2DDF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.EthiopicExtendedA">
            <summary>Gets the Ethiopic Extended-A Unicode block (U+AB00-U+AB2F).</summary>
            <returns>The Ethiopic Extended-A Unicode block (U+AB00-U+AB2F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.EthiopicSupplement">
            <summary>Gets the Ethiopic Supplement Unicode block (U+1380-U+1399).</summary>
            <returns>The Ethiopic Supplement Unicode block (U+1380-U+1399).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.GeneralPunctuation">
            <summary>Gets the General Punctuation Unicode block (U+2000-U+206F).</summary>
            <returns>The General Punctuation Unicode block (U+2000-U+206F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.GeometricShapes">
            <summary>Gets the Geometric Shapes Unicode block (U+25A0-U+25FF).</summary>
            <returns>The Geometric Shapes Unicode block (U+25A0-U+25FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Georgian">
            <summary>Gets the Georgian Unicode block (U+10A0-U+10FF).</summary>
            <returns>The Georgian Unicode block (U+10A0-U+10FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.GeorgianExtended">
            <summary>A <see cref="T:System.Text.Unicode.UnicodeRange" /> corresponding to the 'Georgian Extended' Unicode block (U+1C90..U+1CBF).</summary>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.GeorgianSupplement">
            <summary>Gets the Georgian Supplement Unicode block (U+2D00-U+2D2F).</summary>
            <returns>The Georgian Supplement Unicode block (U+2D00-U+2D2F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Glagolitic">
            <summary>Gets the Glagolitic Unicode block (U+2C00-U+2C5F).</summary>
            <returns>The Glagolitic Unicode block (U+2C00-U+2C5F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.GreekandCoptic">
            <summary>Gets the Greek and Coptic Unicode block (U+0370-U+03FF).</summary>
            <returns>The Greek and Coptic Unicode block (U+0370-U+03FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.GreekExtended">
            <summary>Gets the Greek Extended Unicode block (U+1F00-U+1FFF).</summary>
            <returns>The Greek Extended Unicode block (U+1F00-U+1FFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Gujarati">
            <summary>Gets the Gujarti Unicode block (U+0A81-U+0AFF).</summary>
            <returns>The Gujarti Unicode block (U+0A81-U+0AFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Gurmukhi">
            <summary>Gets the Gurmukhi Unicode block (U+0A01-U+0A7F).</summary>
            <returns>The Gurmukhi Unicode block (U+0A01-U+0A7F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.HalfwidthandFullwidthForms">
            <summary>Gets the Halfwidth and Fullwidth Forms Unicode block (U+FF00-U+FFEE).</summary>
            <returns>The Halfwidth and Fullwidth Forms Unicode block (U+FF00-U+FFEE).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.HangulCompatibilityJamo">
            <summary>Gets the Hangul Compatibility Jamo Unicode block (U+3131-U+318F).</summary>
            <returns>The Hangul Compatibility Jamo Unicode block (U+3131-U+318F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.HangulJamo">
            <summary>Gets the Hangul Jamo Unicode block (U+1100-U+11FF).</summary>
            <returns>The Hangul Jamo Unicode block (U+1100-U+11FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.HangulJamoExtendedA">
            <summary>Gets the Hangul Jamo Extended-A Unicode block (U+A960-U+A9F).</summary>
            <returns>The Hangul Jamo Extended-A Unicode block (U+A960-U+A97F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.HangulJamoExtendedB">
            <summary>Gets the Hangul Jamo Extended-B Unicode block (U+D7B0-U+D7FF).</summary>
            <returns>The Hangul Jamo Extended-B Unicode block (U+D7B0-U+D7FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.HangulSyllables">
            <summary>Gets the Hangul Syllables Unicode block (U+AC00-U+D7AF).</summary>
            <returns>The Hangul Syllables Unicode block (U+AC00-U+D7AF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Hanunoo">
            <summary>Gets the Hanunoo Unicode block (U+1720-U+173F).</summary>
            <returns>The Hanunoo Unicode block (U+1720-U+173F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Hebrew">
            <summary>Gets the Hebrew Unicode block (U+0590-U+05FF).</summary>
            <returns>The Hebrew Unicode block (U+0590-U+05FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Hiragana">
            <summary>Gets the Hiragana Unicode block (U+3040-U+309F).</summary>
            <returns>The Hiragana Unicode block (U+3040-U+309F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.IdeographicDescriptionCharacters">
            <summary>Gets the Ideographic Description Characters Unicode block (U+2FF0-U+2FFF).</summary>
            <returns>The Ideographic Description Characters Unicode block (U+2FF0-U+2FFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.IpaExtensions">
            <summary>Gets the IPA Extensions Unicode block (U+0250-U+02AF).</summary>
            <returns>The IPA Extensions Unicode block (U+0250-U+02AF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Javanese">
            <summary>Gets the Javanese Unicode block (U+A980-U+A9DF).</summary>
            <returns>The Javanese Unicode block (U+A980-U+A9DF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Kanbun">
            <summary>Gets the Kanbun Unicode block (U+3190-U+319F).</summary>
            <returns>The Kanbun Unicode block (U+3190-U+319F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.KangxiRadicals">
            <summary>Gets the Kangxi Radicals Supplement Unicode block (U+2F00-U+2FDF).</summary>
            <returns>The Kangxi Radicals Supplement Unicode block (U+2F00-U+2FDF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Kannada">
            <summary>Gets the Kannada Unicode block (U+0C81-U+0CFF).</summary>
            <returns>The Kannada Unicode block (U+0C81-U+0CFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Katakana">
            <summary>Gets the Katakana Unicode block (U+30A0-U+30FF).</summary>
            <returns>The Katakana Unicode block (U+30A0-U+30FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.KatakanaPhoneticExtensions">
            <summary>Gets the Katakana Phonetic Extensions Unicode block (U+31F0-U+31FF).</summary>
            <returns>The Katakana Phonetic Extensions Unicode block (U+31F0-U+31FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.KayahLi">
            <summary>Gets the Kayah Li Unicode block (U+A900-U+A92F).</summary>
            <returns>The Kayah Li Unicode block (U+A900-U+A92F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Khmer">
            <summary>Gets the Khmer Unicode block (U+1780-U+17FF).</summary>
            <returns>The Khmer Unicode block (U+1780-U+17FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.KhmerSymbols">
            <summary>Gets the Khmer Symbols Unicode block (U+19E0-U+19FF).</summary>
            <returns>The Khmer Symbols Unicode block (U+19E0-U+19FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Lao">
            <summary>Gets the Lao Unicode block (U+0E80-U+0EDF).</summary>
            <returns>The Lao Unicode block (U+0E80-U+0EDF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Latin1Supplement">
            <summary>Gets the Latin-1 Supplement Unicode block (U+00A1-U+00FF).</summary>
            <returns>The Latin-1 Supplement Unicode block (U+00A1-U+00FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.LatinExtendedA">
            <summary>Gets the Latin Extended-A Unicode block (U+0100-U+017F).</summary>
            <returns>The Latin Extended-A Unicode block (U+0100-U+017F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.LatinExtendedAdditional">
            <summary>Gets the Latin Extended Additional Unicode block (U+1E00-U+1EFF).</summary>
            <returns>The Latin Extended Additional Unicode block (U+1E00-U+1EFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.LatinExtendedB">
            <summary>Gets the Latin Extended-B Unicode block (U+0180-U+024F).</summary>
            <returns>The Latin Extended-B Unicode block (U+0180-U+024F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.LatinExtendedC">
            <summary>Gets the Latin Extended-C Unicode block (U+2C60-U+2C7F).</summary>
            <returns>The Latin Extended-C Unicode block (U+2C60-U+2C7F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.LatinExtendedD">
            <summary>Gets the Latin Extended-D Unicode block (U+A720-U+A7FF).</summary>
            <returns>The Latin Extended-D Unicode block (U+A720-U+A7FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.LatinExtendedE">
            <summary>Gets the Latin Extended-E Unicode block (U+AB30-U+AB6F).</summary>
            <returns>The Latin Extended-E Unicode block (U+AB30-U+AB6F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Lepcha">
            <summary>Gets the Lepcha Unicode block (U+1C00-U+1C4F).</summary>
            <returns>The Lepcha Unicode block (U+1C00-U+1C4F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.LetterlikeSymbols">
            <summary>Gets the Letterlike Symbols Unicode block (U+2100-U+214F).</summary>
            <returns>The Letterlike Symbols Unicode block (U+2100-U+214F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Limbu">
            <summary>Gets the Limbu Unicode block (U+1900-U+194F).</summary>
            <returns>The Limbu Unicode block (U+1900-U+194F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Lisu">
            <summary>Gets the Lisu Unicode block (U+A4D0-U+A4FF).</summary>
            <returns>The Lisu Unicode block (U+A4D0-U+A4FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Malayalam">
            <summary>Gets the Malayalam Unicode block (U+0D00-U+0D7F).</summary>
            <returns>The Malayalam Unicode block (U+0D00-U+0D7F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Mandaic">
            <summary>Gets the Mandaic Unicode block (U+0840-U+085F).</summary>
            <returns>The Mandaic Unicode block (U+0840-U+085F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.MathematicalOperators">
            <summary>Gets the Mathematical Operators Unicode block (U+2200-U+22FF).</summary>
            <returns>The Mathematical Operators Unicode block (U+2200-U+22FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.MeeteiMayek">
            <summary>Gets the Meetei Mayek Unicode block (U+ABC0-U+ABFF).</summary>
            <returns>The Meetei Mayek Unicode block (U+ABC0-U+ABFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.MeeteiMayekExtensions">
            <summary>Gets the Meetei Mayek Extensions Unicode block (U+AAE0-U+AAFF).</summary>
            <returns>The Meetei Mayek Extensions Unicode block (U+AAE0-U+AAFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.MiscellaneousMathematicalSymbolsA">
            <summary>Gets the Miscellaneous Mathematical Symbols-A Unicode block (U+27C0-U+27EF).</summary>
            <returns>The Miscellaneous Mathematical Symbols-A Unicode block (U+27C0-U+27EF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.MiscellaneousMathematicalSymbolsB">
            <summary>Gets the Miscellaneous Mathematical Symbols-B Unicode block (U+2980-U+29FF).</summary>
            <returns>The Miscellaneous Mathematical Symbols-B Unicode block (U+2980-U+29FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.MiscellaneousSymbols">
            <summary>Gets the Miscellaneous Symbols Unicode block (U+2600-U+26FF).</summary>
            <returns>The Miscellaneous Symbols Unicode block (U+2600-U+26FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.MiscellaneousSymbolsandArrows">
            <summary>Gets the Miscellaneous Symbols and Arrows Unicode block (U+2B00-U+2BFF).</summary>
            <returns>The Miscellaneous Symbols and Arrows Unicode block (U+2B00-U+2BFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.MiscellaneousTechnical">
            <summary>Gets the Miscellaneous Technical Unicode block (U+2300-U+23FF).</summary>
            <returns>The Miscellaneous Technical Unicode block (U+2300-U+23FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.ModifierToneLetters">
            <summary>Gets the Modifier Tone Letters Unicode block (U+A700-U+A71F).</summary>
            <returns>The Modifier Tone Letters Unicode block (U+A700-U+A71F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Mongolian">
            <summary>Gets the Mongolian Unicode block (U+1800-U+18AF).</summary>
            <returns>The Mongolian Unicode block (U+1800-U+18AF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Myanmar">
            <summary>Gets the Myanmar Unicode block (U+1000-U+109F).</summary>
            <returns>The Myanmar Unicode block (U+1000-U+109F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.MyanmarExtendedA">
            <summary>Gets the Myanmar Extended-A Unicode block (U+AA60-U+AA7F).</summary>
            <returns>The Myanmar Extended-A Unicode block (U+AA60-U+AA7F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.MyanmarExtendedB">
            <summary>Gets the Myanmar Extended-B Unicode block (U+A9E0-U+A9FF).</summary>
            <returns>The Myanmar Extended-B Unicode block (U+A9E0-U+A9FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.NewTaiLue">
            <summary>Gets the New Tai Lue Unicode block (U+1980-U+19DF).</summary>
            <returns>The New Tai Lue Unicode block (U+1980-U+19DF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.NKo">
            <summary>Gets the NKo Unicode block (U+07C0-U+07FF).</summary>
            <returns>The NKo Unicode block (U+07C0-U+07FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.None">
            <summary>Gets an empty Unicode range.</summary>
            <returns>A Unicode range with no elements.</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.NumberForms">
            <summary>Gets the Number Forms Unicode block (U+2150-U+218F).</summary>
            <returns>The Number Forms Unicode block (U+2150-U+218F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Ogham">
            <summary>Gets the Ogham Unicode block (U+1680-U+169F).</summary>
            <returns>The Ogham Unicode block (U+1680-U+169F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.OlChiki">
            <summary>Gets the Ol Chiki Unicode block (U+1C50-U+1C7F).</summary>
            <returns>The Ol Chiki Unicode block (U+1C50-U+1C7F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.OpticalCharacterRecognition">
            <summary>Gets the Optical Character Recognition Unicode block (U+2440-U+245F).</summary>
            <returns>The Optical Character Recognition Unicode block (U+2440-U+245F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Oriya">
            <summary>Gets the Oriya Unicode block (U+0B00-U+0B7F).</summary>
            <returns>The Oriya Unicode block (U+0B00-U+0B7F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Phagspa">
            <summary>Gets the Phags-pa Unicode block (U+A840-U+A87F).</summary>
            <returns>The Phags-pa Unicode block (U+A840-U+A87F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.PhoneticExtensions">
            <summary>Gets the Phonetic Extensions Unicode block (U+1D00-U+1D7F).</summary>
            <returns>The Phonetic Extensions Unicode block (U+1D00-U+1D7F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.PhoneticExtensionsSupplement">
            <summary>Gets the Phonetic Extensions Supplement Unicode block (U+1D80-U+1DBF).</summary>
            <returns>The Phonetic Extensions Supplement Unicode block (U+1D80-U+1DBF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Rejang">
            <summary>Gets the Rejang Unicode block (U+A930-U+A95F).</summary>
            <returns>The Rejang Unicode block (U+A930-U+A95F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Runic">
            <summary>Gets the Runic Unicode block (U+16A0-U+16FF).</summary>
            <returns>The Runic Unicode block (U+16A0-U+16FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Samaritan">
            <summary>Gets the Samaritan Unicode block (U+0800-U+083F).</summary>
            <returns>The Samaritan Unicode block (U+0800-U+083F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Saurashtra">
            <summary>Gets the Saurashtra Unicode block (U+A880-U+A8DF).</summary>
            <returns>The Saurashtra Unicode block (U+A880-U+A8DF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Sinhala">
            <summary>Gets the Sinhala Unicode block (U+0D80-U+0DFF).</summary>
            <returns>The Sinhala Unicode block (U+0D80-U+0DFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.SmallFormVariants">
            <summary>Gets the Small Form Variants Unicode block (U+FE50-U+FE6F).</summary>
            <returns>The Small Form Variants Unicode block (U+FE50-U+FE6F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.SpacingModifierLetters">
            <summary>Gets the Spacing Modifier Letters Unicode block (U+02B0-U+02FF).</summary>
            <returns>The Spacing Modifier Letters Unicode block (U+02B0-U+02FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Specials">
            <summary>Gets the Specials Unicode block (U+FFF0-U+FFFF).</summary>
            <returns>The Specials Unicode block (U+FFF0-U+FFFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Sundanese">
            <summary>Gets the Sundanese Unicode block (U+1B80-U+1BBF).</summary>
            <returns>The Sundanese Unicode block (U+1B80-U+1BBF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.SundaneseSupplement">
            <summary>Gets the Sundanese Supplement Unicode block (U+1CC0-U+1CCF).</summary>
            <returns>The Sundanese Supplement Unicode block (U+1CC0-U+1CCF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.SuperscriptsandSubscripts">
            <summary>Gets the Superscripts and Subscripts Unicode block (U+2070-U+209F).</summary>
            <returns>The Superscripts and Subscripts Unicode block (U+2070-U+209F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.SupplementalArrowsA">
            <summary>Gets the Supplemental Arrows-A Unicode block (U+27F0-U+27FF).</summary>
            <returns>The Supplemental Arrows-A Unicode block (U+27F0-U+27FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.SupplementalArrowsB">
            <summary>Gets the Supplemental Arrows-B Unicode block (U+2900-U+297F).</summary>
            <returns>The Supplemental Arrows-B Unicode block (U+2900-U+297F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.SupplementalMathematicalOperators">
            <summary>Gets the Supplemental Mathematical Operators Unicode block (U+2A00-U+2AFF).</summary>
            <returns>The Supplemental Mathematical Operators Unicode block (U+2A00-U+2AFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.SupplementalPunctuation">
            <summary>Gets the Supplemental Punctuation Unicode block (U+2E00-U+2E7F).</summary>
            <returns>The Supplemental Punctuation Unicode block (U+2E00-U+2E7F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.SylotiNagri">
            <summary>Gets the Syloti Nagri Unicode block (U+A800-U+A82F).</summary>
            <returns>The Syloti Nagri Unicode block (U+A800-U+A82F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Syriac">
            <summary>Gets the Syriac Unicode block (U+0700-U+074F).</summary>
            <returns>The Syriac Unicode block (U+0700-U+074F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.SyriacSupplement">
            <summary>A <see cref="T:System.Text.Unicode.UnicodeRange" /> corresponding to the 'Syriac Supplement' Unicode block (U+0860..U+086F).</summary>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Tagalog">
            <summary>Gets the Tagalog Unicode block (U+1700-U+171F).</summary>
            <returns>The Tagalog Unicode block (U+1700-U+171F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Tagbanwa">
            <summary>Gets the Tagbanwa Unicode block (U+1760-U+177F).</summary>
            <returns>The Tagbanwa Unicode block (U+1760-U+177F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.TaiLe">
            <summary>Gets the Tai Le Unicode block (U+1950-U+197F).</summary>
            <returns>The Tai Le Unicode block (U+1950-U+197F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.TaiTham">
            <summary>Gets the Tai Tham Unicode block (U+1A20-U+1AAF).</summary>
            <returns>The Tai Tham Unicode block (U+1A20-U+1AAF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.TaiViet">
            <summary>Gets the Tai Viet Unicode block (U+AA80-U+AADF).</summary>
            <returns>The Tai Viet Unicode block (U+AA80-U+AADF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Tamil">
            <summary>Gets the Tamil Unicode block (U+0B80-U+0BFF).</summary>
            <returns>The Tamil Unicode block (U+0B82-U+0BFA).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Telugu">
            <summary>Gets the Telugu Unicode block (U+0C00-U+0C7F).</summary>
            <returns>The Telugu Unicode block (U+0C00-U+0C7F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Thaana">
            <summary>Gets the Thaana Unicode block (U+0780-U+07BF).</summary>
            <returns>The Thaana Unicode block (U+0780-U+07BF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Thai">
            <summary>Gets the Thai Unicode block (U+0E00-U+0E7F).</summary>
            <returns>The Thai Unicode block (U+0E00-U+0E7F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Tibetan">
            <summary>Gets the Tibetan Unicode block (U+0F00-U+0FFF).</summary>
            <returns>The Tibetan Unicode block (U+0F00-U+0FFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Tifinagh">
            <summary>Gets the Tifinagh Unicode block (U+2D30-U+2D7F).</summary>
            <returns>The Tifinagh Unicode block (U+2D30-U+2D7F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.UnifiedCanadianAboriginalSyllabics">
            <summary>Gets the Unified Canadian Aboriginal Syllabics Unicode block (U+1400-U+167F).</summary>
            <returns>The Unified Canadian Aboriginal Syllabics Unicode block (U+1400-U+167F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.UnifiedCanadianAboriginalSyllabicsExtended">
            <summary>Gets the Unified Canadian Aboriginal Syllabics Extended Unicode block (U+18B0-U+18FF).</summary>
            <returns>The Unified Canadian Aboriginal Syllabics Extended Unicode block (U+18B0-U+18FF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.Vai">
            <summary>Gets the Vai Unicode block (U+A500-U+A63F).</summary>
            <returns>The Vai Unicode block (U+A500-U+A63F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.VariationSelectors">
            <summary>Gets the Variation Selectors Unicode block (U+FE00-U+FE0F).</summary>
            <returns>The Variation Selectors Unicode block (U+FE00-U+FE0F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.VedicExtensions">
            <summary>Gets the Vedic Extensions Unicode block (U+1CD0-U+1CFF).</summary>
            <returns>The Vedic Extensions Unicode block (U+1CD0-U+1CFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.VerticalForms">
            <summary>Gets the Vertical Forms Unicode block (U+FE10-U+FE1F).</summary>
            <returns>The Vertical Forms Unicode block (U+FE10-U+FE1F).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.YijingHexagramSymbols">
            <summary>Gets the Yijing Hexagram Symbols Unicode block (U+4DC0-U+4DFF).</summary>
            <returns>The Yijing Hexagram Symbols Unicode block (U+4DC0-U+4DFF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.YiRadicals">
            <summary>Gets the Yi Radicals Unicode block (U+A490-U+A4CF).</summary>
            <returns>The Yi Radicals Unicode block (U+A490-U+A4CF).</returns>
        </member>
        <member name="P:System.Text.Unicode.UnicodeRanges.YiSyllables">
            <summary>Gets the Yi Syllables Unicode block (U+A000-U+A48F).</summary>
            <returns>The Yi Syllables Unicode block (U+A000-U+A48F).</returns>
        </member>
        <member name="T:System.Text.Json.JsonCommentHandling">
            <summary>Defines how the <see cref="T:System.Text.Json.Utf8JsonReader" /> struct handles comments.</summary>
        </member>
        <member name="F:System.Text.Json.JsonCommentHandling.Allow">
            <summary>Allows comments within the JSON input and treats them as valid tokens. While reading, the caller can access the comment values.</summary>
        </member>
        <member name="F:System.Text.Json.JsonCommentHandling.Disallow">
            <summary>Doesn't allow comments within the JSON input. Comments are treated as invalid JSON if found, and a <see cref="T:System.Text.Json.JsonException" /> is thrown. This is the default value.</summary>
        </member>
        <member name="F:System.Text.Json.JsonCommentHandling.Skip">
            <summary>Allows comments within the JSON input and ignores them. The <see cref="T:System.Text.Json.Utf8JsonReader" /> behaves as if no comments are present.</summary>
        </member>
        <member name="T:System.Text.Json.JsonDocument">
            <summary>Provides a mechanism for examining the structural content of a JSON value without automatically instantiating data values.</summary>
        </member>
        <member name="M:System.Text.Json.JsonDocument.Dispose">
            <summary>Releases the resources used by this <see cref="T:System.Text.Json.JsonDocument" /> instance.</summary>
        </member>
        <member name="M:System.Text.Json.JsonDocument.Parse(System.Buffers.ReadOnlySequence{System.Byte},System.Text.Json.JsonDocumentOptions)">
            <summary>Parses a sequence as UTF-8-encoded text representing a single JSON byte value into a JsonDocument.</summary>
            <param name="utf8Json">The JSON text to parse.</param>
            <param name="options">Options to control the reader behavior during parsing.</param>
            <exception cref="T:System.Text.Json.JsonException">
                <paramref name="utf8Json" /> does not represent a valid single JSON value.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="options" /> contains unsupported options.</exception>
            <returns>A JsonDocument representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonDocument.Parse(System.IO.Stream,System.Text.Json.JsonDocumentOptions)">
            <summary>Parses a <see cref="T:System.IO.Stream" /> as UTF-8-encoded data representing a single JSON value into a JsonDocument. The stream is read to completion.</summary>
            <param name="utf8Json">The JSON data to parse.</param>
            <param name="options">Options to control the reader behavior during parsing.</param>
            <exception cref="T:System.Text.Json.JsonException">
                <paramref name="utf8Json" /> does not represent a valid single JSON value.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="options" /> contains unsupported options.</exception>
            <returns>A JsonDocument representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonDocument.Parse(System.ReadOnlyMemory{System.Byte},System.Text.Json.JsonDocumentOptions)">
            <summary>Parses memory as UTF-8-encoded text representing a single JSON byte value into a JsonDocument.</summary>
            <param name="utf8Json">The JSON text to parse.</param>
            <param name="options">Options to control the reader behavior during parsing.</param>
            <exception cref="T:System.Text.Json.JsonException">
                <paramref name="utf8Json" /> does not represent a valid single JSON value.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="options" /> contains unsupported options.</exception>
            <returns>A JsonDocument representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonDocument.Parse(System.ReadOnlyMemory{System.Char},System.Text.Json.JsonDocumentOptions)">
            <summary>Parses text representing a single JSON character value into a JsonDocument.</summary>
            <param name="json">The JSON text to parse.</param>
            <param name="options">Options to control the reader behavior during parsing.</param>
            <exception cref="T:System.Text.Json.JsonException">
                <paramref name="json" /> does not represent a valid single JSON value.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="options" /> contains unsupported options.</exception>
            <returns>A JsonDocument representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonDocument.Parse(System.String,System.Text.Json.JsonDocumentOptions)">
            <summary>Parses text representing a single JSON string value into a JsonDocument.</summary>
            <param name="json">The JSON text to parse.</param>
            <param name="options">Options to control the reader behavior during parsing.</param>
            <exception cref="T:System.Text.Json.JsonException">
                <paramref name="json" /> does not represent a valid single JSON value.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="options" /> contains unsupported options.</exception>
            <returns>A JsonDocument representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonDocument.ParseAsync(System.IO.Stream,System.Text.Json.JsonDocumentOptions,System.Threading.CancellationToken)">
            <summary>Parses a <see cref="T:System.IO.Stream" /> as UTF-8-encoded data representing a single JSON value into a JsonDocument. The stream is read to completion.</summary>
            <param name="utf8Json">The JSON data to parse.</param>
            <param name="options">Options to control the reader behavior during parsing.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <exception cref="T:System.Text.Json.JsonException">
                <paramref name="utf8Json" /> does not represent a valid single JSON value.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="options" /> contains unsupported options.</exception>
            <returns>A task to produce a JsonDocument representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonDocument.ParseValue(System.Text.Json.Utf8JsonReader@)">
            <summary>Parses one JSON value (including objects or arrays) from the provided reader.</summary>
            <param name="reader">The reader to read.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="reader" /> contains unsupported options.

-or-

The current <paramref name="reader" /> token does not start or represent a value.</exception>
            <exception cref="T:System.Text.Json.JsonException">A value could not be read from the reader.</exception>
            <returns>A JsonDocument representing the value (and nested values) read from the reader.</returns>
        </member>
        <member name="M:System.Text.Json.JsonDocument.TryParseValue(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonDocument@)">
            <summary>Attempts to parse one JSON value (including objects or arrays) from the provided reader.</summary>
            <param name="reader">The reader to read.</param>
            <param name="document">When the method returns, contains the parsed document.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="reader" /> contains unsupported options.

-or-

The current <paramref name="reader" /> token does not start or represent a value.</exception>
            <exception cref="T:System.Text.Json.JsonException">A value could not be read from the reader.</exception>
            <returns>
                <see langword="true" /> if a value was read and parsed into a JsonDocument; <see langword="false" /> if the reader ran out of data while parsing. All other situations result in an exception being thrown.</returns>
        </member>
        <member name="M:System.Text.Json.JsonDocument.WriteTo(System.Text.Json.Utf8JsonWriter)">
            <summary>Writes the document to the provided writer as a JSON value.</summary>
            <param name="writer">The writer to which to write the document.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Text.Json.JsonElement.ValueKind" /> of this <see cref="P:System.Text.Json.JsonDocument.RootElement" /> would result in invalid JSON.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
        </member>
        <member name="P:System.Text.Json.JsonDocument.RootElement">
            <summary>Gets the root element of this JSON document.</summary>
            <returns>A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the document.</returns>
        </member>
        <member name="T:System.Text.Json.JsonDocumentOptions">
            <summary>Provides the ability for the user to define custom behavior when parsing JSON to create a <see cref="T:System.Text.Json.JsonDocument" />.</summary>
        </member>
        <member name="P:System.Text.Json.JsonDocumentOptions.AllowTrailingCommas">
            <summary>Gets or sets a value that indicates whether an extra comma at the end of a list of JSON values in an object or array is allowed (and ignored) within the JSON payload being read.</summary>
            <returns>
                <see langword="true" /> if an extra comma at the end of a list of JSON values in an object or array is allowed; otherwise, <see langword="false" />. Default is <see langword="false" /></returns>
        </member>
        <member name="P:System.Text.Json.JsonDocumentOptions.CommentHandling">
            <summary>Gets or sets a value that determines how the <see cref="T:System.Text.Json.JsonDocument" /> handles comments when reading through the JSON data.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The comment handling enum is set to a value that is not supported (or not within the <see cref="T:System.Text.Json.JsonCommentHandling" /> enum range).</exception>
            <returns>One of the enumeration values that indicates how comments are handled.</returns>
        </member>
        <member name="P:System.Text.Json.JsonDocumentOptions.MaxDepth">
            <summary>Gets or sets the maximum depth allowed when parsing JSON data, with the default (that is, 0) indicating a maximum depth of 64.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The max depth is set to a negative value.</exception>
            <returns>The maximum depth allowed when parsing JSON data.</returns>
        </member>
        <member name="T:System.Text.Json.JsonElement">
            <summary>Represents a specific JSON value within a <see cref="T:System.Text.Json.JsonDocument" />.</summary>
        </member>
        <member name="M:System.Text.Json.JsonElement.Clone">
            <summary>Gets a JsonElement that can be safely stored beyond the lifetime of the original <see cref="T:System.Text.Json.JsonDocument" />.</summary>
            <returns>A JsonElement that can be safely stored beyond the lifetime of the original <see cref="T:System.Text.Json.JsonDocument" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.EnumerateArray">
            <summary>Gets an enumerator to enumerate the values in the JSON array represented by this JsonElement.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Array" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>An enumerator to enumerate the values in the JSON array represented by this JsonElement.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.EnumerateObject">
            <summary>Gets an enumerator to enumerate the properties in the JSON object represented by this JsonElement.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>An enumerator to enumerate the properties in the JSON object represented by this JsonElement.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetArrayLength">
            <summary>Gets the number of values contained within the current array value.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Array" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The number of values contained within the current array value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetBoolean">
            <summary>Gets the value of the element as a <see cref="T:System.Boolean" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is neither <see cref="F:System.Text.Json.JsonValueKind.True" /> nor <see cref="F:System.Text.Json.JsonValueKind.False" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The value of the element as a <see cref="T:System.Boolean" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetByte">
            <summary>Gets the current JSON number as a <see cref="T:System.Byte" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be represented as a <see cref="T:System.Byte" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The current JSON number as a <see cref="T:System.Byte" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetBytesFromBase64">
            <summary>Gets the value of the element as a byte array.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</exception>
            <exception cref="T:System.FormatException">The value is not encoded as Base64 text and hence cannot be decoded to bytes.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The value decoded as a byte array.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetDateTime">
            <summary>Gets the value of the element as a <see cref="T:System.DateTime" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be read as a <see cref="T:System.DateTime" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The value of the element as a <see cref="T:System.DateTime" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetDateTimeOffset">
            <summary>Gets the value of the element as a <see cref="T:System.DateTimeOffset" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be read as a <see cref="T:System.DateTimeOffset" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The value of the element as a <see cref="T:System.DateTimeOffset" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetDecimal">
            <summary>Gets the current JSON number as a <see cref="T:System.Decimal" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be represented as a <see cref="T:System.Decimal" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The current JSON number as a <see cref="T:System.Decimal" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetDouble">
            <summary>Gets the current JSON number as a <see cref="T:System.Double" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be represented as a <see cref="T:System.Double" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The current JSON number as a <see cref="T:System.Double" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetGuid">
            <summary>Gets the value of the element as a <see cref="T:System.Guid" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be represented as a <see cref="T:System.Guid" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The value of the element as a <see cref="T:System.Guid" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetInt16">
            <summary>Gets the current JSON number as an <see cref="T:System.Int16" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be represented as an <see cref="T:System.Int16" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The current JSON number as an <see cref="T:System.Int16" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetInt32">
            <summary>Gets the current JSON number as an <see cref="T:System.Int32" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be represented as an <see cref="T:System.Int32" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The current JSON number as an <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetInt64">
            <summary>Gets the current JSON number as an <see cref="T:System.Int64" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be represented as a <see cref="T:System.Int64" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The current JSON number as an <see cref="T:System.Int64" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetProperty(System.ReadOnlySpan{System.Byte})">
            <summary>Gets a <see cref="T:System.Text.Json.JsonElement" /> representing the value of a required property identified by <paramref name="utf8PropertyName" />.</summary>
            <param name="utf8PropertyName">The UTF-8 representation (with no Byte-Order-Mark (BOM)) of the name of the property to return.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No property was found with the requested name.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the requested property.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetProperty(System.ReadOnlySpan{System.Char})">
            <summary>Gets a <see cref="T:System.Text.Json.JsonElement" /> representing the value of a required property identified by <paramref name="propertyName" />.</summary>
            <param name="propertyName">The name of the property whose value is to be returned.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No property was found with the requested name.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the requested property.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetProperty(System.String)">
            <summary>Gets a <see cref="T:System.Text.Json.JsonElement" /> representing the value of a required property identified by <paramref name="propertyName" />.</summary>
            <param name="propertyName">The name of the property whose value is to be returned.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No property was found with the requested name.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="propertyName" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the requested property.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetRawText">
            <summary>Gets a string that represents the original input data backing this value.</summary>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The original input data backing this value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetSByte">
            <summary>Gets the current JSON number as an <see cref="T:System.SByte" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be represented as an <see cref="T:System.SByte" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The current JSON number as an <see cref="T:System.SByte" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetSingle">
            <summary>Gets the current JSON number as a <see cref="T:System.Single" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be represented as a <see cref="T:System.Single" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The current JSON number as a <see cref="T:System.Single" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetString">
            <summary>Gets the value of the element as a <see cref="T:System.String" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is neither <see cref="F:System.Text.Json.JsonValueKind.String" /> nor <see cref="F:System.Text.Json.JsonValueKind.Null" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The value of the element as a <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetUInt16">
            <summary>Gets the current JSON number as a <see cref="T:System.UInt16" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be represented as a <see cref="T:System.UInt16" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The current JSON number as a <see cref="T:System.UInt16" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetUInt32">
            <summary>Gets the current JSON number as a <see cref="T:System.UInt32" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be represented as a <see cref="T:System.UInt32" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The current JSON number as a <see cref="T:System.UInt32" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.GetUInt64">
            <summary>Gets the current JSON number as a <see cref="T:System.UInt64" />.</summary>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.FormatException">The value cannot be represented as a <see cref="T:System.UInt64" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The current JSON number as a <see cref="T:System.UInt64" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.ToString">
            <summary>Gets a string representation for the current value appropriate to the value type.</summary>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>A string representation for the current value appropriate to the value type.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetByte(System.Byte@)">
            <summary>Attempts to represent the current JSON number as a <see cref="T:System.Byte" />.</summary>
            <param name="value">When the method returns, contains the byte equivalent of the current JSON number if the conversion succeeded.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the number can be represented as a <see cref="T:System.Byte" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetBytesFromBase64(System.Byte[]@)">
            <summary>Attempts to represent the current JSON string as a byte array, assuming that it is Base64 encoded.</summary>
            <param name="value">If the method succeeds, contains the decoded binary representation of the Base64 text.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the entire token value is encoded as valid Base64 text and can be successfully decoded to bytes; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetDateTime(System.DateTime@)">
            <summary>Attempts to represent the current JSON string as a <see cref="T:System.DateTime" />.</summary>
            <param name="value">When this method returns, contains the date and time value equivalent to the current JSON string.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the string can be represented as a <see cref="T:System.DateTime" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetDateTimeOffset(System.DateTimeOffset@)">
            <summary>Attempts to represent the current JSON string as a <see cref="T:System.DateTimeOffset" />.</summary>
            <param name="value">When this method returns, contains the date and time equivalent to the current JSON string.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the string can be represented as a <see cref="T:System.DateTimeOffset" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetDecimal(System.Decimal@)">
            <summary>Attempts to represent the current JSON number as a <see cref="T:System.Decimal" />.</summary>
            <param name="value">When this method returns, contains the decimal equivalent of the current JSON number.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the number can be represented as a <see cref="T:System.Decimal" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetDouble(System.Double@)">
            <summary>Attempts to represent the current JSON number as a <see cref="T:System.Double" />.</summary>
            <param name="value">When this method returns, contains a double-precision floating point value equivalent to the current JSON number.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the number can be represented as a <see cref="T:System.Double" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetGuid(System.Guid@)">
            <summary>Attempts to represent the current JSON string as a <see cref="T:System.Guid" />.</summary>
            <param name="value">When this method returns, contains the GUID equivalent to the current JSON string.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the string can be represented as a <see cref="T:System.Guid" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetInt16(System.Int16@)">
            <summary>Attempts to represent the current JSON number as an <see cref="T:System.Int16" />.</summary>
            <param name="value">When the method returns, contains the 16-bit integer equivalent of the current JSON number if the conversion succeeded.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the number can be represented as an <see cref="T:System.Int16" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetInt32(System.Int32@)">
            <summary>Attempts to represent the current JSON number as an <see cref="T:System.Int32" />.</summary>
            <param name="value">When this method returns, contains the 32-biut integer value equivalent to the current JSON number.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the number can be represented as an <see cref="T:System.Int32" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetInt64(System.Int64@)">
            <summary>Attempts to represent the current JSON number as a <see cref="T:System.Int64" />.</summary>
            <param name="value">When this method returns, contains the 64-bit integer value equivalent to the current JSON number.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the number can be represented as a <see cref="T:System.Int64" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetProperty(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonElement@)">
            <summary>Looks for a property named <paramref name="utf8PropertyName" /> in the current object, returning a value that indicates whether or not such a property exists. When the property exists, the method assigns its value to the <paramref name="value" /> argument.</summary>
            <param name="utf8PropertyName">The UTF-8 (with no Byte-Order-Mark (BOM)) representation of the name of the property to return.</param>
            <param name="value">Receives the value of the located property.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the property was found; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetProperty(System.ReadOnlySpan{System.Char},System.Text.Json.JsonElement@)">
            <summary>Looks for a property named <paramref name="propertyName" /> in the current object, returning a value that indicates whether or not such a property exists. When the property exists, the method assigns its value to the <paramref name="value" /> argument.</summary>
            <param name="propertyName">The name of the property to find.</param>
            <param name="value">When this method returns, contains the value of the specified property.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the property was found; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetProperty(System.String,System.Text.Json.JsonElement@)">
            <summary>Looks for a property named <paramref name="propertyName" /> in the current object, returning a value that indicates whether or not such a property exists. When the property exists, its value is assigned to the <paramref name="value" /> argument.</summary>
            <param name="propertyName">The name of the property to find.</param>
            <param name="value">When this method returns, contains the value of the specified property.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Object" />.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="propertyName" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the property was found; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetSByte(System.SByte@)">
            <summary>Attempts to represent the current JSON number as an <see cref="T:System.SByte" />.</summary>
            <param name="value">When the method returns, contains the signed byte equivalent of the current JSON number if the conversion succeeded.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the number can be represented as an <see cref="T:System.SByte" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetSingle(System.Single@)">
            <summary>Attempts to represent the current JSON number as a <see cref="T:System.Single" />.</summary>
            <param name="value">When this method returns, contains the single-precision floating point value equivalent to the current JSON number.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the number can be represented as a <see cref="T:System.Single" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetUInt16(System.UInt16@)">
            <summary>Attempts to represent the current JSON number as a <see cref="T:System.UInt16" />.</summary>
            <param name="value">When the method returns, contains the unsigned 16-bit integer equivalent of the current JSON number if the conversion succeeded.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the number can be represented as a <see cref="T:System.UInt16" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetUInt32(System.UInt32@)">
            <summary>Attempts to represent the current JSON number as a <see cref="T:System.UInt32" />.</summary>
            <param name="value">When this method returns, contains unsigned 32-bit integer value equivalent to the current JSON number.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the number can be represented as a <see cref="T:System.UInt32" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.TryGetUInt64(System.UInt64@)">
            <summary>Attempts to represent the current JSON number as a <see cref="T:System.UInt64" />.</summary>
            <param name="value">When this method returns, contains unsigned 64-bit integer value equivalent to the current JSON number.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Number" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>
                <see langword="true" /> if the number can be represented as a <see cref="T:System.UInt64" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.ValueEquals(System.ReadOnlySpan{System.Byte})">
            <summary>Compares the text represented by a UTF8-encoded byte span to the string value of this element.</summary>
            <param name="utf8Text">The UTF-8 encoded text to compare against.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</exception>
            <returns>
                <see langword="true" /> if the string value of this element has the same UTF-8 encoding as
              <paramref name="utf8Text" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.ValueEquals(System.ReadOnlySpan{System.Char})">
            <summary>Compares a specified read-only character span to the string value of this element.</summary>
            <param name="text">The text to compare against.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</exception>
            <returns>
                <see langword="true" /> if the string value of this element matches <paramref name="text" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.ValueEquals(System.String)">
            <summary>Compares a specified string to the string value of this element.</summary>
            <param name="text">The text to compare against.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.String" />.</exception>
            <returns>
                <see langword="true" /> if the string value of this element matches <paramref name="text" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.WriteTo(System.Text.Json.Utf8JsonWriter)">
            <summary>Writes the element to the specified writer as a JSON value.</summary>
            <param name="writer">The writer to which to write the element.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> parameter is <see langword="null" />.</exception>
            <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Text.Json.JsonElement.ValueKind" /> of this value is <see cref="F:System.Text.Json.JsonValueKind.Undefined" />.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
        </member>
        <member name="P:System.Text.Json.JsonElement.Item(System.Int32)">
            <summary>Gets the value at the specified index if the current value is an <see cref="F:System.Text.Json.JsonValueKind.Array" />.</summary>
            <param name="index">The item index.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="P:System.Text.Json.JsonElement.ValueKind" /> is not <see cref="F:System.Text.Json.JsonValueKind.Array" />.</exception>
            <exception cref="T:System.IndexOutOfRangeException">
                <paramref name="index" /> is not in the range [0, <see cref="M:System.Text.Json.JsonElement.GetArrayLength" />()).</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="P:System.Text.Json.JsonElement.ValueKind">
            <summary>Gets the type of the current JSON value.</summary>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
            <returns>The type of the current JSON value.</returns>
        </member>
        <member name="T:System.Text.Json.JsonElement.ArrayEnumerator">
            <summary>Represents an enumerator for the contents of a JSON array.</summary>
        </member>
        <member name="M:System.Text.Json.JsonElement.ArrayEnumerator.Dispose">
            <summary>Releases the resources used by this <see cref="T:System.Text.Json.JsonElement.ArrayEnumerator" /> instance.</summary>
        </member>
        <member name="M:System.Text.Json.JsonElement.ArrayEnumerator.GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An enumerator that can be used to iterate through the array.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.ArrayEnumerator.MoveNext">
            <summary>Advances the enumerator to the next element of the collection.</summary>
            <returns>
                <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.ArrayEnumerator.Reset">
            <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
        </member>
        <member name="M:System.Text.Json.JsonElement.ArrayEnumerator.System#Collections#Generic#IEnumerable{System#Text#Json#JsonElement}#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An enumerator for an array of <see cref="T:System.Text.Json.JsonElement" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.ArrayEnumerator.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:System.Text.Json.JsonElement.ArrayEnumerator.Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="P:System.Text.Json.JsonElement.ArrayEnumerator.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="T:System.Text.Json.JsonElement.ObjectEnumerator">
            <summary>Represents an enumerator for the properties of a JSON object.</summary>
        </member>
        <member name="M:System.Text.Json.JsonElement.ObjectEnumerator.Dispose">
            <summary>Releases the resources used by this <see cref="T:System.Text.Json.JsonElement.ObjectEnumerator" /> instance.</summary>
        </member>
        <member name="M:System.Text.Json.JsonElement.ObjectEnumerator.GetEnumerator">
            <summary>Returns an enumerator that iterates the properties of an object.</summary>
            <returns>An enumerator that can be used to iterate through the object.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.ObjectEnumerator.MoveNext">
            <summary>Advances the enumerator to the next element of the collection.</summary>
            <returns>
                <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.ObjectEnumerator.Reset">
            <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
        </member>
        <member name="M:System.Text.Json.JsonElement.ObjectEnumerator.System#Collections#Generic#IEnumerable{System#Text#Json#JsonProperty}#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An enumerator for <see cref="T:System.Text.Json.JsonProperty" /> objects that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:System.Text.Json.JsonElement.ObjectEnumerator.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:System.Text.Json.JsonElement.ObjectEnumerator.Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="P:System.Text.Json.JsonElement.ObjectEnumerator.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="T:System.Text.Json.JsonEncodedText">
            <summary>Provides methods to transform UTF-8 or UTF-16 encoded text into a form that is suitable for JSON.</summary>
        </member>
        <member name="M:System.Text.Json.JsonEncodedText.Encode(System.ReadOnlySpan{System.Byte},System.Text.Encodings.Web.JavaScriptEncoder)">
            <summary>Encodes a UTF-8 text value as a JSON string.</summary>
            <param name="utf8Value">The UTF-8 encoded text to convert to JSON encoded text.</param>
            <param name="encoder">The encoder to use when escaping the string, or <see langword="null" /> to use the default encoder.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="utf8Value" /> is too large.

-or-

<paramref name="utf8Value" /> contains invalid UTF-8 bytes.</exception>
            <returns>The encoded JSON text.</returns>
        </member>
        <member name="M:System.Text.Json.JsonEncodedText.Encode(System.ReadOnlySpan{System.Char},System.Text.Encodings.Web.JavaScriptEncoder)">
            <summary>Encodes a specified text value as a JSON string.</summary>
            <param name="value">The value to convert to JSON encoded text.</param>
            <param name="encoder">The encoder to use when escaping the string, or <see langword="null" /> to use the default encoder.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="value" /> is too large.

-or-

<paramref name="value" /> contains invalid UTF-16 characters.</exception>
            <returns>The encoded JSON text.</returns>
        </member>
        <member name="M:System.Text.Json.JsonEncodedText.Encode(System.String,System.Text.Encodings.Web.JavaScriptEncoder)">
            <summary>Encodes the string text value as a JSON string.</summary>
            <param name="value">The value to convert to JSON encoded text.</param>
            <param name="encoder">The encoder to use when escaping the string, or <see langword="null" /> to use the default encoder.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="value" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="value" /> is too large.

-or-

<paramref name="value" /> contains invalid UTF-16 characters.</exception>
            <returns>The encoded JSON text.</returns>
        </member>
        <member name="M:System.Text.Json.JsonEncodedText.Equals(System.Object)">
            <summary>Determines whether this instance and a specified object, which must also be a <see cref="T:System.Text.Json.JsonEncodedText" /> instance, have the same value.</summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonEncodedText.Equals(System.Text.Json.JsonEncodedText)">
            <summary>Determines whether this instance and another specified <see cref="T:System.Text.Json.JsonEncodedText" /> instance have the same value.</summary>
            <param name="other">The object to compare to this instance.</param>
            <returns>
                <see langword="true" /> if this instance and <paramref name="other" /> have the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonEncodedText.GetHashCode">
            <summary>Returns the hash code for this <see cref="T:System.Text.Json.JsonEncodedText" />.</summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:System.Text.Json.JsonEncodedText.ToString">
            <summary>Converts the value of this instance to a <see cref="T:System.String" />.</summary>
            <returns>The underlying UTF-16 encoded string.</returns>
        </member>
        <member name="P:System.Text.Json.JsonEncodedText.EncodedUtf8Bytes">
            <summary>Gets the UTF-8 encoded representation of the pre-encoded JSON text.</summary>
            <returns>The UTF-8 encoded representation of the pre-encoded JSON text.</returns>
        </member>
        <member name="T:System.Text.Json.JsonException">
            <summary>Defines a custom exception object that is thrown when invalid JSON text is encountered, when the defined maximum depth is passed, or the JSON text is not compatible with the type of a property on an object.</summary>
        </member>
        <member name="M:System.Text.Json.JsonException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.JsonException" /> class.</summary>
        </member>
        <member name="M:System.Text.Json.JsonException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Creates a new exception object with serialized data.</summary>
            <param name="info">The serialized object data about the exception being thrown.</param>
            <param name="context">An object that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="info" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.JsonException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.JsonException" /> class with a specified error message.</summary>
            <param name="message">The context-specific error message.</param>
        </member>
        <member name="M:System.Text.Json.JsonException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.JsonException" /> class, with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The context-specific error message.</param>
            <param name="innerException">The exception that caused the current exception.</param>
        </member>
        <member name="M:System.Text.Json.JsonException.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>Creates a new exception object to relay error information to the user.</summary>
            <param name="message">The context-specific error message.</param>
            <param name="path">The path where the invalid JSON was encountered.</param>
            <param name="lineNumber">The line number (starting at 0) at which the invalid JSON was encountered when deserializing.</param>
            <param name="bytePositionInLine">The byte count within the current line (starting at 0) where the invalid JSON was encountered.</param>
        </member>
        <member name="M:System.Text.Json.JsonException.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Exception)">
            <summary>Creates a new exception object to relay error information to the user that includes a specified inner exception.</summary>
            <param name="message">The context-specific error message.</param>
            <param name="path">The path where the invalid JSON was encountered.</param>
            <param name="lineNumber">The line number (starting at 0) at which the invalid JSON was encountered when deserializing.</param>
            <param name="bytePositionInLine">The byte count (starting at 0) within the current line where the invalid JSON was encountered.</param>
            <param name="innerException">The exception that caused the current exception.</param>
        </member>
        <member name="M:System.Text.Json.JsonException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
            <param name="info">The serialized object data about the exception being thrown.</param>
            <param name="context">An object that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:System.Text.Json.JsonException.BytePositionInLine">
            <summary>Gets the zero-based number of bytes read within the current line before the exception.</summary>
            <returns>The zero-based number of bytes read within the current line before the exception.</returns>
        </member>
        <member name="P:System.Text.Json.JsonException.LineNumber">
            <summary>Gets the zero-based number of lines read before the exception.</summary>
            <returns>The zero-based number of lines read before the exception.</returns>
        </member>
        <member name="P:System.Text.Json.JsonException.Message">
            <summary>Gets a message that describes the current exception.</summary>
            <returns>The error message that describes the current exception.</returns>
        </member>
        <member name="P:System.Text.Json.JsonException.Path">
            <summary>Gets The path within the JSON where the exception was encountered.</summary>
            <returns>The path within the JSON where the exception was encountered.</returns>
        </member>
        <member name="T:System.Text.Json.JsonNamingPolicy">
            <summary>Determines the naming policy used to convert a string-based name to another format, such as a camel-casing format.</summary>
        </member>
        <member name="M:System.Text.Json.JsonNamingPolicy.#ctor">
            <summary>Initializes a new instance of <see cref="T:System.Text.Json.JsonNamingPolicy" />.</summary>
        </member>
        <member name="M:System.Text.Json.JsonNamingPolicy.ConvertName(System.String)">
            <summary>When overridden in a derived class, converts the specified name according to the policy.</summary>
            <param name="name">The name to convert.</param>
            <returns>The converted name.</returns>
        </member>
        <member name="P:System.Text.Json.JsonNamingPolicy.CamelCase">
            <summary>Gets the naming policy for camel-casing.</summary>
            <returns>The naming policy for camel-casing.</returns>
        </member>
        <member name="T:System.Text.Json.JsonProperty">
            <summary>Represents a single property for a JSON object.</summary>
        </member>
        <member name="M:System.Text.Json.JsonProperty.NameEquals(System.ReadOnlySpan{System.Byte})">
            <summary>Compares the specified UTF-8 encoded text to the name of this property.</summary>
            <param name="utf8Text">The UTF-8 encoded text to compare against.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="T:System.Type" /> is not <see cref="F:System.Text.Json.JsonTokenType.PropertyName" />.</exception>
            <returns>
                <see langword="true" /> if the name of this property has the same UTF-8 encoding as <paramref name="utf8Text" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonProperty.NameEquals(System.ReadOnlySpan{System.Char})">
            <summary>Compares the specified text as a character span to the name of this property.</summary>
            <param name="text">The text to compare against.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="T:System.Type" /> is not <see cref="F:System.Text.Json.JsonTokenType.PropertyName" />.</exception>
            <returns>
                <see langword="true" /> if the name of this property matches <paramref name="text" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonProperty.NameEquals(System.String)">
            <summary>Compares the specified string to the name of this property.</summary>
            <param name="text">The text to compare against.</param>
            <exception cref="T:System.InvalidOperationException">This value's <see cref="T:System.Type" /> is not <see cref="F:System.Text.Json.JsonTokenType.PropertyName" />.</exception>
            <returns>
                <see langword="true" /> if the name of this property matches <paramref name="text" />; otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.JsonProperty.ToString">
            <summary>Provides a string representation of the property for debugging purposes.</summary>
            <returns>A string containing the uninterpreted value of the property, beginning at the declaring open-quote and ending at the last character that is part of the value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonProperty.WriteTo(System.Text.Json.Utf8JsonWriter)">
            <summary>Writes the property to the provided writer as a named JSON object property.</summary>
            <param name="writer">The writer to which to write the property.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="writer" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">
                <see cref="P:System.Text.Json.JsonProperty.Name" /> is too large to be a JSON object property.</exception>
            <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Text.Json.JsonElement.ValueKind" /> of this JSON property's <see cref="P:System.Text.Json.JsonProperty.Value" /> would result in invalid JSON.</exception>
            <exception cref="T:System.ObjectDisposedException">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</exception>
        </member>
        <member name="P:System.Text.Json.JsonProperty.Name">
            <summary>Gets the name of this property.</summary>
            <returns>The name of this property.</returns>
        </member>
        <member name="P:System.Text.Json.JsonProperty.Value">
            <summary>Gets the value of this property.</summary>
            <returns>The value of this property.</returns>
        </member>
        <member name="T:System.Text.Json.JsonReaderOptions">
            <summary>Provides the ability for the user to define custom behavior when reading JSON.</summary>
        </member>
        <member name="P:System.Text.Json.JsonReaderOptions.AllowTrailingCommas">
            <summary>Gets or sets a value that defines whether an extra comma at the end of a list of JSON values in an object or array is allowed (and ignored) within the JSON payload being read.</summary>
            <returns>
                <see langword="true" /> if an extra comma is allowed; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Text.Json.JsonReaderOptions.CommentHandling">
            <summary>Gets or sets a value that determines how the <see cref="T:System.Text.Json.Utf8JsonReader" /> handles comments when reading through the JSON data.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is not a member of the <see cref="T:System.Text.Json.JsonCommentHandling" /> enumeration.</exception>
            <returns>One of the enumeration values that indicates how comments are handled.</returns>
        </member>
        <member name="P:System.Text.Json.JsonReaderOptions.MaxDepth">
            <summary>Gets or sets the maximum depth allowed when reading JSON, with the default (that is, 0) indicating a maximum depth of 64.</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The maximum depth is being set to a negative value.</exception>
            <returns>The maximum depth allowed when reading JSON.</returns>
        </member>
        <member name="T:System.Text.Json.JsonReaderState">
            <summary>Defines an opaque type that holds and saves all the relevant state information, which must be provided to the <see cref="T:System.Text.Json.Utf8JsonReader" /> to continue reading after processing incomplete data.</summary>
        </member>
        <member name="M:System.Text.Json.JsonReaderState.#ctor(System.Text.Json.JsonReaderOptions)">
            <summary>Constructs a new <see cref="T:System.Text.Json.JsonReaderState" /> instance.</summary>
            <param name="options">Defines the customized behavior of the <see cref="T:System.Text.Json.Utf8JsonReader" /> that is different from the JSON RFC (for example how to handle comments, or the maximum depth allowed when reading). By default, the <see cref="T:System.Text.Json.Utf8JsonReader" /> follows the JSON RFC strictly (comments within the JSON are invalid) and reads up to a maximum depth of 64.</param>
            <exception cref="T:System.ArgumentException">The maximum depth is set to a non-positive value (&lt; 0).</exception>
        </member>
        <member name="P:System.Text.Json.JsonReaderState.Options">
            <summary>Gets the custom behavior to use when reading JSON data using the <see cref="T:System.Text.Json.Utf8JsonReader" /> struct that may deviate from strict adherence to the JSON specification, which is the default behavior.</summary>
            <returns>The custom behavior to use when reading JSON data.</returns>
        </member>
        <member name="T:System.Text.Json.JsonSerializer">
            <summary>Provides functionality to serialize objects or value types to JSON and to deserialize JSON into objects or value types.</summary>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Byte},System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Parses the UTF-8 encoded text representing a single JSON value into an instance of a specified type.</summary>
            <param name="utf8Json">The JSON text to parse.</param>
            <param name="returnType">The type of the object to convert to and return.</param>
            <param name="options">Options to control the behavior during parsing.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="returnType" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Text.Json.JsonException">The JSON is invalid.

-or-

<typeparamref name="returnType" /> is not compatible with the JSON.

-or-

There is remaining data in the span beyond a single JSON value.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="returnType" /> or its serializable members.</exception>
            <returns>A <paramref name="returnType" /> representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.Deserialize(System.String,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Parses the text representing a single JSON value into an instance of a specified type.</summary>
            <param name="json">The JSON text to parse.</param>
            <param name="returnType">The type of the object to convert to and return.</param>
            <param name="options">Options to control the behavior during parsing.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="json" /> or <paramref name="returnType" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Text.Json.JsonException">The JSON is invalid.
          
-or-

<typeparamref name="TValue" /> is not compatible with the JSON.

-or-

There is remaining data in the string beyond a single JSON value.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="returnType" /> or its serializable members.</exception>
            <returns>A <paramref name="returnType" /> representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads one JSON value (including objects or arrays) from the provided reader and converts it into an instance of  a specified type.</summary>
            <param name="reader">The reader to read the JSON from.</param>
            <param name="returnType">The type of the object to convert to and return.</param>
            <param name="options">Options to control the serializer behavior during reading.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="returnType" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Text.Json.JsonException">The JSON is invalid.
          
-or-

<typeparamref name="returnType" /> is not compatible with the JSON.

-or-

A value could not be read from the reader.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="reader" /> is using unsupported options.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="returnType" /> or its serializable members.</exception>
            <returns>A <paramref name="returnType" /> representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonSerializerOptions)">
            <summary>Parses the UTF-8 encoded text representing a single JSON value into an instance of the type specified by a generic type parameter.</summary>
            <param name="utf8Json">The JSON text to parse.</param>
            <param name="options">Options to control the behavior during parsing.</param>
            <typeparam name="TValue">The target type of the UTF-8 encoded text.</typeparam>
            <exception cref="T:System.Text.Json.JsonException">The JSON is invalid.

-or-

<typeparamref name="TValue" /> is not compatible with the JSON.

-or-

There is remaining data in the span beyond a single JSON value.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</exception>
            <returns>A <typeparamref name="TValue" /> representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)">
            <summary>Parses the text representing a single JSON value into an instance of the type specified by a generic type parameter.</summary>
            <param name="json">The JSON text to parse.</param>
            <param name="options">Options to control the behavior during parsing.</param>
            <typeparam name="TValue">The target type of the JSON value.</typeparam>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="json" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Text.Json.JsonException">The JSON is invalid.

-or-

<typeparamref name="TValue" /> is not compatible with the JSON.

-or-

There is remaining data in the string beyond a single JSON value.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</exception>
            <returns>A <typeparamref name="TValue" /> representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads one JSON value (including objects or arrays) from the provided reader into an instance of the type specified by a generic type parameter.</summary>
            <param name="reader">The reader to read the JSON from.</param>
            <param name="options">Options to control serializer behavior during reading.</param>
            <typeparam name="TValue">The target type of the JSON value.</typeparam>
            <exception cref="T:System.Text.Json.JsonException">The JSON is invalid.

-or-

<typeparamref name="TValue" /> is not compatible with the JSON.

-or-

A value could not be read from the reader.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="reader" /> uses unsupported options.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</exception>
            <returns>A <typeparamref name="TValue" /> representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)">
            <summary>Asynchronously reads the UTF-8 encoded text representing a single JSON value into an instance of a specified type. The stream will be read to completion.</summary>
            <param name="utf8Json">The JSON data to parse.</param>
            <param name="returnType">The type of the object to convert to and return.</param>
            <param name="options">Options to control the behavior during reading.</param>
            <param name="cancellationToken">A cancellation token that may be used to cancel the read operation.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="utf8Json" /> or <paramref name="returnType" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Text.Json.JsonException">The JSON is invalid.

-or-

<typeparamref name="TValue" /> is not compatible with the JSON.

-or-

There is remaining data in the stream.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="returnType" /> or its serializable members.</exception>
            <returns>A <paramref name="returnType" /> representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.DeserializeAsync``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)">
            <summary>Asynchronously reads the UTF-8 encoded text representing a single JSON value into an instance of a type specified by a generic type parameter. The stream will be read to completion.</summary>
            <param name="utf8Json">The JSON data to parse.</param>
            <param name="options">Options to control the behavior during reading.</param>
            <param name="cancellationToken">A token that may be used to cancel the read operation.</param>
            <typeparam name="TValue">The target type of the JSON value.</typeparam>
            <exception cref="T:System.Text.Json.JsonException">The JSON is invalid.

-or-

<typeparamref name="TValue" /> is not compatible with the JSON.

-or-

There is remaining data in the stream.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="utf8Json" />is <see langword="null" />.</exception>
            <returns>A <typeparamref name="TValue" /> representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.Serialize(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Converts the value of a specified type into a JSON string.</summary>
            <param name="value">The value to convert.</param>
            <param name="inputType">The type of the <paramref name="value" /> to convert.</param>
            <param name="options">Options to control the conversion behavior.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="inputType" /> is not compatible with <paramref name="value" />.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="inputType" /> is <see langword="null" />.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="inputType" /> or its serializable members.</exception>
            <returns>The JSON string representation of the value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter,System.Object,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Writes the JSON representation of the specified type to the provided writer.</summary>
            <param name="writer">The JSON writer to write to.</param>
            <param name="value">The value to convert and write.</param>
            <param name="inputType">The type of the <paramref name="value" /> to convert.</param>
            <param name="options">Options to control serialization behavior.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="inputType" /> is not compatible with <paramref name="value" /></exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="writer" /> or <paramref name="inputType" /> is <see langword="null" />.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="inputType" /> or its serializable members.</exception>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.Serialize``1(``0,System.Text.Json.JsonSerializerOptions)">
            <summary>Converts the value of a type specified by a generic type parameter into a JSON string.</summary>
            <param name="value">The value to convert.</param>
            <param name="options">Options to control serialization behavior.</param>
            <typeparam name="TValue">The type of the value to serialize.</typeparam>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</exception>
            <returns>A JSON string representation of the value.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.Serialize``1(System.Text.Json.Utf8JsonWriter,``0,System.Text.Json.JsonSerializerOptions)">
            <summary>Writes the JSON representation of a type specified by a generic type parameter to the provided writer.</summary>
            <param name="writer">A JSON writer to write to.</param>
            <param name="value">The value to convert and write.</param>
            <param name="options">Options to control serialization behavior.</param>
            <typeparam name="TValue">The type of the value to serialize.</typeparam>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="writer" /> is <see langword="null" />.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</exception>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)">
            <summary>Asynchronously converts the value of a specified type to UTF-8 encoded JSON text and writes it to the specified stream.</summary>
            <param name="utf8Json">The UTF-8 stream to write to.</param>
            <param name="value">The value to convert.</param>
            <param name="inputType">The type of the <paramref name="value" /> to convert.</param>
            <param name="options">Options to control serialization behavior.</param>
            <param name="cancellationToken">A token that may be used to cancel the write operation.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="inputType" /> is not compatible with <paramref name="value" />.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="utf8Json" /> or <paramref name="inputType" /> is <see langword="null" />.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="inputType" /> or its serializable members.</exception>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.SerializeAsync``1(System.IO.Stream,``0,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)">
            <summary>Asynchronously converts a value of a type specified by a generic type parameter to UTF-8 encoded JSON text and writes it to a stream.</summary>
            <param name="utf8Json">The UTF-8 stream to write to.</param>
            <param name="value">The value to convert.</param>
            <param name="options">Options to control serialization behavior.</param>
            <param name="cancellationToken">A token that may be used to cancel the write operation.</param>
            <typeparam name="TValue">The type of the value to serialize.</typeparam>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="utf8Json" /> is <see langword="null" />.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</exception>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Converts a value of the specified type into a JSON string, encoded as UTF-8 bytes.</summary>
            <param name="value">The value to convert.</param>
            <param name="inputType">The type of the <paramref name="value" /> to convert.</param>
            <param name="options">Options to control the conversion behavior.</param>
            <exception cref="T:System.ArgumentException">
                <paramref name="inputType" /> is not compatible with <paramref name="value" />.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="inputType" /> is <see langword="null" />.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="inputType" /> or its serializable members.</exception>
            <returns>A JSON string representation of the value, encoded as UTF-8 bytes.</returns>
        </member>
        <member name="M:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes``1(``0,System.Text.Json.JsonSerializerOptions)">
            <summary>Converts the value of a type specified by a generic type parameter into a JSON string, encoded as UTF-8 bytes.</summary>
            <param name="value">The value to convert.</param>
            <param name="options">Options to control the conversion behavior.</param>
            <typeparam name="TValue">The type of the value.</typeparam>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</exception>
            <returns>A JSON string representation of the value, encoded as UTF-8 bytes.</returns>
        </member>
        <member name="T:System.Text.Json.JsonSerializerDefaults">
            <summary>Specifies what default options are used by <see cref="T:System.Text.Json.JsonSerializerOptions" />.</summary>
        </member>
        <member name="F:System.Text.Json.JsonSerializerDefaults.General">
            <summary>Specifies that general-purpose values should be used. These are the same settings applied if a <see cref="T:System.Text.Json.JsonSerializerDefaults" /> isn't specified.</summary>
        </member>
        <member name="F:System.Text.Json.JsonSerializerDefaults.Web">
            <summary>Specifies that values should be used more appropriate to web-based scenarios.</summary>
        </member>
        <member name="T:System.Text.Json.JsonSerializerOptions">
            <summary>Provides options to be used with <see cref="T:System.Text.Json.JsonSerializer" />.</summary>
        </member>
        <member name="M:System.Text.Json.JsonSerializerOptions.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.JsonSerializerOptions" /> class.</summary>
        </member>
        <member name="M:System.Text.Json.JsonSerializerOptions.#ctor(System.Text.Json.JsonSerializerDefaults)">
            <summary>Constructs a new <see cref="T:System.Text.Json.JsonSerializerOptions" /> instance with a predefined set of options determined by the specified <see cref="T:System.Text.Json.JsonSerializerDefaults" />.</summary>
            <param name="defaults">The <see cref="T:System.Text.Json.JsonSerializerDefaults" /> to reason about.</param>
        </member>
        <member name="M:System.Text.Json.JsonSerializerOptions.#ctor(System.Text.Json.JsonSerializerOptions)">
            <summary>Copies the options from a <see cref="T:System.Text.Json.JsonSerializerOptions" /> instance to a new instance.</summary>
            <param name="options">The options instance to copy options from.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="options" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.JsonSerializerOptions.GetConverter(System.Type)">
            <summary>Returns the converter for the specified type.</summary>
            <param name="typeToConvert">The type to return a converter for.</param>
            <exception cref="T:System.InvalidOperationException">The configured <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="typeToConvert" /> returned an invalid converter.</exception>
            <exception cref="T:System.NotSupportedException">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="typeToConvert" /> or its serializable members.</exception>
            <returns>The first converter that supports the given type, or <see langword="null" /> if there is no converter.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.AllowTrailingCommas">
            <summary>Get or sets a value that indicates whether an extra comma at the end of a list of JSON values in an object or array is allowed (and ignored) within the JSON payload being deserialized.</summary>
            <exception cref="T:System.InvalidOperationException">This property was set after serialization or deserialization has occurred.</exception>
            <returns>
                <see langword="true" /> if an extra comma at the end of a list of JSON values in an object or array is allowed (and ignored); <see langword="false" /> otherwise.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.Converters">
            <summary>Gets the list of user-defined converters that were registered.</summary>
            <returns>The list of custom converters.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.DefaultBufferSize">
            <summary>Gets or sets the default buffer size, in bytes, to use when creating temporary buffers.</summary>
            <exception cref="T:System.ArgumentException">The buffer size is less than 1.</exception>
            <exception cref="T:System.InvalidOperationException">This property was set after serialization or deserialization has occurred.</exception>
            <returns>The default buffer size in bytes.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.DefaultIgnoreCondition">
            <summary>Specifies a condition to determine when properties with default values are ignored during serialization or deserialization.
 The default value is <see cref="F:System.Text.Json.Serialization.JsonIgnoreCondition.Never" />.</summary>
            <exception cref="T:System.ArgumentException">This property is set to <see cref="F:System.Text.Json.Serialization.JsonIgnoreCondition.Always" />.</exception>
            <exception cref="T:System.InvalidOperationException">This property is set after serialization or deserialization has occurred.

-or-

<see cref="P:System.Text.Json.JsonSerializerOptions.IgnoreNullValues" /> has been set to <see langword="true" />. These properties cannot be used together.</exception>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.DictionaryKeyPolicy">
            <summary>Gets or sets the policy used to convert a <see cref="T:System.Collections.IDictionary" /> key's name to another format, such as camel-casing.</summary>
            <returns>The policy used to convert a <see cref="T:System.Collections.IDictionary" /> key's name to another format.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.Encoder">
            <summary>Gets or sets the encoder to use when escaping strings, or <see langword="null" /> to use the default encoder.</summary>
            <returns>The JavaScript character encoding.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.IgnoreNullValues">
            <summary>Gets or sets a value that determines whether <see langword="null" /> values are ignored during serialization and deserialization. The default value is <see langword="false" />.</summary>
            <exception cref="T:System.InvalidOperationException">This property was set after serialization or deserialization has occurred.

-or-

<see cref="P:System.Text.Json.JsonSerializerOptions.DefaultIgnoreCondition" /> has been set to a non-default value. These properties cannot be used together.</exception>
            <returns>
                <see langword="true" /> to ignore null values during serialization and deserialization; otherwise, see langword="false" /&gt;.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.IgnoreReadOnlyFields">
            <summary>Determines whether read-only fields are ignored during serialization. A property is read-only if it isn't marked with the <see langword="readonly" /> keyword. The default value is <see langword="false" />.</summary>
            <exception cref="T:System.InvalidOperationException">This property is set after serialization or deserialization has occurred.</exception>
            <returns>
                <see langword="true" /> if read-only fields should be ignored during serialization; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.IgnoreReadOnlyProperties">
            <summary>Gets a value that determines whether read-only properties are ignored during serialization. The default value is <see langword="false" />.</summary>
            <exception cref="T:System.InvalidOperationException">This property was set after serialization or deserialization has occurred.</exception>
            <returns>
                <see langword="true" /> to ignore read-only properties during serialization; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.IncludeFields">
            <summary>Determines whether fields are handled serialization and deserialization.
            The default value is <see langword="false" />.</summary>
            <exception cref="T:System.InvalidOperationException">This property is set after serialization or deserialization has occurred.</exception>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.MaxDepth">
            <summary>Gets or sets the maximum depth allowed when serializing or deserializing JSON, with the default value of 0 indicating a maximum depth of 64.</summary>
            <exception cref="T:System.InvalidOperationException">This property was set after serialization or deserialization has occurred.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The max depth is set to a negative value.</exception>
            <returns>The maximum depth allowed when serializing or deserializing JSON.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.NumberHandling">
            <summary>Specifies how number types should be handled when serializing or deserializing.</summary>
            <exception cref="T:System.InvalidOperationException">This property is set after serialization or deserialization has occurred.</exception>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.PropertyNameCaseInsensitive">
            <summary>Gets or sets a value that determines whether a property's name uses a case-insensitive comparison during deserialization. The default value is <see langword="false" />.</summary>
            <returns>
                <see langword="true" /> to compare property names using case-insensitive comparison; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.PropertyNamingPolicy">
            <summary>Gets or sets a value that specifies the policy used to convert a property's name on an object to another format, such as camel-casing, or <see langword="null" /> to leave property names unchanged.</summary>
            <returns>A property naming policy, or <see langword="null" /> to leave property names unchanged.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.ReadCommentHandling">
            <summary>Gets or sets a value that defines how comments are handled during deserialization.</summary>
            <exception cref="T:System.InvalidOperationException">This property was set after serialization or deserialization has occurred.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The comment handling enum is set to a value that is not supported (or not within the <see cref="T:System.Text.Json.JsonCommentHandling" /> enum range).</exception>
            <returns>A value that indicates whether comments are allowed, disallowed, or skipped.</returns>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.ReferenceHandler">
            <summary>Configures how object references are handled when reading and writing JSON.</summary>
        </member>
        <member name="P:System.Text.Json.JsonSerializerOptions.WriteIndented">
            <summary>Gets or sets a value that defines whether JSON should use pretty printing. By default, JSON is serialized without any extra white space.</summary>
            <exception cref="T:System.InvalidOperationException">This property was set after serialization or deserialization has occurred.</exception>
            <returns>
                <see langword="true" /> if JSON should pretty print on serialization; otherwise, <see langword="false" />. The default is <see langword="false" />.</returns>
        </member>
        <member name="T:System.Text.Json.JsonTokenType">
            <summary>Defines the various JSON tokens that make up a JSON text.</summary>
        </member>
        <member name="F:System.Text.Json.JsonTokenType.Comment">
            <summary>The token type is a comment string.</summary>
        </member>
        <member name="F:System.Text.Json.JsonTokenType.EndArray">
            <summary>The token type is the end of a JSON array.</summary>
        </member>
        <member name="F:System.Text.Json.JsonTokenType.EndObject">
            <summary>The token type is the end of a JSON object.</summary>
        </member>
        <member name="F:System.Text.Json.JsonTokenType.False">
            <summary>The token type is the JSON literal false.</summary>
        </member>
        <member name="F:System.Text.Json.JsonTokenType.None">
            <summary>There is no value (as distinct from <see cref="F:System.Text.Json.JsonTokenType.Null" />).</summary>
        </member>
        <member name="F:System.Text.Json.JsonTokenType.Null">
            <summary>The token type is the JSON literal null.</summary>
        </member>
        <member name="F:System.Text.Json.JsonTokenType.Number">
            <summary>The token type is a JSON number.</summary>
        </member>
        <member name="F:System.Text.Json.JsonTokenType.PropertyName">
            <summary>The token type is a JSON property name.</summary>
        </member>
        <member name="F:System.Text.Json.JsonTokenType.StartArray">
            <summary>The token type is the start of a JSON array.</summary>
        </member>
        <member name="F:System.Text.Json.JsonTokenType.StartObject">
            <summary>The token type is the start of a JSON object.</summary>
        </member>
        <member name="F:System.Text.Json.JsonTokenType.String">
            <summary>The token type is a JSON string.</summary>
        </member>
        <member name="F:System.Text.Json.JsonTokenType.True">
            <summary>The token type is the JSON literal true.</summary>
        </member>
        <member name="T:System.Text.Json.JsonValueKind">
            <summary>Specifies the data type of a JSON value.</summary>
        </member>
        <member name="F:System.Text.Json.JsonValueKind.Array">
            <summary>A JSON array.</summary>
        </member>
        <member name="F:System.Text.Json.JsonValueKind.False">
            <summary>The JSON value false.</summary>
        </member>
        <member name="F:System.Text.Json.JsonValueKind.Null">
            <summary>The JSON value null.</summary>
        </member>
        <member name="F:System.Text.Json.JsonValueKind.Number">
            <summary>A JSON number.</summary>
        </member>
        <member name="F:System.Text.Json.JsonValueKind.Object">
            <summary>A JSON object.</summary>
        </member>
        <member name="F:System.Text.Json.JsonValueKind.String">
            <summary>A JSON string.</summary>
        </member>
        <member name="F:System.Text.Json.JsonValueKind.True">
            <summary>The JSON value true.</summary>
        </member>
        <member name="F:System.Text.Json.JsonValueKind.Undefined">
            <summary>There is no value (as distinct from <see cref="F:System.Text.Json.JsonValueKind.Null" />).</summary>
        </member>
        <member name="T:System.Text.Json.JsonWriterOptions">
            <summary>Allows the user to define custom behavior when writing JSON using the <see cref="T:System.Text.Json.Utf8JsonWriter" />.</summary>
        </member>
        <member name="P:System.Text.Json.JsonWriterOptions.Encoder">
            <summary>Gets or sets the encoder to use when escaping strings, or <see langword="null" /> to use the default encoder.</summary>
            <returns>The JavaScript character encoder used to override the escaping behavior.</returns>
        </member>
        <member name="P:System.Text.Json.JsonWriterOptions.Indented">
            <summary>Gets or sets a value that indicates whether the <see cref="T:System.Text.Json.Utf8JsonWriter" /> should format the JSON output, which includes indenting nested JSON tokens, adding new lines, and adding white space between property names and values.</summary>
            <returns>
                <see langword="true" /> to format the JSON output; <see langword="false" /> to write without any extra white space. The default is <see langword="false" />.</returns>
        </member>
        <member name="P:System.Text.Json.JsonWriterOptions.SkipValidation">
            <summary>Gets or sets a value that indicates whether the <see cref="T:System.Text.Json.Utf8JsonWriter" /> should skip structural validation and allow the user to write invalid JSON.</summary>
            <returns>
                <see langword="true" /> to skip structural validation and allow invalid JSON; <see langword="false" /> to throw an <see cref="T:System.InvalidOperationException" /> on any attempt to write invalid JSON.</returns>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonAttribute">
            <summary>Provides the base class for serialization attributes.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonAttribute.#ctor">
            <summary>Creates a new instance of the <see cref="T:System.Text.Json.Serialization.JsonAttribute" />.</summary>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonConstructorAttribute">
            <summary>When placed on a constructor, indicates that the constructor should be used to create instances of the type on deserialization.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonConstructorAttribute.#ctor">
            <summary>Initializes a new instance of <see cref="T:System.Text.Json.Serialization.JsonConstructorAttribute" />.</summary>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonConverter">
            <summary>Converts an object or value to or from JSON.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonConverter.CanConvert(System.Type)">
            <summary>When overridden in a derived class, determines whether the converter instance can convert the specified object type.</summary>
            <param name="typeToConvert">The type of the object to check whether it can be converted by this converter instance.</param>
            <returns>
                <see langword="true" /> if the instance can convert the specified object type; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonConverter`1">
            <summary>Converts an object or value to or from JSON.</summary>
            <typeparam name="T">The type of object or value handled by the converter.</typeparam>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonConverter`1.#ctor">
            <summary>Initializes a new <see cref="T:System.Text.Json.Serialization.JsonConverter`1" /> instance.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)">
            <summary>Determines whether the specified type can be converted.</summary>
            <param name="typeToConvert">The type to compare against.</param>
            <returns>
                <see langword="true" /> if the type can be converted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Reads and converts the JSON to type <typeparamref name="T" />.</summary>
            <param name="reader">The reader.</param>
            <param name="typeToConvert">The type to convert.</param>
            <param name="options">An object that specifies serialization options to use.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <summary>Writes a specified value as JSON.</summary>
            <param name="writer">The writer to write to.</param>
            <param name="value">The value to convert to JSON.</param>
            <param name="options">An object that specifies serialization options to use.</param>
        </member>
        <member name="P:System.Text.Json.Serialization.JsonConverter`1.HandleNull">
            <summary>Indicates whether <see langword="null" /> should be passed to the converter on serialization, and whether <see cref="F:System.Text.Json.JsonTokenType.Null" /> should be passed on deserialization.</summary>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonConverterAttribute">
            <summary>When placed on a property or type, specifies the converter type to use.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonConverterAttribute.#ctor">
            <summary>Initializes a new instance of <see cref="T:System.Text.Json.Serialization.JsonConverterAttribute" />.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance of <see cref="T:System.Text.Json.Serialization.JsonConverterAttribute" /> with the specified converter type.</summary>
            <param name="converterType">The type of the converter.</param>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonConverterAttribute.CreateConverter(System.Type)">
            <summary>When overridden in a derived class and <see cref="P:System.Text.Json.Serialization.JsonConverterAttribute.ConverterType" /> is <see langword="null" />, allows the derived class to create a <see cref="T:System.Text.Json.Serialization.JsonConverter" /> in order to pass additional state.</summary>
            <param name="typeToConvert">The type of the converter.</param>
            <returns>The custom converter.</returns>
        </member>
        <member name="P:System.Text.Json.Serialization.JsonConverterAttribute.ConverterType">
            <summary>Gets the type of the <see cref="T:System.Text.Json.Serialization.JsonConverterAttribute" />, or <see langword="null" /> if it was created without a type.</summary>
            <returns>The type of the <see cref="T:System.Text.Json.Serialization.JsonConverterAttribute" />, or <see langword="null" /> if it was created without a type.</returns>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonConverterFactory">
            <summary>Supports converting several types by using a factory pattern.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonConverterFactory.#ctor">
            <summary>When overidden in a derived class, initializes a new instance of the <see cref="T:System.Text.Json.Serialization.JsonConverterFactory" /> class.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonConverterFactory.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Creates a converter for a specified type.</summary>
            <param name="typeToConvert">The type handled by the converter.</param>
            <param name="options">The serialization options to use.</param>
            <returns>A converter for which <typeparamref name="T" /> is compatible with <paramref name="typeToConvert" />.</returns>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonExtensionDataAttribute">
            <summary>When placed on a property of type <see cref="T:System.Collections.Generic.IDictionary`2" />, any properties that do not have a matching member are added to that dictionary during deserialization and written during serialization.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonExtensionDataAttribute.#ctor">
            <summary>Instantiates a new instance of the <see cref="T:System.Text.Json.Serialization.JsonExtensionDataAttribute" /> class.</summary>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonIgnoreAttribute">
            <summary>Prevents a property from being serialized or deserialized.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor">
            <summary>Initializes a new instance of <see cref="T:System.Text.Json.Serialization.JsonIgnoreAttribute" />.</summary>
        </member>
        <member name="P:System.Text.Json.Serialization.JsonIgnoreAttribute.Condition">
            <summary>Specifies the condition that must be met before a property will be ignored.</summary>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonIgnoreCondition">
            <summary>Controls how the <see cref="T:System.Text.Json.Serialization.JsonIgnoreAttribute" /> ignores properties on serialization and deserialization.</summary>
        </member>
        <member name="F:System.Text.Json.Serialization.JsonIgnoreCondition.Always">
            <summary>Property will always be ignored.</summary>
        </member>
        <member name="F:System.Text.Json.Serialization.JsonIgnoreCondition.Never">
            <summary>Property will always be serialized and deserialized, regardless of <see cref="P:System.Text.Json.JsonSerializerOptions.IgnoreNullValues" /> configuration.</summary>
        </member>
        <member name="F:System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault">
            <summary>Property will only be ignored if it is <see langword="null" />.</summary>
        </member>
        <member name="F:System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull">
            <summary>If the value is <see langword="null" />, the property is ignored during serialization. This is applied only to reference-type properties and fields.</summary>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonIncludeAttribute">
            <summary>Indicates that the member should be included for serialization and deserialization.</summary>
            <exception cref="T:System.InvalidOperationException">The attribute is applied to a non-public property.</exception>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonIncludeAttribute.#ctor">
            <summary>Initializes a new instance of <see cref="T:System.Text.Json.Serialization.JsonIncludeAttribute" />.</summary>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonNumberHandling">
            <summary>Determines how <see cref="T:System.Text.Json.JsonSerializer" /> handles numbers when serializing and deserializing.</summary>
        </member>
        <member name="F:System.Text.Json.Serialization.JsonNumberHandling.AllowNamedFloatingPointLiterals">
            <summary>The "NaN", "Infinity", and "-Infinity" <see cref="F:System.Text.Json.JsonTokenType.String" /> tokens can be read as floating-point constants, and the <see cref="T:System.Single" /> and <see cref="T:System.Double" /> values for these constants will be written as their corresponding JSON string representations.</summary>
        </member>
        <member name="F:System.Text.Json.Serialization.JsonNumberHandling.AllowReadingFromString">
            <summary>Numbers can be read from <see cref="F:System.Text.Json.JsonTokenType.String" /> tokens. Does not prevent numbers from being read from <see cref="F:System.Text.Json.JsonTokenType.Number" /> token.</summary>
        </member>
        <member name="F:System.Text.Json.Serialization.JsonNumberHandling.Strict">
            <summary>Numbers will only be read from <see cref="F:System.Text.Json.JsonTokenType.Number" /> tokens and will only be written as JSON numbers (without quotes).</summary>
        </member>
        <member name="F:System.Text.Json.Serialization.JsonNumberHandling.WriteAsString">
            <summary>Numbers will be written as JSON strings (with quotes), not as JSON numbers.</summary>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonNumberHandlingAttribute">
            <summary>When placed on a type, property, or field, indicates what <see cref="T:System.Text.Json.Serialization.JsonNumberHandling" /> settings should be used when serializing or deserializing numbers.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonNumberHandlingAttribute.#ctor(System.Text.Json.Serialization.JsonNumberHandling)">
            <summary>Initializes a new instance of <see cref="T:System.Text.Json.Serialization.JsonNumberHandlingAttribute" />.</summary>
            <param name="handling">A bitwise combination of the enumeration values that specify how number types should be handled when serializing or deserializing.</param>
        </member>
        <member name="P:System.Text.Json.Serialization.JsonNumberHandlingAttribute.Handling">
            <summary>Indicates what settings should be used when serializing or deserializing numbers.</summary>
            <returns>An object that determines the number serialization and deserialization settings.</returns>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonPropertyNameAttribute">
            <summary>Specifies the property name that is present in the JSON when serializing and deserializing. This overrides any naming policy specified by <see cref="T:System.Text.Json.JsonNamingPolicy" />.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of <see cref="T:System.Text.Json.Serialization.JsonPropertyNameAttribute" /> with the specified property name.</summary>
            <param name="name">The name of the property.</param>
        </member>
        <member name="P:System.Text.Json.Serialization.JsonPropertyNameAttribute.Name">
            <summary>Gets the name of the property.</summary>
            <returns>The name of the property.</returns>
        </member>
        <member name="T:System.Text.Json.Serialization.JsonStringEnumConverter">
            <summary>Converts enumeration values to and from strings.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonStringEnumConverter.#ctor">
            <summary>Initializes an instance of the <see cref="T:System.Text.Json.Serialization.JsonStringEnumConverter" /> class with the default naming policy that allows integer values.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonStringEnumConverter.#ctor(System.Text.Json.JsonNamingPolicy,System.Boolean)">
            <summary>Initializes an instance of the <see cref="T:System.Text.Json.Serialization.JsonStringEnumConverter" /> class with a specified naming policy and a value that indicates whether undefined enumeration values are allowed.</summary>
            <param name="namingPolicy">The optional naming policy for writing enum values.</param>
            <param name="allowIntegerValues">
                <see langword="true" /> to allow undefined enum values; otherwise, <see langword="false" />. When <see langword="true" />, if an enum value isn't defined, it will output as a number rather than a string.</param>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonStringEnumConverter.CanConvert(System.Type)">
            <summary>Determines whether the specified type can be converted to an enum.</summary>
            <param name="typeToConvert">The type to be checked.</param>
            <returns>
                <see langword="true" /> if the type can be converted; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Serialization.JsonStringEnumConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>Creates a converter for the specified type.</summary>
            <param name="typeToConvert">The type handled by the converter.</param>
            <param name="options">The serialization options to use.</param>
            <returns>A converter for which <typeparamref name="T" /> is compatible with <paramref name="typeToConvert" />.</returns>
        </member>
        <member name="T:System.Text.Json.Serialization.ReferenceHandler">
            <summary>This class defines how the <see cref="T:System.Text.Json.JsonSerializer" /> deals with references on serialization and deserialization.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.ReferenceHandler.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.Serialization.ReferenceHandler" /> class.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.ReferenceHandler.CreateResolver">
            <summary>Returns the <see cref="T:System.Text.Json.Serialization.ReferenceResolver" /> used for each serialization call.</summary>
            <returns>The resolver to use for serialization and deserialization.</returns>
        </member>
        <member name="P:System.Text.Json.Serialization.ReferenceHandler.Preserve">
            <summary>Metadata properties will be honored when deserializing JSON objects and arrays into reference types and written when serializing reference types. This is necessary to create round-trippable JSON from objects that contain cycles or duplicate references.</summary>
        </member>
        <member name="T:System.Text.Json.Serialization.ReferenceHandler`1">
            <summary>This class defines how the <see cref="T:System.Text.Json.JsonSerializer" /> deals with references on serialization and deserialization.</summary>
            <typeparam name="T">The type of the <see cref="T:System.Text.Json.Serialization.ReferenceResolver" /> to create on each serialization or deserialization call.</typeparam>
        </member>
        <member name="M:System.Text.Json.Serialization.ReferenceHandler`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.Serialization.ReferenceHandler`1" /> generic class that can create a <see cref="T:System.Text.Json.Serialization.ReferenceResolver" /> instance of the specified <typeparam name="T" />.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.ReferenceHandler`1.CreateResolver">
            <summary>Creates a new <see cref="T:System.Text.Json.Serialization.ReferenceResolver" /> of type <typeparamref name="T" /> used for each serialization call.</summary>
            <returns>The new resolver to use for serialization and deserialization.</returns>
        </member>
        <member name="T:System.Text.Json.Serialization.ReferenceResolver">
            <summary>This class defines how the <see cref="T:System.Text.Json.JsonSerializer" /> deals with references on serialization and deserialization.
 Defines the core behavior of preserving references on serialization and deserialization.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.ReferenceResolver.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.Serialization.ReferenceResolver" /> class.</summary>
        </member>
        <member name="M:System.Text.Json.Serialization.ReferenceResolver.AddReference(System.String,System.Object)">
            <summary>Adds an entry to the bag of references using the specified id and value.
 This method gets called when an $id metadata property from a JSON object is read.</summary>
            <param name="referenceId">The identifier of the JSON object or array.</param>
            <param name="value">The value of the CLR reference type object that results from parsing the JSON object.</param>
        </member>
        <member name="M:System.Text.Json.Serialization.ReferenceResolver.GetReference(System.Object,System.Boolean@)">
            <summary>Gets the reference identifier of the specified value if exists; otherwise a new id is assigned.
 This method gets called before a CLR object is written so we can decide whether to write $id and enumerate the rest of its properties or $ref and step into the next object.</summary>
            <param name="value">The value of the CLR reference type object to get an id for.</param>
            <param name="alreadyExists">When this method returns, <see langword="true" /> if a reference to value already exists; otherwise, <see langword="false" />.</param>
            <returns>The reference id for the specified object.</returns>
        </member>
        <member name="M:System.Text.Json.Serialization.ReferenceResolver.ResolveReference(System.String)">
            <summary>Returns the CLR reference type object related to the specified reference id.
 This method gets called when $ref metadata property is read.</summary>
            <param name="referenceId">The reference id related to the returned object.</param>
            <returns>The reference type object related to the specified reference id.</returns>
        </member>
        <member name="T:System.Text.Json.Utf8JsonReader">
            <summary>Provides a high-performance API for forward-only, read-only access to UTF-8 encoded JSON text.</summary>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.#ctor(System.Buffers.ReadOnlySequence{System.Byte},System.Boolean,System.Text.Json.JsonReaderState)">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.Utf8JsonReader" /> structure that processes a read-only sequence of UTF-8 encoded text and indicates whether the input contains all the text to process.</summary>
            <param name="jsonData">The UTF-8 encoded JSON text to process.</param>
            <param name="isFinalBlock">
                <see langword="true" /> to indicate that the input sequence contains the entire data to process; <see langword="false" /> to indicate that the input span contains partial data with more data to follow.</param>
            <param name="state">An object that contains the reader state. If this is the first call to the constructor, pass the default state; otherwise, pass the value of the <see cref="P:System.Text.Json.Utf8JsonReader.CurrentState" /> property from the previous instance of the <see cref="T:System.Text.Json.Utf8JsonReader" />.</param>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.#ctor(System.Buffers.ReadOnlySequence{System.Byte},System.Text.Json.JsonReaderOptions)">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.Utf8JsonReader" /> structure that processes a read-only sequence of UTF-8 encoded text using the specified options.</summary>
            <param name="jsonData">The UTF-8 encoded JSON text to process.</param>
            <param name="options">Defines customized behavior of the <see cref="T:System.Text.Json.Utf8JsonReader" /> that differs from the JSON RFC (for example how to handle comments or maximum depth allowed when reading). By default, the <see cref="T:System.Text.Json.Utf8JsonReader" /> follows the JSON RFC strictly; comments within the JSON are invalid, and the maximum depth is 64.</param>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Text.Json.JsonReaderState)">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.Utf8JsonReader" /> structure that processes a read-only span of UTF-8 encoded text and indicates whether the input contains all the text to process.</summary>
            <param name="jsonData">The UTF-8 encoded JSON text to process.</param>
            <param name="isFinalBlock">
                <see langword="true" /> to indicate that the input sequence contains the entire data to process; <see langword="false" /> to indicate that the input span contains partial data with more data to follow.</param>
            <param name="state">An object that contains the reader state. If this is the first call to the constructor, pass the default state; otherwise, pass the value of the <see cref="P:System.Text.Json.Utf8JsonReader.CurrentState" /> property from the previous instance of the <see cref="T:System.Text.Json.Utf8JsonReader" />.</param>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.#ctor(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonReaderOptions)">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.Utf8JsonReader" /> structure that processes a read-only span of UTF-8 encoded text using the specified options.</summary>
            <param name="jsonData">The UTF-8 encoded JSON text to process.</param>
            <param name="options">Defines customized behavior of the <see cref="T:System.Text.Json.Utf8JsonReader" /> that differs from the JSON RFC (for example how to handle comments or maximum depth allowed when reading). By default, the <see cref="T:System.Text.Json.Utf8JsonReader" /> follows the JSON RFC strictly; comments within the JSON are invalid, and the maximum depth is 64.</param>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetBoolean">
            <summary>Reads the next JSON token value from the source as a <see cref="T:System.Boolean" />.</summary>
            <exception cref="T:System.InvalidOperationException">The value of the JSON token isn't a boolean value (that is, <see cref="F:System.Text.Json.JsonTokenType.True" /> or <see cref="F:System.Text.Json.JsonTokenType.False" />).</exception>
            <returns>
                <see langword="true" /> if the <see cref="P:System.Text.Json.Utf8JsonReader.TokenType" /> is <see cref="F:System.Text.Json.JsonTokenType.True" />; <see langword="false" /> if the <see cref="P:System.Text.Json.Utf8JsonReader.TokenType" /> is <see cref="F:System.Text.Json.JsonTokenType.False" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetByte">
            <summary>Parses the current JSON token value from the source as a <see cref="T:System.Byte" />.</summary>
            <exception cref="T:System.InvalidOperationException">The value of the JSON token is not a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <exception cref="T:System.FormatException">The numeric format of the JSON token value is incorrect (for example, it contains a fractional value or is written in scientific notation).
          
-or-

The JSON token value represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</exception>
            <returns>The value of the UTF-8 encoded token.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetBytesFromBase64">
            <summary>Parses the current JSON token value from the source and decodes the Base64 encoded JSON string as a byte array.</summary>
            <exception cref="T:System.InvalidOperationException">The type of the JSON token is not a <see cref="F:System.Text.Json.JsonTokenType.String" />.</exception>
            <exception cref="T:System.FormatException">The value is not encoded as Base64 text, so it can't be decoded to bytes.

-or-

The value contains invalid or more than two padding characters.

-or-

The value is incomplete. That is, the JSON string length is not a multiple of 4.</exception>
            <returns>The byte array that represents the current JSON token value.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetComment">
            <summary>Parses the current JSON token value from the source as a comment, transcoded it as a <see cref="T:System.String" />.</summary>
            <exception cref="T:System.InvalidOperationException">The JSON token is not a comment.</exception>
            <returns>The comment that represents the current JSON token value.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetDateTime">
            <summary>Reads the next JSON token value from the source and parses it to a <see cref="T:System.DateTime" />.</summary>
            <exception cref="T:System.InvalidOperationException">The value of the JSON token isn't a <see cref="F:System.Text.Json.JsonTokenType.String" />.</exception>
            <exception cref="T:System.FormatException">The JSON token value cannot be read as a <see cref="T:System.DateTime" />.
        
-or-
        
The entire UTF-8 encoded token value cannot be parsed to a <see cref="T:System.DateTime" /> value.

-or-

The JSON token value is of an unsupported format.</exception>
            <returns>The date and time value, if the entire UTF-8 encoded token value can be successfully parsed.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetDateTimeOffset">
            <summary>Reads the next JSON token value from the source and parses it to a <see cref="T:System.DateTimeOffset" />.</summary>
            <exception cref="T:System.InvalidOperationException">The value of the JSON token isn't a <see cref="F:System.Text.Json.JsonTokenType.String" />.</exception>
            <exception cref="T:System.FormatException">The JSON token value cannot be read as a <see cref="T:System.DateTimeOffset" />.

-or-
        
The entire UTF-8 encoded token value cannot be parsed to a <see cref="T:System.DateTimeOffset" /> value.

-or-

The JSON token value is of an unsupported format.</exception>
            <returns>The date and time offset, if the entire UTF-8 encoded token value can be successfully parsed.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetDecimal">
            <summary>Reads the next JSON token value from the source and parses it to a <see cref="T:System.Decimal" />.</summary>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <exception cref="T:System.FormatException">The JSON token value represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</exception>
            <returns>The UTF-8 encoded token value parsed to a <see cref="T:System.Decimal" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetDouble">
            <summary>Reads the next JSON token value from the source and parses it to a <see cref="T:System.Double" />.</summary>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <exception cref="T:System.FormatException">The JSON token value represents a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</exception>
            <returns>The UTF-8 encoded token value parsed to a <see cref="T:System.Double" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetGuid">
            <summary>Reads the next JSON token value from the source and parses it to a <see cref="T:System.Guid" />.</summary>
            <exception cref="T:System.InvalidOperationException">The value of the JSON token isn't a <see cref="F:System.Text.Json.JsonTokenType.String" />.</exception>
            <exception cref="T:System.FormatException">The JSON token value is in an unsupported format for a Guid.
        
-or-

The entire UTF-8 encoded token value cannot be parsed to a <see cref="T:System.Guid" /> value.</exception>
            <returns>The GUID value, if the entire UTF-8 encoded token value can be successfully parsed.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetInt16">
            <summary>Parses the current JSON token value from the source as a <see cref="T:System.Int16" />.</summary>
            <exception cref="T:System.InvalidOperationException">The value of the JSON token is not a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <exception cref="T:System.FormatException">The numeric format of the JSON token value is incorrect (for example, it contains a fractional value or is written in scientific notation).
          
-or-

The JSON token value represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</exception>
            <returns>The UTF-8 encoded token value parsed to an <see cref="T:System.Int16" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetInt32">
            <summary>Reads the next JSON token value from the source and parses it to an <see cref="T:System.Int32" />.</summary>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <exception cref="T:System.FormatException">The JSON token value is of the incorrect numeric format. For example, it contains a decimal or is written in scientific notation.
            
-or-

The JSON token value represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
            <returns>The UTF-8 encoded token value parsed to an <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetInt64">
            <summary>Reads the next JSON token value from the source and parses it to an <see cref="T:System.Int64" />.</summary>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <exception cref="T:System.FormatException">The JSON token value is of the incorrect numeric format. For example, it contains a decimal or is written in scientific notation.
            
-or-

The JSON token value represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</exception>
            <returns>The UTF-8 encoded token value parsed to an <see cref="T:System.Int64" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetSByte">
            <summary>Parses the current JSON token value from the source as an <see cref="T:System.SByte" />.</summary>
            <exception cref="T:System.InvalidOperationException">The value of the JSON token is not a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <exception cref="T:System.FormatException">The numeric format of the JSON token value is incorrect (for example, it contains a fractional value or is written in scientific notation).
          
-or-

The JSON token value represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</exception>
            <returns>The UTF-8 encoded token value parsed to an <see cref="T:System.SByte" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetSingle">
            <summary>Reads the next JSON token value from the source and parses it to a <see cref="T:System.Single" />.</summary>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <exception cref="T:System.FormatException">The JSON token value represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</exception>
            <returns>The UTF-8 encoded token value parsed to a <see cref="T:System.Single" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetString">
            <summary>Reads the next JSON token value from the source, unescaped, and transcoded as a string.</summary>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a string (that is, not a <see cref="F:System.Text.Json.JsonTokenType.String" />, <see cref="F:System.Text.Json.JsonTokenType.PropertyName" />, or <see cref="F:System.Text.Json.JsonTokenType.Null" />).

-or-

The JSON string contains invalid UTF-8 bytes or invalid UTF-16 surrogates.</exception>
            <returns>The token value parsed to a string, or <see langword="null" /> if <see cref="P:System.Text.Json.Utf8JsonReader.TokenType" /> is <see cref="F:System.Text.Json.JsonTokenType.Null" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetUInt16">
            <summary>Parses the current JSON token value from the source as a <see cref="T:System.UInt16" />.</summary>
            <exception cref="T:System.InvalidOperationException">The value of the JSON token is not a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <exception cref="T:System.FormatException">The numeric format of the JSON token value is incorrect (for example, it contains a fractional value or is written in scientific notation).
          
-or-

The JSON token value represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</exception>
            <returns>The UTF-8 encoded token value parsed to a <see cref="T:System.UInt16" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetUInt32">
            <summary>Reads the next JSON token value from the source and parses it to a <see cref="T:System.UInt32" />.</summary>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <exception cref="T:System.FormatException">The JSON token value is of the incorrect numeric format. For example, it contains a decimal or is written in scientific notation.

-or-

The JSON token value represents a number less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</exception>
            <returns>The UTF-8 encoded token value parsed to a <see cref="T:System.UInt32" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.GetUInt64">
            <summary>Reads the next JSON token value from the source and parses it to a <see cref="T:System.UInt64" />.</summary>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <exception cref="T:System.FormatException">The JSON token value is of the incorrect numeric format. For example, it contains a decimal or is written in scientific notation.
            
-or-

The JSON token value represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</exception>
            <returns>The UTF-8 encoded token value parsed to a <see cref="T:System.UInt64" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.Read">
            <summary>Reads the next JSON token from the input source.</summary>
            <exception cref="T:System.Text.Json.JsonException">An invalid JSON token according to the JSON RFC is encountered.
        
-or-

The current depth exceeds the recursive limit set by the maximum depth.</exception>
            <returns>
                <see langword="true" /> if the token was read successfully; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.Skip">
            <summary>Skips the children of the current JSON token.</summary>
            <exception cref="T:System.InvalidOperationException">The reader was given partial data with more data to follow (that is, <see cref="P:System.Text.Json.Utf8JsonReader.IsFinalBlock" /> is <see langword="false" />).</exception>
            <exception cref="T:System.Text.Json.JsonException">An invalid JSON token was encountered while skipping, according to the JSON RFC.

-or-

The current depth exceeds the recursive limit set by the maximum depth.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetByte(System.Byte@)">
            <summary>Tries to parse the current JSON token value from the source as a <see cref="T:System.Byte" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to a <see cref="T:System.Byte" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetBytesFromBase64(System.Byte[]@)">
            <summary>Tries to parse the current JSON token value from the source and decodes the Base64 encoded JSON string as a byte array and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the decoded binary representation of the Base64 text.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token is not a <see cref="F:System.Text.Json.JsonTokenType.String" />.</exception>
            <returns>
                <see langword="true" /> if the entire token value is encoded as valid Base64 text and can be successfully decoded to bytes; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetDateTime(System.DateTime@)">
            <summary>Tries to parse the current JSON token value from the source as a <see cref="T:System.DateTime" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The value of the JSON token isn't a <see cref="F:System.Text.Json.JsonTokenType.String" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to a <see cref="T:System.DateTime" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetDateTimeOffset(System.DateTimeOffset@)">
            <summary>Tries to parse the current JSON token value from the source as a <see cref="T:System.DateTimeOffset" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The value of the JSON token isn't a <see cref="F:System.Text.Json.JsonTokenType.String" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to a <see cref="T:System.DateTimeOffset" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetDecimal(System.Decimal@)">
            <summary>Tries to parse the current JSON token value from the source as a <see cref="T:System.Decimal" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to a <see cref="T:System.Decimal" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetDouble(System.Double@)">
            <summary>Tries to parse the current JSON token value from the source as a <see cref="T:System.Double" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to a <see cref="T:System.Double" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetGuid(System.Guid@)">
            <summary>Tries to parse the current JSON token value from the source as a <see cref="T:System.Guid" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The value of the JSON token isn't a <see cref="F:System.Text.Json.JsonTokenType.String" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to a <see cref="T:System.Guid" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetInt16(System.Int16@)">
            <summary>Tries to parse the current JSON token value from the source as an <see cref="T:System.Int16" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to a <see cref="T:System.Int16" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetInt32(System.Int32@)">
            <summary>Tries to parse the current JSON token value from the source as an <see cref="T:System.Int32" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to an <see cref="T:System.Int32" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetInt64(System.Int64@)">
            <summary>Tries to parse the current JSON token value from the source as an <see cref="T:System.Int64" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to an <see cref="T:System.Int64" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetSByte(System.SByte@)">
            <summary>Tries to parse the current JSON token value from the source as an <see cref="T:System.SByte" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to an <see cref="T:System.SByte" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetSingle(System.Single@)">
            <summary>Tries to parse the current JSON token value from the source as a <see cref="T:System.Single" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to an <see cref="T:System.Single" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetUInt16(System.UInt16@)">
            <summary>Tries to parse the current JSON token value from the source as a <see cref="T:System.UInt16" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to a <see cref="T:System.UInt16" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetUInt32(System.UInt32@)">
            <summary>Tries to parse the current JSON token value from the source as a <see cref="T:System.UInt32" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to a <see cref="T:System.UInt32" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TryGetUInt64(System.UInt64@)">
            <summary>Tries to parse the current JSON token value from the source as a <see cref="T:System.UInt64" /> and returns a value that indicates whether the operation succeeded.</summary>
            <param name="value">When this method returns, contains the parsed value.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token value isn't a <see cref="F:System.Text.Json.JsonTokenType.Number" />.</exception>
            <returns>
                <see langword="true" /> if the entire UTF-8 encoded token value can be successfully parsed to a <see cref="T:System.UInt64" /> value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.TrySkip">
            <summary>Tries to skip the children of the current JSON token.</summary>
            <exception cref="T:System.Text.Json.JsonException">An invalid JSON token was encountered while skipping, according to the JSON RFC.
          
-or -

The current depth exceeds the recursive limit set by the maximum depth.</exception>
            <returns>
                <see langword="true" /> if there was enough data for the children to be skipped successfully; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.ValueTextEquals(System.ReadOnlySpan{System.Byte})">
            <summary>Compares the UTF-8 encoded text in a read-only byte span to the unescaped JSON token value in the source and returns a value that indicates whether they match.</summary>
            <param name="utf8Text">The UTF-8 encoded text to compare against.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token is not a JSON string (that is, it is not <see cref="F:System.Text.Json.JsonTokenType.String" /> or <see cref="F:System.Text.Json.JsonTokenType.PropertyName" />).</exception>
            <returns>
                <see langword="true" /> if the JSON token value in the source matches the UTF-8 encoded lookup text; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.ValueTextEquals(System.ReadOnlySpan{System.Char})">
            <summary>Compares the text in a read-only character span to the unescaped JSON token value in the source and returns a value that indicates whether they match.</summary>
            <param name="text">The text to compare against.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token is not a JSON string (that is, it is not <see cref="F:System.Text.Json.JsonTokenType.String" /> or <see cref="F:System.Text.Json.JsonTokenType.PropertyName" />).</exception>
            <returns>
                <see langword="true" /> if the JSON token value in the source matches the lookup text; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonReader.ValueTextEquals(System.String)">
            <summary>Compares the string text to the unescaped JSON token value in the source and returns a value that indicates whether they match.</summary>
            <param name="text">The text to compare against.</param>
            <exception cref="T:System.InvalidOperationException">The JSON token is not a JSON string (that is, it is not <see cref="F:System.Text.Json.JsonTokenType.String" /> or <see cref="F:System.Text.Json.JsonTokenType.PropertyName" />).</exception>
            <returns>
                <see langword="true" /> if the JSON token value in the source matches the lookup text; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonReader.BytesConsumed">
            <summary>Gets the total number of bytes consumed so far by this instance of the <see cref="T:System.Text.Json.Utf8JsonReader" />.</summary>
            <returns>The total number of bytes consumed so far.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonReader.CurrentDepth">
            <summary>Gets the depth of the current token.</summary>
            <returns>The depth of the current token.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonReader.CurrentState">
            <summary>Gets the current <see cref="T:System.Text.Json.Utf8JsonReader" /> state to pass to a <see cref="T:System.Text.Json.Utf8JsonReader" /> constructor with more data.</summary>
            <returns>The current reader state.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonReader.HasValueSequence">
            <summary>Gets a value that indicates which <c>Value</c> property to use to get the token value.</summary>
            <returns>
                <see langword="true" /> if <see cref="P:System.Text.Json.Utf8JsonReader.ValueSequence" /> should be used to get the token value; <see langword="false" /> if <see cref="P:System.Text.Json.Utf8JsonReader.ValueSpan" /> should be used instead.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonReader.IsFinalBlock">
            <summary>Gets the mode of this instance of the <see cref="T:System.Text.Json.Utf8JsonReader" /> which indicates whether all the JSON data was provided or there is more data to come.</summary>
            <returns>
                <see langword="true" /> if the reader was constructed with the input span or sequence containing the entire JSON data to process; <see langword="false" /> if the reader was constructed with an input span or sequence that may contain partial JSON data with more data to follow.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonReader.Position">
            <summary>Gets the current <see cref="T:System.SequencePosition" /> within the provided UTF-8 encoded input ReadOnlySequence&lt;byte&gt; or a default <see cref="T:System.SequencePosition" /> if the <see cref="T:System.Text.Json.Utf8JsonReader" /> struct was constructed with a ReadOnlySpan&lt;byte&gt;.</summary>
            <returns>The current <see cref="T:System.SequencePosition" /> within the provided UTF-8 encoded input ReadOnlySequence&lt;byte&gt; or a default <see cref="T:System.SequencePosition" /> if the <see cref="T:System.Text.Json.Utf8JsonReader" /> struct was constructed with a ReadOnlySpan&lt;byte&gt;.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonReader.TokenStartIndex">
            <summary>Gets the index that the last processed JSON token starts at (within the given UTF-8 encoded input text), skipping any white space.</summary>
            <returns>The starting index of the last processed JSON token within the given UTF-8 encoded input text.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonReader.TokenType">
            <summary>Gets the type of the last processed JSON token in the UTF-8 encoded JSON text.</summary>
            <returns>The type of the last processed JSON token.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonReader.ValueSequence">
            <summary>Gets the raw value of the last processed token as a ReadOnlySequence&lt;byte&gt; slice of the input payload, only if the token is contained within multiple segments.</summary>
            <returns>A byte read-only sequence.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonReader.ValueSpan">
            <summary>Gets the raw value of the last processed token as a ReadOnlySpan&lt;byte&gt; slice of the input payload, if the token fits in a single segment or if the reader was constructed with a JSON payload contained in a ReadOnlySpan&lt;byte&gt;.</summary>
            <returns>A read-only span of bytes.</returns>
        </member>
        <member name="T:System.Text.Json.Utf8JsonWriter">
            <summary>Provides a high-performance API for forward-only, non-cached writing of UTF-8 encoded JSON text.</summary>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.#ctor(System.Buffers.IBufferWriter{System.Byte},System.Text.Json.JsonWriterOptions)">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.Utf8JsonWriter" /> class using the specified <see cref="T:System.Buffers.IBufferWriter`1" /> to write the output to and customization options.</summary>
            <param name="bufferWriter">The destination for writing JSON text.</param>
            <param name="options">Defines the customized behavior of the <see cref="T:System.Text.Json.Utf8JsonWriter" />. By default, it writes minimized JSON (with no extra white space) and validates that the JSON being written is structurally valid according to the JSON RFC.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="bufferWriter" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.#ctor(System.IO.Stream,System.Text.Json.JsonWriterOptions)">
            <summary>Initializes a new instance of the <see cref="T:System.Text.Json.Utf8JsonWriter" /> class using the specified stream to write the output to and customization options.</summary>
            <param name="utf8Json">The destination for writing JSON text.</param>
            <param name="options">Defines the customized behavior of the <see cref="T:System.Text.Json.Utf8JsonWriter" />. By default, it writes minimized JSON (with no extra white space) and validates that the JSON being written is structurally valid according to the JSON RFC.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="utf8Json" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.Dispose">
            <summary>Commits any leftover JSON text that has not yet been flushed and releases all resources used by the current instance.</summary>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.DisposeAsync">
            <summary>Asynchronously commits any leftover JSON text that has not yet been flushed and releases all resources used by the current instance.</summary>
            <returns>A task representing the asynchronous dispose operation.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.Flush">
            <summary>Commits the JSON text written so far, which makes it visible to the output destination.</summary>
            <exception cref="T:System.ObjectDisposedException">This instance has been disposed.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.FlushAsync(System.Threading.CancellationToken)">
            <summary>Asynchronously commits the JSON text written so far, which makes it visible to the output destination.</summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
            <exception cref="T:System.ObjectDisposedException">This instance has been disposed.</exception>
            <returns>A task representing the asynchronous flush operation.</returns>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.Reset">
            <summary>Resets the internal state of this instance so that it can be reused.</summary>
            <exception cref="T:System.ObjectDisposedException">This instance has been disposed.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.Reset(System.Buffers.IBufferWriter{System.Byte})">
            <summary>Resets the internal state of this instance so that it can be reused with a new instance of <see cref="T:System.Buffers.IBufferWriter`1" />.</summary>
            <param name="bufferWriter">The destination for writing JSON text.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="bufferWriter" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ObjectDisposedException">This instance has been disposed.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.Reset(System.IO.Stream)">
            <summary>Resets the internal state of this instance so that it can be reused with a new instance of <see cref="T:System.IO.Stream" />.</summary>
            <param name="utf8Json">The destination for writing JSON text.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="utf8Json" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ObjectDisposedException">This instance has been disposed.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
            <summary>Writes the property name and raw bytes value (as a Base64 encoded JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded name of the property to write.</param>
            <param name="bytes">The binary data to write as Base64 encoded text.</param>
            <exception cref="T:System.ArgumentException">The specified property name or value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
            <summary>Writes the property name and raw bytes value (as a Base64 encoded JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="bytes">The binary data to write as Base64 encoded text.</param>
            <exception cref="T:System.ArgumentException">The specified property name or value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.String,System.ReadOnlySpan{System.Byte})">
            <summary>Writes the property name and raw bytes value (as a Base64 encoded JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="bytes">The binary data to write as Base64 encoded text.</param>
            <exception cref="T:System.ArgumentException">The specified property name or value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.Text.Json.JsonEncodedText,System.ReadOnlySpan{System.Byte})">
            <summary>Writes the pre-encoded property name and raw bytes value (as a Base64 encoded JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON-encoded name of the property to write.</param>
            <param name="bytes">The binary data to write as Base64 encoded text.</param>
            <exception cref="T:System.ArgumentException">The specified value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteBase64StringValue(System.ReadOnlySpan{System.Byte})">
            <summary>Writes the raw bytes value as a Base64 encoded JSON string as an element of a JSON array.</summary>
            <param name="bytes">The binary data to be written as a Base64 encoded JSON string element of a JSON array.</param>
            <exception cref="T:System.ArgumentException">The specified value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.ReadOnlySpan{System.Byte},System.Boolean)">
            <summary>Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Boolean" /> value (as a JSON literal true or false) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The value to be written as a JSON literal true or false as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.ReadOnlySpan{System.Char},System.Boolean)">
            <summary>Writes a property name specified as a read-only character span and a <see cref="T:System.Boolean" /> value (as a JSON literal true or false) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON literal true or false as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.String,System.Boolean)">
            <summary>Writes a property name specified as a string and a <see cref="T:System.Boolean" /> value (as a JSON literal true or false) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON literal true or false as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.Text.Json.JsonEncodedText,System.Boolean)">
            <summary>Writes the pre-encoded property name and <see cref="T:System.Boolean" /> value (as a JSON literal true or false) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON literal true or false as part of the name/value pair.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteBooleanValue(System.Boolean)">
            <summary>Writes a <see cref="T:System.Boolean" /> value (as a JSON literal true or false) as an element of a JSON array.</summary>
            <param name="value">The value to be written as a JSON literal true or false as an element of a JSON array.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.ReadOnlySpan{System.Byte})">
            <summary>Writes a UTF-8 text value as a JSON comment.</summary>
            <param name="utf8Value">The UTF-8 encoded value to be written as a JSON comment within <c>/*..*/</c>.</param>
            <exception cref="T:System.ArgumentException">The specified value is too large.
        
-or-

<paramref name="utf8Value" /> contains a comment delimiter (that is, <c>*/</c>).</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.ReadOnlySpan{System.Char})">
            <summary>Writes a UTF-16 text value as a JSON comment.</summary>
            <param name="value">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON comment within <c>/*..*/</c>.</param>
            <exception cref="T:System.ArgumentException">The specified value is too large.
        
-or-

<paramref name="value" /> contains a comment delimiter (that is, <c>*/</c>).</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.String)">
            <summary>Writes a string text value as a JSON comment.</summary>
            <param name="value">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON comment within <c>/*..*/</c>.</param>
            <exception cref="T:System.ArgumentException">The specified value is too large.
        
-or-

<paramref name="value" /> contains a comment delimiter (that is, <c>*/</c>).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteEndArray">
            <summary>Writes the end of a JSON array.</summary>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteEndObject">
            <summary>Writes the end of a JSON object.</summary>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.ReadOnlySpan{System.Byte})">
            <summary>Writes a property name specified as a read-only span of bytes and the JSON literal null as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.ReadOnlySpan{System.Char})">
            <summary>Writes a property name specified as a read-only character span and the JSON literal null as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.String)">
            <summary>Writes a property name specified as a string and the JSON literal null as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.Text.Json.JsonEncodedText)">
            <summary>Writes the pre-encoded property name and the JSON literal null as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNullValue">
            <summary>Writes the JSON literal null as an element of a JSON array.</summary>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Decimal)">
            <summary>Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Double)">
            <summary>Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Int32)">
            <summary>Writes a property name specified as a read-only span of bytes and an <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Int64)">
            <summary>Writes a property name specified as a read-only span of bytes and an <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Single)">
            <summary>Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.UInt32)">
            <summary>Writes a property name specified as a read-only span of bytes and a <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.UInt64)">
            <summary>Writes a property name specified as a read-only span of bytes and a <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Decimal)">
            <summary>Writes a property name specified as a read-only character span and a <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Double)">
            <summary>Writes a property name specified as a read-only character span and a <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Int32)">
            <summary>Writes a property name specified as a read-only character span and an <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Int64)">
            <summary>Writes a property name specified as a read-only character span and an <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Single)">
            <summary>Writes a property name specified as a read-only character span and a <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.UInt32)">
            <summary>Writes a property name specified as a read-only character span and a <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.UInt64)">
            <summary>Writes a property name specified as a read-only character span and a <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Decimal)">
            <summary>Writes a property name specified as a string and a <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Double)">
            <summary>Writes a property name specified as a string and a <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Int32)">
            <summary>Writes a property name specified as a string and an <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Int64)">
            <summary>Writes a property name specified as a string and an <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Single)">
            <summary>Writes a property name specified as a string and a <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.UInt32)">
            <summary>Writes a property name specified as a string and a <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.UInt64)">
            <summary>Writes a property name specified as a string and a <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Decimal)">
            <summary>Writes the pre-encoded property name and <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Double)">
            <summary>Writes the pre-encoded property name and <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Int32)">
            <summary>Writes the pre-encoded property name and <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Int64)">
            <summary>Writes the pre-encoded property name and <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Single)">
            <summary>Writes the pre-encoded property name and <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.UInt32)">
            <summary>Writes the pre-encoded property name and <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.UInt64)">
            <summary>Writes the pre-encoded property name and <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON number as part of the name/value pair.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Decimal)">
            <summary>Writes a <see cref="T:System.Decimal" /> value (as a JSON number) as an element of a JSON array.</summary>
            <param name="value">The value to be written as a JSON number as an element of a JSON array.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Double)">
            <summary>Writes a <see cref="T:System.Double" /> value (as a JSON number) as an element of a JSON array.</summary>
            <param name="value">The value to be written as a JSON number as an element of a JSON array.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Int32)">
            <summary>Writes an <see cref="T:System.Int32" /> value (as a JSON number) as an element of a JSON array.</summary>
            <param name="value">The value to be written as a JSON number as an element of a JSON array.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Int64)">
            <summary>Writes an <see cref="T:System.Int64" /> value (as a JSON number) as an element of a JSON array.</summary>
            <param name="value">The value to be written as a JSON number as an element of a JSON array.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Single)">
            <summary>Writes a <see cref="T:System.Single" /> value (as a JSON number) as an element of a JSON array.</summary>
            <param name="value">The value to be written as a JSON number as an element of a JSON array.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.UInt32)">
            <summary>Writes a <see cref="T:System.UInt32" /> value (as a JSON number) as an element of a JSON array.</summary>
            <param name="value">The value to be written as a JSON number as an element of a JSON array.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.UInt64)">
            <summary>Writes a <see cref="T:System.UInt64" /> value (as a JSON number) as an element of a JSON array.</summary>
            <param name="value">The value to be written as a JSON number as an element of a JSON array.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.ReadOnlySpan{System.Byte})">
            <summary>Writes the UTF-8 property name (as a JSON string) as the first part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.ReadOnlySpan{System.Char})">
            <summary>Writes the property name (as a JSON string) as the first part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The property name of the JSON object to be transcoded and written as UTF-8.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.String)">
            <summary>Writes the property name (as a JSON string) as the first part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The property name of the JSON object to be transcoded and written as UTF-8.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="propertyName" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.Text.Json.JsonEncodedText)">
            <summary>Writes the pre-encoded property name (as a JSON string) as the first part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStartArray">
            <summary>Writes the beginning of a JSON array.</summary>
            <exception cref="T:System.InvalidOperationException">The depth of the JSON exceeds the maximum depth of 1,000.

-or-

Validation is enabled, and this write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.ReadOnlySpan{System.Byte})">
            <summary>Writes the beginning of a JSON array with a property name specified as a read-only span of bytes as the key.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON array to be written.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">The depth of the JSON exceeds the maximum depth of 1,000.

-or-
       
Validation is enabled, and this write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.ReadOnlySpan{System.Char})">
            <summary>Writes the beginning of a JSON array with a property name specified as a read-only character span as the key.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON array to be transcoded and written as UTF-8.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">The depth of the JSON exceeds the maximum depth of 1,000.

-or-
       
Validation is enabled, and this write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.String)">
            <summary>Writes the beginning of a JSON array with a property name specified as a string as the key.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON array to be transcoded and written as UTF-8.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">The depth of the JSON exceeds the maximum depth of 1,000.

-or-
       
Validation is enabled, and this write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.Text.Json.JsonEncodedText)">
            <summary>Writes the beginning of a JSON array with a pre-encoded property name as the key.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON array to be transcoded and written as UTF-8.</param>
            <exception cref="T:System.InvalidOperationException">The depth of the JSON has exceeded the maximum depth of 1,000.
    
-or-

Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStartObject">
            <summary>Writes the beginning of a JSON object.</summary>
            <exception cref="T:System.InvalidOperationException">The depth of the JSON exceeds the maximum depth of 1,000.

-or-

Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.ReadOnlySpan{System.Byte})">
            <summary>Writes the beginning of a JSON object with a property name specified as a read-only span of bytes as the key.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">The depth of the JSON exceeds the maximum depth of 1,000. 

-or-
       
Validation is enabled, and this write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.ReadOnlySpan{System.Char})">
            <summary>Writes the beginning of a JSON object with a property name specififed as a read-only character span as the key.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">The depth of the JSON exceeds the maximum depth of 1,000. 

-or-
       
Validation is enabled, and this write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.String)">
            <summary>Writes the beginning of a JSON object with a property name specified as a string as the key.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">The depth of the JSON exceeds the maximum depth of 1,000. 

-or-
       
Validation is enabled, and this write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.Text.Json.JsonEncodedText)">
            <summary>Writes the beginning of a JSON object with a pre-encoded property name as the key.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <exception cref="T:System.InvalidOperationException">The depth of the JSON has exceeded the maximum depth of 1,000.
          
-or-

Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.DateTime)">
            <summary>Writes a UTF-8 property name and a <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.DateTimeOffset)">
            <summary>Writes a UTF-8 property name and a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.Guid)">
            <summary>Writes a UTF-8 property name and a <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})">
            <summary>Writes a UTF-8 property name and UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="utf8Value">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name or value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Char})">
            <summary>Writes a UTF-8 property name and UTF-16 text value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name or value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.String)">
            <summary>Writes a UTF-8 property name and string text value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name or value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonEncodedText)">
            <summary>Writes the UTF-8 property name and pre-encoded value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="utf8PropertyName">The UTF-8 encoded property name of the JSON object to be written.</param>
            <param name="value">The JSON encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and this method would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.DateTime)">
            <summary>Writes a property name specified as a read-only character span and a <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.DateTimeOffset)">
            <summary>Writes a property name specified as a read-only character span and a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.Guid)">
            <summary>Writes a property name specified as a read-only character span and a <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})">
            <summary>Writes a UTF-16 property name and UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="utf8Value">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name or value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
            <summary>Writes a UTF-16 property name and UTF-16 text value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name or value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.String)">
            <summary>Writes a UTF-16 property name and string text value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name or value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.Text.Json.JsonEncodedText)">
            <summary>Writes the property name and pre-encoded value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The JSON encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.DateTime)">
            <summary>Writes a property name specified as a string and a <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.DateTimeOffset)">
            <summary>Writes a property name specified as a string and a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.Guid)">
            <summary>Writes a property name specified as a string and a <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.ReadOnlySpan{System.Byte})">
            <summary>Writes a property name specified as a string and a UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="utf8Value">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name or value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.ReadOnlySpan{System.Char})">
            <summary>Writes a property name specified as a string and a UTF-16 text value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name or value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.String)">
            <summary>Writes a property name specified as a string and a string text value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name or value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.Text.Json.JsonEncodedText)">
            <summary>Writes the property name and pre-encoded value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The JSON encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified property name is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="propertyName" /> parameter is <see langword="null" />.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.DateTime)">
            <summary>Writes the pre-encoded property name and <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.DateTimeOffset)">
            <summary>Writes the pre-encoded property name and <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.Guid)">
            <summary>Writes the pre-encoded property name and <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.ReadOnlySpan{System.Byte})">
            <summary>Writes the pre-encoded property name and UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="utf8Value">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.ReadOnlySpan{System.Char})">
            <summary>Writes the pre-encoded property name and text value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.String)">
            <summary>Writes the pre-encoded property name and string text value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</param>
            <exception cref="T:System.ArgumentException">The specified value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.Text.Json.JsonEncodedText)">
            <summary>Writes the pre-encoded property name and pre-encoded value (as a JSON string) as part of a name/value pair of a JSON object.</summary>
            <param name="propertyName">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</param>
            <param name="value">The JSON encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.DateTime)">
            <summary>Writes a <see cref="T:System.DateTime" /> value (as a JSON string) as an element of a JSON array.</summary>
            <param name="value">The value to be written as a JSON string as an element of a JSON array.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.DateTimeOffset)">
            <summary>Writes a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as an element of a JSON array.</summary>
            <param name="value">The value to be written as a JSON string as an element of a JSON array.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.Guid)">
            <summary>Writes a <see cref="T:System.Guid" /> value (as a JSON string) as an element of a JSON array.</summary>
            <param name="value">The value to be written as a JSON string as an element of a JSON array.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the operation would result in writing invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.ReadOnlySpan{System.Byte})">
            <summary>Writes a UTF-8 text value (as a JSON string) as an element of a JSON array.</summary>
            <param name="utf8Value">The UTF-8 encoded value to be written as a JSON string element of a JSON array.</param>
            <exception cref="T:System.ArgumentException">The specified value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.ReadOnlySpan{System.Char})">
            <summary>Writes a UTF-16 text value (as a JSON string) as an element of a JSON array.</summary>
            <param name="value">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string element of a JSON array.</param>
            <exception cref="T:System.ArgumentException">The specified value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.String)">
            <summary>Writes a string text value (as a JSON string) as an element of a JSON array.</summary>
            <param name="value">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string element of a JSON array.</param>
            <exception cref="T:System.ArgumentException">The specified value is too large.</exception>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.Text.Json.JsonEncodedText)">
            <summary>Writes the pre-encoded text value (as a JSON string) as an element of a JSON array.</summary>
            <param name="value">The JSON encoded value to be written as a UTF-8 transcoded JSON string element of a JSON array.</param>
            <exception cref="T:System.InvalidOperationException">Validation is enabled, and the write operation would produce invalid JSON.</exception>
        </member>
        <member name="P:System.Text.Json.Utf8JsonWriter.BytesCommitted">
            <summary>Gets the total number of bytes committed to the output by the current instance so far.</summary>
            <returns>The total number of bytes committed to the output by the <see cref="T:System.Text.Json.Utf8JsonWriter" /> so far.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonWriter.BytesPending">
            <summary>Gets the number of bytes written by the <see cref="T:System.Text.Json.Utf8JsonWriter" /> so far that have not yet been flushed to the output and committed.</summary>
            <returns>The number of bytes written so far by the <see cref="T:System.Text.Json.Utf8JsonWriter" /> that have not yet been flushed to the output and committed.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonWriter.CurrentDepth">
            <summary>Gets the depth of the current token.</summary>
            <returns>The depth of the current token.</returns>
        </member>
        <member name="P:System.Text.Json.Utf8JsonWriter.Options">
            <summary>Gets the custom behavior when writing JSON using this instance, which indicates whether to format the output while writing, whether to skip structural JSON validation, and which characters to escape.</summary>
            <returns>The custom behavior of this instance of the writer for formatting, validating, and escaping.</returns>
        </member>
        <member name="T:System.Runtime.CompilerServices.ValueTaskAwaiter`1">
            <typeparam name="TResult" />
        </member>
        <member name="M:System.Runtime.CompilerServices.ValueTaskAwaiter`1.GetResult">
            <returns />
        </member>
        <member name="P:System.Runtime.CompilerServices.ValueTaskAwaiter`1.IsCompleted">
            <returns />
        </member>
        <member name="M:System.Runtime.CompilerServices.ValueTaskAwaiter`1.OnCompleted(System.Action)">
            <param name="continuation" />
        </member>
        <member name="M:System.Runtime.CompilerServices.ValueTaskAwaiter`1.UnsafeOnCompleted(System.Action)">
            <param name="continuation" />
        </member>
        <member name="T:System.Threading.Tasks.ValueTask`1">
            <summary>Provides a value type that wraps a <see cref="Task{TResult}" /> and a <typeparamref name="TResult">TResult</typeparamref>, only one of which is used.</summary>
            <typeparam name="TResult">The result.</typeparam>
        </member>
        <member name="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})">
            <summary>Initializes a new instance of the <see cref="ValueTask{TResult}" /> class using the supplied task that represents the operation.</summary>
            <param name="task">The task.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="task">task</paramref> argument is null.</exception>
        </member>
        <member name="M:System.Threading.Tasks.ValueTask`1.#ctor(`0)">
            <summary>Initializes a new instance of the <see cref="ValueTask{TResult}" /> class using the supplied result of a successful operation.</summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:System.Threading.Tasks.ValueTask`1.AsTask">
            <summary>Retrieves a <see cref="Task{TResult}" /> object that represents this <see cref="ValueTask{TResult}" />.</summary>
            <returns>The <see cref="Task{TResult}" /> object that is wrapped in this <see cref="ValueTask{TResult}" /> if one exists, or a new <see cref="Task{TResult}" /> object that represents the result.</returns>
        </member>
        <member name="M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)">
            <summary>Configures an awaiter for this value.</summary>
            <param name="continueOnCapturedContext">true to attempt to marshal the continuation back to the captured context; otherwise, false.</param>
            <returns>The configured awaiter.</returns>
        </member>
        <member name="M:System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder">
            <summary>Creates a method builder for use with an async method.</summary>
            <returns>The created builder.</returns>
        </member>
        <member name="M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})">
            <summary>Determines whether the specified <see cref="ValueTask{TResult}" /> object is equal to the current <see cref="ValueTask{TResult}" /> object.</summary>
            <param name="other">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:System.Threading.Tasks.ValueTask`1.GetAwaiter">
            <summary>Creates an awaiter for this value.</summary>
            <returns>The awaiter.</returns>
        </member>
        <member name="M:System.Threading.Tasks.ValueTask`1.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code for the current object.</returns>
        </member>
        <member name="P:System.Threading.Tasks.ValueTask`1.IsCanceled">
            <summary>Gets a value that indicates whether this object represents a canceled operation.</summary>
            <returns>true if this object represents a canceled operation; otherwise, false.</returns>
        </member>
        <member name="P:System.Threading.Tasks.ValueTask`1.IsCompleted">
            <summary>Gets a value that indicates whether this object represents a completed operation.</summary>
            <returns>true if this object represents a completed operation; otherwise, false.</returns>
        </member>
        <member name="P:System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully">
            <summary>Gets a value that indicates whether this object represents a successfully completed operation.</summary>
            <returns>true if this object represents a successfully completed operation; otherwise, false.</returns>
        </member>
        <member name="P:System.Threading.Tasks.ValueTask`1.IsFaulted">
            <summary>Gets a value that indicates whether this object represents a failed operation.</summary>
            <returns>true if this object represents a failed operation; otherwise, false.</returns>
        </member>
        <member name="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
            <summary>Compares two values for equality.</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns>true if the two <see cref="ValueTask{TResult}" /> values are equal; otherwise, false.</returns>
        </member>
        <member name="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
            <summary>Determines whether two <see cref="ValueTask{TResult}" /> values are unequal.</summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The seconed value to compare.</param>
            <returns>true if the two <see cref="ValueTask{TResult}" /> values are not equal; otherwise, false.</returns>
        </member>
        <member name="P:System.Threading.Tasks.ValueTask`1.Result">
            <summary>Gets the result.</summary>
            <returns>The result.</returns>
        </member>
        <member name="M:System.Threading.Tasks.ValueTask`1.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:System.Runtime.CompilerServices.AsyncMethodBuilderAttribute" />
        <member name="M:System.Runtime.CompilerServices.AsyncMethodBuilderAttribute.#ctor(System.Type)">
            <param name="builderType" />
        </member>
        <member name="P:System.Runtime.CompilerServices.AsyncMethodBuilderAttribute.BuilderType">
            <returns />
        </member>
        <member name="T:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1">
            <typeparam name="TResult" />
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.AwaitOnCompleted``2(``0@,``1@)">
            <param name="awaiter" />
            <param name="stateMachine" />
            <typeparam name="TAwaiter" />
            <typeparam name="TStateMachine" />
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.AwaitUnsafeOnCompleted``2(``0@,``1@)">
            <param name="awaiter" />
            <param name="stateMachine" />
            <typeparam name="TAwaiter" />
            <typeparam name="TStateMachine" />
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.Create">
            <returns />
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetException(System.Exception)">
            <param name="exception" />
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(`0)">
            <param name="result" />
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)">
            <param name="stateMachine" />
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.Start``1(``0@)">
            <param name="stateMachine" />
            <typeparam name="TStateMachine" />
        </member>
        <member name="P:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.Task">
            <returns />
        </member>
        <member name="T:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter">
            <typeparam name="TResult" />
        </member>
        <member name="M:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.GetResult">
            <returns />
        </member>
        <member name="P:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.IsCompleted">
            <returns />
        </member>
        <member name="M:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.OnCompleted(System.Action)">
            <param name="continuation" />
        </member>
        <member name="M:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.UnsafeOnCompleted(System.Action)">
            <param name="continuation" />
        </member>
        <member name="T:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1">
            <typeparam name="TResult" />
        </member>
        <member name="M:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.GetAwaiter">
            <returns />
        </member>
        <member name="T:ZXing.BarcodeFormat">
            <summary>
            Enumerates barcode formats known to this package.
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="F:ZXing.BarcodeFormat.AZTEC">
            <summary>Aztec 2D barcode format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.CODABAR">
            <summary>CODABAR 1D format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.CODE_39">
            <summary>Code 39 1D format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.CODE_93">
            <summary>Code 93 1D format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.CODE_128">
            <summary>Code 128 1D format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.DATA_MATRIX">
            <summary>Data Matrix 2D barcode format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.EAN_8">
            <summary>EAN-8 1D format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.EAN_13">
            <summary>EAN-13 1D format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.ITF">
            <summary>ITF (Interleaved Two of Five) 1D format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.MAXICODE">
            <summary>MaxiCode 2D barcode format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.PDF_417">
            <summary>PDF417 format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.QR_CODE">
            <summary>QR Code 2D barcode format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.RSS_14">
            <summary>RSS 14</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.RSS_EXPANDED">
            <summary>RSS EXPANDED</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.UPC_A">
            <summary>UPC-A 1D format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.UPC_E">
            <summary>UPC-E 1D format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.UPC_EAN_EXTENSION">
            <summary>UPC/EAN extension format. Not a stand-alone format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.MSI">
            <summary>MSI</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.PLESSEY">
            <summary>Plessey</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.IMB">
            <summary>Intelligent Mail barcode</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.PHARMA_CODE">
            <summary>Pharmacode format.</summary>
        </member>
        <member name="F:ZXing.BarcodeFormat.All_1D">
            <summary>
            UPC_A | UPC_E | EAN_13 | EAN_8 | CODABAR | CODE_39 | CODE_93 | CODE_128 | ITF | RSS_14 | RSS_EXPANDED
            without MSI (to many false-positives) and IMB (not enough tested, and it looks more like a 2D)
            </summary>
        </member>
        <member name="T:ZXing.DecodeHintType">
            <summary>
            Encapsulates a type of hint that a caller may pass to a barcode reader to help it
            more quickly or accurately decode it. It is up to implementations to decide what,
            if anything, to do with the information that is supplied.
            <seealso cref="M:ZXing.Reader.decode(ZXing.BinaryBitmap,System.Collections.Generic.IDictionary{ZXing.DecodeHintType,System.Object})" /></summary>
            <author>Sean Owen</author>
            <author>dswitkin@google.com (Daniel Switkin)</author>
        </member>
        <member name="F:ZXing.DecodeHintType.OTHER">
            <summary>
            Unspecified, application-specific hint. Maps to an unspecified <see cref="T:System.Object" />.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.PURE_BARCODE">
            <summary>
            Image is a pure monochrome image of a barcode. Doesn't matter what it maps to;
            use <see cref="T:System.Boolean" /> = true.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.POSSIBLE_FORMATS">
            <summary>
            Image is known to be of one of a few possible formats.
            Maps to a <see cref="T:System.Collections.ICollection" /> of <see cref="T:ZXing.BarcodeFormat" />s.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.TRY_HARDER">
            <summary>
            Spend more time to try to find a barcode; optimize for accuracy, not speed.
            Doesn't matter what it maps to; use <see cref="T:System.Boolean" /> = true.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.CHARACTER_SET">
            <summary>
            Specifies what character encoding to use when decoding, where applicable (type String)
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.ALLOWED_LENGTHS">
            <summary>
            Allowed lengths of encoded data -- reject anything else. Maps to an int[].
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.ASSUME_CODE_39_CHECK_DIGIT">
            <summary>
            Assume Code 39 codes employ a check digit. Maps to <see cref="T:System.Boolean" />.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.NEED_RESULT_POINT_CALLBACK">
            <summary>
            The caller needs to be notified via callback when a possible <see cref="T:ZXing.ResultPoint" />
            is found. Maps to a <see cref="T:ZXing.ResultPointCallback" />.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.ASSUME_MSI_CHECK_DIGIT">
            <summary>
            Assume MSI codes employ a check digit. Maps to <see cref="T:System.Boolean" />.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.USE_CODE_39_EXTENDED_MODE">
            <summary>
            if Code39 could be detected try to use extended mode for full ASCII character set
            Maps to <see cref="T:System.Boolean" />.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.RELAXED_CODE_39_EXTENDED_MODE">
            <summary>
            Don't fail if a Code39 is detected but can't be decoded in extended mode.
            Return the raw Code39 result instead. Maps to <see cref="T:System.Boolean" />.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.TRY_HARDER_WITHOUT_ROTATION">
            <summary>
            1D readers supporting rotation with TRY_HARDER enabled.
            But BarcodeReader class can do auto-rotating for 1D and 2D codes.
            Enabling that option prevents 1D readers doing double rotation.
            BarcodeReader enables that option automatically if "global" auto-rotation is enabled.
            Maps to <see cref="T:System.Boolean" />.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.ASSUME_GS1">
            <summary>
            Assume the barcode is being processed as a GS1 barcode, and modify behavior as needed.
            For example this affects FNC1 handling for Code 128 (aka GS1-128). Doesn't matter what it maps to;
            use <see cref="T:System.Boolean" />.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.RETURN_CODABAR_START_END">
            <summary>
            If true, return the start and end digits in a Codabar barcode instead of stripping them. They
            are alpha, whereas the rest are numeric. By default, they are stripped, but this causes them
            to not be. Doesn't matter what it maps to; use <see cref="T:System.Boolean" />.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.ALLOWED_EAN_EXTENSIONS">
            <summary>
            Allowed extension lengths for EAN or UPC barcodes. Other formats will ignore this.
            Maps to an int[] of the allowed extension lengths, for example [2], [5], or [2, 5].
            If it is optional to have an extension, do not set this hint. If this is set,
            and a UPC or EAN barcode is found but an extension is not, then no result will be returned
            at all.
            </summary>
        </member>
        <member name="F:ZXing.DecodeHintType.ALSO_INVERTED">
            <summary>
            If true, also tries to decode as inverted image. All configured decoders are simply called a
            second time with an inverted image. Doesn't matter what it maps to; use {@link Boolean#TRUE}.
            </summary>
        </member>
        <member name="T:ZXing.Dimension">
            <summary>
            Simply encapsulates a width and height.
            </summary>
        </member>
        <member name="M:ZXing.Dimension.#ctor(System.Int32,System.Int32)">
            <summary>
            initializing constructor
            </summary>
            <param name="width" />
            <param name="height" />
        </member>
        <member name="P:ZXing.Dimension.Width">
            <summary>
            the width
            </summary>
        </member>
        <member name="P:ZXing.Dimension.Height">
            <summary>
            the height
            </summary>
        </member>
        <member name="M:ZXing.Dimension.Equals(System.Object)">
            <summary />
            <param name="other" />
            <returns />
        </member>
        <member name="M:ZXing.Dimension.GetHashCode">
            <summary />
            <returns />
        </member>
        <member name="M:ZXing.Dimension.ToString">
            <summary />
            <returns />
        </member>
        <member name="T:ZXing.EncodeHintType">
            <summary>
            These are a set of hints that you may pass to Writers to specify their behavior.
            </summary>
            <author>dswitkin@google.com (Daniel Switkin)</author>
        </member>
        <member name="F:ZXing.EncodeHintType.WIDTH">
            <summary>
            Specifies the width of the barcode image
            type: <see cref="T:System.Int32" /></summary>
        </member>
        <member name="F:ZXing.EncodeHintType.HEIGHT">
            <summary>
            Specifies the height of the barcode image
            type: <see cref="T:System.Int32" /></summary>
        </member>
        <member name="F:ZXing.EncodeHintType.PURE_BARCODE">
            <summary>
            Don't put the content string into the output image.
            type: <see cref="T:System.Boolean" /></summary>
        </member>
        <member name="F:ZXing.EncodeHintType.ERROR_CORRECTION">
            <summary>
            Specifies what degree of error correction to use, for example in QR Codes.
            Type depends on the encoder. For example for QR codes it's type
            <see cref="T:ZXing.QrCode.Internal.ErrorCorrectionLevel" />
            For Aztec it is of type <see cref="T:System.Int32" />, representing the minimal percentage of error correction words. 
            In all cases, it can also be a <see cref="T:System.String" /> representation of the desired value as well.
            Note: an Aztec symbol should have a minimum of 25% EC words.
            For PDF417 it is of type <see cref="T:ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel" /> or <see cref="T:System.Int32" /> (between 0 and 8),
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.CHARACTER_SET">
            <summary>
            Specifies what character encoding to use where applicable.
            type: <see cref="T:System.String" /></summary>
        </member>
        <member name="F:ZXing.EncodeHintType.MARGIN">
            <summary>
            Specifies margin, in pixels, to use when generating the barcode. The meaning can vary
            by format; for example it controls margin before and after the barcode horizontally for
            most 1D formats.
            type: <see cref="T:System.Int32" />, or <see cref="T:System.String" /> representation of the integer value
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.PDF417_ASPECT_RATIO">
            <summary>
            Specifies the aspect ratio to use.  Default is 4.
            type: <see cref="T:ZXing.PDF417.Internal.PDF417AspectRatio" />, or 1-4.
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.PDF417_IMAGE_ASPECT_RATIO">
            <summary>
            Specifies the desired aspect ratio (number of columns / number of rows) of the output image.  Default is 3.
            type: <see cref="T:System.Single" />.
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.PDF417_COMPACT">
            <summary>
            Specifies whether to use compact mode for PDF417
            type: <see cref="T:System.Boolean" />, or "true" or "false"
            <see cref="T:System.String" /> value
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.PDF417_COMPACTION">
            <summary>
            Specifies what compaction mode to use for PDF417.
            type: <see cref="T:ZXing.PDF417.Internal.Compaction" /> or <see cref="T:System.String" /> value of one of its
            enum values
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.PDF417_DIMENSIONS">
            <summary>
            Specifies the minimum and maximum number of rows and columns for PDF417.
            type: <see cref="T:ZXing.PDF417.Internal.Dimensions" /></summary>
        </member>
        <member name="F:ZXing.EncodeHintType.PDF417_MACRO_META_DATA">
            <summary>
            The Specifies that the PDF417 will contain macro metadata.
            type: <see cref="T:ZXing.PDF417.PDF417MacroMetadata" /></summary>
        </member>
        <member name="F:ZXing.EncodeHintType.DISABLE_ECI">
            <summary>
            Don't append ECI segment.
            That is against the specification of QR Code but some
            readers have problems if the charset is switched from
            ISO-8859-1 (default) to UTF-8 with the necessary ECI segment.
            If you set the property to true you can use UTF-8 encoding
            and the ECI segment is omitted.
            type: <see cref="T:System.Boolean" /></summary>
        </member>
        <member name="F:ZXing.EncodeHintType.DATA_MATRIX_SHAPE">
            <summary>
            Specifies the matrix shape for Data Matrix (type <see cref="T:ZXing.Datamatrix.Encoder.SymbolShapeHint" />)
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.MIN_SIZE">
            <summary>
            Specifies a minimum barcode size (type <see cref="T:ZXing.Dimension" />). Only applicable to Data Matrix now.
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.MAX_SIZE">
            <summary>
            Specifies a maximum barcode size (type <see cref="T:ZXing.Dimension" />). Only applicable to Data Matrix now.
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.CODE128_FORCE_CODESET_B">
            <summary>
            if true, don't switch to codeset C for numbers
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.DATA_MATRIX_DEFAULT_ENCODATION">
            <summary>
            Specifies the default encodation for Data Matrix (type <see cref="T:ZXing.Datamatrix.Encoder.Encodation" />)
            Make sure that the content fits into the encodation value, otherwise there will be an exception thrown.
            standard value: Encodation.ASCII
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.AZTEC_LAYERS">
            <summary>
            Specifies the required number of layers for an Aztec code.
            A negative number (-1, -2, -3, -4) specifies a compact Aztec code
            0 indicates to use the minimum number of layers (the default)
            A positive number (1, 2, .. 32) specifies a normal (non-compact) Aztec code
            type: <see cref="T:System.Int32" />, or <see cref="T:System.String" /> representation of the integer value
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.QR_VERSION">
            <summary>
            Specifies the exact version of QR code to be encoded.
            (Type <see cref="T:System.Int32" />, or <see cref="T:System.String" /> representation of the integer value).
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.GS1_FORMAT">
            <summary>
            Specifies whether the data should be encoded to the GS1 standard
            type: <see cref="T:System.Boolean" />, or "true" or "false"
            <see cref="T:System.String" /> value
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.QR_MASK_PATTERN">
            <summary>
             Specifies the QR code mask pattern to be used. Allowed values are
            0..QRCode.NUM_MASK_PATTERNS-1. By default the code will automatically select
            the optimal mask pattern.
            (Type <see cref="T:System.Int32" />, or <see cref="T:System.String" /> representation of the integer value).
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.FORCE_CODE_SET">
            <summary>
            Forces which encoding will be used. Currently only used for Code-128 code sets (Type <see cref="T:System.String" />).
            Valid values are "A", "B", "C".
            see also CODE128_FORCE_CODESET_B
            This option and {@link #CODE128_COMPACT} are mutually exclusive.
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.QR_COMPACT">
            <summary>
            Specifies whether to use compact mode for QR code (type <see cref="T:System.Boolean" />, or "true" or "false"
            Please note that when compaction is performed, the most compact character encoding is chosen
            for characters in the input that are not in the ISO-8859-1 character set. Based on experience,
            some scanners do not support encodings like cp-1256 (Arabic). In such cases the encoding can
            be forced to UTF-8 by means of the <see cref="F:ZXing.EncodeHintType.CHARACTER_SET" /> encoding hint.
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.NO_PADDING">
            <summary>
            if set to true, barcode writer uses WIDTH and HEIGHT as maximum values and in combination with MARGIN=0
            there is no white border added. The resulting image would be smaller than the requested size.
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.DATA_MATRIX_COMPACT">
            <summary>
            Specifies whether to use compact mode for Data Matrix (type {@link Boolean}, or "true" or "false"
            The compact encoding mode also supports the encoding of characters that are not in the ISO-8859-1
            character set via ECIs.
            Please note that in that case, the most compact character encoding is chosen for characters in
            the input that are not in the ISO-8859-1 character set. Based on experience, some scanners do not
            support encodings like cp-1256 (Arabic). In such cases the encoding can be forced to UTF-8 by
            means of the {@link #CHARACTER_SET} encoding hint.
            Compact encoding also provides GS1-FNC1 support when {@link #GS1_FORMAT} is selected. In this case
            group-separator character (ASCII 29 decimal) can be used to encode the positions of FNC1 codewords
            for the purpose of delimiting AIs.
            This option and {@link #FORCE_C40} are mutually exclusive.
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.CODE128_COMPACT">
            <summary>
            Specifies whether to use compact mode for Code-128 code (type {@link Boolean}, or "true" or "false"
            This can yield slightly smaller bar codes. This option and {@link #FORCE_CODE_SET} are mutually
            exclusive options.
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.FORCE_C40">
            <summary>
            Forces C40 encoding for data-matrix (type {@link Boolean}, or "true" or "false") {@link String } value). This 
            option and {@link #DATA_MATRIX_COMPACT} are mutually exclusive.
            </summary>
        </member>
        <member name="F:ZXing.EncodeHintType.PDF417_AUTO_ECI">
            <summary>
            Specifies whether to automatically insert ECIs when encoding PDF417 (type {@link Boolean}, or "true" or "false"
            {@link String} value). 
            Please note that in that case, the most compact character encoding is chosen for characters in
            the input that are not in the ISO-8859-1 character set. Based on experience, some scanners do not
            support encodings like cp-1256 (Arabic). In such cases the encoding can be forced to UTF-8 by
            means of the {@link #CHARACTER_SET} encoding hint.
            </summary>
        </member>
        <member name="T:ZXing.FormatException">
            <summary>
            Thrown when a barcode was successfully detected, but some aspect of
            the content did not conform to the barcode's format rules. This could have
            been due to a mis-detection.
            <author>Sean Owen</author></summary>
        </member>
        <member name="M:ZXing.FormatException.#ctor">
            <summary />
        </member>
        <member name="M:ZXing.FormatException.#ctor(System.String)">
            <summary />
        </member>
        <member name="M:ZXing.FormatException.#ctor(System.Exception)">
            <summary />
        </member>
        <member name="M:ZXing.FormatException.#ctor(System.String,System.Exception)">
            <summary />
        </member>
        <member name="T:ZXing.ReaderException">
            <summary>
            The general exception class throw when something goes wrong during decoding of a barcode.
            This includes, but is not limited to, failing checksums / error correction algorithms, being
            unable to locate finder timing patterns, and so on.
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="M:ZXing.ReaderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZXing.ReaderException" /> class.
            </summary>
        </member>
        <member name="M:ZXing.ReaderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZXing.ReaderException" /> class.
            </summary>
            <param name="message" />
        </member>
        <member name="M:ZXing.ReaderException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ZXing.ReaderException" /> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:ZXing.ReaderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ZXing.ReaderException" /> class.
            </summary>
            <param name="innerException">The inner exception.</param>
            <param name="message" />
        </member>
        <member name="T:ZXing.WriterException">
            <summary>
            A base class which covers the range of exceptions which may occur when encoding a barcode using
            the Writer framework.
            </summary>
            <author>dswitkin@google.com (Daniel Switkin)</author>
        </member>
        <member name="M:ZXing.WriterException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZXing.WriterException" /> class.
            </summary>
        </member>
        <member name="M:ZXing.WriterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZXing.WriterException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:ZXing.WriterException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:ZXing.WriterException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerExc">The inner exc.</param>
        </member>
        <member name="T:ZXing.Aztec.AztecEncodingOptions">
            <summary>
            The class holds the available options for the <see cref="T:ZXing.Aztec.AztecWriter" /></summary>
        </member>
        <member name="P:ZXing.Aztec.AztecEncodingOptions.ErrorCorrection">
            <summary>
            Representing the minimal percentage of error correction words. 
            Note: an Aztec symbol should have a minimum of 25% EC words.
            </summary>
        </member>
        <member name="P:ZXing.Aztec.AztecEncodingOptions.Layers">
            <summary>
            Specifies the required number of layers for an Aztec code:
            a negative number (-1, -2, -3, -4) specifies a compact Aztec code
            0 indicates to use the minimum number of layers (the default)
            a positive number (1, 2, .. 32) specifies a normal (non-compact) Aztec code
            </summary>
        </member>
        <member name="P:ZXing.Aztec.AztecEncodingOptions.CharacterSet">
            <summary>
            Specifies what character encoding to use where applicable (type <see cref="T:System.String" />)
            </summary>
        </member>
        <member name="T:ZXing.Common.DecodingOptions">
            <summary>
            Defines an container for encoder options
            </summary>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.Hints">
            <summary>
            Gets the data container for all options
            </summary>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.TryHarder">
            <summary>
            Gets or sets a flag which cause a deeper look into the bitmap
            </summary>
            <value>
                <c>true</c> if [try harder]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.TryInverted">
            <summary>
            Gets or sets a value indicating whether the image should be automatically inverted
            if no result is found in the original image.
            ATTENTION: Please be carefully because it slows down the decoding process if it is used
            </summary>
            <value>
                <c>true</c> if image should be inverted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.PureBarcode">
            <summary>
            Image is a pure monochrome image of a barcode.
            </summary>
            <value>
                <c>true</c> if monochrome image of a barcode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.CharacterSet">
            <summary>
            Specifies what character encoding to use when decoding, where applicable (type String)
            </summary>
            <value>
            The character set.
            </value>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.PossibleFormats">
            <summary>
            Image is known to be of one of a few possible formats.
            Maps to a {@link java.util.List} of {@link BarcodeFormat}s.
            </summary>
            <value>
            The possible formats.
            </value>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.UseCode39ExtendedMode">
            <summary>
            if Code39 could be detected try to use extended mode for full ASCII character set
            </summary>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.UseCode39RelaxedExtendedMode">
            <summary>
            Don't fail if a Code39 is detected but can't be decoded in extended mode.
            Return the raw Code39 result instead. Maps to <see cref="T:System.Boolean" />.
            </summary>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.AssumeCode39CheckDigit">
            <summary>
            Assume Code 39 codes employ a check digit. Maps to <see cref="T:System.Boolean" />.
            </summary>
            <value>
                <c>true</c> if it should assume a Code 39 check digit; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.ReturnCodabarStartEnd">
            <summary>
            If true, return the start and end digits in a Codabar barcode instead of stripping them. They
            are alpha, whereas the rest are numeric. By default, they are stripped, but this causes them
            to not be. Doesn't matter what it maps to; use <see cref="T:System.Boolean" />.
            </summary>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.AssumeGS1">
            <summary>
            Assume the barcode is being processed as a GS1 barcode, and modify behavior as needed.
            For example this affects FNC1 handling for Code 128 (aka GS1-128).
            </summary>
            <value>
                <c>true</c> if it should assume GS1; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.AssumeMSICheckDigit">
            <summary>
            Assume MSI codes employ a check digit. Maps to <see cref="T:System.Boolean" />.
            </summary>
            <value>
                <c>true</c> if it should assume a MSI check digit; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.AllowedLengths">
            <summary>
            Allowed lengths of encoded data -- reject anything else. Maps to an int[].
            </summary>
        </member>
        <member name="P:ZXing.Common.DecodingOptions.AllowedEANExtensions">
            <summary>
            Allowed extension lengths for EAN or UPC barcodes. Other formats will ignore this.
            Maps to an int[] of the allowed extension lengths, for example [2], [5], or [2, 5].
            If it is optional to have an extension, do not set this hint. If this is set,
            and a UPC or EAN barcode is found but an extension is not, then no result will be returned
            at all.
            </summary>
        </member>
        <member name="M:ZXing.Common.DecodingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZXing.Common.DecodingOptions" /> class.
            </summary>
        </member>
        <member name="T:ZXing.Common.EncodingOptions">
            <summary>
            Defines an container for encoder options
            </summary>
        </member>
        <member name="P:ZXing.Common.EncodingOptions.Hints">
            <summary>
            Gets the data container for all options
            </summary>
        </member>
        <member name="P:ZXing.Common.EncodingOptions.Height">
            <summary>
            Specifies the height of the barcode image
            </summary>
        </member>
        <member name="P:ZXing.Common.EncodingOptions.Width">
            <summary>
            Specifies the width of the barcode image
            </summary>
        </member>
        <member name="P:ZXing.Common.EncodingOptions.PureBarcode">
            <summary>
            Don't put the content string into the output image.
            </summary>
        </member>
        <member name="P:ZXing.Common.EncodingOptions.Margin">
            <summary>
            Specifies margin, in pixels, to use when generating the barcode. The meaning can vary
            by format; for example it controls margin before and after the barcode horizontally for
            most 1D formats.
            </summary>
        </member>
        <member name="P:ZXing.Common.EncodingOptions.GS1Format">
            <summary>
            Specifies whether the data should be encoded to the GS1 standard;
            FNC1 character is added in front of the data
            </summary>
        </member>
        <member name="P:ZXing.Common.EncodingOptions.NoPadding">
            <summary>
            Don't add a white area around the generated barcode if the requested size is larger than then barcode.
            </summary>
        </member>
        <member name="M:ZXing.Common.EncodingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZXing.Common.EncodingOptions" /> class.
            </summary>
        </member>
        <member name="T:ZXing.Datamatrix.Encoder.SymbolShapeHint">
            <summary>
            Enumeration for DataMatrix symbol shape hint. It can be used to force square or rectangular
            symbols.   
            </summary>
        </member>
        <member name="F:ZXing.Datamatrix.Encoder.SymbolShapeHint.FORCE_NONE">
            <summary>
            doesn't force anything
            </summary>
        </member>
        <member name="F:ZXing.Datamatrix.Encoder.SymbolShapeHint.FORCE_SQUARE">
            <summary>
            forces square image
            </summary>
        </member>
        <member name="F:ZXing.Datamatrix.Encoder.SymbolShapeHint.FORCE_RECTANGLE">
            <summary>
            forces rectangle image
            </summary>
        </member>
        <member name="T:ZXing.Datamatrix.DatamatrixEncodingOptions">
            <summary>
            The class holds the available options for the DatamatrixWriter
            </summary>
        </member>
        <member name="P:ZXing.Datamatrix.DatamatrixEncodingOptions.SymbolShape">
            <summary>
            Specifies the matrix shape for Data Matrix
            </summary>
        </member>
        <member name="P:ZXing.Datamatrix.DatamatrixEncodingOptions.MinSize">
            <summary>
            Specifies a minimum barcode size
            </summary>
        </member>
        <member name="P:ZXing.Datamatrix.DatamatrixEncodingOptions.MaxSize">
            <summary>
            Specifies a maximum barcode size
            </summary>
        </member>
        <member name="P:ZXing.Datamatrix.DatamatrixEncodingOptions.DefaultEncodation">
            <summary>
            Specifies the default encodation
            Make sure that the content fits into the encodation value, otherwise there will be an exception thrown.
            standard value: Encodation.ASCII
            </summary>
        </member>
        <member name="P:ZXing.Datamatrix.DatamatrixEncodingOptions.CompactEncoding">
            <summary>
            Specifies whether to use compact mode for Data Matrix (type {@link Boolean}, or "true" or "false"
            The compact encoding mode also supports the encoding of characters that are not in the ISO-8859-1
            character set via ECIs.
            Please note that in that case, the most compact character encoding is chosen for characters in
            the input that are not in the ISO-8859-1 character set. Based on experience, some scanners do not
            support encodings like cp-1256 (Arabic). In such cases the encoding can be forced to UTF-8 by
            means of the {@link #CHARACTER_SET} encoding hint.
            Compact encoding also provides GS1-FNC1 support when {@link #GS1_FORMAT} is selected. In this case
            group-separator character (ASCII 29 decimal) can be used to encode the positions of FNC1 codewords
            for the purpose of delimiting AIs.
            </summary>
        </member>
        <member name="P:ZXing.Datamatrix.DatamatrixEncodingOptions.ForceC40">
            <summary>
            Forces C40 encoding for data-matrix (type {@link Boolean}, or "true" or "false") {@link String } value). This 
            option and {@link #DATA_MATRIX_COMPACT} are mutually exclusive.
            </summary>
        </member>
        <member name="P:ZXing.Datamatrix.DatamatrixEncodingOptions.CharacterSet">
            <summary>
            Specifies what character encoding to use where applicable (type {@link String})
            </summary>
        </member>
        <member name="T:ZXing.OneD.Code128EncodingOptions">
            <summary>
            The class holds the available options for the Code128 1D Writer
            </summary>
        </member>
        <member name="P:ZXing.OneD.Code128EncodingOptions.ForceCodesetB">
            <summary>
            if true, don't switch to codeset C for numbers
            </summary>
        </member>
        <member name="P:ZXing.OneD.Code128EncodingOptions.ForceCodeset">
            <summary>
            Forces which encoding will be used. Currently only used for Code-128 code sets (Type <see cref="T:System.String" />). Valid values are "A", "B", "C".
            </summary>
        </member>
        <member name="P:ZXing.OneD.Code128EncodingOptions.CompactEncoding">
            <summary>
            Specifies whether to use compact mode for Code-128 code (type {@link Boolean}, or "true" or "false"
            This can yield slightly smaller bar codes. This option and {@link #FORCE_CODE_SET} are mutually
            exclusive options.
            </summary>
        </member>
        <member name="T:ZXing.OneD.Code128EncodingOptions.Codesets">
            <summary>
            avaiable codesets
            </summary>
        </member>
        <member name="F:ZXing.OneD.Code128EncodingOptions.Codesets.None">
            <summary>
            none specified
            </summary>
        </member>
        <member name="F:ZXing.OneD.Code128EncodingOptions.Codesets.A">
            <summary>
            Codeset A
            </summary>
        </member>
        <member name="F:ZXing.OneD.Code128EncodingOptions.Codesets.B">
            <summary>
            Codeset B
            </summary>
        </member>
        <member name="F:ZXing.OneD.Code128EncodingOptions.Codesets.C">
            <summary>
            Codeset C
            </summary>
        </member>
        <member name="T:ZXing.PDF417.Internal.Compaction">
            <summary>
            Represents possible PDF417 barcode compaction types.
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.Compaction.AUTO">
            <summary />
        </member>
        <member name="F:ZXing.PDF417.Internal.Compaction.TEXT">
            <summary />
        </member>
        <member name="F:ZXing.PDF417.Internal.Compaction.BYTE">
            <summary />
        </member>
        <member name="F:ZXing.PDF417.Internal.Compaction.NUMERIC">
            <summary />
        </member>
        <member name="T:ZXing.PDF417.Internal.Dimensions">
            <summary>
            Data object to specify the minimum and maximum number of rows and columns for a PDF417 barcode.
            @author qwandor@google.com (Andrew Walbran)
            </summary>
        </member>
        <member name="M:ZXing.PDF417.Internal.Dimensions.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ZXing.PDF417.Internal.Dimensions" /> class.
            </summary>
            <param name="minCols">The min cols.</param>
            <param name="maxCols">The max cols.</param>
            <param name="minRows">The min rows.</param>
            <param name="maxRows">The max rows.</param>
        </member>
        <member name="P:ZXing.PDF417.Internal.Dimensions.MinCols">
            <summary>
            Gets the min cols.
            </summary>
        </member>
        <member name="P:ZXing.PDF417.Internal.Dimensions.MaxCols">
            <summary>
            Gets the max cols.
            </summary>
        </member>
        <member name="P:ZXing.PDF417.Internal.Dimensions.MinRows">
            <summary>
            Gets the min rows.
            </summary>
        </member>
        <member name="P:ZXing.PDF417.Internal.Dimensions.MaxRows">
            <summary>
            Gets the max rows.
            </summary>
        </member>
        <member name="T:ZXing.PDF417.Internal.PDF417AspectRatio">
            <summary>
            defines the aspect ratio of the image
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417AspectRatio.A1">
            <summary>
            ratio 1
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417AspectRatio.A2">
            <summary>
            ratio 2
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417AspectRatio.A3">
            <summary>
            ratio 3
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417AspectRatio.A4">
            <summary>
            ratio 4
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417AspectRatio.AUTO">
            <summary>
            automatic selection
            </summary>
        </member>
        <member name="T:ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel">
            <summary>
            defines the level of the error correction / count of error correction codewords
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel.L0">
            <summary>
            level 0
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel.L1">
            <summary>
            level 1
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel.L2">
            <summary>
            level 2
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel.L3">
            <summary>
            level 3
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel.L4">
            <summary>
            level 4
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel.L5">
            <summary>
            level 5
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel.L6">
            <summary>
            level 6
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel.L7">
            <summary>
            level 7
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel.L8">
            <summary>
            level 8
            </summary>
        </member>
        <member name="F:ZXing.PDF417.Internal.PDF417ErrorCorrectionLevel.AUTO">
            <summary>
            automatic selection
            </summary>
        </member>
        <member name="T:ZXing.PDF417.PDF417EncodingOptions">
            <summary>
            The class holds the available options for the <see cref="T:ZXing.PDF417.PDF417Writer" /></summary>
        </member>
        <member name="P:ZXing.PDF417.PDF417EncodingOptions.Compact">
            <summary>
            Specifies whether to use compact mode for PDF417 (type <see cref="T:System.Boolean" />).
            </summary>
        </member>
        <member name="P:ZXing.PDF417.PDF417EncodingOptions.Compaction">
            <summary>
            Specifies what compaction mode to use for PDF417 (type
            <see cref="P:ZXing.PDF417.PDF417EncodingOptions.Compaction" />).
            </summary>
        </member>
        <member name="P:ZXing.PDF417.PDF417EncodingOptions.Dimensions">
            <summary>
            Specifies the minimum and maximum number of rows and columns for PDF417 (type
            <see cref="P:ZXing.PDF417.PDF417EncodingOptions.Dimensions" />).
            </summary>
        </member>
        <member name="P:ZXing.PDF417.PDF417EncodingOptions.ErrorCorrection">
            <summary>
            Specifies what degree of error correction to use
            </summary>
        </member>
        <member name="P:ZXing.PDF417.PDF417EncodingOptions.AspectRatio">
            <summary>
            Specifies the aspect ratio of the smallest codeword.
            (Width of narrowest bar / Row Height)
            </summary>
        </member>
        <member name="P:ZXing.PDF417.PDF417EncodingOptions.ImageAspectRatio">
            <summary>
            Specifies the desired output image aspect ratio (Width / Height).
            The actual aspect ratio is calculated based on the necessary number of codewords.
            </summary>
        </member>
        <member name="P:ZXing.PDF417.PDF417EncodingOptions.CharacterSet">
            <summary>
            Specifies what character encoding to use where applicable (type {@link String})
            </summary>
        </member>
        <member name="P:ZXing.PDF417.PDF417EncodingOptions.DisableECI">
            <summary>
            Explicitly disables ECI segment when generating PDF417 Code
            That is against the specification but some
            readers have problems if the charset is switched from
            CP437 (default) to UTF-8 with the necessary ECI segment.
            If you set the property to true you can use different encodings
            and the ECI segment is omitted.
            </summary>
        </member>
        <member name="T:ZXing.QrCode.Internal.ErrorCorrectionLevel">
            <summary>
                <p>See ISO 18004:2006, 6.5.1. This enum encapsulates the four error correction levels
            defined by the QR code standard.</p>
            </summary>
            <author>Sean Owen</author>
        </member>
        <member name="F:ZXing.QrCode.Internal.ErrorCorrectionLevel.L">
            <summary> L = ~7% correction</summary>
        </member>
        <member name="F:ZXing.QrCode.Internal.ErrorCorrectionLevel.M">
            <summary> M = ~15% correction</summary>
        </member>
        <member name="F:ZXing.QrCode.Internal.ErrorCorrectionLevel.Q">
            <summary> Q = ~25% correction</summary>
        </member>
        <member name="F:ZXing.QrCode.Internal.ErrorCorrectionLevel.H">
            <summary> H = ~30% correction</summary>
        </member>
        <member name="P:ZXing.QrCode.Internal.ErrorCorrectionLevel.Bits">
            <summary>
            Gets the bits.
            </summary>
        </member>
        <member name="P:ZXing.QrCode.Internal.ErrorCorrectionLevel.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="M:ZXing.QrCode.Internal.ErrorCorrectionLevel.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:ZXing.QrCode.QrCodeEncodingOptions">
            <summary>
            The class holds the available options for the QrCodeWriter
            </summary>
        </member>
        <member name="P:ZXing.QrCode.QrCodeEncodingOptions.ErrorCorrection">
            <summary>
            Specifies what degree of error correction to use, for example in QR Codes.
            Type depends on the encoder. For example for QR codes it's type
            <see cref="T:ZXing.QrCode.Internal.ErrorCorrectionLevel" />.
            </summary>
        </member>
        <member name="P:ZXing.QrCode.QrCodeEncodingOptions.CharacterSet">
            <summary>
            Specifies what character encoding to use where applicable (type <see cref="T:System.String" />)
            </summary>
        </member>
        <member name="P:ZXing.QrCode.QrCodeEncodingOptions.DisableECI">
            <summary>
            Explicitly disables ECI segment when generating QR Code
            That is against the specification of QR Code but some
            readers have problems if the charset is switched from
            ISO-8859-1 (default) to UTF-8 with the necessary ECI segment.
            If you set the property to true you can use UTF-8 encoding
            and the ECI segment is omitted.
            </summary>
        </member>
        <member name="P:ZXing.QrCode.QrCodeEncodingOptions.QrVersion">
            <summary>
            Specifies the exact version of QR code to be encoded. An integer, range 1 to 40. If the data specified
            cannot fit within the required version, a WriterException will be thrown.
            </summary>
        </member>
        <member name="P:ZXing.QrCode.QrCodeEncodingOptions.QrCompact">
            <summary>
            Specifies whether to use compact mode for QR code (type <see cref="T:System.Boolean" />, or "true" or "false"
            Please note that when compaction is performed, the most compact character encoding is chosen
            for characters in the input that are not in the ISO-8859-1 character set. Based on experience,
            some scanners do not support encodings like cp-1256 (Arabic). In such cases the encoding can
            be forced to UTF-8 by means of the <see cref="P:ZXing.QrCode.QrCodeEncodingOptions.CharacterSet" /> encoding hint.
            </summary>
        </member>
    </members>
</doc>